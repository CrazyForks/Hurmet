(function(e,t){typeof exports==="object"&&typeof module!=="undefined"?t(exports):typeof define==="function"&&define.amd?define(["exports"],t):(e=e||self,t(e.hurmet={}))})(this,(function(t){"use strict";const n=/([!?:<>\-~/_]=| \.|~~|\+-|-\+|<-->|<->|<>|<--|<-|-->|->|=>|-:|\^\^|\|\||\/\/\/|\b(bar|hat|vec|tilde|dot|ddot|ul)|\b(bb|bbb|cc|ff|ss) [A-Za-z]|\\?[A-Za-z]{2,}|\\ |\\o|root [234]|<<|>>|\^-?[0-9]+|\|\|\||\/_|''|""|00)\s$/;const r={acute:"́",bar:"̅",breve:"̆",check:"̌",dot:"̇",ddot:"̈",grave:"̀",hat:"̂",harpoon:"⃑",leftharpoon:"⃐",leftrightvec:"⃡",leftvec:"⃖",ring:"̊",tilde:"̃",vec:"⃗",ul:"̲"};const s={alpha:"α",beta:"β",chi:"χ",delta:"δ",Delta:"Δ",epsilon:"ε",varepsilon:"ɛ",eta:"η",gamma:"γ",Gamma:"Γ",iota:"ι",kappa:"κ",lambda:"λ",Lambda:"Λ",mu:"μ",nu:"ν",omega:"ω",Omega:"Ω",phi:"ϕ",varphi:"φ",Phi:"Φ",pi:"π",Pi:"Π",psi:"ψ",Psi:"Ψ",rho:"ρ",sigma:"σ",Sigma:"Σ",tau:"τ",theta:"θ",vartheta:"ϑ",Theta:"Θ",upsilon:"υ",xi:"ξ",Xi:"Ξ",zeta:"ζ",prime:"ʹ",ee:"ε",ll:"λ",sqrt:"√","root 2":"√","root 3":"∛","root 4":"∜",AA:"∀",CC:"ℂ",EE:"∃",HH:"ℍ",NN:"ℕ",QQ:"ℚ",RR:"ℝ",ZZ:"ℤ",OO:"𝒪",ii:"√(-1)",oo:"∞",ooo:"°",not:"¬","-:":"÷","\\ ":"˽","\\cdots":"⋯","\\vdots":"⋮","\\ddots":"⋱","\\floor":"⎿⏌","\\ceil":"⎾⏋",xx:"×","\\int":"∫","\\iint":"∬","\\oint":"∮","\\sum":"∑",nn:"∩",nnn:"⋂",uu:"∪",uuu:"⋃","\\del":"∂","\\grad":"∇","\\hbar":"ℏ","\\ell":"ℓ","\\nabla":"∇","\\alef":"ℵ","\\subset":"⊂","\\supset":"⊃","\\Subset":"⋐","\\forall":"∀","\\therefore":"∴","\\mapsto":"↦","\\checkmark":"✓",bar:"ˉ",dot:"˙",ddot:"¨",hat:"ˆ",tilde:"˜",vec:" ⃗","\\land":"∧","\\lor":"∨","\\not":"¬","\\notin":"∉","\\euro":"€","\\pound":"£","\\yen":"¥","\\o":"ø","^^":"∧",vv:"∨",vvv:"⋁","\\xor":"⊻","\\in":"∈","!=":"≠","<>":"≠",":=":"≔","?=":"≟","<=":"≤",">=":"≥","-=":"≡","~=":"≅","_=":"≡","~~":"≈","+-":"±","-+":"∓","<<":"⟨",">>":"⟩","///":"∕","<->":"↔","<-":"←","<--":"⟵","--\x3e":"⟶","->":"→","=>":"⇒","<--\x3e":"\\xrightleftarrows","\\circ":"∘","\\otimes":"⊗","|||":"¦","||":"‖","/_":"∠"," .":"·","''":"′",'""':"″"};const a={"^":"","-":"⁻",2:"²",3:"³",1:"¹",0:"⁰",4:"⁴",5:"⁵",6:"⁶",7:"⁷",8:"⁸",9:"⁹","(":"",")":""};const l=e=>{let t="";for(const n of e){t+=a[n]}return t};const o={bb:[56255,56249],bbb:[56567,56561],cc:[56411,56405],ff:[56671,56665]};const i=[56634,56639,56645,56647,56648,56649,56657,56477,56480,56481,56483,56484,56487,56488,56493,56506,56508,56513,56516];const u={C:"ℂ",H:"ℍ",N:"ℕ",P:"ℙ",Q:"ℚ",R:"ℝ",Z:"ℤ"};const c={B:"ℬ",E:"ℰ",F:"ℱ",H:"ℋ",I:"ℐ",L:"ℒ",M:"ℳ",R:"ℛ",e:"ℯ",g:"ℊ",l:"ℓ",o:"ℴ"};const p=e=>{const t=e.indexOf(" ");const n=e.substring(t+1);const r=e.substring(0,t);switch(r){case"bb":case"bbb":case"cc":case"ff":{const e=n.charCodeAt(0);let t="";if(e<65||e>122){return null}const s=e<91?0:1;if(r==="cc"&&s&&e!==108){return null}if(e>90&&r==="bbb"){return null}const a=e+o[r][s];if(i.includes(a)){t=r==="bbb"?u[n]:c[n]}else{t="\ud835"+String.fromCharCode(a)}return t}default:return null}};const f=(e,t,a)=>{if(t.length>0&&t.slice(-1)===" "){const o=n.exec(t);if(o){const n=o[0].slice(0,-1);let i;const u=r[n];if(u){const n=t.slice(0,-(o[0].length+1))+u;e.updateCode(n+a);const r=n.length;e.restore({start:r,end:r,dir:undefined})}else{i=s[n];if(!i){if(n.charAt(0)==="^"){i=l(n)}else{if(n.indexOf(" ")>0){i=p(n)}}}}if(i){const n=t.slice(0,-o[0].length)+i;e.updateCode(n+a);const r=n.length;e.restore({start:r,end:r,dir:undefined})}}}};const d=(e,t)=>{if(t.length===0){return false}let n=0;let r=0;let s=t.length-1;while(r<s){n=Math.floor((r+s)/2);if(e>t[n]){r=n+1}else{s=n}}return e===t[r]};const m=e=>{if(null==e||"object"!=typeof e){return e}if(e instanceof Date){return(new Date).setTime(e.valueOf())}if(Array.isArray(e)){const t=[];for(let n=0,r=e.length;n<r;n++){t[n]=m(e[n])}return t}if(e instanceof Map){const t=new Map;for(const[n,r]of e.entries()){t.set(n,m(r))}return t}if(typeof e==="object"){const t=Object.create(null);Object.entries(e).forEach((([e,n])=>{t[e]=m(n)}));return t}throw new Error("Unable to clone obj! Its type isn't supported.")};const h=(e,t)=>{const n=new Map;for(const[r,s]of e.entries()){n.set(r,t(s))}return n};const g=(e,t)=>{if(e.constructor!==RegExp){throw new Error("not RegExp")}const n=[];let r=null;if(e.global){while(r=e.exec(t)){n.push({value:r[0],index:r.index,length:r[0].length})}}else if(r=e.exec(t)){n.push({value:r[0],index:r.index,length:r[0].length})}return n};const y=e=>{if(e.length>1){const t=g(/[#$&%_~^]/g,e);const n=t.length;if(n>0){for(let r=n-1;r>=0;r--){const n=t[r];const s=n.index;if(n.value==="~"){e=e.slice(0,s)+"\\textasciitilde "+e.slice(s+1)}else if(n.value==="^"){e=e.slice(0,s)+"\\textasciicircum "+e.slice(s+1)}else if(s===0){e="\\"+e}else{const t=e.substr(s-1,1);if(t!=="\\"){e=e.slice(0,s)+"\\"+e.slice(s)}}}}}return e};const b=e=>{switch(e){case"²":return"2";case"³":return"3";case"⁻":return"-";case"¹":return"1";case"⁰":return"0";default:return String.fromCharCode(e.charCodeAt(0)-8256)}};const R=/^[ \r\n\f]+/;const A=/[ \r\n\f]+$/;const O=e=>e.replace(R,"").replace(A,"");const v=/^(\*|·|\.|-[A-Za-z])/;const N=/[⁰¹²³\u2074-\u2079⁻]/;const E=e=>{let t=" {\\text{";let n=false;for(let r=0;r<e.length;r++){let s=e.charAt(r);if(N.test(s)){s=b(s)}if(v.test(e.slice(r))){t+="}\\mkern1mu{\\cdot}\\mkern1mu\\text{"}else if(/[0-9-]/.test(s)){s=s==="-"?"\\text{-}":s;if(n){t+=s}else{t+="}^{"+s;n=true}}else if(s==="^"){t+="}^{";n=true}else if(n){t+="}\\text{"+s;n=false}else if(s==="$"){t+="\\$"}else{t+=s}}return t+"}}"};const T=Object.freeze([0,0,0,0,0,0,0,0]);const I=Object.freeze({NULL:0,RATIONAL:1,COMPLEX:2,BOOLEAN:4,FROMCOMPARISON:8,BOOLEANFROMCOMPARISON:12,STRING:16,QUANTITY:32,DATE:64,RANGE:128,TUPLE:256,MAP:512,ROWVECTOR:1024,COLUMNVECTOR:2048,MATRIX:4096,DATAFRAME:8192,MODULE:16384,ERROR:32768,UNIT:65536,IMAGE:131072,RICHTEXT:262144});const x=Object.freeze({EN:{ERROR:"Error. Hurmet does not understand the expression.",ERR_FUNC:"@",BAD_FUN_NM:'Error. Unrecognized function name "@".',DIV:"Error. Divide by zero.",NAN:"Error. Value of $@$ is not a numeric.",NANARG:"Error. Argument to function $@$ must be numeric.",NULL:"Error. Missing value for $@$.",V_NAME:"Error. Variable $@$ not found.",F_NAME:"Error. Function @ not found.",NAN_OP:"Error. Arithmetic operation on a non-numeric value.",UNIT_ADD:"Error. Adding incompatible units.",UNIT_COMP:"Error. Comparing incompatible units.",UNIT_APEND:"Error. Apppending incompatible units.",UNIT_RES:"Error. Calculated units are not compatible with the desired result unit:",UNIT_MISS:"Error. No units specified for the result.",UNIT_IN:"Error. Incorrect unit for input to function @.",UNIT_ARG:"Error. Unit mis-match between arguments to function @.",UNIT_COL:"Error. Data frame column @ has no units. Do not make a unit-aware call to it.",UNIT_AWARE:"Error. Calculation must be unit-aware in order to apply unit @",DATE:"Error. Date required.",LOGIC:"Error. Logic operation “@” on a non-boolean value.",FACT:"Error. Factorial may be applied only to a unit-less non-negative integer.",PER:"Error. Percentage may be applied only to a unit-less number.",BINOM:"Error. Binomial may be applied only to unit-less numbers.",LOGF:"Error. Argument to log!() must be a non-negative integer.","Γ0":"Error. Γ(0) is infinite.","ΓPOLE":"Error. Γ() of a negative integer is infinite.","LOGΓ":"Error. Argument to Hurmet logΓ() must be a positive number.",TAN90:"Error. tan($@$) is infinite.",ATRIG:"Error. Input to @ must be between -1 and 1.",COT:"Error. Input to @ must not be zero.",ASEC:"Error. Absolute value of input to @ must be ≥ 1",STRING:"Error. Text operand required.",NUMARGS:"Error. Wrong number of arguments passed to function @.",NONSQUARE:"Error. Only a square matrix can be inverted.",SINGULAR:"Error. Matrix is singular and cannot be inverted.",BAD_ROW_NAME:"Error. Data frame does not have a row named @.",BAD_COLUMN_NAME:"Error. Data frame does not have a column named @.",SINGLE_ARG:"Error. A call to a data frame must have two arguments in the brackets.",BAD_TYPE:"Error. Unrecognized data type for $@$.",CONCAT:'Error. Cannot add strings. Use "&" if concatenation is desired.',MATRIX_DIV:"Error. Cannot divide one matrix by another.",MATRIX_MOD:"Error. Cannot take the modulo of one matrix by another.",BAD_INDEX:"Error. Index to a matrix must be numeric.",FUNC_LINE:"Error in function @.",BAD_BREAK:"Error in function @. break called outside of a loop",FETCH:"Error. A fetch() function must be the only item in its expression.",STR_INDEX:"Error. The index to text may be only a real number or a range.",UNIT_NAME:"Error. Unrecognized unit name: @",INT_NUM:'Error. Number display type "@" must be an integer.',TWO_MAPS:"Error. Both operands are maps. Hurmet accepts only one.",BAD_FORMAT:"Error. Invalid format @.",BAD_PREC:"Error. Significant digit specification must be between 1 and 15.",ZERO_ROOT:"Error. Zeroth root.",BAD_ROOT:"Error while taking root.",UNREAL:'Error. Argument to function "@" must be a real number.',BIGINDEX:"Error. Index too large.",MIS_ELNUM:"Error. Mis-matched number of elements",CROSS:"Error. Cross product can be performed only on three-vectors. Use * if you want element-wise multiplication.",QUANT_NUM:"Error. A Quantity must include a numeric magnitude.",CURRENCY:"Error. Currency exchange rates must be defined before using a monetary unit.",DF_UNIT:'Invalid unit "&" in data frame.',FORM_FRAC:"Error. Hurmet can do binary or hexadecimal format only on integers.",PRIVATE:"Error. Function @ is not private.",GCD:"Error. The gcd function can take only integers as arguments.",BAD_KEY:'Error. Data structure does not contain key "@".',NUM_KEY:"Error. A key must be a string, not a number.",IMMUT_UDF:`Error. Variable @ already contains a user-defined function.\n                Hurmet cannot assign a different value to @.`,NO_PROP:`Error. Cannot call a property from variable "@" because it has no properties.`,NOT_ARRAY:`Error. Cannot check if an element is in the second operand because\n the second operand is not an array.`,MULT_MIS:"Error. Mismatch in number of multiple assignment.",COUNT:"Error. The count() function works only on strings.",NOT_VECTOR:"Error. Arguments to dataframe() must be vectors.",BAD_DISPLAY:"Error. Result may not be suppressed. Use '?' display selector.",NA_COMPL_OP:'Error. "@" cannot be performed on a complex number.',NA_REAL:'Error. "@" can be performed only a complex number.',ORIGIN:'Error. Function "@" is undefined at the origin.',LOG_ZERO:"Error. Logarithm of zero is negative infinity.",END_MISS:"Error. Too few END statments in function @.",BAD_CONCAT:"Error. Unmatched dimensions.",BAD_KEYSTR:"Error. The key in a key:value pair must be a string.",BAD_APPEND:"Error. Can not append a @",MAP_APPEND:"Error. Can not append. Wrong data type."}});const M=(e,t)=>{if(e===""){return{value:"Error",unit:null,dtype:I.ERROR}}let n=x["EN"][e];if(n===undefined){return{value:"Error",unit:null,dtype:I.ERROR}}if(t){t=y(t);n=n.replace(/@/g,t)}else{n=n.replace(/@ ?/,"")}return{value:n,unit:null,dtype:I.ERROR}};const C=BigInt(0);const L=BigInt(1);const U=BigInt(2);const S=[C,L];const w=[L,L];const D=[U,L];const B=[BigInt(3141592653589793e34),BigInt(1e49)];const _=[BigInt(2718281828459045e42),BigInt(1e57)];const P=[BigInt(1054571817),BigInt(1e43)];const k=e=>e>=C?e:BigInt(-1)*e;const z="^(-?)(?:(0x[0-9A-Fa-f]+)|([0-9]+)(?: ([0-9]+)\\/([0-9]+)|(?:\\.([0-9]+))?(?:e([+-]?[0-9]+)|(%))?))";const j=new RegExp(z);const V=e=>{if(Number.isInteger(e)){return[BigInt(e),L]}else{const t=e.toExponential().match(j);const n=t[6]||"";const r=BigInt(t[7])-BigInt(n.length);if(r<0){return[BigInt(t[1]+t[3]+n),BigInt(10)**-r]}else if(t[5]){const e=BigInt(t[5]);return Y([BigInt(t[1]+t[3])*e+BigInt(t[4])])}else{return Y([BigInt(t[1]+t[3]+n)*BigInt(10)**r,L])}}};const F=e=>{const t=e.match(j);let n;if(t[5]){const e=BigInt(t[5]);const r=BigInt(t[1]+t[3])*e+BigInt(t[4]);n=Y([r,e])}else if(t[2]){n=[BigInt(t[2]),L]}else{const e=t[6]||"";const r=BigInt(t[3]+e);const s=t[7]?BigInt(t[7])-BigInt(e.length):t[8]?BigInt(-2)-BigInt(e.length):BigInt(0)-BigInt(e.length);n=s<0?[r,BigInt(10)**-s]:Y([r*BigInt(10)**s,L])}if(t[1]){n=K(n)}return n};const q=(e,t)=>{e=k(e);t=k(t);while(t!==C){const n=e%t;e=t;t=n}return e};const G=(e,t)=>{if(!Se.isInteger(e)||!Se.isInteger(t)){return M("GCD")}return[q(e[0]/e[1],t[0]/t[1]),L]};const Y=e=>{const[t,n]=e;if(n===L){return e}const r=q(t,n);return r===L?e:[t/r,n/r]};const W=e=>Array.isArray(e)&&e.length===2&&typeof e[0]==="bigint"&&typeof e[1]==="bigint";const $=e=>e[1]===L||e[0]%e[1]===C;const H=e=>e[0]===C;const X=e=>e[0]<C;const Z=e=>e[0]>C;const K=e=>[BigInt(-1)*e[0],e[1]];const Q=e=>{const t=e[0]<C?BigInt(-1)*e[0]:e[0];return[t,e[1]]};const J=e=>[e[0]+e[1],e[1]];const ee=e=>[e[0]-e[1],e[1]];const te=e=>{if(e[0]%e[1]===C){return[e[0]/e[1],L]}return e[0]>=C?[e[0]/e[1],L]:[e[0]/e[1]-L,L]};const ne=e=>{if(e[0]%e[1]===C){return[e[0]/e[1],L]}return e[0]>=C?[e[0]/e[1]+L,L]:[e[0]/e[1],L]};const re=(e,t)=>e[1]===t[1]?[e[0]+t[0],e[1]]:Y([e[0]*t[1]+t[0]*e[1],e[1]*t[1]]);const se=(e,t)=>e[1]===t[1]?[e[0]-t[0],e[1]]:Y([e[0]*t[1]-t[0]*e[1],e[1]*t[1]]);const ae=(e,t)=>[e[0]*t[0],e[1]*t[1]];const le=(e,t)=>{let n=e[0]*t[1];let r=e[1]*t[0];if(r<0){n*=BigInt(-1);r*=BigInt(-1)}return[n,r]};const oe=(e,t)=>{if(t[0]===C){return[L,L]}else{t=Y(t);let n;try{n=$(t)&&X(t)?[e[1]**(BigInt(-1)*t[0]),e[0]**(BigInt(-1)*t[0])]:$(t)?[e[0]**t[0],e[1]**t[0]]:Z(e)||he(t,w)||me(t,K(w))?V(Ie(e)**Ie(t)):de(fe(t,D),w)?V(-1*(-1*Ie(e))**Ie(t)):M("BAD_ROOT")}catch(r){n=V(Ie(e)**Ie(t))}return n}};const ie=e=>V(Math.sqrt(Ie(e)));const ue=e=>V(Math.exp(Ie(e)));const ce=e=>{let t=e[1];let n=e[0];if(n<0){t*=BigInt(-1);n*=BigInt(-1)}return[t,n]};const pe=(e,t)=>{const n=Q(e);const r=Q(t);const s=be(n,r);const a=Re(n,r);const l=Se.divide(a,s);return Se.multiply(s,ie(Se.increment(Se.multiply(l,l))))};const fe=(e,t)=>{const n=le(Y(e),Y(t));return[k(n[0]%n[1]),L]};const de=(e,t)=>e[1]===t[1]?e[0]===t[0]:e[0]*t[1]===e[1]*t[0];const me=(e,t)=>X(e)!==X(t)?X(e):X(se(e,t));const he=(e,t)=>Z(e)!==Z(t)?Z(e):Z(se(e,t));const ge=(e,t)=>me(e,t)||de(e,t);const ye=(e,t)=>he(e,t)||de(e,t);const be=(e,t)=>he(e,t)?[e[0],e[1]]:[t[0],t[1]];const Re=(e,t)=>me(e,t)?[e[0],e[1]]:[t[0],t[1]];const Ae=e=>de(e,le(B,D))?S:V(Math.cos(Ie(e)));const Oe=e=>V(Math.sin(Ie(e)));const ve=e=>{if(de(e,le(B,D))){return M("TAN90","π/2")}return V(Math.tan(Ie(e)))};const Ne=e=>{const t=Ie(e);return V((Math.exp(t)+Math.exp(-t))/2)};const Ee=e=>{const t=Ie(e);return V((Math.exp(t)-Math.exp(-t))/2)};const Te=e=>{const t=Ie(e);return V((Math.exp(t)-Math.exp(-t))/(Math.exp(t)+Math.exp(-t)))};const Ie=e=>{const t=Number(e[0])/Number(e[1]);if(!isNaN(t)){return t}const n=xe(e,20);return Number(n)};const xe=(e,t)=>{if(H(e)){return"0"}else{const n=k(e[0]/e[1]);if(n>0){return Me(e,t-String(n).length)}else{const n=String(k(e[1]/e[0])).length;return Me(e,n+t-1)}}};const Me=(e,t)=>{if(H(e)){return"0"}else if(t<0){const n=-t;const r=Me(le(e,[BigInt(10)**BigInt(n),L]),0);return r+"0".repeat(n)}else{const[n,r]=Y(e);const s=n/r;let a=n%r;let l=String(s);if(a===C&&t>0){l+="."+"0".repeat(t)}else if(a!==C){a=k(a);const e=a*BigInt(10)**BigInt(t);let n=e/r;const o=e%r;if(t===0){return k(U*o)>=k(r)?String(s+L):l}if(k(U*o)>=k(r)){n=n+L}l+="."+String(n).padStart(t,"0")}return l}};const Ce=["1","1","2","6","24","120","720","5040","40320","362880","3628800","39916800","479001600","6227020800","87178291200","1307674368000","20922789888000","355687428096000","6402373705728000","121645100408832000","2432902008176640000","51090942171709440000","1124000727777607680000","25852016738884976640000","620448401733239439360000","15511210043330985984000000","403291461126605635584000000","10888869450418352160768000000","304888344611713860501504000000","8841761993739701954543616000000","265252859812191058636308480000000","8222838654177922817725562880000000","263130836933693530167218012160000000","8683317618811886495518194401280000000","295232799039604140847618609643520000000","10333147966386144929666651337523200000000","371993326789901217467999448150835200000000","13763753091226345046315979581580902400000000","523022617466601111760007224100074291200000000","20397882081197443358640281739902897356800000000","815915283247897734345611269596115894272000000000","33452526613163807108170062053440751665152000000000","1405006117752879898543142606244511569936384000000000","60415263063373835637355132068513997507264512000000000","2658271574788448768043625811014615890319638528000000000","119622220865480194561963161495657715064383733760000000000","5502622159812088949850305428800254892961651752960000000000","258623241511168180642964355153611979969197632389120000000000","12413915592536072670862289047373375038521486354677760000000000","608281864034267560872252163321295376887552831379210240000000000","30414093201713378043612608166064768844377641568960512000000000000","1551118753287382280224243016469303211063259720016986112000000000000","80658175170943878571660636856403766975289505440883277824000000000000","4274883284060025564298013753389399649690343788366813724672000000000000","230843697339241380472092742683027581083278564571807941132288000000000000","12696403353658275925965100847566516959580321051449436762275840000000000000","710998587804863451854045647463724949736497978881168458687447040000000000000","40526919504877216755680601905432322134980384796226602145184481280000000000000","2350561331282878571829474910515074683828862318181142924420699914240000000000000","138683118545689835737939019720389406345902876772687432540821294940160000000000000","8320987112741390144276341183223364380754172606361245952449277696409600000000000000","507580213877224798800856812176625227226004528988036003099405939480985600000000000000","31469973260387937525653122354950764088012280797258232192163168247821107200000000000000","1982608315404440064116146708361898137544773690227268628106279599612729753600000000000000","126886932185884164103433389335161480802865516174545192198801894375214704230400000000000000","8247650592082470666723170306785496252186258551345437492922123134388955774976000000000000000","544344939077443064003729240247842752644293064388798874532860126869671081148416000000000000000","36471110918188685288249859096605464427167635314049524593701628500267962436943872000000000000000","2480035542436830599600990418569171581047399201355367672371710738018221445712183296000000000000000","171122452428141311372468338881272839092270544893520369393648040923257279754140647424000000000000000","11978571669969891796072783721689098736458938142546425857555362864628009582789845319680000000000000000","850478588567862317521167644239926010288584608120796235886430763388588680378079017697280000000000000000","61234458376886086861524070385274672740778091784697328983823014963978384987221689274204160000000000000000","4470115461512684340891257138125051110076800700282905015819080092370422104067183317016903680000000000000000","330788544151938641225953028221253782145683251820934971170611926835411235700971565459250872320000000000000000","24809140811395398091946477116594033660926243886570122837795894512655842677572867409443815424000000000000000000","1885494701666050254987932260861146558230394535379329335672487982961844043495537923117729972224000000000000000000","145183092028285869634070784086308284983740379224208358846781574688061991349156420080065207861248000000000000000000","11324281178206297831457521158732046228731749579488251990048962825668835325234200766245086213177344000000000000000000","894618213078297528685144171539831652069808216779571907213868063227837990693501860533361810841010176000000000000000000","71569457046263802294811533723186532165584657342365752577109445058227039255480148842668944867280814080000000000000000000","5797126020747367985879734231578109105412357244731625958745865049716390179693892056256184534249745940480000000000000000000","475364333701284174842138206989404946643813294067993328617160934076743994734899148613007131808479167119360000000000000000000","39455239697206586511897471180120610571436503407643446275224357528369751562996629334879591940103770870906880000000000000000000","3314240134565353266999387579130131288000666286242049487118846032383059131291716864129885722968716753156177920000000000000000000","281710411438055027694947944226061159480056634330574206405101912752560026159795933451040286452340924018275123200000000000000000000","24227095383672732381765523203441259715284870552429381750838764496720162249742450276789464634901319465571660595200000000000000000000","2107757298379527717213600518699389595229783738061356212322972511214654115727593174080683423236414793504734471782400000000000000000000","185482642257398439114796845645546284380220968949399346684421580986889562184028199319100141244804501828416633516851200000000000000000000","16507955160908461081216919262453619309839666236496541854913520707833171034378509739399912570787600662729080382999756800000000000000000000","1485715964481761497309522733620825737885569961284688766942216863704985393094065876545992131370884059645617234469978112000000000000000000000","135200152767840296255166568759495142147586866476906677791741734597153670771559994765685283954750449427751168336768008192000000000000000000000","12438414054641307255475324325873553077577991715875414356840239582938137710983519518443046123837041347353107486982656753664000000000000000000000","1156772507081641574759205162306240436214753229576413535186142281213246807121467315215203289516844845303838996289387078090752000000000000000000000","108736615665674308027365285256786601004186803580182872307497374434045199869417927630229109214583415458560865651202385340530688000000000000000000000","10329978488239059262599702099394727095397746340117372869212250571234293987594703124871765375385424468563282236864226607350415360000000000000000000000","991677934870949689209571401541893801158183648651267795444376054838492222809091499987689476037000748982075094738965754305639874560000000000000000000000","96192759682482119853328425949563698712343813919172976158104477319333745612481875498805879175589072651261284189679678167647067832320000000000000000000000","9426890448883247745626185743057242473809693764078951663494238777294707070023223798882976159207729119823605850588608460429412647567360000000000000000000000","933262154439441526816992388562667004907159682643816214685929638952175999932299156089414639761565182862536979208272237582511852109168640000000000000000000000","93326215443944152681699238856266700490715968264381621468592963895217599993229915608941463976156518286253697920827223758251185210916864000000000000000000000000"];const Le=e=>{if(me(e,[BigInt(101),L])){return F(Ce[Ie(e)])}else{return Ue(J(e))}};const Ue=e=>{const t=se(e,w);const n=ae(D,ie(le(_,B)));const r=oe(le(re(t,V(11.400511)),_),re(t,[L,U]));const s=["2.48574089138753565546e-5","1.05142378581721974210","-3.45687097222016235469","4.51227709466894823700","-2.98285225323576655721","1.05639711577126713077","-0.195428773191645869583","0.0170970543404441224307","-0.000571926117404305781283","0.00000463399473359905636708","-0.00000000271994908488607703910"];let a=F(s[0]);for(let e=1;e<=10;e++){a=re(a,le(F(s[e]),re(t,V(e))))}return ae(ae(n,r),a)};const Se=Object.freeze({fromNumber:V,fromString:F,normalize:Y,isRational:W,isInteger:$,isZero:H,isNegative:X,isPositive:Z,negate:K,abs:Q,increment:J,decrement:ee,exp:ue,floor:te,ceil:ne,add:re,subtract:se,multiply:ae,divide:le,reciprocal:ce,gcd:G,hbar:P,modulo:fe,hypot:pe,one:w,pi:B,power:oe,sqrt:ie,two:D,cos:Ae,sin:Oe,tan:ve,cosh:Ne,sinh:Ee,tanh:Te,areEqual:de,lessThan:me,greaterThan:he,lessThanOrEqualTo:ge,greaterThanOrEqualTo:ye,factorial:Le,lanczos:Ue,max:be,min:Re,numberPattern:z,toNumber:Ie,toString:Me,toStringSignificant:xe,zero:S});const we=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"];const De=/\B(?=(\d{3})+$)/g;const Be=/\B(?=(\d{4})+$)/g;const _e=/(\d)(?=(\d\d)+\d$)/g;const Pe=/^([beEfhkmprsStx%])?(-?[\d]+)?([j∠°])?$/;const ke=e=>{let t="";for(let n=0;n<e.length;n++){const r=e.charCodeAt(n);t+=r===49?"¹":r===50?"²":r===51?"³":String.fromCharCode(r+8256)}return t};const ze=e=>{let t="";for(let n=0;n<e.length;n++){t+=String.fromCharCode(e.charCodeAt(n)+8272)}return t};const je=e=>(e[1]?"-":"")+e[3]+"\\,\\class{special-fraction}{\\text{"+ke(e[4])+"⁄"+ze(e[5])+"}}";const Ve=e=>e>=BigInt(0)?e:BigInt(-1)*e;const Fe=(e,t)=>{const n=t.numDigits;switch(t.ftype){case"h":{const t=String(Se.toString(e,0));if(t.replace("-","").length>=n){return t}if(n<1||n>15){return M("BAD_PREC")}return Se.toNumber(e).toPrecision(n)}case"f":case"%":return Se.toString(e,n);case"r":case"p":{if(n<1||n>15){return M("BAD_PREC")}const t=Se.toNumber(e).toPrecision(n);return t.indexOf("e")>-1?Number(t).toPrecision():t}case"s":case"S":case"e":case"E":case"n":case"N":case"k":if(n<1||n>15){return M("BAD_PREC")}return Se.toNumber(e).toExponential(n-1).replace("+","");default:{e=Se.normalize(e);const n=Se.isNegative(e)?"-":"";const r=Ve(e[0]);const s=e[1];switch(t.ftype){case"m":{const e=String(r/s);const t=r%s;return n+e+" "+ke(t)+"⁄"+ze(s)}case"t":return n+String(r/s);case"b":case"x":case"X":if(s!==BigInt(1)){return M("INT_NUM",t.ftype)}if(r<=Number.MAX_SAFE_INTEGER){return t.ftype==="b"?n+"0b"+Number(r).toString(2):t.ftype==="x"?n+"0x"+Number(r).toString(16):n+"0x"+Number(r).toString(16).toUpperCase()}else{return""}}}}};const qe=(e,t)=>{const n=t.charAt(1);if(n==="0"){return e}else if(t==="1,00,000."){return e.replace(_e,"$1{,}")}else if(t==="1,0000,0000."){return e.replace(Be,"$1{,}")}else{return e.replace(De,n===","?"{,}":n===" "?"\\:":n==="’"?"’":".")}};const Ge=(e,t,n)=>{const r=e.indexOf(".");if(r===-1){return qe(e,t)}else{const s=e.slice(0,r);const a=t.slice(-1);let l=(a==="."?".":"{,}")+e.slice(r+1);if(n){l=l.replace(/(\.|{,})?0+$/,"")}return qe(s,t)+l}};const Ye=e=>{const t=Pe.exec(e);if(!t){const t=M("BAD_FORMAT",e).value;return[e,undefined,I.ERROR,"\\text{"+t+"}"]}let n=t[1]||"h";let r=Number(t[2]||"15");const s=t[3]||"";switch(n){case"b":case"x":case"X":return[e,undefined,I.STRING,"\\text{"+n+s+"}"];case"t":r=0;break;case"f":case"%":break;default:if(r<1||r>15){const t="\\text{"+M("BAD_PREC").value+"}";return[e,undefined,I.ERROR,t]}}if(n==="%"){n="\\%"}return[e,undefined,I.STRING,"\\text{"+n+String(r)+s+"}"]};const We=(e,t="h3",n="1,000,000.")=>{if(Se.isZero(e)){return"0"}const r={ftype:t.charAt(0)};if(/[j∠°]$/.test(t)){t=t.slice(0,-1)}if(t.length>1){r.numDigits=Number(t.slice(1))}if(r.ftype==="%"||r.ftype==="p"){e[0]=e[0]*BigInt(100)}if((r.ftype==="b"||r.ftype==="x")&&!Se.isInteger(e)){return M("FORM_FRAC")}const s=Fe(e,r);switch(r.ftype){case"f":case"r":case"h":return Ge(s,n,r.ftype==="h");case"t":return qe(s,n);case"%":case"p":return Ge(s,n)+"\\%";case"m":case"b":case"x":case"X":return s;default:{const e=s.indexOf("e");let t=s.slice(0,e);if(n.slice(-1)===","){t=t.replace(".","{,}")}switch(r.ftype){case"e":case"E":{const n=t+"\\text{"+r.ftype;if(s.charAt(e+1)==="-"){return n+"-}"+s.slice(e+2)}else{return n+"}"+s.slice(e+1)}}case"s":case"S":case"n":case"N":{const n=r.ftype==="S"?"×":"\\mkern2mu{\\cdot}\\mkern1mu";return t+n+"10^{"+s.slice(e+1)+"}"}case"k":{const n=Number(s.slice(e+1));const r=n/3;const a=r>=0?Math.floor(r):Math.ceil(r);const l=n%3;if(l!==0){t=String(Number(t)*Math.pow(10,l))}return t+we[8+a]}}}}};const $e=(e,t)=>{if(e==null&&t==null){return true}if(e==null||t==null){return false}if(!Array.isArray(e)||!Array.isArray(t)){return false}if(e.length!==t.length){return false}for(let n=0;n<e.length;++n){if(e[n]!==t[n]){return false}}return true};const He=JSON.parse('{"Y":1e24,"yotta":1e24,"Z":1e21,"zetta":1e21,"E":1e18,"exa":1e18,"P":1e15,"peta":1e15,"T":1e12,"tera":1e12,"G":1e9,"giga":1e9,"M":1e6,"mega":1e6,"k":1000,"kilo":1000,"h":100,"hecto":100,"deka":10,"d":0.1,"deci":0.1,"c":0.01,"centi":0.01,"m":0.001,"milli":0.001,"µ":1e-6,"µ":1e-6,"micro":1e-6,"n":1e-9,"nano":1e-9,"p":1e-12,"pico":1e-12,"f":1e-15,"femto":1e-15,"a":1e-18,"atto":1e-18,"z":1e-21,"zepto":1e-21,"y":1e-24,"yocto":1e-24,"Ki":1024,"kibi":1024,"Mi":1048576,"mebi":1048576,"Gi":1073741824,"gibi":1073741824,"Ti":1099511627776,"tebi":1099511627776}');const Xe=Object.freeze(JSON.parse(`{\n"#":["0.45359237", "1","0","0",[0,1,0,0,0,0,0,0]],\n"$":["1","1","0","USD",[0,0,0,0,0,0,0,1]],\n"£":["1","1","0","GBP",[0,0,0,0,0,0,0,1]],\n"'":["0.3048","1","0","0",[1,0,0,0,0,0,0,0]],\n"A":["1","1","0","siSymbol",[0,0,0,1,0,0,0,0]],\n"AUD":["1","1","0","AUD",[0,0,0,0,0,0,0,1]],\n"Adobe point":["0.0254","72","0","0",[1,0,0,0,0,0,0,0]],\n"At":["1","1","0","siSymbol",[0,0,0,0,1,0,1,0]],\n"Australian dollar":["1","1","0","AUD",[0,0,0,0,0,0,0,1]],\n"BRL":["1","1","0","BRL",[0,0,0,0,0,0,0,1]],\n"BTU":["1055.056","1","0","0",[2,1,-2,0,0,0,0,0]],\n"BThU":["1055.056","1","0","0",[2,1,-2,0,0,0,0,0]],\n"Bq":["1","1","0","siSymbol",[0,0,-1,0,0,0,0,0]],\n"Brazilian Real":["1","1","0","BRL",[0,0,0,0,0,0,0,1]],\n"British Pound":["1","1","0","GBP",[0,0,0,0,0,0,0,1]],\n"Btu":["1055.056","1","0","0",[2,1,-2,0,0,0,0,0]],\n"C":["1","1","0","siSymbol",[0,0,1,1,0,0,0,0]],\n"C$":["1","1","0","CAD",[0,0,0,0,0,0,0,1]],\n"CAD":["1","1","0","CAD",[0,0,0,0,0,0,0,1]],\n"CCF":["1","1","0","0",[3,0,0,0,0,0,0,0]],\n"CHF":["1","1","0","CHF",[0,0,0,0,0,0,0,1]],\n"CNY":["1","1","0","CNY",[0,0,0,0,0,0,0,1]],\n"CY":["0.764554857984","1","0","0",[3,0,0,0,0,0,0,0]],\n"Calorie":["4186.8","1","0","0",[2,1,-2,0,0,0,0,0]],\n"Canadian dollar":["1","1","0","CAD",[0,0,0,0,0,0,0,1]],\n"Celsius":["1","1","273.15","0",[0,0,0,0,1,0,0,0]],\n"Chinese Yuan":["1","1","0","CNY",[0,0,0,0,0,0,0,1]],\n"Ci":["37000000000","1","0","siSymbol",[0,0,-1,0,0,0,0,0]],\n"Ckm":["100000","1","0","siSymbol",[1,0,0,0,0,0,0,0]],\n"Da":["1.66053872e-24","1","0","siSymbol",[0,1,0,0,0,0,0,0]],\n"Dalton":["1.66053872e-24","1","0","0",[0,1,0,0,0,0,0,0]],\n"Didot point":["15.625","41559","0","0",[1,0,0,0,0,0,0,0]],\n"EB":["9223372036854770000","1","0","0",[0,0,0,0,0,1,0,0]],\n"EMU":["0.01","360000","0","0",[1,0,0,0,0,0,0,0]],\n"EUR":["1","1","0","EUR",[0,0,0,0,0,0,0,1]],\n"EiB":["9223372036854770000","1","0","0",[0,0,0,0,0,1,0,0]],\n"Euro":["1","1","0","EUR",[0,0,0,0,0,0,0,1]],\n"F":["1","1","0","siSymbol",[-2,-1,4,2,0,0,0,0]],\n"Fahrenheit":["5","9","459","0",[0,0,0,0,1,0,0,0]],\n"G":["0.0001","1","0","siSymbol",[-2,-2,-2,-1,0,0,0,0]],\n"GB":["8589934592","1","0","0",[0,0,0,0,0,1,0,0]],\n"GBP":["1","1","0","GBP",[0,0,0,0,0,0,0,1]],\n"Gal":["0.01","1","0","siSymbol",[1,0,-2,0,0,0,0,0]],\n"Gi":["10","12.5663706143592","0","siWord",[0,0,0,0,1,0,1,0]],\n"GiB":["8589934592","1","0","0",[0,0,0,0,0,1,0,0]],\n"Gregorian year":["31556952","1","0","0",[0,0,1,0,0,0,0,0]],\n"Gy":["1","1","0","siSymbol",[2,0,-2,0,0,0,0,0]],\n"H":["1","1","0","siSymbol",[2,1,-2,-2,0,0,0,0]],\n"HK$":["1","1","0","HKD",[0,0,0,0,0,0,0,1]],\n"HKD":["1","1","0","HKD",[0,0,0,0,0,0,0,1]],\n"HP":["745.69987158227","1","0","0",[2,1,-3,0,0,0,0,0]],\n"Hong Kong dollar":["1","1","0","HKD",[0,0,0,0,0,0,0,1]],\n"Hz":["1","1","0","siSymbol",[0,0,-1,0,0,0,0,0]],\n"ILS":["1","1","0","ILS",[0,0,0,0,0,0,0,1]],\n"INR":["1","1","0","INR",[0,0,0,0,0,0,0,1]],\n"Indian Rupee":["1","1","0","INR",[0,0,0,0,0,0,0,1]],\n"Israeli New Shekel":["1","1","0","ILS",[0,0,0,0,0,0,0,1]],\n"J":["1","1","0","siSymbol",[2,1,-2,0,0,0,0,0]],\n"JPY":["1","1","0","JPY",[0,0,0,0,0,0,0,1]],\n"Japanese Yen":["1","1","0","JPY",[0,0,0,0,0,0,0,1]],\n"Joule":["1","1","0","0",[2,1,-2,0,0,0,0,0]],\n"Julian year":["31557600","1","0","0",[0,0,1,0,0,0,0,0]],\n"Jy":["1e-26","1","0","siSymbol",[0,1,-2,0,0,0,0,0]],\n"K":["1","1","0","0",[0,0,0,0,1,0,0,0]],\n"KiB":["8192","1","0","0",[0,0,0,0,0,1,0,0]],\n"KRW":["1","1","0","KRW",[0,0,0,0,0,0,0,1]],\n"L":["0.001","1","0","siSymbol",[3,0,0,0,0,0,0,0]],\n"Lego stud":["0.008","1","0","siSymbol",[1,0,0,0,0,0,0,0]],\n"MB":["8388608","1","0","0",[0,0,0,0,0,1,0,0]],\n"MCM":["5.06707479097497e-07","1","0","0",[2,0,0,0,0,0,0,0]],\n"MMBtu":["1055056000","1","0","0",[2,1,-2,0,0,0,0,0]],\n"MMbbl":["158987.294928","1","0","0",[3,0,0,0,0,0,0,0]],\n"MMbblpd":["158987.294928","86400","0","0",[3,0,-1,0,0,0,0,0]],\n"MMscf":["28316.846592","1","0","0",[3,0,0,0,0,0,0,0]],\n"MMscfd":["0.32774128","1","0","0",[3,0,0,0,0,0,0,0]],\n"MT":["1000","1","0","0",[0,1,0,0,0,0,0,0]],\n"MXN":["1","1","0","MXN",[0,0,0,0,0,0,0,1]],\n"Mach":["331.6","1","0","0",[1,0,-1,0,0,0,0,0]],\n"Mbbl":["158.987294928","1","0","0",[3,0,0,0,0,0,0,0]],\n"Mexican Peso":["1","1","0","MXN",[0,0,0,0,0,0,0,1]],\n"MiB":["8388608","1","0","0",[0,0,0,0,0,1,0,0]],\n"Mscfd":["0.00032774128","1","0","0",[3,0,0,0,0,0,0,0]],\n"Mscfh":["0.00786579072","1","0","0",[3,0,0,0,0,0,0,0]],\n"N":["1","1","0","siSymbol",[1,1,-2,0,0,0,0,0]],\n"NM":["1852","1","0","0",[1,0,0,0,0,0,0,0]],\n"PB":["9007199254740990","1","0","0",[0,0,0,0,0,1,0,0]],\n"PS":["735.49875","1","0","0",[2,1,-3,0,0,0,0,0]],\n"Pa":["1","1","0","siSymbol",[-1,1,-2,0,0,0,0,0]],\n"Pascal":["1","1","0","siWord",[-1,1,-2,0,0,0,0,0]],\n"Pferdestärke":["735.49875","1","0","0",[2,1,-3,0,0,0,0,0]],\n"PiB":["9007199254740990","1","0","0",[0,0,0,0,0,1,0,0]],\n"R":["0.000258","1","0","siSymbol",[0,-1,1,1,0,0,0,0]],\n"R$":["1","1","0","BRL",[0,0,0,0,0,0,0,1]],\n"RT":["3516.8532","1","0","0",[2,1,-3,0,0,0,0,0]],\n"RUB":["1","1","0","RUB",[0,0,0,0,0,0,0,1]],\n"S":["1","1","0","siSymbol",[-2,-1,3,2,0,0,0,0]],\n"SF":["0.09290304","1","0","0",[2,0,0,0,0,0,0,0]],\n"SY":["0.83612736","1","0","0",[2,0,0,0,0,0,0,0]],\n"Sv":["1","1","0","siSymbol",[2,0,-2,0,0,0,0,0]],\n"Swiss Franc":["1","1","0","CHF",[0,0,0,0,0,0,0,1]],\n"T":["1","1","0","siSymbol",[-2,-2,-2,-1,0,0,0,0]],\n"TB":["8796093022208","1","0","0",[0,0,0,0,0,1,0,0]],\n"TWD":["1","1","0","TWD",[0,0,0,0,0,0,0,1]],\n"TeX point":["0.0003515","1","0","0",[1,0,0,0,0,0,0,0]],\n"TiB":["8796093022208","1","0","0",[0,0,0,0,0,1,0,0]],\n"US$":["1","1","0","USD",[0,0,0,0,0,0,0,1]],\n"USD":["1","1","0","USD",[0,0,0,0,0,0,0,1]],\n"V":["1","1","0","siSymbol",[2,1,-3,-1,0,0,0,0]],\n"VA":["1","1","0","siSymbol",[2,1,-3,0,0,0,0,0]],\n"W":["1","1","0","siSymbol",[2,1,-3,0,0,0,0,0]],\n"Wb":["1","1","0","siSymbol",[2,1,-2,-1,0,0,0,0]],\n"Wh":["3600","1","0","siSymbol",[2,1,-2,0,0,0,0,0]],\n"Won":["1","1","0","KRW",[0,0,0,0,0,0,0,1]],\n"Yen":["1","1","0","JPY",[0,0,0,0,0,0,0,1]],\n"a":["31556925.9747","1","0","siSymbol",[0,0,1,0,0,0,0,0]],\n"ac":["4046.8564224","1","0","0",[2,0,0,0,0,0,0,0]],\n"acre":["4046.8564224","1","0","0",[2,0,0,0,0,0,0,0]],\n"admiralty mile":["1853.188","1","0","0",[1,0,0,0,0,0,0,0]],\n"af":["1233.48183754752","1","0","0",[3,0,0,0,0,0,0,0]],\n"amp":["1","1","0","0",[0,0,0,1,0,0,0,0]],\n"ampere":["1","1","0","siWord",[0,0,0,1,0,0,0,0]],\n"ampere turn":["1","1","0","siWord",[0,0,0,0,1,0,1,0]],\n"amu":["1.66053872e-24","1","0","0",[0,1,0,0,0,0,0,0]],\n"angstrom":["0.0000000001","1","0","0",[1,0,0,0,0,0,0,0]],\n"angstrom star":["0.00000000010000015","1","0","0",[1,0,0,0,0,0,0,0]],\n"apostilb":["1","3.14159265358979","0","0",[-2,0,0,0,0,0,1,0]],\n"arcminute":["3.14159265358979","10800","0","0",[0,0,0,0,0,0,0,0]],\n"arcsecond":["3.14159265358979","648000","0","0",[0,0,0,0,0,0,0,0]],\n"are":["100","1","0","0",[2,0,0,0,0,0,0,0]],\n"as":["4.3.14159265358979","648000","0","0",[0,0,0,0,0,0,0,0]],\n"asb":["1","3.14159265358979","0","0",[-2,0,0,0,0,0,1,0]],\n"assay ton":["0.0875","3","0","0",[0,1,0,0,0,0,0,0]],\n"astronomical unit":["149597870691","1","0","0",[1,0,0,0,0,0,0,0]],\n"atmosphere":["101325","1","0","siSymbol",[-1,1,-2,0,0,0,0,0]],\n"au":["149597870691","1","0","0",[1,0,0,0,0,0,0,0]],\n"bar":["100000","1","0","siWord",[-1,1,-2,0,0,0,0,0]],\n"barg":["100000","1","0","0",[-1,1,-2,0,0,0,0,0]],\n"barleycorn":["0.0254","3","0","0",[1,0,0,0,0,0,0,0]],\n"barrel":["0.158987294928","1","0","0",[3,0,0,0,0,0,0,0]],\n"barrel bulk":["0.14158423296","1","0","0",[3,0,0,0,0,0,0,0]],\n"basis point":["0.0001","1","0","0",[0,0,0,0,0,0,0,0]],\n"baud":["1","1","0","siSymbol",[0,0,-1,0,0,1,0,0]],\n"bbl":["0.158987294928","1","0","0",[3,0,0,0,0,0,0,0]],\n"becquerel":["1","1","0","siWord",[0,0,-1,0,0,0,0,0]],\n"beer barrel":["0.119240471196","1","0","0",[3,0,0,0,0,0,0,0]],\n"bit":["1","1","0","0",[0,0,0,0,0,1,0,0]],\n"blink":["0.864","1","0","0",[0,0,1,0,0,0,0,0]],\n"bo":["0.158987294928","1","0","0",[3,0,0,0,0,0,0,0]],\n"boe":["6119000000","1","0","0",[2,1,-2,0,0,0,0,0]],\n"boiler horsepower":["9812.5","1","0","0",[2,1,-3,0,0,0,0,0]],\n"bpd":["0.158987294928","86400","0","0",[3,0,-1,0,0,0,0,0]],\n"bph":["0.158987294928","3600","0","0",[3,0,-1,0,0,0,0,0]],\n"breadth":["0.2286","1","0","0",[1,0,0,0,0,0,0,0]],\n"bushel":["0.03523907016688","1","0","0",[3,0,0,0,0,0,0,0]],\n"byte":["8","1","0","0",[0,0,0,0,0,1,0,0]],\n"caballo de vapor":["735.49875","1","0","0",[2,1,-3,0,0,0,0,0]],\n"cal":["4.1868","1","0","0",[2,1,-2,0,0,0,0,0]],\n"calorie":["4.1868","1","0","siWord",[2,1,-2,0,0,0,0,0]],\n"candela":["1","1","0","siWord",[0,0,0,0,0,0,1,0]],\n"candlepower":["1","1","0","siWord",[0,0,0,0,0,0,1,0]],\n"carat":["0.00002","1","0","0",[0,1,0,0,0,0,0,0]],\n"cc":["0.000001","1","0","0",[3,0,0,0,0,0,0,0]],\n"cd":["1","1","0","siSymbol",[0,0,0,0,0,0,1,0]],\n"centipoise":["0.001","1","0","0",[-1,1,-1,0,0,0,0,0]],\n"centistoke":["0.000001","1","0","0",[2,0,-1,0,0,0,0,0]],\n"cfm":["0.0004719474432","1","0","0",[3,0,-1,0,0,0,0,0]],\n"cfs":["0.028316846592","1","0","0",[3,0,-1,0,0,0,0,0]],\n"ch":["735.49875","1","0","0",[2,1,-3,0,0,0,0,0]],\n"chain":["20.116","1","0","0",[1,0,0,0,0,0,0,0]],\n"cheval vapeur":["735.49875","1","0","0",[2,1,-3,0,0,0,0,0]],\n"cmil":["5.06707479097497e-10","1","0","0",[2,0,0,0,0,0,0,0]],\n"cmm":["0.00001","1","0","0",[1,0,0,0,0,0,0,0]],\n"constant":["1","1","0","0",[0,0,0,0,0,0,0,0]],\n"coulomb":["1","1","0","siWord",[0,0,1,1,0,0,0,0]],\n"cp":["1","1","0","siWord",[0,0,0,0,0,0,1,0]],\n"cps":["1","1","0","0",[0,0,-1,0,0,0,0,0]],\n"cu ft":["0.028316846592","1","0","0",[3,0,0,0,0,0,0,0]],\n"cu in":["0.000016387064","1","0","0",[3,0,0,0,0,0,0,0]],\n"cu yd":["0.764554857984","1","0","0",[3,0,0,0,0,0,0,0]],\n"cubic meter":["1","1","0","0",[3,0,0,0,0,0,0,0]],\n"cubic metre":["1","1","0","0",[3,0,0,0,0,0,0,0]],\n"cup":["0.0002365882365","1","0","0",[3,0,0,0,0,0,0,0]],\n"curie":["37000000000","1","0","siWord",[0,0,-1,0,0,0,0,0]],\n"cv":["735.49875","1","0","0",[2,1,-3,0,0,0,0,0]],\n"cy":["0.764554857984","1","0","0",[3,0,0,0,0,0,0,0]],\n"d":["86400","1","0","0",[0,0,1,0,0,0,0,0]],\n"daN":["10","1","0","0",[1,1,-2,0,0,0,0,0]],\n"darcy":["0.0000000000009869233","1","0","0",[2,0,0,0,0,0,0,0]],\n"day":["86400","1","0","0",[0,0,1,0,0,0,0,0]],\n"deg":["3.14159265358979","180","0","0",[0,0,0,0,0,0,0,0]],\n"degree":["3.14159265358979","180","0","0",[0,0,0,0,0,0,0,0]],\n"dekan":["31.4159265358979","180","0","0",[0,0,0,0,0,0,0,0]],\n"diopter":["1","1","0","0",[-1,0,0,0,0,0,0,0]],\n"dioptre":["1","1","0","0",[-1,0,0,0,0,0,0,0]],\n"dollar":["1","1","0","USD",[0,0,0,0,0,0,0,1]],\n"drum":["0.20819764812","1","0","0",[3,0,0,0,0,0,0,0]],\n"dscf":["0.028316846592","1","0","0",[3,0,0,0,0,0,0,0]],\n"dyn":["0.00001","1","0","0",[1,1,-2,0,0,0,0,0]],\n"dyne":["0.00001","1","0","0",[1,1,-2,0,0,0,0,0]],\n"eV":["1.602176462e-19","1","0","0",[2,1,-2,0,0,0,0,0]],\n"electric horsepower":["746","1","0","0",[2,1,-3,0,0,0,0,0]],\n"electrical horsepower":["746","1","0","0",[2,1,-3,0,0,0,0,0]],\n"electron volt":["1.602176462e-19","1","0","0",[2,1,-2,0,0,0,0,0]],\n"erg":["0.0000001","1","0","0",[2,1,-2,0,0,0,0,0]],\n"euro":["1","1","0","EUR",[0,0,0,0,0,0,0,1]],\n"exabyte":["9223372036854770000","1","0","0",[0,0,0,0,0,1,0,0]],\n"exbibyte":["9223372036854770000","1","0","0",[0,0,0,0,0,1,0,0]],\n"farad":["1","1","0","siWord",[-2,-1,4,2,0,0,0,0]],\n"faraday":["96485.339924","1","0","0",[0,0,1,1,0,0,0,0]],\n"fathom":["1.8288","1","0","0",[1,0,0,0,0,0,0,0]],\n"fc":["10.7639104167097","1","0","0",[-2,0,0,0,0,0,1,0]],\n"feet":["0.3048","1","0","0",[1,0,0,0,0,0,0,0]],\n"fermi":["0.000000000000001","1","0","siWord",[1,0,0,0,0,0,0,0]],\n"fl oz":["0.003785411784","128","0","0",[3,0,0,0,0,0,0,0]],\n"flop":["1","1","0","0",[0,0,-1,0,0,0,0,0]],\n"fluid ounce":["0.003785411784","128","0","0",[3,0,0,0,0,0,0,0]],\n"food calorie":["4186.8","1","0","0",[2,1,-2,0,0,0,0,0]],\n"foot":["0.3048","1","0","0",[1,0,0,0,0,0,0,0]],\n"footcandle":["10.7639104167097","1","0","0",[-2,0,0,0,0,0,1,0]],\n"footlambert":["1","3.14159265358979","0","0",[-2,0,0,0,0,0,1,0]],\n"fortnight":["1209600","1","0","0",[0,0,1,0,0,0,0,0]],\n"fps":["0.3048","1","0","0",[1,0,-1,0,0,0,0,0]],\n"franklin":["0.00000000033356","1","0","siWord",[0,0,1,1,0,0,0,0]],\n"ft":["0.3048","1","0","0",[1,0,0,0,0,0,0,0]],\n"ft water":["2988.874","1","0","0",[-1,1,-2,0,0,0,0,0]],\n"ftc":["10.7639104167097","1","0","0",[-2,0,0,0,0,0,1,0]],\n"ftl":["3.426259","1","0","0",[-2,0,0,0,0,0,1,0]],\n"furlong":["201.168","1","0","0",[1,0,0,0,0,0,0,0]],\n"g":["0.001","1","0","siSymbol",[0,1,0,0,0,0,0,0]],\n"gal":["0.003785411784","1","0","0",[3,0,0,0,0,0,0,0]],\n"galileo":["0.01","1","0","siWord",[1,0,-2,0,0,0,0,0]],\n"gallon":["0.003785411784","1","0","0",[3,0,0,0,0,0,0,0]],\n"gauss":["0.0001","1","0","siSymbol",[-2,-2,-2,-1,0,0,0,0]],\n"gigabyte":["8589934592","1","0","0",[0,0,0,0,0,1,0,0]],\n"gilbert":["10","12.5663706143592","0","siWord",[0,0,0,0,1,0,1,0]],\n"gill":["0.003785411784","32","0","0",[3,0,0,0,0,0,0,0]],\n"gon":["3.14159265358979","200","0","0",[0,0,0,0,0,0,0,0]],\n"gongjin":["1","1","0","siSymbol",[0,1,0,0,0,0,0,0]],\n"gongli":["1000","1","0","siSymbol",[1,0,0,0,0,0,0,0]],\n"gpd":["0.003785411784","86400","0","0",[3,0,-1,0,0,0,0,0]],\n"gph":["0.003785411784","3600","0","0",[3,0,-1,0,0,0,0,0]],\n"gpm":["0.003785411784","60","0","0",[3,0,-1,0,0,0,0,0]],\n"gps":["0.003785411784","1","0","0",[3,0,-1,0,0,0,0,0]],\n"gr":["0.00006479891","1","0","0",[0,1,0,0,0,0,0,0]],\n"grad":["3.14159265358979","200","0","0",[0,0,0,0,0,0,0,0]],\n"grain":["0.00006479891","1","0","0",[0,1,0,0,0,0,0,0]],\n"gram":["0.001","1","0","0",[0,1,0,0,0,0,0,0]],\n"gramme":["0.001","1","0","0",[0,1,0,0,0,0,0,0]],\n"gray":["1","1","0","0",[2,0,-2,0,0,0,0,0]],\n"great year":["814000000000","1","0","0",[0,0,1,0,0,0,0,0]],\n"gsm":["0.001","1","0","0",[-2,1,0,0,0,0,0,0]],\n"gutenberg":["0.0254","7200","0","0",[1,0,0,0,0,0,0,0]],\n"gōngjin":["1","1","0","siSymbol",[0,1,0,0,0,0,0,0]],\n"gōngli":["1000","1","0","siSymbol",[1,0,0,0,0,0,0,0]],\n"h":["3600","1","0","0",[0,0,1,0,0,0,0,0]],\n"ha":["10000","1","0","siSymbol",[2,0,0,0,0,0,0,0]],\n"hand":["0.1016","1","0","0",[1,0,0,0,0,0,0,0]],\n"hectare":["10000","1","0","siWord",[2,0,0,0,0,0,0,0]],\n"helek":["10","3","0","0",[0,0,1,0,0,0,0,0]],\n"hemisphere":["6.28318530717959","1","0","0",[0,0,0,0,0,0,0,0]],\n"henrie":["1","1","0","siWord",[2,1,-2,-2,0,0,0,0]],\n"henry":["1","1","0","siWord",[2,1,-2,-2,0,0,0,0]],\n"hertz":["1","1","0","siWord",[0,0,-1,0,0,0,0,0]],\n"hk":["735.49875","1","0","0",[2,1,-3,0,0,0,0,0]],\n"horsepower":["745.69987158227","1","0","0",[2,1,-3,0,0,0,0,0]],\n"hour":["3600","1","0","0",[0,0,1,0,0,0,0,0]],\n"hp":["745.69987158227","1","0","0",[2,1,-3,0,0,0,0,0]],\n"hpE":["746","1","0","0",[2,1,-3,0,0,0,0,0]],\n"hpI":["745.69987158227","1","0","0",[2,1,-3,0,0,0,0,0]],\n"hpM":["735.49875","1","0","0",[2,1,-3,0,0,0,0,0]],\n"hpS":["9812.5","1","0","0",[2,1,-3,0,0,0,0,0]],\n"hr":["3600","1","0","0",[0,0,1,0,0,0,0,0]],\n"in":["0.0254","1","0","0",[1,0,0,0,0,0,0,0]],\n"in Hg":["3863.8","1","0","0",[-1,1,-2,0,0,0,0,0]],\n"inch":["0.0254","1","0","0",[1,0,0,0,0,0,0,0]],\n"inche":["0.0254","1","0","0",[1,0,0,0,0,0,0,0]],\n"jansky":["1e-26","1","0","0",[0,1,-2,0,0,0,0,0]],\n"jar":["1","900000000","0","0",[-2,-1,4,2,0,0,0,0]],\n"joule":["1","1","0","0",[2,1,-2,0,0,0,0,0]],\n"k":["4448.2216152605","1","0","0",[1,1,-2,0,0,0,0,0]],\n"kB":["8192","1","0","0",[0,0,0,0,0,1,0,0]],\n"kB":["8192","1","0","0",[0,0,0,0,0,1,0,0]],\n"kairi":["1852","1","0","0",[1,0,0,0,0,0,0,0]],\n"kanal":["505.8570528","1","0","0",[2,0,0,0,0,0,0,0]],\n"katal":["6.02214179e+23","1","0","siWord",[0,0,-1,0,0,1,0,0]],\n"kcal":["4186.8","1","0","0",[2,1,-2,0,0,0,0,0]],\n"kcmil":["5.06707479097497e-07","1","0","0",[2,0,0,0,0,0,0,0]],\n"keg":["0.058673882652","1","0","0",[3,0,0,0,0,0,0,0]],\n"kelvin":["1","1","0","0",[0,0,0,0,1,0,0,0]],\n"kgf":["9.80665","1","0","0",[1,1,-2,0,0,0,0,0]],\n"kilo":["1","1","0","0",[0,1,0,0,0,0,0,0]],\n"kilobyte":["8192","1","0","0",[0,0,0,0,0,1,0,0]],\n"kilogram":["1","1","0","0",[0,1,0,0,0,0,0,0]],\n"kilogramme":["1","1","0","0",[0,1,0,0,0,0,0,0]],\n"kilopond":["9.80665","1","0","0",[1,1,-2,0,0,0,0,0]],\n"kip":["4448.2216152605","1","0","0",[1,1,-2,0,0,0,0,0]],\n"klf":["4448.2216152605","0.3048","0","0",[0,1,-2,0,0,0,0,0]],\n"kn":["1852","3600","0","0",[1,0,-1,0,0,0,0,0]],\n"knot":["1852","3600","0","0",[1,0,-1,0,0,0,0,0]],\n"kp":["9.80665","1","0","0",[1,1,-2,0,0,0,0,0]],\n"kpf":["4448.2216152605","0.3048","0","0",[0,1,-2,0,0,0,0,0]],\n"kph":["1000/3600","1","0","0",[1,0,-1,0,0,0,0,0]],\n"kpph":["1000/3600","1","0","0",[-1,1,-3,0,0,0,0,0]],\n"ks":["735.49875","1","0","0",[2,1,-3,0,0,0,0,0]],\n"ksf":["47880.2589803358","1","0","0",[-1,1,-2,0,0,0,0,0]],\n"ksi":["6894757.29316836","1","0","0",[-1,1,-2,0,0,0,0,0]],\n"kwh":["3600000","1","0","0",[2,1,-2,0,0,0,0,0]],\n"l":["0.001","1","0","siSymbol",[3,0,0,0,0,0,0,0]],\n"lambert":["10000","3.14159265358979","0","0",[-2,0,0,0,0,0,1,0]],\n"lb":["0.45359237","1","0","0",[0,1,0,0,0,0,0,0]],\n"lbf":["4.4482216152605","1","0","0",[1,1,-2,0,0,0,0,0]],\n"lbm":["0.45359237","1","0","0",[0,1,0,0,0,0,0,0]],\n"league":["5556","1","0","0",[1,0,0,0,0,0,0,0]],\n"lf":["0.3048","1","0","0",[1,0,0,0,0,0,0,0]],\n"li":["500","1","0","0",[1,0,0,0,0,0,0,0]],\n"light year":["9460730472580800","1","0","0",[1,0,0,0,0,0,0,0]],\n"link":["0.201168","1","0","0",[1,0,0,0,0,0,0,0]],\n"liter":["0.001","1","0","siWord",[3,0,0,0,0,0,0,0]],\n"litre":["0.001","1","0","siWord",[3,0,0,0,0,0,0,0]],\n"lm":["1","1","0","siSymbol",[0,0,0,0,0,0,1,0]],\n"long ton":["1016.0469088","1","0","0",[0,1,0,0,0,0,0,0]],\n"lt":["1016.0469088","1","0","0",[0,1,0,0,0,0,0,0]],\n"ltpd":["0.0117598021851852","1","0","0",[0,1,-1,0,0,0,0,0]],\n"lumen":["1","1","0","siWord",[0,0,0,0,0,0,1,0]],\n"lunar day":["89416.32","1","0","0",[0,0,1,0,0,0,0,0]],\n"lunar month":["2551442.976","1","0","0",[0,0,1,0,0,0,0,0]],\n"lux":["1","1","0","siWord",[-2,0,0,0,0,0,1,0]],\n"lx":["1","1","0","siSymbol",[-2,0,0,0,0,0,1,0]],\n"m":["1","1","0","siSymbol",[1,0,0,0,0,0,0,0]],\n"mD":["9.869233e-16","1","0","0",[2,0,0,0,0,0,0,0]],\n"marathon":["42195","1","0","0",[1,0,0,0,0,0,0,0]],\n"marla":["25.29285264","1","0","0",[2,0,0,0,0,0,0,0]],\n"mas":["3.14159265358979","648000000","0","0",[0,0,0,0,0,0,0,0]],\n"maxwell":["0.00000001","1","0","siSymbol",[2,1,-2,-1,0,0,0,0]],\n"mb":["100","1","0","0",[-1,1,-2,0,0,0,0,0]],\n"megabyte":["8388608","1","0","0",[0,0,0,0,0,1,0,0]],\n"megaton TNT":["4184000000000000","1","0","0",[2,1,-2,0,0,0,0,0]],\n"megatons TNT":["4184000000000000","1","0","0",[2,1,-2,0,0,0,0,0]],\n"megohm":["1000000","1","0","0",[2,1,-3,-2,0,0,0,0]],\n"meter":["1","1","0","siWord",[1,0,0,0,0,0,0,0]],\n"metre":["1","1","0","siWord",[1,0,0,0,0,0,0,0]],\n"metric horsepower":["735.49875","1","0","0",[2,1,-3,0,0,0,0,0]],\n"metric ton":["1000","1","0","0",[0,1,0,0,0,0,0,0]],\n"mgd":["3785.411784","86400","0","0",[3,0,-1,0,0,0,0,0]],\n"mho":["1","1","0","0",[-2,-1,3,2,0,0,0,0]],\n"mi":["1609.344","1","0","0",[1,0,0,0,0,0,0,0]],\n"mil":["0.0000254","1","0","0",[1,0,0,0,0,0,0,0]],\n"mile":["1609.344","1","0","0",[1,0,0,0,0,0,0,0]],\n"min":["60","1","0","0",[0,0,1,0,0,0,0,0]],\n"minute":["60","1","0","0",[0,0,1,0,0,0,0,0]],\n"moa":["3.14159265358979","10800","0","0",[0,0,0,0,0,0,0,0]],\n"mol":["6.02214179e+23","1","0","0",[0,0,0,0,0,1,0,0]],\n"mole":["6.02214179e+23","1","0","0",[0,0,0,0,0,1,0,0]],\n"mpg":["1609.344","0.003785411784","0","0",[-2,0,0,0,0,0,0,0]],\n"mph":["0.44704","1","0","0",[1,0,-1,0,0,0,0,0]],\n"mt":["1000","1","0","0",[0,1,0,0,0,0,0,0]],\n"nautical mile":["1852","1","0","0",[1,0,0,0,0,0,0,0]],\n"newton":["1","1","0","0",[1,1,-2,0,0,0,0,0]],\n"nit":["1","1","0","0",[-2,0,0,0,0,0,1,0]],\n"ohm":["1","1","0","siWord",[2,1,-3,-2,0,0,0,0]],\n"ounce":["0.45359237","16","0","0",[0,1,0,0,0,0,0,0]],\n"oz":["0.45359237","16","0","0",[0,1,0,0,0,0,0,0]],\n"oz t":["0.0311034768","1","0","0",[0,1,0,0,0,0,0,0]],\n"parsec":["30856780000000000","1","0","0",[1,0,0,0,0,0,0,0]],\n"pc":["0.0254","6","0","0",[1,0,0,0,0,0,0,0]],\n"pcf":["4.4482216152605","0.028316846592","0","0",[-2,1,-2,0,0,0,0,0]],\n"pci":["4.4482216152605","0.000016387064","0","0",[-2,1,-2,0,0,0,0,0]],\n"pebibyte":["9007199254740990","1","0","0",[0,0,0,0,0,1,0,0]],\n"peck":["0.00880976754172","1","0","0",[3,0,0,0,0,0,0,0]],\n"perfect ream":["516","1","0","0",[0,0,0,0,0,1,0,0]],\n"person":["1","1","0","0",[0,0,0,0,0,1,0,0]],\n"petabyte":["9007199254740990","1","0","0",[0,0,0,0,0,1,0,0]],\n"pfd":["0.5","1","0","0",[0,1,0,0,0,0,0,0]],\n"pferdestärke":["735.49875","1","0","0",[2,1,-3,0,0,0,0,0]],\n"pfund":["0.5","1","0","0",[0,1,0,0,0,0,0,0]],\n"phot":["10000","1","0","0",[-2,0,0,0,0,0,1,0]],\n"pica":["0.0254","6","0","0",[1,0,0,0,0,0,0,0]],\n"pied du roi":["9000","27706","0","0",[1,0,0,0,0,0,0,0]],\n"pieze":["1000","1","0","0",[-1,1,-2,0,0,0,0,0]],\n"pint":["0.000473176473","1","0","0",[3,0,0,0,0,0,0,0]],\n"pk":["735.49875","1","0","0",[2,1,-3,0,0,0,0,0]],\n"platonic year":["814000000000","1","0","0",[0,0,1,0,0,0,0,0]],\n"plf":["4.4482216152605","0.3048","0","0",[0,1,-2,0,0,0,0,0]],\n"point":["0.0254","72","0","0",[1,0,0,0,0,0,0,0]],\n"poise":["0.1","1","0","siWord",[-1,1,-1,0,0,0,0,0]],\n"pound":["0.45359237","1","0","0",[0,1,0,0,0,0,0,0]],\n"poundal":["4.4482216152605","32.174","0","0",[1,1,-2,0,0,0,0,0]],\n"ppm":["0.000001","1","0","0",[0,0,0,0,0,0,0,0]],\n"ppmdv":["0.000001","1","0","0",[0,0,0,0,0,0,0,0]],\n"ppmv":["0.000001","1","0","0",[0,0,0,0,0,0,0,0]],\n"ppmw":["0.000001","1","0","0",[0,0,0,0,0,0,0,0]],\n"printer's point":["0.0003515","1","0","0",[1,0,0,0,0,0,0,0]],\n"printer's ream":["516","1","0","0",[0,0,0,0,0,1,0,0]],\n"ps":["735.49875","1","0","0",[2,1,-3,0,0,0,0,0]],\n"psf":["4.4482216152605","0.09290304","0","0",[-1,1,-2,0,0,0,0,0]],\n"psi":["4.4482216152605","0.00064516","0","0",[-1,1,-2,0,0,0,0,0]],\n"psia":["6894.75729316836","1","0","0",[-1,1,-2,0,0,0,0,0]],\n"psig":["6894.75729316836","1","14.6959","0",[-1,1,-2,0,0,0,0,0]],\n"px":["0.0254","96","0","0",[1,0,0,0,0,0,0,0]],\n"pz":["1000","1","0","0",[-1,1,-2,0,0,0,0,0]],\n"quart":["0.003785411784","4","0","0",[3,0,0,0,0,0,0,0]],\n"quire":["25","1","0","0",[0,0,0,0,0,1,0,0]],\n"rad":["1","1","0","0",[0,0,0,0,0,0,0,0]],\n"radian":["1","1","0","0",[0,0,0,0,0,0,0,0]],\n"rankin":["5","9","0","0",[0,0,0,0,1,0,0,0]],\n"rd":["0.01","1","0","siSymbol",[2,0,-2,0,0,0,0,0]],\n"real":["1","1","0","BRL",[0,0,0,0,0,0,0,1]],\n"ream":["500","1","0","0",[0,0,0,0,0,1,0,0]],\n"rem":["0.01","1","0","siSymbol",[2,0,-2,0,0,0,0,0]],\n"rev":["6.28318530717959","1","0","0",[0,0,0,0,0,0,0,0]],\n"rod":["5.0292","1","0","0",[1,0,0,0,0,0,0,0]],\n"roentgen":["0.000258","1","0","siWord",[0,-1,1,1,0,0,0,0]],\n"rpm":["6.28318530717959","3600","0","0",[0,0,-1,0,0,0,0,0]],\n"ruble":["1","1","0","RUB",[0,0,0,0,0,0,0,1]],\n"röntgen":["0.000258","1","0","siWord",[0,-1,1,1,0,0,0,0]],\n"s":["1","1","0","siSymbol",[0,0,1,0,0,0,0,0]],\n"saltspoon":["0.003785411784","3072","0","0",[3,0,0,0,0,0,0,0]],\n"scf":["0.028316846592","1","0","0",[3,0,0,0,0,0,0,0]],\n"scfd":["0.028316846592","86400","0","0",[3,0,-1,0,0,0,0,0]],\n"scfh":["0.028316846592","3600","0","0",[3,0,-1,0,0,0,0,0]],\n"scfm":["0.028316846592","60","0","0",[3,0,-1,0,0,0,0,0]],\n"sea mile":["1852","1","0","0",[1,0,0,0,0,0,0,0]],\n"sec":["1","1","0","0",[0,0,1,0,0,0,0,0]],\n"second":["1","1","0","0",[0,0,1,0,0,0,0,0]],\n"section":["2589988.110336","1","0","0",[2,0,0,0,0,0,0,0]],\n"sennight":["604800","1","0","0",[0,0,1,0,0,0,0,0]],\n"sheet":["1","1","0","0",[0,0,0,0,0,1,0,0]],\n"short ream":["480","1","0","0",[0,0,0,0,0,1,0,0]],\n"short ton":["907.18474","1","0","0",[0,1,0,0,0,0,0,0]],\n"siemen":["1","1","0","siWord",[-2,-1,3,2,0,0,0,0]],\n"sievert":["1","1","0","siWord",[2,0,-2,0,0,0,0,0]],\n"slinch":["175.126835246477","1","0","0",[0,1,0,0,0,0,0,0]],\n"slug":["14.5939029372064","1","0","0",[0,1,0,0,0,0,0,0]],\n"smoot":["1.7018","1","0","0",[0,1,0,0,0,0,0,0]],\n"span":["0.2286","1","0","0",[1,0,0,0,0,0,0,0]],\n"sphere":["12.5663706143592","1","0","0",[0,0,0,0,0,0,0,0]],\n"sq ft":["0.09290304","1","0","0",[2,0,0,0,0,0,0,0]],\n"sq in":["0.00064516","1","0","0",[2,0,0,0,0,0,0,0]],\n"sq km":["1000000","1","0","0",[2,0,0,0,0,0,0,0]],\n"sq mi":["2589988.110336","1","0","0",[2,0,0,0,0,0,0,0]],\n"sq yd":["0.83612736","1","0","0",[2,0,0,0,0,0,0,0]],\n"square degree":["0.000304617419786709","1","0","0",[0,0,0,0,0,0,0,0]],\n"square meter":["1","1","0","0",[2,0,0,0,0,0,0,0]],\n"square metre":["1","1","0","0",[2,0,0,0,0,0,0,0]],\n"square mi":["2589988.110336","1","0","0",[2,0,0,0,0,0,0,0]],\n"sr":["1","1","0","siSymbol",[0,0,0,0,0,0,0,0]],\n"ssp":["0.003785411784","3072","0","0",[3,0,0,0,0,0,0,0]],\n"standard volume":["22.414","1","0","0",[3,0,0,0,0,0,0,0]],\n"statampere":["0.00000000033356","1","0","0",[0,0,0,1,0,0,0,0]],\n"statcoulomb":["0.00000000033356","1","0","0",[0,0,1,1,0,0,0,0]],\n"statfarad":["0.0000000000011126","1","0","0",[-2,-1,4,2,0,0,0,0]],\n"stathenrie":["898760000000","1","0","0",[2,1,-2,-2,0,0,0,0]],\n"stathenry":["898760000000","1","0","0",[2,1,-2,-2,0,0,0,0]],\n"statohm":["898760000000","1","0","0",[2,1,-3,-2,0,0,0,0]],\n"statvolt":["299.79","1","0","0",[2,1,-3,-1,0,0,0,0]],\n"statwatt":["0.0000001","1","0","0",[2,1,-3,0,0,0,0,0]],\n"steam horsepower":["9812.5","1","0","0",[2,1,-3,0,0,0,0,0]],\n"steradian":["1","1","0","0",[0,0,0,0,0,0,0,0]],\n"stere":["1","1","0","0",[3,0,0,0,0,0,0,0]],\n"stoke":["0.0001","1","0","0",[2,0,-1,0,0,0,0,0]],\n"stone":["6.35029318","1","0","0",[0,1,0,0,0,0,0,0]],\n"stpd":["0.0104998233796296","1","0","0",[0,1,-1,0,0,0,0,0]],\n"stunde":["3600","1","0","0",[0,0,1,0,0,0,0,0]],\n"survey feet":["1200","3937","0","0",[1,0,0,0,0,0,0,0]],\n"survey foot":["1200","3937","0","0",[1,0,0,0,0,0,0,0]],\n"Sv":["1","1","0","siSymbol",[2,0,-2,0,0,0,0,0]],\n"sverdrup":["1000000","1","0","0",[3,0,-1,0,0,0,0,0]],\n"sym":["1","1","0","siSymbol",[0,0,0,0,0,1,0,0]],\n"tablespoon":["0.003785411784","256","0","0",[3,0,0,0,0,0,0,0]],\n"tbsp":["0.003785411784","256","0","0",[3,0,0,0,0,0,0,0]],\n"teaspoon":["0.003785411784","768","0","0",[3,0,0,0,0,0,0,0]],\n"tebibyte":["8796093022208","1","0","0",[0,0,0,0,0,1,0,0]],\n"terabyte":["8796093022208","1","0","0",[0,0,0,0,0,1,0,0]],\n"tesla":["1","1","0","siSymbol",[-2,-2,-2,-1,0,0,0,0]],\n"therm":["105480400","1","0","0",[2,1,-2,0,0,0,0,0]],\n"tidal day":["89416.32","1","0","0",[0,0,1,0,0,0,0,0]],\n"ton":["907.18474","1","0","0",[0,1,0,0,0,0,0,0]],\n"tonf":["8896.443230521","1","0","0",[1,1,-2,0,0,0,0,0]],\n"ton TNT":["4184000000","1","0","0",[2,1,-2,0,0,0,0,0]],\n"ton refrigeration":["3516.8532","1","0","0",[2,1,-3,0,0,0,0,0]],\n"tonne":["1000","1","0","0",[0,1,0,0,0,0,0,0]],\n"tons TNT":["4184000000","1","0","0",[2,1,-2,0,0,0,0,0]],\n"tons refrigeration":["3516.8532","1","0","0",[2,1,-3,0,0,0,0,0]],\n"township":["93239571.972096","1","0","0",[2,0,0,0,0,0,0,0]],\n"toz":["0.0311034768","1","0","0",[0,1,0,0,0,0,0,0]],\n"tpy":["0.0000287475400032297","1","0","0",[0,1,-1,0,0,0,0,0]],\n"tropical year":["31556925.9747","1","0","0",[0,0,1,0,0,0,0,0]],\n"troy ounce":["0.0311034768","1","0","0",[0,1,0,0,0,0,0,0]],\n"tsp":["0.003785411784","768","0","0",[3,0,0,0,0,0,0,0]],\n"twip":["0.0254","1440","0","0",[1,0,0,0,0,0,0,0]],\n"unit":["1","1","0","0",[0,0,0,0,0,1,0,0]],\n"vapeur":["735.49875","1","0","0",[2,1,-3,0,0,0,0,0]],\n"var":["1","1","0","siSymbol",[2,1,-3,0,0,0,0,0]],\n"varistor":["1","1","0","siWord",[2,1,-3,0,0,0,0,0]],\n"volt":["1","1","0","siWord",[2,1,-3,-1,0,0,0,0]],\n"watt":["1","1","0","siWord",[2,1,-3,0,0,0,0,0]],\n"weber":["1","1","0","siSymbol",[2,1,-2,-1,0,0,0,0]],\n"week":["604800","1","0","0",[0,0,1,0,0,0,0,0]],\n"won":["1","1","0","KRW",[0,0,0,0,0,0,0,1]],\n"wppm":["0.000001","1","0","0",[0,0,0,0,0,0,0,0]],\n"yard":["0.9144","1","0","0",[1,0,0,0,0,0,0,0]],\n"yd":["0.9144","1","0","0",[1,0,0,0,0,0,0,0]],\n"year":["31556952","1","0","0",[0,0,1,0,0,0,0,0]],\n"yen":["1","1","0","JPY",[0,0,0,0,0,0,0,1]],\n"£":["1","1","0","GBP",[0,0,0,0,0,0,0,1]],\n"¥":["1","1","0","JPY",[0,0,0,0,0,0,0,1]],\n"°":["3.14159265358979","180","0","0",[0,0,0,0,0,0,0,0]],\n"°C":["1","1","273.15","0",[0,0,0,0,1,0,0,0]],\n"°F":["5","9","459","0",[0,0,0,0,1,0,0,0]],\n"°K":["1","1","0","0",[0,0,0,0,1,0,0,0]],\n"°R":["5","9","0","0",[0,0,0,0,1,0,0,0]],\n"°R":["5","9","0","0",[0,0,0,0,1,0,0,0]],\n"Å":["0.0000000001","1","0","0",[1,0,0,0,0,0,0,0]],\n"Ω":["1","1","0","siSymbol",[2,1,-3,-2,0,0,0,0]],\n"”":["0.0254","1","0","0",[1,0,0,0,0,0,0,0]],\n"₨":["1","1","0","INR",[0,0,0,0,0,0,0,1]],\n"₪":["1","1","0","ILS",[0,0,0,0,0,0,0,1]],\n"€":["1","1","0","EUR",[0,0,0,0,0,0,0,1]],\n"℃":["1","1","273.15","0",[0,0,0,0,1,0,0,0]],\n"℉":["5","9","459","0",[0,0,0,0,1,0,0,0]],\n"Ω":["1","1","0","siSymbol",[2,1,-3,-2,0,0,0,0]],\n"K":["1","1","0","0",[0,0,0,0,1,0,0,0]],\n"Å":["0.0000000001","1","0","0",[1,0,0,0,0,0,0,0,0]]\n}`));const Ze=Object.freeze({$:"USD",US$:"USD",dollar:"USD",A$:"AUD","Australian dollar":"AUD","Brazilian Real":"BRL",real:"BRL",R$:"BRL","British Pound":"GBP","£":"GBP",C$:"CAD","Canadian dollar":"CAD","Chinese Yuan":"CNY","€":"EUR",Euro:"EUR",euro:"EUR",HK$:"HKD","Hong Kong dollar":"HKD","Indian Rupee":"IDR","₨":"IDR","Israeli New Shekel":"ILS","₪":"ILS","Mexican Peso":"MXN","Swiss Franc":"CHF",Won:"KRW",won:"KRW",yen:"JPY",Yen:"JPY","Japanese Yen":"JPY","¥":"JPY"});const Ke=(e,t,n)=>{const r=e.trim();const s=r.length;const a={name:r,factor:Se.one,gauge:Se.zero,log:"",expos:[0,0,0,0,0,0,0,0]};if(e===""){return a}let l="";let o;let i=false;let u="";let c=false;let p=false;for(let e=1;e<3;e++){if(e===1){i=true;l=r;if(s>2){if(l.charAt(l.length-1)==="s"){if(!(l==="cfs"||s===3&l.charAt(1)==="p")){l=l.slice(0,-1)}}}let e="";if(s>3){const t=/^(yotta|zetta|exa|peta|tera|giga|mega|kilo|hecto|deka|deci|centi|milli|micro|nano|pico|femto|atto|zepto|yocto)/.exec(l);if(t){e=t[0].value;i=true;l=l.slice(e.length)}}}else{i=false;u=l.charAt(0);if("YZEPTGMkhdcmnpfazyµμ".indexOf(u)>-1){i=true;l=l.substring(1)}}if(n&&Object.hasOwnProperty.call(n.value.columnMap,l)){const e=n.value.columnMap[l];const t=n.unit[n.value.units[e]];a.factor=Se.multiply(Se.fromString(n.value.data[e][0]),t.factor);a.expos=t.expos;return a}if(i){o=Xe[l];if(o){p=true}if(e===1&&p&&u===""){break}else if(p){if(e===1){p=o[3]==="siWord";c=true;break}else{p=o[3]==="siSymbol";c=true}}}}if(p){a.gauge=Se.fromString(o[2]);a.expos=Object.freeze(o[4]);if(a.expos[7]===1){const e=Ze[l]?Ze[l]:l;if(t&&t.value.has(e)){a.factor=Se.reciprocal(t.value.get(e))}else{const t=currencyRates[e];if(!t){return M("CURRENCY")}else{a.factor=Se.reciprocal(Se.fromString(t))}}}else{a.factor=Se.divide(Se.fromString(o[0]),Se.fromString(o[1]))}if(c){a.factor=Se.multiply(a.factor,Se.fromNumber(He[u]))}}else{return M("UNIT_NAME",r)}return Object.freeze(a)};const Qe=/[0-9·\-⁰¹²³\u2074-\u2079⁻/^()]/;const Je=/[0-9-]/;const et=(e,t)=>{if(!e){return{name:null,factor:null,gauge:null,log:"",expos:null}}const n=t.currencies;const r=t.units?t.units:null;let s=e.trim();s=s.replace(/[*.•×\-−](?![0-9.])/g,"·");const a={name:s,factor:Se.one,gauge:Se.zero,log:"",expos:T};if(s===""){return a}else if(s==="°"||s==="°ʹ"||s==="degMinSec"){a.factor=Se.fromString("0.0174532925199433");return a}else if(s==="feetInch"){a.unitExpos=[1,0,0,0,0,0,0,0];a.factor=Se.fromString("0.3048");return a}else if(s==="″"||s==="ʹʹ"){a.unitExpos=[1,0,0,0,0,0,0,0];a.factor=Se.fromString("0.0254");return a}const l=";";let o=false;let i="";let u="";let c="";let p="";const f=[];let d=0;const m=[{symbol:"",prec:-1}];let h="";for(let e=0;e<s.length;e++){i=s.charAt(e);if(Je.test(i)){if(!o){c+=l;p+=l;m.push({symbol:"^",prec:3});o=true}c+=i;p+=i}else if(N.test(i)){if(!o){c+=l;p+=l;m.push({symbol:"^",prec:3});o=true}const e=b(i);c+=e;p+=e}else if(i==="^"){c+=l;p+=l;m.push({symbol:"^",prec:3});o=true}else if(i==="·"||i==="/"){o=false;c+=l;p+=l;while(m[m.length-1].prec>=1){const e=m.pop().symbol;c+=e+l;p+=e+l}m.push({symbol:i,prec:1})}else if(i==="("){m.push({symbol:"(",prec:0})}else if(i===")"){while(m[m.length-1].prec>0){const e=m.pop().symbol;c+=e+l;p+=e+l}m.pop();o=false}else if(i==="-"){o=true;m.push({symbol:"^",prec:3});m.push({symbol:"-",prec:2});c+=l;p+=l}else{o=false;let t;for(t=e+1;t<s.length;t++){if(Qe.test(s.charAt(t))){break}}u=s.substring(e,t);h=Ke(u,n,r);if(h.dtype&&h.dtype===I.ERROR){return h}if(h.factor===0){a.name="";return a}c+=String(h.factor[0])+","+String(h.factor[1]);p+="¿"+d;f.push(h.expos);d+=1;e=t-1}}if(u===a.name){return Object.freeze(h)}while(m.length>1){const e=m.pop().symbol;c+=l+e;p+=l+e}const g=[];const y=[];const R=c.split(l);const A=p.split(l);let O=1;let v;d=0;for(let e=0;e<R.length;e++){if(/[·/\-^]/.test(R[e])){O=g.pop();v=y.pop()}switch(R[e]){case"·":g[g.length-1]=Se.multiply(g[g.length-1],O);y[y.length-1]=y[y.length-1].map(((e,t)=>e+v[t]));break;case"/":if(Se.isZero(O)){return M("DIV")}g[g.length-1]=Se.divide(g[g.length-1],O);y[y.length-1]=y[y.length-1].map(((e,t)=>e-v[t]));break;case"^":g[g.length-1]=Se.power(g[g.length-1],O);y[y.length-1]=y[y.length-1].map((e=>e*v));break;case"-":g[g.length-1]=Se.negate(g[g.length-1]);break;default:if(R[e].indexOf(",")>-1){const t=R[e].split(",");g.push([BigInt(t[0]),BigInt(t[1])])}else{g.push([BigInt(R[e]),BigInt(1)])}if(A[e].charAt(0)==="¿"){y.push(f[d]);d+=1}else{y.push(A[e])}}}a.factor=Object.freeze(g.pop());a.expos=Object.freeze(y.pop());return Object.freeze(a)};const tt=[Se.zero,Se.one];const nt=e=>Array.isArray(e)&&e.length===2&&Se.isRational(e[0])&&Se.isRational(e[1]);const rt=e=>e[0];const st=e=>e[1];const at=e=>Se.hypot(e[0],e[1]);const lt=e=>[Se.negate(e[0]),Se.negate(e[1])];const ot=e=>[e[0],Se.negate(e[1])];const it=e=>{if(Se.isZero(e[0])&&Se.isZero(e[1])){return M("ORIGIN","argument")}else if(Se.isZero(e[1])){return Se.isPositive(e[0])?Se.zero:Se.pi}else if(Se.isZero(e[0])){return Se.isPositive(e[1])?Se.divide(Se.pi,Se.two):Se.negate(Se.divide(Se.pi,Se.two))}else{return Se.fromNumber(Math.atan2(Se.toNumber(e[1]),Se.toNumber(e[0])))}};const ut=(e,t)=>[Se.add(e[0],t[0]),Se.add(e[1],t[1])];const ct=(e,t)=>[Se.subtract(e[0],t[0]),Se.subtract(e[1],t[1])];const pt=(e,t)=>[Se.subtract(Se.multiply(e[0],t[0]),Se.multiply(e[1],t[1])),Se.add(Se.multiply(e[0],t[1]),Se.multiply(e[1],t[0]))];const ft=(e,t)=>{if(!Se.isZero(e[1])&&!Se.isZero(t[1])){if(Se.lessThan(Se.abs(t[1]),Se.abs(t[0]))){const n=Se.divide(t[1],t[0]);const r=Se.add(t[0],Se.multiply(t[1],n));return[Se.divide(Se.add(e[0],Se.multiply(e[1],n)),r),Se.divide(Se.subtract(e[1],Se.multiply(e[0],n)),r)]}else{const n=Se.divide(t[0],t[1]);const r=Se.add(t[1],Se.multiply(t[0],n));return[Se.divide(Se.add(e[1],Se.multiply(e[0],n)),r),Se.divide(Se.add(Se.negate(e[0]),Se.multiply(e[1],n)),r)]}}else if(Se.isZero(e[1])){if(Se.lessThan(Se.abs(t[1]),Se.abs(t[0]))){const n=Se.divide(t[1],t[0]);const r=Se.add(t[0],Se.multiply(t[1],n));return[Se.divide(e[0],r),Se.negate(Se.multiply(e[0],Se.divide(n,r)))]}else{const n=Se.divide(t[0],t[1]);const r=Se.add(t[1],Se.multiply(t[0],n));return[Se.divide(Se.multiply(e[0],n),r),Se.negate(Se.divide(e[0],r))]}}else if(Se.isZero(t[1])){if(Se.isZero(t[0]));else{return[Se.divide(e[0],t[0]),Se.divide(e[1],t[0])]}}else{if(Se.isZero(t[0])){return M("DIV")}else{return[Se.divide(e[0],t[0]),Se.zero]}}};const dt=e=>[Se.increment(e[0]),e[1]];const mt=e=>[Se.decrement(e[0]),e[1]];const ht=e=>{if(Se.isZero(e[1])){if(Se.isZero(e[0])){return M("DIV")}return[Se.inverse(e[0]),0]}else{return ft([Se.one,Se.zero],e)}};const gt=e=>{const t=Se.multiply(Se.cos(e[0]),Se.cosh(e[1]));const n=Se.multiply(Se.negate(Se.sin(e[0])),Se.sinh(e[1]));return[t,n]};const yt=e=>{const t=Se.multiply(Se.sin(e[0]),Se.cosh(e[1]));const n=Se.multiply(Se.cos(e[0]),Se.sinh(e[1]));return[t,n]};const bt=e=>{let t=[Se.zero,Se.zero];if(Se.isZero(e[0])&&Se.isZero(e[1])){return M("ORIGIN","log")}else{t[0]=Se.fromNumber(Math.log(Se.toNumber(Se.hypot(e[0],e[1]))));t[1]=it(e)}return t};const Rt=e=>Se.lessThan(Se.abs(e),[BigInt(1),BigInt(1e14)]);const At=e=>{let t=[Se.zero,Se.zero];if(Rt(e[1])){t[1]=Se.zero;t[0]=Se.exp(e[0])}else{if(Se.isZero(e[0])){t[0]=Se.cos(e[1]);if(Rt(t[0])){t[0]=Se.zero}t[1]=Se.sin(e[1]);if(Rt(t[1])){t[1]=Se.zero}}else{const n=Se.exp(e[0]);t[0]=Se.multiply(n,Se.cos(e[1]));t[1]=Se.multiply(n,Se.sin(e[1]))}}return t};const Ot=(e,t)=>{let n=[Se.zero,Se.zero];if(!nt(t)){n=bt(e);n[0]=Se.multiply(n[0],t);n[1]=Se.multiply(n[1],t)}else if(Se.isZero(t[1])){n=bt(e);n[0]=Se.multiply(n[0],t[0]);n[1]=Se.multiply(n[1],t[0])}else if(Se.isZero(e[1])&&!Se.isNegative(e[0])){e[0]=Se.fromNumber(Math.log(Se.toNumber(e[0])));n[0]=Se.multiply(e[0],t[0]);n[1]=Se.multiply(e[0],t[1])}else{e=bt(e);n[0]=Se.subtract(Se.multiply(e[0],t[0]),Se.multiply(e[1],t[1]));n[1]=Se.add(Se.multiply(e[1],t[0]),Se.multiply(e[0],t[1]))}n=At(n);if(Rt(n[1])){n[1]=Se.zero}if(Rt(n[0])){n[0]=Se.zero}return n};const vt=e=>bt(ut(e,pt(xt(mt(e)),xt(dt(e)))));const Nt=e=>{const t=xt(ut(pt(e,e),[Se.one,Se.zero]));return bt(ut(e,t))};const Et=e=>ft(ct(bt(dt(e)),bt(ct([Se.one,Se.zero],e))),[Se.two,Se.zero]);const Tt=e=>ft(Nt(pt(tt,e)),tt);const It=e=>{const t=bt(dt(pt(tt,e)));const n=bt(ct([Se.one,Se.zero],pt(tt,e)));return ft(ct(t,n),[Se.zero,Se.two])};const xt=e=>{const t=bt(e);t[0]=Se.divide(t[0],Se.two);t[1]=Se.divide(t[1],Se.two);return At(t)};const Mt=t=>{const n=ct(t,[Se.one,Se.zero]);const r=Se.sqrt(Se.divide(e,pi));const s=pt([Se.two,Se.zero],[r,Se.zero]);const a=Se.fromNumber(11.400511);const l=[[BigInt(1),BigInt(2)],Se.zero];const o=Ot(ft(ut(n,[a,Se.zero]),[e,Se.zero]),ut(n,l));const i=["2.48574089138753565546e-5","1.05142378581721974210","-3.45687097222016235469","4.51227709466894823700","-2.98285225323576655721","1.05639711577126713077","-0.195428773191645869583","0.0170970543404441224307","-0.000571926117404305781283","0.00000463399473359905636708","-0.00000000271994908488607703910"];let u=[Se.fromString(i[0]),Se.zero];for(let e=1;e<=10;e++){const t=[Se.fromString(t[e]),Se.zero];const r=[Se.fromNumber(e),Se.zero];u=ut(u,ft(t,ut(n,r)))}return pt(pt(s,o),u)};const Ct=(e,t,n)=>{const r=/[j∠°]/.test(t)?t.slice(-1):"j";let s="";let a="";if(r==="j"){const r=We(e[0],t,n);let l=We(e[1],t,n);if(l.charAt(0)==="-"){l="("+l+")"}s=r+" + j"+l;a=r+" + j"+l}else{const l=Se.hypot(e[0],e[1]);let o=Lt.argument(result.value);if(r==="°"){o=Se.divide(Se.multiply(o,Se.fromNumber(180)),Se.pi)}s=We(l,t,n)+"∠"+We(o,t,n)+(r==="°"?"°":"");a=s}return[s,a]};const Lt=Object.freeze({j:tt,re:rt,im:st,abs:at,conjugate:ot,argument:it,inverse:ht,increment:dt,decrement:mt,isComplex:nt,add:ut,subtract:ct,divide:ft,multiply:pt,negate:lt,power:Ot,exp:At,log:bt,sqrt:xt,sin:yt,cos:gt,asin:Tt,atan:It,acosh:vt,asinh:Nt,atanh:Et,lanczos:Mt,display:Ct});const Ut=e=>e.dtype&I.ROWVECTOR||e.dtype&I.COLUMNVECTOR||e.dtype&I.MATRIX;const St=e=>(e.dtype&I.ROWVECTOR||e.dtype&I.COLUMNVECTOR)>0;const wt=(e,t,n)=>{let r=St(e)?e.value.map((e=>Se.divide(e,n))):e.value.map((e=>e.map((e=>Se.divide(e,n)))));if(!Se.isZero(t)){r=St(e)?e.value.map((e=>Se.subtract(e,t))):e.value.map((e=>e.map((e=>Se.subtract(e,t)))))}return Object.freeze(r)};const Dt=(e,t,n)=>{let r=m(e.value);if(!Se.isZero(t)){r=St(e)?e.value.map((e=>Se.add(e,t))):e.value.map((e=>e.map((e=>Se.add(e,t)))))}r=St(e)?r.map((e=>Se.multiply(e,n))):r.map((e=>e.map((e=>Se.multiply(e,n)))));return Object.freeze(r)};const Bt=(e,t,n)=>{let r="\\begin";if(e.dtype&I.MATRIX){r+="{pmatrix}";const s=e.value.length;const a=e.value[1].length;for(let l=0;l<s;l++){for(let s=0;s<a;s++){r+=We(e.value[l][s],t,n)+" &"}r=r.slice(0,-1)+" \\\\ "}r=r.slice(0,-3).trim();r+="\\end{pmatrix}"}else{r+="{bmatrix}";const s=e.dtype&I.ROWVECTOR?" & ":" \\\\ ";if(e.value.plain){const a=e.value.plain.length;for(let l=0;l<a;l++){r+=We(e.value.plain[l],t,n)+(l<a-1?s:"")}}else{const a=e.value.length;for(let l=0;l<a;l++){const o=e.value[l]===undefined?"":e.dtype&I.RATIONAL?We(e.value[l],t,n):e.dtype&I.COMPLEX?Lt.display(e.value[l],t,n)[0]:e.dtype&I.BOOLEAN||e.dtype&I.STRING?"\\text{"+e.value[l]+"}":e.value[l];r+=o+(l<a-1?s:"")}}r+="\\end{bmatrix}"}return r};const _t=(e,t,n)=>{let r="";if(e.dtype&I.MATRIX){r+="(";const s=e.value.length;const a=e.value[1].length;for(let l=0;l<s;l++){for(let s=0;s<a;s++){r+=We(e.value[l][s],t,n).replace(/{,}/g,",")+", "}r=r.slice(0,-2)+"; "}r=r.slice(0,-2).trim();r+=")"}else{r+="[";const s=e.dtype&I.ROWVECTOR?", ":"; ";if(e.value.plain){const a=e.value.plain.length;for(let l=0;l<a;l++){r+=We(e.value.plain[l],t,n).replace(/{,}/g,",")+(l<a-1?s:"")}}else{const a=e.value.length;for(let l=0;l<a;l++){const o=e.value[l]===undefined?"":e.dtype&I.RATIONAL?We(e.value[l],t,n).replace(/{,}/g,","):e.dtype&I.COMPLEX?Lt.display(e.value[l],t,n)[1].replace(/{,}/g,","):e.value[l];r+=o+(l<a-1?s:"")}}r+="]"}return r};const Pt=(e,t,n)=>{let r="\\begin{Bmatrix}";Object.keys(e).forEach((s=>{const a=e[s];r+="\\text{"+s+"}: \\begin{bmatrix}";const l=a.plain.length;if(a.plain){for(let e=0;e<l;e++){r+=We(a.plain[e],t,n)+(e<l-1?", ":"")}}else{for(let e=0;e<l;e++){const s=Se.isRational(a[e])?We(a[e],t,n):typeof a[e]==="boolean"||typeof a[e]==="string"?"\\text{"+a[e]+"}":a[e];r+=s+(e<l-1?" & ":"")}}r+="\\end{bmatrix} \\\\"}));r=r.slice(0,-2)+"\\end{Bmatrix}";return r};const kt=(e,t,n)=>{let r="{";Object.keys(e).forEach((s=>{const a=e[s];r+=s+": [";const l=a.plain.length;if(a.plain){for(let e=0;e<l;e++){r+=We(a.plain[e],t,n)+(e<l-1?", ":"").replace(/{,}/g,",")+" "}}else{for(let e=0;e<l;e++){const s=Se.isRational(a[e])?We(a[e],t,n).replace(/{,}/g,",")+" ":String(a[e])+"}";r+=s+(e<l-1?" ":"")}}r+="];"}));return r.slice(0,-1)+"}"};const zt=(e,t)=>{const n=Se.isRational(e)?Se.toNumber(e):e;if(n===1){return[Se.one]}else{const e=[];for(let t=0;t<n;t++){e.push(new Array(n).fill(Se.zero));e[t][t]=Se.one}return t?e:Object.freeze(e)}};const jt=(e,t)=>{if(e.length!==e[0].length){return M("NONSQUARE")}const n=e.length;let r=0;let s=0;let a=0;let l=Se.zero;let o=Se.one;const i=m(e);const u=zt(n,true);for(r=0;r<n;r+=1){l=i[r][r];if(Se.isZero(l)){for(s=r+1;s<n;s++){if(!Se.isZero(i[s][r])){for(a=0;a<n;a++){l=i[r][a];i[r][a]=i[s][a];i[s][a]=l;l=u[r][a];u[r][a]=u[s][a];u[s][a]=l}break}}l=i[r][r];if(Se.isZero(l)){return M("SINGULAR")}}if(t){o=Se.divide(o,l);if(r===n-1){return o}}for(a=0;a<n;a++){i[r][a]=Se.divide(i[r][a],l);u[r][a]=Se.divide(u[r][a],l)}for(s=0;s<n;s++){if(s===r){continue}l=i[s][r];for(a=0;a<n;a++){i[s][a]=Se.subtract(i[s][a],Se.multiply(l,i[r][a]));u[s][a]=Se.subtract(u[s][a],Se.multiply(l,u[r][a]))}}}return Object.freeze(u)};const Vt=(e,t,n)=>{if(!(t.dtype&I.RATIONAL||t.dtype&I.RANGE)){return M("BAD_INDEX")}let r=[];let s=e.dtype;let a=0;let l=1;let o=0;if(t.dtype&I.RANGE){a=Se.toNumber(t.value[0]);l=Se.toNumber(t.value[1]);o=t.value[2]==="∞"?e.value.length:Se.toNumber(t.value[2])}else if(Se.areEqual(t.value,Se.zero)){a=1;o=e.value.length}else{a=Se.toNumber(t.value);o=a}if(St(e)){if(a===o){r=e.value[a-1];s=e.dtype-(e.dtype&I.ROWVECTOR)-(e.dtype&I.COLUMNVECTOR)}else if(l===1){r=e.value.slice(a-1,o)}else{for(let t=a-1;t<o;t+=l){r.push(e.value[t])}}Object.freeze(r);return Object.freeze({value:r,unit:e.unit,dtype:s})}let i=0;let u=1;let c=0;if(n){if(n.dtype&I.RANGE){i=Se.toNumber(n.value[0]);u=Se.toNumber(n.value[1]);c=n.value[2]==="∞"?e.value[0].length:Se.toNumber(n.value[2])}else if(Se.areEqual(n.value,Se.zero)){i=1;c=e.value[0].length}else{i=Se.toNumber(n.value);c=i}}if(a===o&&i===c){r=e.value[a-1][i-1];s-=I.MATRIX}else if(a===o){if(u===1){r=e.value[a-1].slice(i-1,c)}else{for(let t=i-1;t<c;t+=u){r.push(e.value[a-1][t])}}s=s-I.MATRIX+I.ROWVECTOR}else if(i===c){for(let t=a-1;t<o;t+=l){r.push(e.value[t][i-1])}s=s-I.MATRIX+I.COLUMNVECTOR}else if(u===1){for(let t=a-1;t<o;t+=l){r.push([]);r[r.length-1]=e.value[t].slice(i-1,c)}}else{for(let t=a-1;t<o;t+=l){r.push([]);for(let n=i-1;n<c;n+=u){r[r.length-1].push(e[t][n])}}}Object.freeze(r);return Object.freeze({value:r,unit:e.unit,dtype:s})};const Ft=(e,t)=>{if(e.dtype&I.ROWVECTOR&&t.dtype&I.COLUMNVECTOR){return I.RATIONAL}else if(e.dtype&I.MATRIX&&t.dtype&I.COLUMNVECTOR){return t.dtype}else if(e.dtype&I.ROWVECTOR&&t.dtype&I.MATRIX){return e.dtype}else{return I.MATRIX+I.RATIONAL}};const qt=e=>{const t=[];if(Se.greaterThan(e[2],e[0])){for(let n=e[0];Se.lessThan(n,e[2]);n=Se.add(n,e[1])){t.push(n)}}else{for(let n=e[0];Se.greaterThanOrEqualTo(n,e[2]);n=Se.add(n,e[1])){t.push(n)}}if(!Se.areEqual(t[t.length-1],e[2])){t.push(e[2])}Object.freeze(t);return Object.freeze({value:t,unit:{expos:T},dtype:I.RATIONAL+I.ROWVECTOR})};const Gt=(e,t,n)=>{if(t===0&&n===0){return Object.freeze({value:new Array(0),unit:null,dtype:I.ROWVECTOR})}else if(t===1&&n===1){return e.pop()}else if(t===1||n===1){const r=Math.max(t,n);const s=new Array(r);let a=e[e.length-1].dtype;a+=t===1?I.ROWVECTOR:I.COLUMNVECTOR;for(let t=r-1;t>=0;t--){s[t]=e.pop().value}Object.freeze(s);return Object.freeze({value:s,unit:a&I.RATIONAL?{expos:T}:null,dtype:a})}else{const r=new Array(t);const s=e[e.length-1].dtype+I.MATRIX;for(let e=0;e<t;e++){r[e]=new Array(n)}for(let s=t-1;s>=0;s--){for(let t=n-1;t>=0;t--){r[s][t]=e.pop().value}}Object.freeze(r);return Object.freeze({value:r,unit:s&I.RATIONAL?{expos:T}:null,dtype:s})}};const Yt=(e,t)=>{if(e===1){return{value:new Array(t).fill(Se.zero),unit:T,dtype:I.RATIONAL+I.ROWVECTOR}}else if(t===1){return{value:new Array(e).fill(Se.zero),unit:T,dtype:I.RATIONAL+I.COLUMNVECTOR}}else{const n=[];for(let r=0;r<e;r++){n.push(new Array(t).fill(Se.zero))}Object.freeze(n);return Object.freeze({value:n,unit:{expos:T},dtype:I.RATIONAL+I.MATRIX})}};const Wt=Object.freeze({convertFromBaseUnits:wt,convertToBaseUnits:Dt,display:Bt,displayAlt:_t,displayMapOfVectors:Pt,displayAltMapOfVectors:kt,identity:zt,invert:jt,isVector:St,multResultType:Ft,operandFromRange:qt,operandFromTokenStack:Gt,submatrix:Vt,zeros:Yt});const $t=(e,t)=>{const n=[];for(let r=e;r<=t;r++){n.push(r)}return n};const Ht=e=>e==="true"?true:e==="false"?false:Kt.test(e)?Se.fromString(e):e===""?undefined:e;const Xt=(e,t)=>e===true?"true":e===false?"false":e=t===I.RATIONAL?"0 "+String(e[0])+"/"+String(e[1]):e;const Zt=(e,t,n,r)=>{let s;let a;const l=[];let o=[];let i=Object.create(null);if(e.value.data[0].length===1){s=0;a=0;for(let n=0;n<t.length;n++){if(t[n].dtype===I.STRING){o.push(e.value.columnMap[t[n].value])}else if(t[n].dtype===I.RATIONAL){o.push(Se.toNumber(t[n].value))}else if(t[n].dtype===I.RANGE){const e=Se.toNumber(t[n].value[0]);const r=Se.toNumber(t[n].value[1]);for(let t=e;t<=r;t++){o.push(t)}}}}else if(t.length===1&&t[0].dtype===I.RATIONAL){s=Se.toNumber(t[0].value)-1;a=s;o=$t(0,e.value.data.length-1)}else if(t.length===1&&t[0].dtype===I.RANGE){s=Se.toNumber(t[0].value[0])-1;a=Se.toNumber(t[0].value[1])-1;o=$t(0,e.value.data.length-1)}else if(t.length===1&&t[0].dtype===I.STRING){if(e.value.rowMap&&t[0].value in e.value.rowMap){s=e.value.rowMap[t[0].value];a=s;o=$t(0,e.value.data.length-1)}else if(e.value.columnMap&&t[0].value in e.value.columnMap){s=0;a=e.value.data[0].length-1;o.push(e.value.columnMap[t[0].value])}else{return M("BAD_ROW_NAME",t[0].value)}}else if(t.length===1&&t[0].dtype===I.STRING+I.COLUMNVECTOR){for(const e of t[0].value){l.push(e)}o=$t(0,e.value.data.length-1)}else if(t.length===1&&t[0].dtype===I.STRING+I.ROWVECTOR){s=0;a=e.value.data[0].length;for(const n of t[0].value){o.push(e.columnIndicator[n])}}else if(t.length===2&&t[0].dtype===I.STRING&&e.value.rowMap&&t[0].value in e.value.rowMap&&t[1].dtype===I.STRING&&e.value.columnMap&&t[0].value in e.value.columnMap){s=e.value.rowMap[t[0].value];a=s;o.push(e.value.columnMap[t[0].value])}if(l.length===0&&s===a&&o.length===1){let t=e.value.dtype[o[0]];if(t&I.QUANTITY){t-=I.QUANTITY}const a=o[0];let l=Ht(e.value.data[a][s]);i.expos=t&I.RATIONAL?T:null;if(r&&e.value.units[a]){const t=e.value.units[a]?e.value.units[a]:undefined;const r=et(t,n);l=Se.multiply(Se.add(l,r.gauge),r.factor);i.expos=r.expos}return{value:l,unit:i,dtype:t}}else if(o.length===1){const t=o[0];const n=e.value.units[t]?e.value.units[t]:{};i=e.unit&&e.unit[n]?e.unit[n]:{expos:null};const l=e.value.data[t].slice(s,a+1).map((e=>Ht(e)));const u=e.value.dtype[t]+I.COLUMNVECTOR;const c={value:l,name:e.value.headings[t],unit:i,dtype:u};if(r&&i.gauge){return{value:Wt.convertToBaseUnits(c,i.gauge,i.factor),name:e.value.headings[t],unit:{expos:m(i.expos)},dtype:I.RATIONAL+I.COLUMNVECTOR}}else{return c}}else{const t=[];const n=[];const r=[];const i=[];const u=Object.create(null);const c=Object.create(null);const p=l.length===0?false:Object.create(null);for(let f=0;f<o.length;f++){t.push(e.value.headings[o[f]]);const d=e.value.units[o[f]];n.push(d);if(d&&!c[d]){c[d]=e.unit[d]}r.push(e.value.dtype[o[f]]);u[e.value.headings[f]]=f;if(l.length>0){const t=[];for(let n=0;n<l.length;n++){const r=l[n];t.push(e.value.data[o[f]][e.value.rowMap[r]]);p[r]=n}i.push(t)}else{i.push(e.value.data[o[f]].slice(s,a+1))}}return{value:{data:i,headings:t,columnMap:u,rowMap:false,units:n,dtype:r},unit:m(c),dtype:I.DATAFRAME}}};const Kt=new RegExp("^(?:=|"+Se.numberPattern.slice(1)+"$)");const Qt=/^-?(?:[0-9]+(?: [0-9]+\/[0-9]+))$/;const Jt=(e,t)=>{const n=[];const r=[];const s=Object.create(null);let a=false;const l=[];const o=[];const i=Object.create(null);let u=false;const c=e.indexOf("\t")>-1?"\t":"|";if(e.charAt(0)==="`"){e=e.slice(1)}let p=0;let f=0;const d=e=>{let r=false;for(let e=0;e<n.length;e++){if(Kt.test(n[e][0])){r=true;break}}if(!r){for(let e=0;e<n.length;e++){if(Kt.test(n[e][1])){u=true;break}}}if(u){for(let e=0;e<n.length;e++){const r=n[e].shift();l.push(r);if(r.length>0){if(!i[r]){const e=et(r,t);if(e){i[r]=e}else{return M("DF_UNIT",r)}}}}if(a){Object.entries(a).forEach((([e,t])=>{a[e]=t-1}))}}};const m=e=>{e=e.trim();if(p===3&&f===0){d()}if(p===0){r.push(e);s[e]=f;if(f===0&&(e.length===0||e==="name"||e==="label")){a=Object.create(null)}}else{if(p===1){n.push([])}n[f].push(e);if(a&&f===0){a[e]=p-1-(u?1:0)}}};if(e.indexOf('"')===-1){const t=e.split(/\r?\n/g);for(const e of t){if(e.length>0){f=0;const t=e.split(c);for(const e of t){m(e.trim());f++}p+=1}}if(p===3){d()}}else{let t="";let n=false;for(let r=0;r<e.length;r++){const s=e[r];const a=e[r+1];if(s==='"'&&n&&a==='"'){t+=s;++r;continue}if(s==='"'){n=!n;continue}if(s===c&&!n){m(t);t="";++f;continue}if(s==="\r"&&a==="\n"&&!n){m(t);t="";++p;f=0;++r;continue}if(s==="\n"&&!n){m(t);t="";++p;f=0;++r;continue}if(s==="\r"&&!n){m(t);t="";++p;f=0;++r;continue}t+=s}if(t.length>0){m(t)}if(p===2){d()}}for(let e=0;e<n.length;e++){for(let t=0;t<n[0].length;t++){const r=n[e][t];if(r===""){continue}o.push(Kt.test(r)?I.RATIONAL+(l.length>0&&l[e].length>0?I.QUANTITY:0):r==="true"||r==="false"?I.BOOLEAN:I.STRING);break}}let h=false;if(n[0].length===1&&Object.keys(i).length===0){h=true;for(let e=1;e<o.length;e++){if(o[e]!==o[0]){h=false;break}}}if(h){const e=new Map;const t=Object.keys(s);for(let r=0;r<t.length;r++){e.set(t[r],Ht(n[r][0]))}return{value:e,unit:o[0]===I.RATIONAL?T:null,dtype:I.MAP+o[0]}}else{return{value:{data:n,headings:r,columnMap:s,rowMap:a,units:l,dtype:o},unit:i,dtype:I.DATAFRAME}}};const en=(e,t)=>{const n=[];const r=[];const s=Object.create(null);const a=[];const l=[];const o=Object.create(null);const i=e[0].name&&e[0].name==="name"?Object.create(null):false;for(let u=0;u<e.length;u++){const c=e[u];const p=c.dtype&I.ROWVECTOR?I.ROWVECTOR:c.dtype&I.COLUMNVECTOR?I.COLUMNVECTOR:I.ERROR;if(p===I.ERROR){return M("NOT_VECTOR")}r.push(c.name);s[c.name]=u;const f=c.dtype-p;n.push(c.value.map((e=>Xt(e,f))));l.push(f);if(c.unit.name){a.push(c.unit.name);if(!o[c.unit.name]){const e=et(c.unit.name,t);o[c.unit.name]=e}}else{a.push(null)}if(i){const t=e[0].value;for(let e=0;e<t.length;e++){i[t[e]]=e}}}return{value:{data:n,headings:r,columnMap:s,rowMap:i,units:a,dtype:l},unit:o,dtype:I.DATAFRAME}};const tn=(e,t,n,r)=>{const s=[];for(let t=0;t<=e.value[0].length;t++){s.push([])}const a=n.value;a.unshift("");const l=Object.create(null);for(let e=1;e<n.value[0].length;e++){l[a[e]]=e}const o=I.RATIONAL+(e.unit?I.QUANTITY:0);const i=Array(e.value[0].length).fill(o);i.unshift(null);let u=[];const c=Object.create(null);if(e.unit.name){u=Array(e.value[0].length).fill(e.unit.name);u.unshift("");c[e.unit.name]=et(e.unit.name,r)}const p=Object.create(null);s[0]=t.value;const f=r.format?r.format.value:"h15";for(let e=0;e<t.value.length;e++){p[s[0][e]]=e}for(let t=0;t<e.value.length;t++){for(let n=0;n<e.value[0].length;n++){const r=e.value[t][n];s[n+1].push(We(r,f,"1000000."))}}return{value:{data:s,headings:a,columnMap:l,rowMap:p,units:u,dtype:i},unit:c,dtype:I.DATAFRAME}};const nn=(e,t,n,r)=>{const s=m(e);const a=e.value.data[0].length;if(a!==t.value.length){return M("BAD_CONCAT")}s.value.headings.push(t.name);s.value.columnMap[t.name]=e.value.headings.length-1;const l=t.dtype&I.COLUMNVECTOR?t.dtype-I.COLUMNVECTOR:t.dtype-I.ROWVECTOR;if(t.unit.name&&t.unit.name.length>0){s.value.units.push(t.unit.name);const e=et(t.unit.name,n);if(!s.unit[t.unit.name]){s.unit[t.unit.name]=e}if(r){const n=Wt.convertFromBaseUnits(t,e.gauge,e.factor);s.value.data.push(n.map((e=>Xt(e,l))))}else{s.value.data.push(t.value.map((e=>Xt(e,l))))}}else{s.value.units.push(null)}s.value.dtype.push(l);return s};const rn=e=>{if(e===""){return""}e=y(e.trim());const t=e.indexOf("\t")>-1?/ *\t */g:/ *\| */g;const n=e.split(/\r?\n/g);let r="";if(n.length<3){r="\\begin{matrix}\\text{";for(let e=0;e<n.length;e++){r+=O(n[e]).replace(t,"} & \\text{")+"} \\\\ \\text{"}r=r.slice(0,-10)+"\\end{matrix}"}else{r="\\begin{array}{l|cccccccccccccccccccccccc}\\text{";const e=new Array(n.length);for(let r=0;r<n.length;r++){e[r]=O(n[r]).split(t)}let s=false;let a=false;for(let t=0;t<e[1].length;t++){if(Kt.test(e[1][t])){a=true;break}}if(!a){for(let t=0;t<e[2].length;t++){if(Kt.test(e[2][t])){s=true;break}}}for(let e=0;e<n.length;e++){r+=O(n[e]).replace(t,"} & \\text{");r+=s&&e===1||!s&&e===0?"} \\\\ \\hline \\text{":"} \\\\ \\text{"}r=r.slice(0,-10)+"\\end{array}"}r=r.replace(/·/g,"$·$");return r};const sn=/^(?:[A-Za-zıȷ\u0391-\u03C9\u03D5\u210B\u210F\u2110\u2112\u2113\u211B\u212C\u2130\u2131\u2133]|(?:\uD835[\uDC00-\udc33\udc9c-\udcb5]))[A-Za-z0-9_\u0391-\u03C9\u03D5\u0300-\u0308\u030A\u030C\u0332\u20d0\u20d1\u20d6\u20d7\u20e1]*′*$/;const an=/^([^\u0300-\u0308\u030A\u030C\u0332\u20d0\u20d1\u20d6\u20d7\u20e1]+)([\u0300-\u0308\u030A\u030C\u0332\u20d0\u20d1\u20d6\u20d7\u20e1])(.+)?/;const ln=/([^_]+)(_[^']+)?(.*)?/;const on=Object.freeze({"̀":"\\grave","́":"\\acute","̂":"\\hat","̃":"\\tilde","̄":"\\bar","̅":"\\bar","̇":"\\dot","̈":"\\ddot","̊":"\\mathring","̌":"\\check","̲":"\\underline","⃐":"\\overleftharpoon","⃑":"\\overrightharpoon","⃖":"\\overleftarrow","⃗":"\\vec","⃡":"\\overleftrightarrow"});const un=e=>{if(!sn.test(e)){return"\\text{"+y(e)+"}"}else{e=e.replace(/′/g,"'");let t=e.match(an);if(t){e=on[t[2]]+"{"+t[1]+"}";return e+(t[3]?t[3]:"")}else{t=e.match(ln);let n=t[1].length>1?`\\text{${t[1]}}`:t[1];if(t[2]){n+="_"+`\\text{${t[2].slice(1)}}`}return n+(t[3]?t[3]:"")}}};const cn=e=>{for(let t=0;t<e.length;t++){if(e[t]!==""&&e[t]!==null){return true}}return false};const pn=e=>{const t=e.data.length;const n=new Array(t);const r=new Array(t);for(let s=0;s<t;s++){if(e.dtype[s]&I.RATIONAL){n[s]={hasAlignChar:false,maxLenAfterAlignChar:0};r[s]=[];for(let t=0;t<e.data[0].length;t++){const a=e.data[s][t];const l=a.indexOf(".");const o=l>-1;const i=o?a.length-l-1:0;r[s].push({hasAlignChar:o,lenAfterAlignChar:i});if(o){n[s].hasAlignChar=true;if(i>n[s].maxLenAfterAlignChar){n[s].maxLenAfterAlignChar=i}}}}}return[n,r]};const fn=(e,t,n,r)=>{let s=Ge(e,r);const a=t.maxLenAfterAlignChar-n.lenAfterAlignChar;if(t.hasAlignChar&&(a>0||!n.hasAlignChar)){s+="\\phantom{";if(t.hasAlignChar&&!n.hasAlignChar){s+=r.slice(-1)==="."?".":"{,}"}if(a>0){s+="0".repeat(a)}s+="}"}return s};const dn=(e,t="h3",n="1,000,000.",r=false)=>{if(e.data.length===0){return""}const s=e.data[0].length;const a=e.data.length;const l=s>5&&!e.rowMap;const o=a+(l?1:0);let i="\\begin{array}{";i+=e.rowMap?"l|":l?"r|":"";for(let t=1;t<o;t++){i+=e.dtype[t]&I.RATIONAL?"r ":"l "}i=i.slice(0,-1)+"}";if(!r){if(l){i+="&"}for(let t=0;t<a;t++){i+="{"+un(e.headings[t])+"}&"}i=i.slice(0,-1)+" \\\\ "}if(cn(e.units)){if(l){i+="&"}for(let t=0;t<a;t++){let n="";if(e.units[t]&&e.units[t].length>0){const r=E(e.units[t]);n=r.replace("\\;\\, ","")}else{n=""}i+=n+"&"}i=i.slice(0,-1)+" \\\\ "}i+="\\hline ";const[u,c]=pn(e);for(let r=0;r<s;r++){if(l){i+=String(r+1)+" & "}for(let s=0;s<a;s++){const a=e.data[s][r];i+=Qt.test(a)?We(Se.fromString(a),t,n)+"&":Kt.test(a)?fn(a,u[s],c[s][r],n)+"&":a===""?"&":"\\text{"+y(a)+"}&"}i=i.slice(0,-1)+" \\\\ "}i=i.slice(0,-3).trim();i+="\\end{array}";return i};const mn=(e,t="h3",n=false)=>{if(e.data.length===0){return""}const r=e.data[0].length;const s=e.data.length;const a=r>5&&!e.rowMap;let l="``";if(!n){if(a){l+="|"}l+=(e.headings[0]==="name"?"":e.headings[0])+"|";for(let t=1;t<s;t++){l+=e.headings[t]+"|"}l=l.slice(0,-1)+"\n"}if(cn(e.units)){if(a){l+="|"}for(let t=0;t<s;t++){l+=e.units[t]+"|"}l=l.slice(0,-1)+"\n"}for(let n=0;n<r;n++){if(a){l+=String(n+1)+"|"}for(let r=0;r<s;r++){const s=e.data[r][n];if(Qt.test(s)){l+=We(Se.fromString(s),t,"100000.")+"|"}else{l+=s+"|"}}l=l.slice(0,-1)+"\n"}l=l.slice(0,-1).trim();l+="``";return l};const hn=Object.freeze({append:nn,dataFrameFromCSV:Jt,dataFrameFromVectors:en,matrix2table:tn,display:dn,displayAlt:mn,quickDisplay:rn,range:Zt});const gn=(e,t)=>{let n;let r;if(e.expos&&t.expos){n=e.expos;r=t.expos}else{n=e;r=t}if(Array.isArray(n)){if(Array.isArray(r)){if(n.length!==r.length){return false}n.forEach(((e,t)=>{if(e!==r[t]){return false}}));return true}else{return false}}else{return n===r}};const yn=(e,t,n,r)=>{let s;let a;if(e.dtype&I.MAP){if(r!=="scalar"){return M("BAD_APPEND",r)}s=e;a=t}else{if(n!=="scalar"){return M("BAD_APPEND",n)}s=t;a=e}if(!(s.dtype&a.dtype)){M("MAP_APPEND")}if(!gn(s.unit,a.unit)){M("UNIT_APEND")}s.value.set(a.name,a.value);return s};const bn=(e,t,n)=>{e=h(e,(e=>Se.divide(e,n)));if(!Se.isZero(t)){e=h(e,(e=>Se.subtract(e,t)))}return e};const Rn=(e,t,n)=>{if(!Se.isZero(t)){e=h(e,(e=>Se.add(e,t)))}return h(e,(e=>Se.multiply(e,n)))};const An=(e,t,n,r=false)=>{const s=e.value.plain?e.value.plain:e.value;let a="";let l="";for(const[e,r]of s.entries()){a+=un(e)+" & ";l+=We(r,t,n)+" & "}a=a.slice(0,-3);l=l.slice(0,-3);let o="\\begin{array}{c}";if(!r){o+=a+" \\\\ \\hline "}o+=l+"\\end{array}";if(e.unit&&e.unit.name){o+="\\;"+E(e.unit.name)}return o};const On=(e,t,n,r=false)=>{const s=e.value.plain?e.value.plain:e.value;let a="";let l="";for(const[e,r]of s.entries()){a+=e+" | ";l+=We(r,t,n)+" | "}a=a.slice(0,-3);l=l.slice(0,-3);let o="``";if(!r){o+=a+"\n"}o+=l+"``";if(e.unit&&e.unit.name){o=`${o} '${e.unit.name}'`}return o};const vn=(e,t,n,r)=>{if(!e.value.has(t)){return M("BAD_KEY",t)}const s=m(e.value.get(t));if(!n){return{value:s,unit:e.unit,dtype:e.dtype-I.MAP}}else if(r){return{value:s,unit:{expos:e.unit.expos},dtype:e.dtype-I.MAP}}else{return{value:s,unit:T,dtype:e.dtype-I.MAP}}};const Nn=(e,t,n)=>{for(let e=0;e<t.length;e++){if(t[e].dtype===I.RATIONAL){return M("NUM_KEY")}t[e]=t[e].value}if(t.length===1){const r=e.dtype&I.RATIONAL;const s=t.length>1||n;return vn(e,t[0],r,s)}else{const n=new Map;for(let r=0;r<t.length;r++){n.set(t[r],e.value.get(t[r]))}return{value:n,unit:e.unit,dtype:e.dtype}}};const En=Object.freeze({append:yn,convertFromBaseUnits:bn,convertToBaseUnits:Rn,display:An,displayAlt:On,valueFromMap:Nn});const Tn=Object.freeze({UNARY:0,BINARY:1,SUB:2,SUP:3,ACCENT:4,UNARYMINUS:5,DIV:6,PRIME:7,CURRENCY:8,ORD:9,VAR:10,NUM:11,SPACE:12,LONGVAR:13,LEFTBRACKET:14,RIGHTBRACKET:15,UNDEROVER:16,LEFTRIGHT:17,STRING:18,UNIT:19,BIN:20,ADD:21,MULT:22,REL:23,LOGIC:24,SEP:25,FUNCTION:26,ACCESSOR:28,ENVIRONMENT:29,FACTORIAL:30,SUPCHAR:31,ANGLE:32,ELLIPSIS:33,KEYWORD:34,PROPERTY:36,COMMENT:37,RETURN:38,TO:39,DATAFRAME:40,RICHTEXT:41});const In=/^-(?![-=<>:])/;const xn=new RegExp(Se.numberPattern);const Mn=/^(?:'[^']+'|[°ΩÅK])/;const Cn=(e,t)=>{let n="";if(e[2]){n="\\mathrm{"+e[2]+"}"}else if(e[5]){return je(e)}else{n=e[3];if(e[6]){n+="."+e[6]}n=Ge(n,t);if(e[8]){n+="\\%"}else if(e[7]){if(e[7].charAt(0)==="-"){n+="\\text{e-}"+e[7].slice(1)}else{n+="\\text{e}"+e[7]}}}if(e[1]){n="\\text{-}"+n}return n};const Ln=e=>{switch(e.ttype){case Tn.NUM:case Tn.ORD:case Tn.VAR:case Tn.RIGHTBRACKET:case Tn.LONGVAR:case Tn.CURRENCY:case Tn.SUPCHAR:case Tn.PRIME:case Tn.FACTORIAL:return false;default:return true}};const Un=/^(?:(?:[A-Za-zıȷ\u0391-\u03C9\u03D5\u212C\u2130\u2131\u210B\u2110\u2112\u2133\u211B\u212F\u210A\u2113\u2134]|(?:\uD835[\uDC00-\udc33\udc9c-\udccf\udd38-\udd50]))[A-Za-z0-9_\u0391-\u03C9\u03D5\u0300-\u0308\u030A\u030C\u0332\u20d0\u20d1\u20d6\u20d7\u20e1]*|!in|-->|->|left\.|right\.|log10|log2)/;const Sn=Object.freeze({true:["true","\\mathord{\\text{true}}",Tn.ORD,""],false:["false","\\mathord{\\text{false}}",Tn.ORD,""],j:["j","j",Tn.ORD,""],cos:["cos","\\cos",Tn.FUNCTION,""],cosd:["cosd","\\operatorname{\\cos_d}",Tn.FUNCTION,""],if:["if","\\mathrel{\\mathrm{if}}",Tn.LOGIC,""],else:["else","\\mathrel{\\mathrm{else}}",Tn.LOGIC,""],and:["and","\\mathrel{\\mathrm{and}}",Tn.LOGIC,""],or:["or","\\mathrel{\\mathrm{or}}",Tn.LOGIC,""],for:["for","\\mathrel{\\mathrm{for}}",Tn.KEYWORD,""],while:["while","\\mathrel{\\mathrm{while}}",Tn.KEYWORD,""],in:["in","\\mathrel{\\mathrm{in}}",Tn.KEYWORD,""],break:["break","\\mathrel{\\mathrm{break}}",Tn.KEYWORD,""],to:["to","\\mathbin{\\mathrm{to}}",Tn.TO,""],raise:["raise","\\mathrel{\\mathrm{raise}}",Tn.UNARY,""],echo:["echo","\\mathrel{\\mathrm{echo}}",Tn.UNARY,""],return:["return","\\mathrel{\\mathrm{return}}",Tn.RETURN,""],sqrt:["sqrt","\\sqrt",Tn.UNARY,""],otherwise:["otherwise","\\mathrel{\\mathrm{otherwise}}",Tn.LOGIC,""],root:["root","\\sqrt",Tn.BINARY,""],sin:["sin","\\sin",Tn.FUNCTION,""],sind:["sind","\\operatorname{\\sin_d}",Tn.FUNCTION,""],tan:["tan","\\tan",Tn.FUNCTION,""],tand:["tand","\\operatorname{\\tan_d}",Tn.FUNCTION,""],cotd:["cotd","\\operatorname{\\cot_d}",Tn.FUNCTION,""],secd:["secd","\\operatorname{\\sec_d}",Tn.FUNCTION,""],cscd:["cscd","\\operatorname{\\csc_d}",Tn.FUNCTION,""],log:["log","\\log",Tn.FUNCTION,""],ln:["ln","\\ln",Tn.FUNCTION,""],log10:["log10","\\log_{10}",Tn.FUNCTION,""],log2:["log2","\\log_{2}",Tn.FUNCTION,""],"log!":["log!","\\operatorname{log!}",Tn.FUNCTION,""],"π":["π","π",Tn.ORD,""],"ℓ":["ℓ","ℓ",Tn.VAR,""],modulo:["modulo","\\operatorname{modulo}",Tn.MULT,""],"->":["->","→",Tn.REL,""],"--\x3e":["--\x3e","\\xrightarrow",Tn.UNARY,""],"<--\x3e":["<--\x3e","\\xrightleftarrows",Tn.UNARY,""]});const wn=/^([/÷\u2215_:,;^+\\\-–−*×∘⊗⦼⊙√∛∜·.%∘|╏‖¦><=≈≟≠≡≤≥≅∈∉⋐!¡‼¬∧∨⊻~#?⇒⟶⟵→←&@′″∀∃∫∬∮∑([{⟨⌊⎿⌈⎾〖〗⏋⌉⏌⌋⟩}\])˽∣ℂℕℚℝℤℓℏ∠¨ˆˉ˙˜▪✓\u00A0\u20D7$£¥€₨₩₪]+)/;const Dn=Object.freeze({"#":["#","#",Tn.COMMENT,""],"/":["/","\\dfrac{",Tn.DIV,""],"//":["//","\\tfrac{",Tn.DIV,""],"///":["///","/",Tn.MULT,""],"∕":["∕","∕",Tn.MULT,""],"÷":["÷","÷",Tn.MULT,""],_:["_","_",Tn.SUB,""],"^":["^","^",Tn.SUP,""],"+":["+","+",Tn.ADD,""],"-":["-","-",Tn.ADD,""],"–":["-","-",Tn.ADD,""],"−":["-","-",Tn.ADD,""],"*":["*","*",Tn.MULT,""],"×":["×","×",Tn.MULT,""],"∘":["∘","\\circ",Tn.MULT,""],"⊗":["⊗","⊗",Tn.MULT,""],"√":["√","\\sqrt",Tn.UNARY,""],"∛":["∛","\\sqrt[3]",Tn.UNARY,""],"∜":["∜","\\sqrt[4]",Tn.UNARY,""],"+-":["+-","±",Tn.BIN,""],"**":["**","\\star",Tn.BIN,""],"·":["·","⋅",Tn.MULT,""],"...":["...","\\dots",Tn.ORD,""],"%":["%","\\%",Tn.FACTORIAL,""],"^*":["^*","^*",Tn.FACTORIAL,""],"-:":["-:","÷",Tn.MULT,""],"=":["=","=",Tn.REL,""],"≈":["≈","≈",Tn.REL,""],"==":["==","==",Tn.REL,""],"≡":["≡","≡",Tn.REL,""],">":[">","\\gt",Tn.REL,""],"<":["<","\\lt",Tn.REL,""],"?=":["?=","≟",Tn.REL,""],"≟":["≟","≟",Tn.REL,""],"≠":["≠","≠",Tn.REL,""],"!=":["!=","≠",Tn.REL,""],"<>":["<>","≠",Tn.REL,""],":=":[":=","≔",Tn.REL,""],"<=":["<=","≤",Tn.REL,""],"≤":["≤","≤",Tn.REL,""],">=":[">=","≥",Tn.REL,""],"≥":["≥","≥",Tn.REL,""],"-=":["-=","≡",Tn.REL,""],"~=":["~=","≅",Tn.REL,""],"≅":["≅","≅",Tn.REL,""],"~~":["~~","≈",Tn.REL,""],"~":["~","\\sim",Tn.REL,""],"=>":["=>","⇒",Tn.REL,""],"⟶":["⟶","\\xrightarrow",Tn.UNARY,""],"⟵":["⟵","\\xleftarrow",Tn.UNARY,""],"⇒":["⇒","⇒",Tn.REL,""],"<=>":["<=>","⇔",Tn.REL,""],"-<":["-<","≺",Tn.REL,""],">-":[">-","≻",Tn.REL,""],"-<=":["-<=","⪯",Tn.REL,""],">-=":[">-=","⪰",Tn.REL,""],"_|_":["_|_","\\bot",Tn.REL,""],"|--":["|--","⊢",Tn.REL,""],"|==":["|==","\\models",Tn.REL,""],"∈":["∈","∈",Tn.REL,""],"∉":["∉","∉",Tn.REL,""],"⋐":["⋐","⋐",Tn.REL,""],"▪":["▪","\\mathrel{▪}",Tn.REL,""],"!":["!","!",Tn.FACTORIAL,""],"‼":["‼","!!",Tn.FACTORIAL,""],"!!":["!!","!!",Tn.FACTORIAL,""],"¡":["¡","¡",Tn.FACTORIAL,""],"&":["&","\\mathbin{\\&}",Tn.ADD,""],"&_":["&_","\\mathbin{\\underline{\\&}}",Tn.ADD,""],"′":["′","'",Tn.PRIME,""],"″":["″","''",Tn.PRIME,""],"′′":["′′","''",Tn.PRIME,""],"′′′":["′′′","'''",Tn.PRIME,""],"∀":["∀","∀",Tn.LOGIC,""],"∃":["∃","∃",Tn.LOGIC,""],"∧":["∧","∧",Tn.LOGIC,""],"∨":["∨","∨",Tn.LOGIC,""],"⊻":["⊻","⊻",Tn.LOGIC,""],"¬":["¬","¬",Tn.UNARY,""],":":[":",":",Tn.LOGIC,""],"∫":["∫","∫",Tn.UNDEROVER,""],"∬":["∬","∬",Tn.UNDEROVER,""],"∮":["∮","∮",Tn.UNDEROVER,""],"∑":["∑","∑",Tn.UNDEROVER,""],"(":["(","(",Tn.LEFTBRACKET,")"],"[":["[","[",Tn.LEFTBRACKET,"]"],"{":["{","\\{",Tn.LEFTBRACKET,"\\}"],"{:":["{:","{",Tn.LEFTBRACKET,"}"],"⟨":["⟨","⟨",Tn.LEFTBRACKET,"⟩"],")":[")",")",Tn.RIGHTBRACKET,""],"]":["]","]",Tn.RIGHTBRACKET,""],"}":["}","\\}",Tn.RIGHTBRACKET,""],"⟩":["⟩","⟩",Tn.RIGHTBRACKET,""],":}":[":}","}",Tn.RIGHTBRACKET,""],"|":["|","|",Tn.LEFTRIGHT,""],"||":["||","\\Vert ",Tn.LEFTRIGHT,""],"‖":["‖","\\Vert ",Tn.LEFTRIGHT,""],"<<":["<<","⟨",Tn.LEFTBRACKET,"⟩"],">>":[">>","⟩",Tn.RIGHTBRACKET,""],"⎿":["⎿","\\lfloor ",Tn.LEFTBRACKET,"\\rfloor "],"⌋":["⌋","\\rfloor ",Tn.RIGHTBRACKET,""],"⏌":["⏌","\\rfloor ",Tn.RIGHTBRACKET,""],"⌈":["⌈","\\lceil ",Tn.LEFTBRACKET,"\\rceil "],"⎾":["⎾","\\lceil ",Tn.LEFTBRACKET,"\\rceil "],"⌉":["⌉","\\rceil ",Tn.RIGHTBRACKET,""],"⏋":["⏋","\\rceil ",Tn.RIGHTBRACKET,""],"〖":["〖","{",Tn.LEFTBRACKET,"}"],"〗":["〗","}",Tn.RIGHTBRACKET,""],"¦":["¦","\\mid ",Tn.REL,""],"ℂ":["ℂ","ℂ",Tn.ORD,""],"ℕ":["ℕ","ℕ",Tn.ORD,""],"ℚ":["ℚ","ℚ",Tn.ORD,""],"ℝ":["ℝ","ℝ",Tn.ORD,""],"ℤ":["ℤ","ℤ",Tn.ORD,""],"ℏ":["ℏ","ℏ",Tn.ORD,""],"→":["→","→",Tn.REL,""],"←":["←","←",Tn.REL,""],">->":[">->","↣",Tn.REL,""],"->>":["->>","↠",Tn.REL,""],"|->":["|->","↦",Tn.REL,""],"<--":["<--","\\xleftarrow",Tn.UNARY,""],"==>":["==>","\\xRightarrow",Tn.UNARY,""],"<==":["<==","\\xLeftarrow",Tn.UNARY,""],"<--\x3e":["<--\x3e","\\xleftrightarrow",Tn.UNARY,""],"<==>":["<==>","\\xLeftrightarrow",Tn.UNARY,""],"∠":["∠","∠",Tn.ANGLE,""],"✓":["✓","✓",Tn.ORD,""],"˽":["˽","~",Tn.SPACE,""],"\\,":["\\,",",\\:",Tn.SEP,""],"\\;":["\\;",";\\:",Tn.SEP,""],"…":["…","…",Tn.ORD,""],"..":["..","..",Tn.RANGE,""],",":[",",",\\:",Tn.SEP,""],";":[";",";\\:",Tn.SEP,""],$:["$","\\$",Tn.CURRENCY,""],"£":["£","£",Tn.CURRENCY,""],"¥":["¥","¥",Tn.CURRENCY,""],"€":["€","€",Tn.CURRENCY,""],"₨":["₨","₨",Tn.CURRENCY,""],"₩":["₩","₩",Tn.CURRENCY,""],"₪":["₪","₪",Tn.CURRENCY,""]});const Bn=/^(\\[A-Za-z]+\.?|\\([:.!\u0020]|'+))/;const _n=Object.freeze({"\\aleph":["\\aleph","ℵ",Tn.VAR,""],"\\beth":["\\beth","ℶ",Tn.VAR,""],"\\gimel":["gimel","ℷ",Tn.VAR,""],"\\daleth":["daleth","ℸ",Tn.VAR,""],"\\atop":["\\atop","\\atop{",Tn.DIV,""],"\\cdots":["\\cdots","⋯",Tn.BIN,""],"\\vdots":["\\vdots","⋮",Tn.BIN,""],"\\ddots":["\\ddots","⋱",Tn.BIN,""],"\\iff":["\\iff","\\iff",Tn.LOGIC,""],"\\land":["\\land","\\land",Tn.BIN,""],"\\lor":["\\lor","\\lor",Tn.BIN,""],"\\in":["\\in","∈",Tn.REL,""],"\\notin":["\\notin","∉",Tn.REL,""],"\\Subset":["\\Subset","⋐",Tn.REL,""],"\\left.":["\\left.","\\left.",Tn.LEFTBRACKET,"\\right."],"\\right.":["\\right.","\\right.",Tn.RIGHTBRACKET,""],"\\mod":["\\mod","\\mod",Tn.BIN,""],"\\diamond":["\\diamond","\\diamond",Tn.ORD,""],"\\square":["\\square","\\square",Tn.ORD,""],"\\int":["\\int","\\int",Tn.UNDEROVER,""],"\\iint":["\\iint","\\iint",Tn.UNDEROVER,""],"\\iiint":["\\iiint","\\iiint",Tn.UNDEROVER,""],"\\oint":["\\oint","\\oint",Tn.UNDEROVER,""],"\\oiint":["\\oiint","\\oiint",Tn.UNDEROVER,""],"\\oiiint":["\\oiiint","\\oiiint",Tn.UNDEROVER,""],"\\over":["\\over","\\dfrac{",Tn.DIV],"\\sum":["\\sum","\\sum",Tn.UNDEROVER,""],"\\prod":["\\prod","\\prod",Tn.UNDEROVER,""],"\\quad":["\\quad","\\quad",Tn.SPACE,""],"\\qquad":["\\qquad","\\qquad",Tn.SPACE,""]});const Pn=Object.freeze(["Bbb","Overrightarrow","acute","bar","bm","bold","boldsymbol","breve","check","ddot","dot","frak","grave","hat","mathbb","mathbf","mathcal","mathfrak","mathit","mathnormal","mathring","mathrm","mathscr","mathsf","mathtt","overbrace","overgroup","overleftarrow","overleftharpoon","overleftrightarrow","overline","overrightarrow","overrightharpoon","tilde","underbrace","undergroup","underleftarrow","underleftrightarrow","underline","underrightarrow","utilde","vec","widecheck","widehat","widetilde"]);const kn=Object.freeze(["arccos","arcsin","arctan","arctg","arcctg","cos","cosec","cosh","cot","cotg","coth","csc","ctg","cth","det","dim","exp","gcd","lg","lim","ln","log","max","min","sec","sin","sinh","sh","sqrt","sup","tan","tanh","tg","th"]);const zn=Object.freeze(["blue","gray","green","orange","pink","purple","red"]);const jn=Object.freeze(["bcancel","boxed","cancel","clap","color","llap","mathclap","not","operatorname","phantom","pu","rlap","sout","sqrt","tag","textbf","textit","textmd","textnormal","textrm","textsf","texttt","textup","xLeftarrow","xLeftrightarrow","xRightarrow","xcancel","xleftarrow","xleftrightarrow","xleftharpoondown","xleftharpoons","xleftharpoonup","xlongequal","xmapsto","xrightarrow","xrightharpoondown","xrightharpoonup","xrightleftarrows","xrightleftharpoons","xtofrom","xtwoheadleftarrow","xtwoheadrightarrow"]);const Vn=Object.freeze(["dfrac","frac","lower","overset","raisebox","stackrel","tag","tfrac","underset"]);const Fn=Object.freeze(["Bumpeq","Colonapprox","Coloneq","Coloneqq","Colonsim","Darr","Doteq","Downarrow","Eqcolon","Eqqcolon","Harr","Larr","Leftarrow","Leftrightarrow","Lleftarrow","Longleftarrow","Longleftrightarrow","Longrightarrow","Lrarr","Lsh","Rarr","Rightarrow","Rrightarrow","Rsh","Supset","Subset","Uarr","Uparrow","Updownarrow","Vdash","Vvdash","approx","approxeq","asymp","backepsilon","backsim","backsimeq","between","bowtie","bumpeq","circeq","circlearrowleft","circlearrowright","colonapprox","coloneq","coloneqq","colonsim","cong","curlyeqprec","curlyeqsucc","curvearrowleft","curvearrowright","dArr","darr","dashleftarrow","dashrightarrow","dashv","dblcolon","doteq","doteqdot","downarrow","downdownarrows","downharpoonleft","downharpoonright","eqcirc","eqcolon","eqqcolon","eqsim","eqslantgtr","eqslantless","equiv","fallingdotseq","frown","ge","geq","geqq","geqslant","gets","gg","ggg","gggtr","gnapprox","gneq","gneqq","gnsim","gt","gtrapprox","gtreqless","gtreqqless","gtrless","gtrsim","gvertneqq","hArr","harr","hookleftarrow","hookrightarrow","iff","impliedby","implies","in","isin","Join","gets","impliedby","implies","in","isin","lArr","larr","le","leadsto","leftarrow","leftarrowtail","leftharpoondown","leftharpoonup","leftleftarrows","leftrightarrow","leftrightarrows","leftrightharpoons","leftrightsquigarrow","leq","leqq","leqslant","lessapprox","lesseqgtr","lesseqqgtr","lessgtr","lesssim","ll","lll","llless","lnapprox","lneq","lneqq","lnsim","longleftarrow","longleftrightarrow","longmapsto","longrightarrow","looparrowleft","looparrowright","lrArr","lrarr","lt","lvertneqq","mapsto","mid","models","multimap","nLeftarrow","nLeftrightarrow","nRightarrow","nVDash","nVdash","ncong","ne","nearrow","neq","nexists","ngeq","ngeqq","ngeqslant","ngtr","ni","nleftarrow","nleftrightarrow","nleq","nleqq","nleqslant","nless","nmid","notin","notni","nparallel","nprec","npreceq","nrightarrow","nshortmid","nshortparallel","nsim","nsubseteq","nsubseteqq","nsucc","nsucceq","nsupseteq","nsupseteqq","ntriangleleft","ntrianglelefteq","ntriangleright","ntrianglerighteq","nvDash","nvdash","nwarrow","owns","parallel","perp","pitchfork","prec","precapprox","preccurlyeq","preceq","precnapprox","precneqq","precnsim","precsim","propto","rArr","rarr","restriction","rightarrow","rightarrowtail","rightharpoondown","rightharpoonup","rightleftarrows","rightleftharpoons","rightrightarrows","rightsquigarrow","risingdotseq","searrow","shortmid","shortparallel","sim","simeq","smallfrown","smallsmile","smile","sqsubset","sqsubseteq","sqsupset","sqsupseteq","sub","sube","subset","subseteq","subseteqq","subsetneq","subsetneqq","succ","succapprox","succcurlyeq","succeq","succnapprox","succneqq","succnsim","succsim","supe","supset","supseteq","supseteqq","supsetneq","supsetneqq","swarrow","thickapprox","thicksim","to","trianglelefteq","triangleq","trianglerighteq","twoheadleftarrow","twoheadrightarrow","uArr","uarr","uparrow","updownarrow","upharpoonleft","upharpoonright","upuparrows","varpropto","varsubsetneq","varsubsetneqq","varsupsetneq","varsupsetneqq","vartriangle","vartriangleleft","vartriangleright","vcentcolon","vdash","vDash"]);const qn=/^⁻?[²³¹⁰⁴⁵⁶⁷⁸⁹]+/;const Gn=e=>[e[0],e[1],e[2],e[3]];const Yn=Object.freeze({"̀":"\\grave","́":"\\acute","̂":"\\hat","̃":"\\tilde","̄":"\\bar","̅":"\\bar","̇":"\\dot","̈":"\\ddot","̊":"\\mathring","̌":"\\check","̲":"\\underline","⃐":"\\overleftharpoon","⃑":"\\overrightharpoon","⃖":"\\overleftarrow","⃗":"\\vec","⃡":"\\overleftrightarrow"});const Wn=Object.freeze({"̀":"\\grave","́":"\\acute","̂":"\\widehat","̃":"\\widetilde","̄":"\\overline","̅":"\\overline","̇":"\\dot","̈":"\\ddot","̊":"\\mathring","̌":"\\check","̲":"\\underline","⃐":"\\overleftharpoon","⃑":"\\overrightharpoon","⃖":"\\overleftarrow","⃗":"\\overrightarrow","⃡":"\\overleftrightarrow"});const $n=e=>{const t=e.indexOf("_");return t===-1?e:e.slice(0,t+1)+"{"+e.slice(t+1)+"}"};const Hn=e=>{const t=e.slice(-1);if(/[\u0300-\u0308\u030A\u030C\u0332\u20d0\u20d1\u20d6\u20d7\u20e1]/.test(t)){e=e.slice(0,-1);return e==="i"?Yn[t]+"{ı}":e==="j"?Yn[t]+"{ȷ}":e.length===1?Yn[t]+"{"+e+"}":Wn[t]+"{"+e+"}"}else{return e}};const Xn=(e,t)=>{const n=Un.exec(e);if(n){let r=n[0].replace(/_*$/,"");const s=e.charAt(r.length);const a=Sn[r];if(a&&s!=="′"){return a}else if(/^\(/.test(s)){return t.ttype===Tn.ACCENT?[r,r+"}{",Tn.FUNCTION,""]:r==="sqrt"?[r,"\\sqrt",Tn.UNARY,""]:r==="f"?[r,r,Tn.FUNCTION,""]:d(r,kn)?[r,"\\"+r,Tn.FUNCTION,""]:[r,"\\operatorname{"+$n(r)+"}",Tn.FUNCTION,""]}else if(t.ttype===Tn.ACCESSOR){return[r,r,Tn.PROPERTY,""]}else if(/[_\u0300-\u0308\u030A\u030C\u0332\u20d0\u20d1\u20d6\u20d7\u20e1]/.test(r)){let t="";if(r.indexOf("_")===-1){t=Hn(r);return[r,t,r.length>2?Tn.LONGVAR:Tn.VAR,""]}else{const n=r.split("_");for(let e=n.length-1;e>=0;e--){n[e]=Hn(n[e]);if(e>0){n[e]="_\\text{"+n[e]+"}"}}t=n.join("");const s=/^′*/.exec(e.slice(r.length));if(s){r+=s[0];t+="'".repeat(s[0].length)}const a=t.indexOf("_");if(a>-1){t=t.slice(0,a)+"{"+t.slice(a)+"}"}return[r,t,n[0].length>1?Tn.LONGVAR:Tn.VAR,""]}}else if(r.length===2&r.charAt(0)==="\ud835"){return[r,r,Tn.VAR,""]}else if(r.length>1){return[r,r,Tn.LONGVAR,""]}else{if(r.charAt(0)==="\ud835"){return[r.substring(0,2),r.substring(0,2),Tn.VAR,""]}else{return[r.charAt(0),r.charAt(0),Tn.VAR,""]}}}};const Zn=(e,t,n,r=false)=>{let s=0;let a="";let l;if(e.charAt(0)==='"'){s=e.indexOf('"',1);if(s>0){a=e.substring(1,s).replace(/\r?\n.*/,"");return['"'+a+'"',a,Tn.STRING,""]}else{return[e,e.replace(/\r?\n.*/,""),Tn.STRING,""]}}if(/^#/.test(e)){a=e.slice(2);s=a.indexOf("\n");if(s>-1){const e=a.indexOf("\n");if(e>-1&&e<s){s=e}}if(s>-1){a=a.slice(0,s)}return[`#${a}`,`\\text{\\texttt{ \\#${a}}}`,Tn.COMMENT,""]}if(/^``/.test(e)){s=e.indexOf("`",e.charAt(2)==="`"?3:2);const n=s>0?e.slice(2,s):e.slice(2);const a=O(n);let l="";if(r){l=hn.quickDisplay(a)}else{const e=hn.dataFrameFromCSV(a,{});if(e.dtype===I.DATAFRAME){l=hn.display(e.value,"h3",t)}else{l=En.display(e,"h3",t)}}return["``"+n+"``",l,Tn.DATAFRAME,""]}if(e.charAt(0)==="`"){s=e.indexOf("`",1);if(s>0){a=e.substring(1,s).replace(/\r?\n.*/,"");return["`"+a+"`",a,Tn.RICHTEXT,""]}else{return[e,e.replace(/\r?\n.*/,""),Tn.RICHTEXT,""]}}if(Mn.test(e)){s=e.indexOf("'",1);if(s>0){a=e.substring(1,s);return["'"+a+"'",E(a),Tn.UNIT,""]}else{return[e.charAt(0),e.charAt(0),Tn.UNIT,""]}}l=Bn.exec(e);if(l){const e=l[0];a=e.substring(1);if(d(a,Pn)){return[e,e,Tn.ACCENT,""]}if(d(a,jn)){return[e,e,Tn.UNARY,""]}if(d(a,zn)){return[e,"\\textcolor{"+a+"}",Tn.UNARY,""]}if(d(a,Vn)){return[e,e,Tn.BINARY,""]}if(d(a,Fn)){return[e,e,Tn.REL,""]}const t=_n[e];if(t){return Gn(t)}return[e,e,Tn.ORD,""]}if(In.test(e)){if(Ln(n)){const n=e.match(xn);if(n){a=Cn(n,t);return[n[0],a,Tn.NUM,""]}}return["-","-",Tn.ADD,""]}const o=e.match(xn);if(o){a=Cn(o,t);return[o[0],a,Tn.NUM,""]}if(/^_[([{]/.test(e)){return["_","_",Tn.SUB,""]}const i=Xn(e,n);if(i){return Gn(i)}const u=qn.exec(e);if(u){return[u[0],u[0],Tn.SUPCHAR,""]}l=wn.exec(e);if(l){const e=l[0];for(let t=e.length;t>=1;t--){a=e.substr(0,t);if(Dn[a]){return Gn(Dn[a])}}}const c=e.charAt(0);if(c==="."&&(n.ttype===Tn.VAR||n.ttype===Tn.LONGVAR||n.ttype===Tn.STRING||n.input==="]"||n.ttype===Tn.PROPERTY)){return[".","{.}",Tn.ACCESSOR,""]}return[c,y(c),Tn.VAR,""]};const Kn=["Gamma","Im","Re","abs","acos","acosd","acosh","acot","acotd","acoth","acsc","acscd","acsch","argument","asec","asecd","asech","asin","asind","asinh","atan","atan2","atand","atanh","binomial","chr","cos","cosd","cosh","cosh","cot","cotd","coth","coth","count","csc","cscd","csch","csch","exp","fetch","format","gcd","hypot","isNaN","length","lerp","ln","log","log10","log2","logFactorial","logGamma","logn","logΓ","matrix2table","random","rms","round","roundSig","roundn","sec","secd","sech","sech","sign","sin","sind","sinh","tan","tand","tanh","tanh","trace","transpose","zeros","Γ"];const Qn=["dataframe","lineChart","max","mean","median","min","product","range","stddev","sum","variance"];const Jn=["cos","cosd","cot","cotd","csc","cscd","sec","secd","sin","sind","tand","tan"];const er=e=>{const t=Se.fromString(e);return"®"+String(t[0])+"/"+String(t[1])};const tr=/^(:?\uD835[\uDC9C-\uDCCF]|[\udc9d\udca0\udca1\udca3\udca4\udca7\udca8\udcad\udcba\udcbc\udcc1\udcc4])/;const nr={"ℬ":"B","ℰ":"E","ℱ":"F","ℋ":"H","ℐ":"I","ℒ":"L","ℳ":"M","ℛ":"R","ℯ":"e","ℊ":"g","ℓ":"l","ℴ":"o"};const rr=e=>{const t=tr.exec(e);if(!t){return e}let n="";if(e.charAt(0)==="\ud835"){const t=e.charCodeAt(1);n=String.fromCharCode(t-(t<=56501?56411:56405))}else{n=nr[e.charAt(0)]}return`\\mathcal{${n}}`+e.slice(t[0].length)};const sr=(e,t)=>{switch(t.ttype){case Tn.NUM:case Tn.ORD:case Tn.VAR:case Tn.RIGHTBRACKET:case Tn.LONGVAR:case Tn.PROPERTY:case Tn.UNIT:case Tn.SUPCHAR:case Tn.PRIME:case Tn.FACTORIAL:return e}if(e.output==="-"){return{input:"~",output:"\\text{-}",ttype:Tn.UNARYMINUS}}else{return{input:"+",output:"~+",ttype:Tn.UNARYMINUS}}};const ar={"⁻":"-","²":"2","³":"3","¹":"1","⁰":"0","⁴":"4","⁵":"5","⁶":"6","⁷":"7","⁸":"8","⁹":"9"};const lr=e=>{let t="";for(const n of e){t+=ar[n]}return t};const or=/^(#([a-f0-9]{6}|[a-f0-9]{3})|[a-z]+|\([^)]+\))/i;const ir=/^[A-Za-zıȷ\u0391-\u03C9\u03D5\u210B\u210F\u2110\u2112\u2113\u211B\u212C\u2130\u2131\u2133\uD835[({√∛∜]/;const ur=(e,t,n,r)=>{const s=e.replace(/^.*\xa0/,"").replace(/§$/," ");n.push(s);e=e.length===s.length?"":e.slice(0,e.length-s.length);r.numArgs+=1;if(t==="otherwise"){e+="true"}return e};const cr=/^[\^⁻⁰¹²³\u2074-\u2079]/;const pr=/^ *\(/;const fr=(e,t,n)=>{let r="";if(e.charAt(0)!=="^"){r=/^[⁰¹²³\u2074-\u2079⁻]+/.exec(e)[0];r=b(r)}else if(!pr.test(e.slice(1))){r=Zn(e.slice(1),t,{input:"",output:"",ttype:50})[0]}else{r="(";let t=1;for(let n=2;n<e.length;n++){const s=e.charAt(n);r+=s;if("\"'`".indexOf(s)>-1){const t=e.indexOf(s,n+1);r+=e.slice(n+1,t+1);n=t}else if("([{⟨⌈⎿⎾〖".indexOf(s)>-1){t+=1}else if(")]}⟩⌉⌋⏌〗".indexOf(s)>-1){t-=1}if(t===0){break}}}const s=r.charAt(0)==="("?r.slice(1,-1).trim():r;if(n){const e=Lr(s,t,true);return[r,"{"+e[0]+"}",e[1]]}else{const e=Lr(s,t,false);return[r,"{"+e+"}",""]}};const dr=(e,t,n)=>{if(t.length>0){const e=t[t.length-1].ttype;if(e===Tn.UNARY||e===Tn.BINARY){return false}if(e===Tn.SUB||e===Tn.SUP){if(t[t.length-1].isOnFunction){return false}}}let r=false;if(e.output){const t=e.output.charAt(e.length-1);if(")]}".indexOf(t)>-1){if((t===")"||t==="]")&&/^[([]/.test(n)){return false}else{r=true}}else{switch(e.ttype){case Tn.ORD:case Tn.NUM:case Tn.VAR:case Tn.LONGVAR:case Tn.PRIME:case Tn.SUP:case Tn.SUPCHAR:case Tn.SUB:case Tn.PROPERTY:case Tn.UNIT:case Tn.RIGHTBRACKET:case Tn.FACTORIAL:r=true;break;default:r=false}}}if(r&&mr(n,e.ttype)){return true}return false};const mr=(e,t)=>{const n=e.replace(yr,"");const r=n.charAt(0);let s=false;if(n.length>0){if(r==="|"||r==="‖");else if(/^[({[√∛∜0-9]/.test(n)&&d(t,[Tn.ORD,Tn.VAR,Tn.NUM,Tn.LONGVAR,Tn.RIGHTBRACKET,Tn.CURRENCY,Tn.SUPCHAR])){return true}else{if(ir.test(r)){s=!/^(if|and|atop|or|else|modulo|otherwise|not|for|in|while|end)\b/.test(n)}}}return s};const hr=e=>({input:e.input,output:e.output,ttype:e.ttype,closeDelim:e.closeDelim});const gr=/^[ \f\r\t\v\u1680\u2000-\u200a\u2028\u2029\u202f\u205f\u3000\ufeff]+/;const yr=/^(˽|\\quad|\\qquad)+/;const br=[12,12,15,13,16,10,7,10,12,-1,-1,-1,1,-1,0,0,-1,0,-1,14,0,6,7,5,4,1,-1,16,15,-1,14,13,9,3,2,10,-1,-1,4,3,-1,-1];const Rr=[12,12,15,13,16,10,2,10,12,2,2,2,1,2,2,0,1,1,2,14,1,2,2,1,1,1,2,-1,15,2,14,13,9,-1,1,-1,15,-1,1,-1,2,2];const Ar=0;const Or=1;const vr=2;const Nr=3;const Er=4;const Tr=5;const Ir=7;const xr=8;const Mr=9;const Cr=10;const Lr=(e,t="1,000,000.",n=false,r=false)=>{let s="";let a="";let l={};let o={input:"",output:"",ttype:50};let i=true;let u=false;let c=0;let p=false;let f=false;let m=false;let h=false;let g=false;let b;const R=[];const A=[];const O=[{delimType:Ar,isTall:false}];let v=true;let N="";let E="";let T=" ";let I=-1;const x=[];const M=e=>{if(n&&e>=0){while(A.length>0){const t=A[A.length-1].prec;if(t<e||t===13&&e===13){break}a+=A.pop().symbol+T}}};const C=(t,r,i)=>{if(!r){return}if(R.length===0){if(o.ttype!==Tn.RIGHTBRACKET&&o.ttype!==Tn.LEFTRIGHT){b={pos:c,ttype:o.ttype,closeDelim:""}}return}const u=R[R.length-1];if((t===2||t===12||t===14||t===15)&&(o.ttype!==Tn.RIGHTBRACKET&&o.ttype!==Tn.LEFTRIGHT)&&u.prec<t){b={pos:c,ttype:o.ttype,closeDelim:""};return}let p={};while(R[R.length-1].prec>=t&&!(R[R.length-1].prec===13&&t===13)){b=R.pop();if(b.prec===0){p=O[O.length-1];if((b.ttype===Tn.LEFTBRACKET||b.ttype===Tn.LEFTRIGHT)&&b.closeDelim.length>0){if(R.length>0){if(b.ttype===Tn.LEFTRIGHT&&l.output===")"&&R[R.length-1].closeDelim===")"){if(p.isTall){s=s.substring(0,b.pos)+"\\middle"+s.substring(b.pos);O[O.length-1].isTall=true}b=R.pop();O.pop();p=O[O.length-1]}}if(p.delimType===Er){const e=s.slice(b.pos,b.pos+1)==="\\"?2:1;s=s.slice(0,b.pos)+p.open+s.slice(b.pos+e);b.closeDelim=p.close}else if(p.delimType===Ir){s=s.slice(0,b.pos)+p.open+s.slice(b.pos+2);b.closeDelim=p.close}else if(p.delimType===Or&&p.name==="("&&/^(\/|\\atop\s)/.test(e)){s=s.substring(0,b.pos)+s.substring(b.pos+1);b.closeDelim=""}else if(p.isPrecededByDiv&&p.delimType===Or&&p.name==="("&&(/^[^^_!%°⁻²³¹⁰⁴⁵⁶⁷⁸⁹]/.test(e)||e.length===0)){s=s.substring(0,b.pos)+s.substring(b.pos+1);b.closeDelim=""}else if(p.isTall){if(/^\\left/.test(s.substring(b.pos))===false){s=s.substring(0,b.pos)+"\\left"+s.substring(b.pos)}if(/\\right/.test(b.closeDelim)===false){b.closeDelim="\\right"+l.output}}}}s=s.replace(/\\, *$/,"");s+=b.closeDelim;if(b.closeDelim.slice(-1)==="{"){if(b.ttype===Tn.BINARY){R.push({prec:12,pos:b.pos,ttype:Tn.UNARY,closeDelim:"}"});if(n){a+=T;if(A[A.length-1].symbol==="\\sqrt"){A[A.length-1].symbol="root"}}}b.ttype=Tn.UNARY;o={input:"",output:"",ttype:Tn.UNARY};return}if(R.length===0||b.prec===0){return}}};e=e.replace(gr,"");e=e.replace(/\s+$/,"");while(e.length>0){if(e.charAt(0)==="\n"){e=e.slice(1);const t=o?o.input.slice(-1):"0";if(o.ttype===Tn.COMMENT||"{[(,;+-".indexOf(t)===-1&&!/^ *[)}\]]/.test(e)){C(0,true);s+="\\\\ ";const t=/^ +/.exec(e);e=e.replace(/^ */,"");if(e.length>0&&e.charAt(0)==="="&s.indexOf("=")>-1){u=true;s+="&"}else if(t){s+="\\quad ".repeat(t[0].length-1)}}e=e.trim()}i=true;h=p&&v&&dr(o,R,e);if(h){const e=o.ttype;l={input:"⌧",output:[Tn.LONGVAR,Tn.NUM,Tn.UNIT].includes(e)?"\\,":"",ttype:Tn.MULT};f=false;m=false;i=false}if(i){const n=Zn(e,t,o,r);l={input:n[0],output:n[1],ttype:n[2],closeDelim:n[3]};e=e.substring(l.input.length);f=gr.test(e)||/^(˽|\\quad|\\qquad)+/.test(e);m=/^[ \n]/.test(e);e=e.replace(gr,"");g=mr(e,l.ttype)}switch(l.ttype){case Tn.SPACE:case Tn.BIN:case Tn.ADD:case Tn.MULT:case Tn.REL:case Tn.UNDEROVER:{if(l.output.length>0&&"- +".indexOf(l.output)>-1){l=sr(l,o)}if(n&&l.ttype!==Tn.SPACE){if(l.output!=="\\text{-}"){a+=T}I=br[l.ttype];M(I)}const e=Rr[l.ttype];C(e,v);s+=l.output+" ";c=s.length;if(l.ttype===Tn.UNDEROVER&&O.length>1){O[O.length-1].isTall=true}else if(n){A.push({prec:I,symbol:l.input})}v=true;break}case Tn.ACCESSOR:case Tn.ANGLE:l=sr(l,o);if(n){a+=T;I=br[l.ttype];M(I);A.push({prec:I,symbol:l.input})}C(Rr[l.ttype],v);s+=n?l.input:l.output+" ";v=true;break;case Tn.NUM:case Tn.ORD:C(2,v);if(n){M(-1);a+=l.ttype===Tn.NUM?er(l.input):l.input}if(p){c=s.length}if(n&&(o.ttype===Tn.MULT||g&&o.ttype!==Tn.DIV)){l.output="("+l.output+")"}s+=l.output+" ";v=true;if(!f&&g){C(2,v);if(n){a+=T;M(7);A.push({prec:br[Tn.MULT],symbol:"⌧"})}}break;case Tn.STRING:{C(2,v);const e=l.input.charAt(0);if(n){a+=e+l.output+e}if(p){c=s.length}l.output=y(l.output);l.output=l.output.replace(/ +$/,"\\,");s+="\\text{"+l.output+"}";v=true;break}case Tn.RICHTEXT:{C(2,v);const e=l.input.charAt(0);if(n){a+=e+l.output+e}if(p){c=s.length}l.output=l.output==="`"?"`":Lr(l.output,t,false);s+="{"+l.output+"}";v=true;break}case Tn.DATAFRAME:C(2,v);c=s.length;s+=l.output;v=true;break;case Tn.VAR:case Tn.LONGVAR:{if(l.ttype===Tn.LONGVAR&&o.input==="⌧"){s+="\\,"}C(7,v);if(p){c=s.length}l.output=rr(l.output);if(!n){if(l.ttype===Tn.LONGVAR){l.output="\\mathrm{"+l.output+"}"}}else if(o.input==="for"){a+='"'+l.input+'"'}else{if(/^[.[]/.test(e)){l.output=l.ttype===Tn.LONGVAR?"\\mathrm{"+l.output+"}":l.output}else{l.output=l.input;l.output="〖"+l.output}a+="¿"+l.input}s+=l.output+(e.charAt(0)==="."?"":" ");if(n){O[O.length-1].isTall=true}v=true;break}case Tn.UNIT:{C(14,true);R.push({prec:14,pos:b.pos,ttype:Tn.UNIT,closeDelim:""});if(n){M(14);a+=T+"applyUnit"+T+l.input.replace(/'/g,"")}if(l.input!=="°"){s+="\\;"}s+=l.output;v=true;break}case Tn.PROPERTY:{C(15,v);const t=l.input.indexOf("_");if(n){a+='"'+l.output+'"';s+=`\\mathrm{${l.output}}`;if(e.charAt(0)!=="."){s+=" "}}else if(t>-1){s+=l.input.substring(0,t)+"_\\mathrm{"+l.input.substring(t+1)+"}"}else{l.output=y(l.output);l.output=l.output.replace(/ +$/,"\\,");s+="\\text{"+l.output+"}"}v=true;break}case Tn.TO:{O[O.length-1].delimType=Cr;C(1,v);c=s.length;s+=l.output;if(n){a+=T;M(3);const e=O[O.length-1].symbol;const t=e==="("?"normal":e==="["?"uniform":"lognormal";A.push({prec:3,symbol:t})}break}case Tn.RANGE:{C(1,v);c=s.length;if(n){a+=T;M(3);A.push({prec:3,symbol:".."});if(e.charAt(0)==="]"||e.length===0){a+='"∞"'}}s+=l.output;break}case Tn.DIV:if(n){a+=T}C(2,true);M(7);if(l.input==="//"){R.push({prec:2,pos:b.pos,ttype:Tn.DIV,closeDelim:"}"});s=s.substring(0,b.pos)+"\\tfrac{"+s.substring(b.pos)+"}{"}else if(l.input==="/"||l.input==="\\over"){R.push({prec:2,pos:b.pos,ttype:Tn.DIV,closeDelim:"}"});s=s.substring(0,b.pos)+"\\dfrac{"+s.substring(b.pos)+"}{"}else{R.push({prec:2,pos:b.pos,ttype:Tn.DIV,closeDelim:"}}"});s=s.substring(0,b.pos)+"{{"+s.substring(b.pos)+"}\\atop{";if(O[O.length-1].name==="("){O[O.length-1].delimType=xr}}if(n){if(l.input==="\\atop"){if(O[O.length-1].delimType===xr){A.push({prec:7,symbol:"()"})}}else{A.push({prec:7,symbol:l.input})}}O[O.length-1].isTall=true;c=s.length;v=false;break;case Tn.SUB:{C(15,true);const e=o.ttype===Tn.FUNCTION?"}{":"}";R.push({prec:15,pos:b.pos,ttype:Tn.SUB,closeDelim:e});s+="_{";if(n){a+="_"}v=false;break}case Tn.SUP:if(n){if(/¿e$/.test(a)){a=a.slice(0,-2)+"®27182818284590452353602874713527/10000000000000000000000000000000"}a+=T;M(13)}C(13,true);if(o.ttype===Tn.RIGHTBRACKET){R.push({prec:13,pos:b.pos,ttype:Tn.SUP,closeDelim:"}"})}else{R.push({prec:13,pos:c,ttype:Tn.SUP,closeDelim:"}"})}if(n){A.push({prec:13,symbol:"^"})}s+="^{";v=false;break;case Tn.SUPCHAR:{if(n){if(/¿e$/.test(a)){a=a.slice(0,-2)+"®27182818284590452353602874713527/10000000000000000000000000000000"}a+=T;M(13)}C(13,true);const e=lr(l.output);if(o.ttype===Tn.RIGHTBRACKET){R.push({prec:13,pos:b.pos,ttype:Tn.SUP,closeDelim:"}"})}else{R.push({prec:13,pos:c,ttype:Tn.SUP,closeDelim:"}"})}s+="^{"+e;if(n){A.push({prec:13,symbol:"^"});a+=er(e)}v=true;break}case Tn.FUNCTION:{C(2,v);c=s.length;if(cr.test(e)){const[r,s,a]=fr(e,t,n);if(n&&a===`®1/1${T}~`&&d(l.input,Jn)){l.input="a"+l.input;l.output="\\a"+l.output.slice(1)}else{if(n){l.input+=T+a+T+"^"}l.output+="^"+s}const o=r.length+(e.charAt(0)==="^"?1:0);e=e.slice(o).trim()}if(n){A.push({prec:12,symbol:l.input});if(o.input==="⌧"){s+="×"}}N=e.charAt(0);R.push({prec:12,pos:s.length,ttype:Tn.FUNCTION,closeDelim:N==="("?"":"}"});s+=l.output;s+=N==="("?"":"{";E=l.input;v=false;break}case Tn.ACCENT:if(n){a+=T;M(16)}C(1,v);if(n){R.push({prec:16,pos:s.length,ttype:Tn.ACCENT,closeDelim:"〗"});s+="〖"+l.input;a+="¿"+l.input}else{R.push({prec:16,pos:s.length,ttype:Tn.ACCENT,closeDelim:"}"});s+=l.output+"{"}O[O.length-1].isTall=true;v=false;break;case Tn.PRIME:C(15,true);if(n){a+=l.input}s=s.trim()+l.output+" ";v=true;break;case Tn.BINARY:{C(1,v);c=s.length;const e=l.input==="root"?"]{":"}{";R.push({prec:12,pos:s.length,ttype:Tn.BINARY,closeDelim:e});if(n){A.push({prec:12,symbol:l.output})}s+=l.output+(l.input==="root"?"[":"{");O[O.length-1].isTall=true;v=false;break}case Tn.CURRENCY:{C(1,v);c=s.length;R.push({prec:12,pos:s.length,ttype:Tn.CURRENCY,closeDelim:""});if(n){A.push({prec:12,symbol:"applyUnit"+T+l.input});if(o.input==="⌧"){s+="×"}}s+=l.output;v=false;break}case Tn.UNARY:C(1,v);c=s.length;R.push({prec:12,pos:s.length,ttype:Tn.UNARY,closeDelim:"}"});if(n){A.push({prec:12,symbol:l.input});if(o.input==="⌧"){s+="×"}}s+=l.output;if(/det|inf/.test(l.input)&&e.charAt(0)==="_"){R.push({prec:15,pos:s.length,ttype:Tn.SUB,closeDelim:"}"});l={input:"_",output:"_",ttype:Tn.SUB};s+="_{";e=e.substring(1);e=e.replace(/^\s+/,"")}else if(l.input==="\\color"){const t=or.exec(e);if(t){s+="{"+t[0].replace(/[()]/g,"")+"}";R.pop();e=e.slice(t[0].length).trim()}else{s+="{"}}else{s+="{"}O[O.length-1].isTall=true;v=false;break;case Tn.FACTORIAL:C(14,true);R.push({prec:14,pos:b.pos,ttype:Tn.FACTORIAL,closeDelim:""});if(n){M(14);a+=T+l.output}s+=l.output;v=true;break;case Tn.RETURN:C(1,v);c=s.length;if(n){M(4);A.push({prec:4,symbol:"return"})}s+=l.output+" ";break;case Tn.KEYWORD:C(1,true);c=s.length;if(n){M(2);if(l.input==="in"){a+=T;A.push({prec:I,symbol:"for"})}}s+=l.output+" ";break;case Tn.LOGIC:{C(1,v);if(n){a+=T}M(4);const e=O[O.length-1];if(l.input==="if"||l.input==="otherwise"){if(e.delimType===Or&&e.name==="{"){e.delimType=Ir;e.close="\\end{cases}";e.open="\\begin{cases}";if(n&&T===" "&&l.input==="if"){a=a.slice(0,e.rpnPos)+a.slice(e.rpnPos).replace(/\xa0/g,"§")}}}if(e.delimType===Ir&&d(l.input,["if","otherwise"])){s+="&"}if(l.input===":"&&e.delimType===Or&&e.symbol==="{"){l.output="\\colon"}s+=l.output;if(n){if(e.delimType===Ir&&(l.input==="if"||l.input==="otherwise")){a=ur(a,l.input,x,e);T=" "}else{A.push({prec:4,symbol:l.input})}}c=s.length;v=true;break}case Tn.LEFTBRACKET:{C(2,v);const t=o.ttype===Tn.DIV;let r=false;const i={prec:0,pos:s.length,ttype:Tn.LEFTBRACKET,closeDelim:l.closeDelim};if((l.input==="("||l.input==="[")&&o.ttype<5){i.closeDelim=""}else if(l.input==="("&&b.ttype===Tn.BINARY){i.closeDelim=""}else{i.closeDelim=l.closeDelim;r=(l.input==="("||l.input==="[")&&o.ttype===Tn.FUNCTION;s+=l.output}R.push(i);if(n){while(A.length>0&&A[A.length-1].symbol==="."){a+=T+A.pop().symbol}A.push({prec:0,symbol:l.output.trim()})}const u=/^\s*[)}\]]/.test(e)?0:1;const p={name:l.input,isTall:false,open:l.output,close:i.closeDelim,numArgs:u,numRows:u,rpnPos:a.length,isPrecededByDiv:t,isFuncParen:r,isControlWordParen:o.ttype<5};if(r){p.delimType=vr;p.name=E}else if(o.ttype===Tn.SUB){p.delimType=Mr;p.name="("}else if(l.input==="{"){p.delimType=Or;p.rpnLength=a.length}else if(l.input==="["&&(d(o.ttype,[Tn.VAR,Tn.LONGVAR,Tn.STRING,Tn.PROPERTY])||o.input==="]")){a+=T;p.delimType=Nr}else{p.delimType=Or;p.name=l.input}O.push(p);E="";c=s.length;v=false;break}case Tn.SEP:{C(1,v);c=s.length;if(l.input==="\\,"||l.input==="\\;"){s+=l.output+" "}else{const t=O[O.length-1];if(t.delimType===Or&&m){t.delimType=Er;const e=t.name==="["?"b":t.name==="("?"p":t.name==="{:"?"":"B";t.open=`\\begin{${e}matrix}`;t.close=`\\end{${e}matrix}`;t.isTall=true;l.output=l.input===","?"&":"\\\\"}else if(t.delimType===Er&&l.input===","){l.output="&"}else if(t.delimType>3&&l.input===";"){l.output="\\\\"}if(n){if(o.ttype===Tn.LEFTBRACKET&&t.delimType===Nr){a+="®0/1"}a+=T;M(1)}s+=l.output+" ";if(n){if(O.length===1){a+=l.output}else{if(l.input===";"){t.numRows+=1;if(O.length>0&&t.delimType===Ir){T="§"}}if(t.numRows===1){if(l.input===","||l.input===" "&&t.delimType===Er){if(e.charAt(0)==="]"){a+="®0/1"}}}t.numArgs+=1}}}v=true;break}case Tn.RIGHTBRACKET:{C(0,true,l.output);const t=O.pop();if(t.delimType===Or&&!t.isControlWordParen&&t.close!==l.output){s=s.slice(0,-1*t.close.length)+l.output}if(t.isTall&&O.length>1){O[O.length-1].isTall=true}if(n){while(A.length>0&&A[A.length-1].prec>0){a+=T+A.pop().symbol}if(t.delimType===Ir&&o.input!=="otherwise"){a=ur(a,"otherwise",x,t);T=" "}const n=A.pop();const r=t.numArgs;const s=t.numRows;const i=t.numArgs/t.numRows;const u=r===0?"":T;switch(t.delimType){case vr:{let e=A.pop().symbol;const t=new RegExp(T+"!$");if(r===2){if(e==="log"){e="logn"}if(e==="round"){e="roundn"}if(e==="atan"){e="atan2"}}else if(e==="log"&&t.test(a)){a=a.slice(0,a.length-1)+"logFactorial";break}a+=e.slice(-1)==="^"?u+e:d(e,Kn)?u+e:d(e,Qn)?u+e+T+r:u+"function"+T+e+T+r;break}case Nr:a+=u+"[]"+T+r;break;case Er:a+=u+"matrix"+T+s+T+i;break;case Ir:T=" ";a+=T+"cases"+T+s+T;while(x.length>0){a+=x.shift()}a=a.slice(0,-1);break;case Tr:a+=T+"matrix"+T+"1"+T+"1";break;case Cr:break;default:if(r===0&&t.open==="["){a+="matrix"+T+0+T+0}else if(r===1&&t.open==="["){a+=T+"matrix"+T+1+T+1}if(n.symbol==="\\lfloor"){a+=T+"⎿⏌"}if(n.symbol==="\\lceil"){a+=T+"⎾⏋"}}if(l.input===")"&&mr(e,Tn.RIGHTBRACKET)||l.input==="]"&&/^\(/.test(e)){a+=T;M(br[Tn.MULT]);A.push({prec:br[Tn.MULT],symbol:"⌧"});f=false}}c=s.length;v=b.ttype!==Tn.BINARY;break}case Tn.LEFTRIGHT:{C(1,v);const e=O[O.length-1];let t=false;if(R.length>0){t=R[R.length-1].ttype===Tn.LEFTRIGHT||R[R.length-1].closeDelim==="⟩"||R[R.length-1].closeDelim==="\\right."||R[R.length-1].closeDelim==="\\end{vmatrix}"}if(t){e.close=l.input==="|"?"\\vert ":"\\Vert ";R[R.length-1].closeDelim=e.close;C(0,v);O.pop();if(n){while(A.length>0&&A[A.length-1].prec>0){a+=T+A.pop().symbol}a+=T+A.pop().symbol}v=b.ttype!==Tn.BINARY}else if(e.delimType===Or&&e.name==="{"){s+="\\mid ";c=s.length;v=true}else{R.push({prec:0,pos:s.length,ttype:Tn.LEFTRIGHT,closeDelim:l.input==="|"?"\\vert ":"\\Vert "});O.push({delimType:Or,name:l.input,isTall:false,open:l.input==="|"?"\\vert ":"\\Vert ",close:l.input==="|"?"\\vert ":"\\Vert ",numArgs:1,numRows:1,rpnPos:a.length,isPrecededByDiv:o.ttype===Tn.DIV});if(n){A.push({prec:0,symbol:l.output})}s+=l.input==="|"?"\\vert ":"\\Vert ";c=s.length;v=false}break}case Tn.COMMENT:C(0,true);s+=l.output+" ";break;default:if(n){a+=T;M(12)}C(1,v);R.push({prec:1,pos:s.length,ttype:Tn.ORD,closeDelim:""});if(n){A.push({prec:12,symbol:l.output})}s+=l.output+" ";c=s.length;v=true}o=hr(l);p=f||l.input==="⌧"}C(0,true);if(n){while(A.length>0){a+=T+A.pop().symbol}const e=/〖[^ ()]+/g;let t;while((t=e.exec(s))!==null){if("¨ˆˉ˙˜".indexOf(t[0][1])===-1){const e=t.index+t[0].length;if(s.length>e&&s.charAt(e)==="("){s=s.slice(0,t.index)+s.slice(t.index+1)}else{s=s.substring(0,e)+"〗"+s.substring(e)}}}}s=s.replace(/ {2,}/g," ");s=s.replace(/\s+(?=[_^'!)}\]〗])/g,"");s=s.replace(/\s+$/,"");if(u){const e=s.indexOf("=");s="\\begin{aligned}"+s.slice(0,e)+"&"+s.slice(e)+"\\end{aligned}"}return n?[s,a]:s};const Ur=(e,t)=>{if(e.value===null){const t=e.name?e.name:"?";return M("NULL",t)}const n=Object.create(null);n.dtype=e.dtype;n.name=e.name;if(e.dtype===I.STRING||e.dtype===I.BOOLEAN||e.dtype===I.NULL){n.unit=null}else if(e.dtype===I.DATAFRAME||e.dtype&I.MAP){n.unit=Object.freeze(m(e.unit))}else if(e.unit&&e.unit.expos){n.unit=m(e.unit)}else{n.unit=Object.create(null);if(e.unit){n.unit.name=e.unit}if(e.expos){n.unit.expos=m(e.expos)}}if(e.dtype&I.QUANTITY){n.value=Object.freeze(t?m(e.value.inBaseUnits):m(e.value.plain));n.dtype=e.dtype-I.QUANTITY}else if(e.dtype===I.STRING){const t=e.value;const r=t.charAt(0);const s=t.charAt(t.length-1);n.value=r==='"'&&s==='"'?t.slice(1,-1).trim():t.trim()}else if(e.dtype===I.DATAFRAME){n.value=e.value}else{n.value=m(e.value)}return Object.freeze(n)};function Sr(e,t,n,r){const s=Object.create(null);if(e.dtype&I.MAP){return En.valueFromMap(e,[t],r)}else if(e.dtype&I.DATAFRAME){return hn.range(e,[t],n,r)}else if((e.dtype===I.STRING||e.dtype&I.ARRAY)&&t.dtype===I.RATIONAL){const n=Se.toNumber(t.value);s.value=e.value.slice(n-1,n);s.unit=e.unit;s.dtype=e.dtype;return s}else if((e.dtype===I.STRING||e.dtype&I.ARRAY)&&t.dtype===I.RANGE){const n=t.value[0]-1;const r=t.value[1];const a=t.value[2]==="∞"?e.value.length:t.value[2];s.unit=e.unit;s.dtype=e.dtype;if(r===1){s.value=e.value.slice(n,a)}else{s.value=[];for(let t=n;t<a;t+=r){s.value.push(e.value[t])}}return s}else if(e.dtype===I.MODULE){return Ur(e.value[t.value],r)}else{return M("NO_PROP",e.name)}}const wr=(e,t="h3",n="1,000,000.")=>{if(e.size===0){return""}let r="\\begin{array}{c}";let s=false;for(const t of e.values()){if(t.unit&&t.unit.name){s=true;break}}if(s){let t="";for(const n of e.values()){if(n.unit&&n.unit.name){t+=E(n.unit.name).replace("\\;\\, ","")}t+="&"}r+=t.slice(0,-1)+" \\\\ ";r+="\\hline "}let a="";for(const r of e.values()){a+=We(r.value,t,n)+" & "}r+=a.slice(0,-1);r+="\\end{array}";return r};const Dr=(e,t="h3")=>{if(e.size===0){return""}let n="``";let r=false;for(const t of e.values()){if(t.unit&&t.unit.name){r=true;break}}if(r){let t="";for(const n of e.values()){if(n.unit&&n.unit.name){t+=n.unit.name}t+=" | "}n+=t.slice(0,-3)+"\n"}let s="";for(const n of e.values()){s+=We(n.value,t,"100000.")+" | "}n=s.slice(0,-3);return n+"``"};const Br=Object.freeze({display:wr,displayAlt:Dr});const _r=e=>{const t="Error. Mismatch in number of multiple assignment.";return[`\\color{firebrick}\\text{${t}}`,t]};const Pr=(e,t,n,r,s)=>{if(!t){return e}const a=!e.name?0:!Array.isArray(e.name)?1:e.name.length;if(e.resulttemplate.indexOf("?")>-1||e.resulttemplate.indexOf("!")>-1||e.resulttemplate.indexOf("@")>-1||e.resulttemplate.indexOf("%")>-1){e.value=t.value;let l="";let o="";if(e.resulttemplate.indexOf("!")>-1){l="";o="";return e}else if(Ut(t)&&t.dtype&I.MAP){l=Wt.displayMapOfVectors(t.value,n,r);o=Wt.displayAltMapOfVectors(t.value,n,r)}else if(Ut(t)){l=Wt.display(s?{value:t.value.plain,dtype:t.dtype}:t,n,r);o=Wt.displayAlt(s?{value:t.value.plain,dtype:t.dtype}:t,n,r)}else if(t.dtype===I.DATAFRAME){if(a>1&&a!==t.value.data.length){[l,o]=_r()}else{const s=e.name&&Array.isArray(e.name)&&e.name.length>1;l=hn.display(t.value,n,r,s);o=hn.displayAlt(t.value,n,s)}}else if(t.dtype&I.MAP){const s=e.dtype&I.QUANTITY?t.value.plain.size:t.value.size;if(a>1&&a!==s){[l,o]=_r()}else{const s=e.name&&Array.isArray(e.name)&&e.name.length>1;l=En.display(t,n,r,s);o=En.displayAlt(t,n,r,s)}}else if(t.dtype===I.TUPLE){if(a>1&&a!==t.length){[l,o]=_r()}else{l=Br.display(t.value,n,r);o=Br.displayAlt(t.value,n)}}else if(t.dtype&I.STRING){l="\\text{"+y(t.value)+"}";if(t.unit){l=`\\textcolor{${t.unit}}{${l}}`}o=t.value}else if(t.dtype&I.RICHTEXT){l=Lr(t.value,r,false);o=t.value}else if(t.dtype&I.BOOLEAN){l="\\text{"+t.value+"}";o=String(t.value)}else if(t.dtype===I.COMPLEX){const e=t.value;[l,o]=Lt.display(e,n,r)}else if(t.value.plain){l=We(t.value.plain,n,r);if(l.dtype&&l.dtype===I.ERROR){l="\\color{firebrick}\\text{"+l.value+"}";o=l.value}else{o=l.replace(/{,}/g,",").replace("\\","")}}else if(Se.isRational(t.value)){l=We(t.value,n,r);if(l.dtype&&l.dtype===I.ERROR){l="\\color{firebrick}\\text{"+l.value+"}";o=l.value}else{o=l.replace(/{,}/g,",").replace("\\","")}}else if(t.dtype===I.IMAGE){return e}else{l=t.value;o=l}e.resultdisplay=e.resulttemplate.replace(/(\? *\??|@ *@?|%%?)/,l);if(e.resulttemplate.indexOf("@")>-1){e.tex=e.resultdisplay;e.alt=e.altresulttemplate.replace(/@@?/,o)}else if(e.resulttemplate.indexOf("?")>-1){let t=e.tex.lastIndexOf("?");e.tex=e.tex.slice(0,t).replace(/\? *$/,"")+l+e.tex.slice(t+1);t=e.alt.lastIndexOf("?");e.alt=e.alt.slice(0,t).replace(/\? *$/,"")+o+e.alt.slice(t+1)}else if(e.resulttemplate.indexOf("%")>-1){let t=e.tex.lastIndexOf("%");e.tex=e.tex.slice(0,t).replace(/% *$/,"")+l+e.tex.slice(t+1);t=e.alt.lastIndexOf("%");e.alt=e.alt.slice(0,t).replace(/% *$/,"")+o+e.alt.slice(t+1)}}return e};const kr=/〖[^〗]*〗/;const zr=/([([{|‖]|[^\\][,;:])$/;const jr=(e,t,n,r,s)=>{let a;while((a=kr.exec(e))!==null){const l=a[0].replace(/[〖〗()]/g,"").trim().replace(/'/g,"′");const o=a[0].length;const i=a.index;let u;let c="";if(l.indexOf(".")>-1){const a=l.split(".");const p=a[0];if(!t[p]){return M("V_NAME",p)}u=t[p];if(u.dtype===I.DATAFRAME&&a.length===2){c="\\mathrm{"+t[a[0]].name+"{.}\\mathrm{"+a[1]+"}";return e.substring(0,i)+c+e.substring(i+o)}else{for(let e=1;e<a.length;e++){const l=a[e].replace("}","").replace("\\mathrm{","").trim();const o={value:l,unit:null,dtype:I.STRING};u=Sr(u,o,t,n);if(!u){return M("V_NAME",l)}const i={resulttemplate:"@",altresulttemplate:"@"};u.resultdisplay=Pr(i,u,r,s).resultdisplay}}}else if(!t[l]&&l==="T"){u={dtype:I.RATIONAL,resultdisplay:"\\text{T}"}}else if(l==="e"&&/^^/.test(e.slice(i+4).trim())){e=e.substring(0,i)+"e"+e.substring(i+o);continue}else if(!t[l]){return M("V_NAME",l)}else{u={dtype:t[l].dtype,resultdisplay:t[l].resultdisplay}}if(!u||!u.resultdisplay){const e=l?l:"?";return M("NULL",e)}else if(u.error){return M("NULL",l)}let p=true;if(Ut(u)||u.dtype&I.DATAFRAME){p=false}if(n&&u.dtype&I.QUANTITY){p=true}let f=false;if(i>0){const t=e.slice(0,i).trim();if(zr.test(t)){const t=e.slice(i+l.length+2).trim();f=t.length>0&&/^([)|‖\]},;:]|\\right)/.test(t)}else if(/^\\begin{[bp]matrix}/.test(u.resultdisplay)){f=/\\end{[bp]matrix}$/.test(u.resultdisplay)}}p=p&&!f;if(u.dtype===I.DATAFRAME||u.dtype&I.MAP){c="\\mathrm{"+t[l].name+"}"}else if(n){c=p?"\\left("+u.resultdisplay+"\\right)":u.resultdisplay}else{let e=u.resultdisplay;const t=u.resultdisplay.lastIndexOf("{\\text{");if(t>-1){e=u.resultdisplay.slice(0,t).trim();e=e.replace(/\\; *$/,"").trim()}c=p?"\\left("+e+"\\right)":e}e=e.substring(0,i)+c+e.substring(i+o)}return e};const Vr=Object.freeze(Se.negate(Se.one));const Fr=[BigInt(1),BigInt(2)];const qr=[BigInt(30),BigInt(1)];const Gr=[BigInt(45),BigInt(1)];const Yr=[BigInt(60),BigInt(1)];const Wr=[BigInt(90),BigInt(1)];const $r=Object.freeze(Se.divide(Se.pi,Se.two));const Hr=(e,t)=>{const n=t.length;const r=n===1?t[0].unit.expos:null;switch(e){case"abs":case"round":case"roundn":case"sign":case"trace":case"fetch":return r;case"cos":case"sin":case"tan":case"sec":case"csc":case"cot":case"acos":case"arccos":case"asin":case"arcsin":case"atan":case"arctan":case"asec":case"arcsec":case"acsc":case"arccsc":case"acot":case"arccot":case"cosd":case"sind":case"tand":case"secd":case"cscd":case"cotd":case"acosd":case"asind":case"atand":case"asecd":case"acscd":case"acotd":case"gud":if(!$e(r,T)){return M("UNIT_IN",e)}return T;case"exp":case"log":case"ln":case"log10":case"log2":case"logn":case"cosh":case"sinh":case"tanh":case"sech":case"csch":case"coth":case"acosh":case"asinh":case"atanh":case"asech":case"acsch":case"acoth":case"binomial":case"gamma":case"Γ":case"logΓ":case"logFactorial":if(!$e(r,T)){return M("UNIT_IN",e)}return T;case"sqrt":return r.map((e=>e/2));case"gcd":case"mht":if(!$e(r,T)){return M("UNIT_IN",e)}return e==="hmt"?[1,0,0,0,0,0,0,0]:T;case"atan2":case"hypot":case"rms":case"sum":case"mean":case"median":case"min":case"max":case"range":case"stddev":case"variance":{const n=t[0].unit.expos;for(let r=1;r<t.length;r++){const s=t[r].unit.expos;if(n.length!==s.length){return M("UNIT_ARG",e)}for(let t=0;t<n.length;t++){if(n[t]!==s[t]){return M("UNIT_ARG",e)}}}return e==="atan2"?T:n}case"Re":case"Im":case"argument":return T;case"product":{const e=m(t[0].unit.expos);for(let n=1;n<t.length;n++){const r=t[n].unit.expos;e.map(((e,t)=>e+r[t]))}return e}default:return M("F_NAME",e)}};const Xr=e=>{if(Se.isZero(e)){return M("Γ0")}else if(Se.isPositive(e)&&Se.isInteger(e)&&Se.lessThan(e,Se.fromNumber(101))){return Se.factorial(Se.subtract(e,Se.one))}else if(Se.isNegative(e)&&Se.isInteger(e)){return M("ΓPOLE")}else if(Se.lessThan(e,Fr)){return Se.fromNumber(Math.PI/Math.sin(Math.PI*Se.toNumber(e))*Se.toNumber(Xr(Se.subtract(Se.one,e))))}else{return Se.lanczos(e)}};const Zr=e=>{if(Se.isZero(e)){return M("Γ0")}if(Se.isNegative(e)){return M("LOGΓ")}if(Se.areEqual(e,Se.one)||Se.areEqual(e,Se.two)){return Se.zero}if(Se.lessThanOrEqualTo(e,Se.fromNumber(14))){return Se.fromNumber(Math.log(Se.toNumber(Xr(e))))}else{const t=Se.toNumber(e);const n=(t-.5)*Math.log(t)-t+.5*Math.log(2*Math.PI)+1/(12*t)-1/(360*t**3)+1/(1260*t**5)-1/(1680*t**7)+5/(540*t**9);return Se.fromNumber(n)}};const Kr=(e,t)=>{if(Se.areEqual(e,t)){return Se.one}if(Se.isZero(e)){return Se.zero}if(Se.isNegative(t)){return Se.zero}if(Se.lessThan(e,t)){return Se.zero}if(Se.isInteger(e)&&Se.isInteger(t)&&Se.isPositive(e)&&Se.isPositive(t)){return Se.divide(Se.factorial(e),Se.multiply(Se.factorial(t),Se.factorial(Se.subtract(e,t))))}else if(Se.isInteger(e)&&Se.isInteger(t)&&Se.isPositive(t)){return Se.multiply(Se.power(Vr,t),Qr(Se.negate(e),t))}else{return Se.divide(Xr(Se.increment(e)),Se.multiply(Xr(Se.increment(t)),Xr(Se.increment(Se.subtract(e,t)))))}};const Qr=(e,t)=>Kr(Se.add(e,Se.decrement(t)),t);const Jr=Se.divide(Se.pi,[BigInt(180),BigInt(1)]);const es={scalar:{abs(e){return Se.abs(e)},argument(e){return M("NA_REAL","argument")},Re(e){return M("NA_REAL","Re")},Im(e){return M("NA_REAL","Im")},cos(e){return Se.cos(e)},sin(e){return Se.sin(e)},tan(e){return Se.tan(e)},cosh(e){return Se.cosh(e)},sinh(e){return Se.sinh(e)},tanh(e){return Se.tanh(e)},acos(e){if(Se.greaterThan(Se.abs(e),Se.one)){return M("ATRIG","acos")}return Se.fromNumber(Math.acos(Se.toNumber(e)))},asin(e){if(Se.greaterThan(Se.abs(e),Se.one)){return M("ATRIG","asin")}return Se.fromNumber(Math.asin(Se.toNumber(e)))},atan(e){return Se.fromNumber(Math.atan(Se.toNumber(e)))},sec(e){return Se.fromNumber(1/Math.cos(Se.toNumber(e)))},csc(e){return Se.fromNumber(1/Math.sin(Se.toNumber(e)))},cot(e){if(Se.isZero(e)){return M("COT","cotangent")}return Se.fromNumber(1/Math.tan(Se.toNumber(e)))},asec(e){if(Se.greaterThanOrEqualTo(Se.abs(e),Se.one)){return M("ASEC","arcecant")}const t=Math.atn(Math.sqrt(Se.toNumber(Se.decrement(Se.multiply(e,e)))));return Se.isPositive(e)?Se.fromNumber(t):Se.fromNumber(t-Math.PI)},acot(e){if(Se.greaterThanOrEqualTo(Se.abs(e),Se.one)){return M("ASEC","acot")}const t=Math.atn(1/Math.sqrt(Se.toNumber(Se.decrement(Se.multiply(e,e)))));return Se.isPositive(e)?Se.fromNumber(t):Se.fromNumber(t-Math.PI)},acsc(e){return Se.fromNumber(Math.atn(-Se.toNumber(e))+Math.PI)},exp(e){return Se.exp(e)},log(e){return Se.isZero(e)?M("LOG_ZERO"):Se.fromNumber(Math.log(Se.toNumber(e)))},ln(e){return Se.isZero(e)?M("LOG_ZERO"):Se.fromNumber(Math.log(Se.toNumber(e)))},log10(e){return Se.isZero(e)?M("LOG_ZERO"):Se.fromNumber(Math.log10(Se.toNumber(e)))},log2(e){return Se.isZero(e)?M("LOG_ZERO"):Se.fromNumber(Math.log2(Se.toNumber(e)))},sech(e){const t=Se.toNumber(e);return Se.fromNumber(2/(Math.exp(t)+Math.exp(-t)))},csch(e){const t=Se.toNumber(e);return Se.fromNumber(2/(Math.exp(t)-Math.exp(-t)))},coth(e){const t=Se.toNumber(e);return Se.fromNumber((Math.exp(t)+Math.exp(-t))/(Math.exp(t)-Math.exp(-t)))},acosh(e){const t=Se.toNumber(e);return Se.fromNumber(Math.log(t+Math.sqrt(t-1)*Math.sqrt(t+1)))},asinh(e){const t=Se.toNumber(e);return Se.fromNumber(Math.log(t+Math.sqrt(Math.pow(t,2)+1)))},atanh(e){const t=Se.toNumber(e);return Se.fromNumber((Math.log(1+t)-Math.log(1-t))/2)},asech(e){if(Se.isZero(e)){return M("DIV")}const t=Se.toNumber(e);return Se.fromNumber(Math.log((Math.sqrt(-t*t+1)+1)/t))},ascsh(e){if(Se.isZero(e)){return M("DIV")}const t=Se.toNumber(e);return Se.fromNumber(Math.log(Math.sqrt(1+1/Math.pow(t,2))+1/t))},acoth(e){if(Se.isZero(e)){return M("DIV")}const t=Se.toNumber(e);return Se.fromNumber((Math.log(1+1/t)-Math.log(1-1/t))/2)},Gamma(e){return Xr(e)},"Γ"(e){return Xr(e)},"logΓ"(e){if(Se.isNegative(e)||Se.isZero(e)){return M("LOGΓ")}return Zr(e)},logFactorial(e){if(Se.isNegative(e)||!Se.isInteger(e)){return M("FACT")}return Zr(Se.add(e,Se.one))},sign(e){return Se.isPositive(e)?Se.one:Se.isZero?Se.zero:Vr},cosd(e){if(Se.areEqual(e,Wr)){return Se.zero}if(Se.areEqual(e,Yr)){return Fr}return this.cos(Se.multiply(e,Jr))},sind(e){if(Se.areEqual(e,qr)){return Fr}return this.sin(Se.multiply(e,Jr))},tand(e){if(Se.areEqual(e,Gr)){return Se.one}if(Se.areEqual(e,Wr)){return M("TAN90","90°")}return this.tan(Se.multiply(e,Jr))},cotd(e){return this.cot(Se.multiply(e,Jr))},cscd(e){return this.csc(Se.multiply(e,Jr))},secd(e){return this.sec(Se.multiply(e,Jr))},acosd(e){const t=this.acos(e);return t.dtype?t:Se.divide(t,Jr)},asind(e){const t=this.asin(e);return t.dtype?t:Se.divide(t,Jr)},atand(e){return Se.divide(this.atan(e),Jr)},acotd(e){const t=this.acot(e);return t.dtype?t:Se.divide(t,Jr)},acscd(e){const t=this.acsc(e);return t.dtype?t:Se.divide(t,Jr)},asecd(e){const t=this.asec(e);return t.dtype?t:Se.divide(t,Jr)},chr(e){return String.fromCodePoint(Number(e))},sqrt(e){const t=[BigInt(1),BigInt(2)];return Lt.isComplex(e)||Se.isNegative(e)?Lt.power([e,Se.zero],t):Se.power(e,t)},round(e){return Se.fromString(Se.toString(e,0))}},complex:{abs(e){return Lt.abs(e)},argument(e){return Lt.argument(e)},Re(e){return e[0]},Im(e){return e[1]},cos(e){return Lt.cos(e)},sin(e){return Lt.sin(e)},asin(e){return Lt.asin(e)},atan(e){return Lt.atan(e)},acos(e){return Lt.subtract([$r,Se.zero],Lt.asin(e))},tan(e){return Lt.divide(Lt.sin(e),Lt.cos(e))},cot(e){return Lt.divide(Lt.cos(e),Lt.sin(e))},sec(e){const t=Lt.cos(e);return t.dtype?t:Lt.inverse(t)},csc(e){const t=Lt.sin(e);return t.dtype?t:Lt.inverse(t)},asec(e){const t=Lt.inverse(e);return Lt.subtract([$r,Se.zero],Lt.asin(t))},acot(e){return Lt.atan(Lt.inverse(e))},acsc(e){return Lt.asin(Lt.inverse(e))},exp(e){return Lt.exp(e)},log(e){return Lt.log(e)},ln(e){return Lt.log(e)},log10(e){return Se.fromNumber(Math.log10(Se.toNumber(e)))},log2(e){return Se.fromNumber(Math.log2(Se.toNumber(e)))},cosh(e){return Lt.divide(Lt.add(Lt.exp(e),Lt.exp(Lt.negate(e))),[Se.two,Se.zero])},sinh(e){return Lt.divide(Lt.subtract(Lt.exp(e),Lt.exp(Lt.negate(e))),[Se.two,Se.zero])},tanh(e){const t=Lt.exp(e);const n=Lt.exp(Lt.negate(e));return Lt.divide(Lt.subtract(t,n),Lt.add(t,n))},sech(e){return Lt.divide([Se.two,Se.zero],Lt.add(Lt.exp(e),Lt.exp(Lt.negate(e))))},csch(e){return Lt.divide([Se.two,Se.zero],Lt.subtract(Lt.exp(e),Lt.exp(Lt.negate(e))))},coth(e){const t=Lt.exp(e);const n=Lt.exp(Lt.negate(e));return Lt.divide(Lt.add(t,n),Lt.subtract(t,n))},acosh(e){return Lt.acosh(e)},asinh(e){return Lt.asinh(e)},atanh(e){return Lt.atanh(e)},asech(e){return Lt.acosh(Lt.inverse(e))},acsch(e){return Lt.asinh(Lt.inverse(e))},acoth(e){return Lt.atanh(Lt.inverse(e))},Gamma(e){return Lt.gamma(e)},"Γ"(e){return Lt.gamma(e)},"logΓ"(e){return M("NA_COMPL_OP","logΓ")},sign(e){if(Se.isZero(e[1])&&Se.isPositive(e[0])){return Se.one}else if(Se.isZero(e[1])&&Se.isNegative(e[0])){return Se.negate(Se.one)}else{return Lt.divide(e,[Lt.abs(e),Se.zero])}},round(e){return M("NA_COMPL_OP","round")}}};const ts={logn([e,t]){return Se.fromNumber(Math.log(Se.toNumber(t))/Math.log(Se.toNumber(e)))},roundFixed([e,t]){return Se.fromString(Se.toString(e,t))},roundSignificant([e,t]){return Se.fromString(Se.toStringSignificant(e,t))},atan2([e,t]){return Se.fromNumber(Math.atan2(Se.toNumber(t),Se.toNumber(e)))},hypot([e,t]){const n=Se.max(e,t);const r=Se.divide(Se.min(e,t),n);return Se.multiply(n,Se.sqrt(Se.increment(Se.multiply(r,r))))},gcd([e,t]){return Se.gcd(e,t)},rms([e,t]){return this.hypot(e,t)},binomial([e,t]){return Kr(e,t)},zeros([e,t]){return Wt.zeros(Se.toNumber(e),Se.toNumber(t))}};const ns={max(e){return e.reduce(((e,t)=>Se.max(e,t)))},min(e){return e.reduce(((e,t)=>Se.min(e,t)))},sum(e){return e.reduce(((e,t)=>Se.add(e,t)))},product(e){return e.reduce(((e,t)=>Se.multiply(e,t)))},mean(e){const t=this.sum(e);return Se.divide(t,Se.fromNumber(e.length))},median(e){const t=this.max(e);const n=this.min(e);return Se.divide(Se.add(t,n),Se.two)},range(e){return Se.subtract(this.max(e),this.min(e))},variance(e){const t=this.sum(e);const n=Se.divide(t,Se.fromNumber(e.length));const r=e.reduce(((e,t)=>Se.add(e,Se.pow(Se.subtract(t,n),Se.two))));return Se.divide(r,Se.subtract(Se.fromNumber(e.length),Se.one))},stddev(e){const t=this.variance(e);return Se.power(t,Fr)}};const rs=(e,t)=>{for(let t=0;t<3;t++){if(!(e[t].dtype&I.RATIONAL)){return M("")}}let n=T;if(t){if(e[0].expos!==e[1].expos){return M("")}if(e[1].expos!==e[2].expos){return M("")}n=e[0].expos}const r=Object.create(null);r.unit=Object.create(null);r.unit.expos=n;r.dtype=I.RATIONAL;const s=e[0].value;const a=e[1].value;const l=e[2].value;for(let e=0;e<s.length-1;e++){if(Se.lessThanOrEqualTo(s[e],l)&Se.lessThanOrEqualTo(l,s[e+1])){const t=Se.divide(Se.subtract(a[e+1],a[e]),Se.subtract(s[e+1],s[e]));r.value=Se.add(a[e],Se.multiply(t,Se.subtract(l,s[e])));return Object.freeze(r)}}};const ss=Object.freeze({functionExpos:Hr,unary:es,binary:ts,reduce:ns,lerp:rs});const as=(e,t,n)=>{if(n.length===1){const r=Wt.isVector(n[0])?n[0].value:n.dtype&I.MATRIX?n[0].value.flat():n[0].value;const s=ss[e][t](r);let a=n[0].dtype;if(e==="reduce"){if(a&I.MATRIX){a-=I.MATRIX}if(a&I.ROWVECTOR){a-=I.ROWVECTOR}if(a&I.COLUMNVECTOR){a-=I.COLUMNVECTOR}}return[s,a]}else{let r=0;let s=false;let a=n[0].dtype;for(r=0;r<n.length;r++){if(Wt.isVector(n[r])){s=true;a=n[r].dtype;break}}const l=n.map((e=>e.value));if(!s){return[ss[e][t](l),n[0].dtype]}else{const n=m(l);const s=[];for(let a=0;a<l[r].length;a++){n[r]=l[r][a];s.push(ss[e][t](n))}return[s,a]}}};const ls=(e,t)=>{if(Se.isRational(e)&&Se.isRational(t)){return Se.areEqual(e,t)}else{return e===t}};const os=(e,t,n,r)=>{if(t===false&&r){return false}if(t===true&&r){t=r}switch(e){case"=":return ls(t,n);case"≠":case"!=":case"/=":if(Se.isRational(t)&&Se.isRational(n)){return!Se.areEqual(t,n)}else{return t!==n}case">":if(Se.isRational(t)&&Se.isRational(n)){return Se.greaterThan(t,n)}else{return t>n}case"<":if(Se.isRational(t)&&Se.isRational(n)){return Se.lessThan(t,n)}else{return t<n}case"≥":case">=":if(Se.isRational(t)&&Se.isRational(n)){return Se.greaterThanOrEqualTo(t,n)}else{return t>=n}case"≤":case"<=":if(Se.isRational(t)&&Se.isRational(n)){return Se.lessThanOrEqualTo(t,n)}else{return t<=n}case"∈":if(typeof t==="string"&&typeof n==="string"){return n.indexOf(t)>-1}else if(Array.isArray(n)&&!Array.isArray(t)){for(let e=0;e<n.length;e++){if(ls(t,n[e])){return true}}return false}else if(n instanceof Map){return n.has(t)}else{return M("NOT_ARRAY")}case"⋐":if(typeof t==="string"&&typeof n==="string"){return n.indexOf(t)>-1}else if(Array.isArray(t)&&Array.isArray(n)){for(let e=0;e<n.length;e++){if(ls(t[0],n[e])){if(e+t.length>n.length){return false}for(let r=1;r<t.length;r++){if(!ls(t[r],n[e+r])){return false}}return true}}return false}else{return M("NOT_ARRAY")}case"∉":if(typeof t==="string"&&typeof n==="string"){return n.indexOf(t)===-1}else if(Array.isArray(n)){for(let e=0;e<n.length;e++){if(t===n[e]){return false}}return true}else if(n instanceof Map){return!n.has(t)}else{return M("NOT_ARRAY")}}};const is=e=>e[0].map(((t,n)=>e.map((e=>e[n]))));const us=(e,t)=>e.map(((e,n)=>Se.multiply(e,t[n]))).reduce(((e,t)=>Se.add(e,t)));const cs=e=>e.map((e=>Se.multiply(e,e))).reduce(((e,t)=>Se.add(e,t)));const ps=[BigInt(1),BigInt(100)];const fs={scalar:{abs(e){return Se.abs(e)},norm(e){return Se.abs(e)},negate(e){return Se.negate(e)},exp(e){return Se.exp(e)},floor(e){return Se.floor(e)},ceil(e){return Se.ceil(e)},percent(e){return Se.multiply(ps,e)},factorial(e){return Se.factorial(e)},not(e){return!e}},complex:{abs(e){return Lt.abs(e)},norm(e){return Lt.abs(e)},conjugate(e){return Lt.conjugate(e)},negate(e){return Lt.negate(e)},exp(e){return Lt.exp(e)},floor(e){return M("NA_COMPL_OP","floor")},ceil(e){return M("NA_COMPL_OP","ceil")},percent(e){return M("NA_COMPL_OP","percent")},factorial(e){return M("NA_COMPL_OP","factorial")},not(e){return M("NA_COMPL_OP","not")}},vector:{abs(e){return Se.sqrt(cs(e))},norm(e){return Se.sqrt(cs(e))},negate(e){return e.map((e=>Se.negate(e)))},exp(e){return e.map((e=>Se.exp(e)))},floor(e){return e.map((e=>Se.floor(e)))},ceil(e){return e.map((e=>Se.ceil(e)))},percent(e){return e.map((e=>Se.multiply(ps,e)))},factorial(e){return e.map((e=>Se.factorial(e)))},not(e){return e.map((e=>!e))}},matrix:{abs(e){return Wt.invert(e,true)},norm(e){if(e.length===e[0].length){let t=Se.zero;for(let n=0;n<e.length;n++){t=Se.add(t,cs(e[n]))}return t.sqrt()}},negate(e){return e.map((e=>e.map((e=>Se.negate(e)))))},exp(e){return e.map((e=>e.map((e=>Se.exp(e)))))},floor(e){return e.map((e=>e.map((e=>Se.floor(e)))))},ceil(e){return e.map((e=>e.map((e=>Se.ceil(e)))))},percent(e){return e.map((e=>e.map((e=>Se.multiply(ps,e)))))},factorial(e){return e.map((e=>e.map((e=>Se.factorial(e)))))},not(e){return e.map((e=>e.map((e=>!e))))}},map:{abs(e){return h(e,(e=>Se.abs(e)))},negate(e){return h(e,(e=>Se.negate(e)))},exp(e){return h(e,(e=>Se.exp(e)))},floor(e){return h(e,(e=>Se.floor(e)))},ceil(e){return h(e,(e=>Se.ceil(e)))},percent(e){return h(e,(e=>Se.multiply(ps,e)))},factorial(e){return h(e,(e=>Se.factorial(e)))},not(e){return h(e,(e=>!e))}},mapWithVectorValues:{abs(e){return h(e,(e=>e.map((e=>Se.abs(e)))))},negate(e){return h(e,(e=>e.map((e=>Se.negate(e)))))},exp(e){return h(e,(e=>e.map((e=>Se.exp(e)))))},floor(e){return h(e,(e=>e.map((e=>Se.floor(e)))))},ceil(e){return h(e,(e=>e.map((e=>Se.ceil(e)))))},percent(e){return h(e,(e=>e.map((e=>Se.multiply(ps,e)))))},factorial(e){return h(e,(e=>e.map((e=>Se.factorial(e)))))},not(e){return h(e,(e=>e.map((e=>!e))))}}};const ds={scalar:{scalar(e,t,n){return n==="&"||n==="&_"?e+(n==="&"?I.ROWVECTOR:I.COLUMNVECTOR):e},complex(e,t,n){return t},vector(e,t,n){return t},matrix(e,t,n){return t},dataFrame(e,t,n){return t},map(e,t,n){return t},mapWithVectorValues(e,t,n){return t}},complex:{scalar(e,t,n){return e},complex(e,t,n){return e}},vector:{scalar(e,t,n){return e},map(e,t,n){return t+(e&I.ROWVECTOR)+(e&I.COLUMNVECTOR)}},rowVector:{rowVector(e,t,n){return n==="&_"?e-I.ROWVECTOR+I.MATRIX:e},columnVector(e,t,n){return e},matrix(e,t,n){return n==="&_"?t:e}},columnVector:{rowVector(e,t,n){return n==="dot"?I.RATIONAL:n==="cross"?e:e-I.COLUMNVECTOR+I.MATRIX},columnVector(e,t,n){return n==="&"?e-I.COLUMNVECTOR+I.MATRIX:e},matrix(e,t,n){return t}},matrix:{scalar(e,t,n){return e},rowVector(e,t,n){return e},columnVector(e,t,n){return n==="&"?e:t},matrix(e,t,n){return e},map(e,t,n){return 0}},dataFrame:{scalar(e,t,n){return e}},map:{scalar(e,t,n){return e},vector(e,t,n){return e+(t&I.ROWVECTOR)+(t&I.COLUMNVECTOR)},matrix(e,t,n){return 0},map(e,t,n){return e}},mapWithVectorValues:{scalar(e,t,n){return e}}};const ms={scalar:{scalar:{add(e,t){return Se.add(e,t)},subtract(e,t){return Se.subtract(e,t)},multiply(e,t){return Se.multiply(e,t)},divide(e,t){return Se.divide(e,t)},power(e,t){return Lt.isComplex(e)||Se.isNegative(e)&&Se.isPositive(t)&&Se.lessThan(t,Se.one)?Lt.power([e,Se.zero],t):Se.power(e,t)},hypot(e,t){return Se.hypot(e,t)},modulo(e,t){return Se.modulo(e,t)},and(e,t){return e&&t},or(e,t){return e||t},xor(e,t){return e!==t},concat(e,t){return[e,t]},unshift(e,t){return[e,t]}},complex:{add(e,t){return[Se.add(e,t[0]),t[1]]},subtract(e,t){return[Se.subtract(e,t[0]),Se.negate(t[1])]},multiply(e,t){return[Se.multiply(e,t[0]),Se.multiply(e,t[1])]},divide(e,t){return Lt.divide([e,Se.zero],t)},power(e,t){return Lt.power([e,Se.zero],t)},modulo(e,t){return M("NA_COMPL_OP","modulo")},and(e,t){return M("NA_COMPL_OP","and")},or(e,t){return M("NA_COMPL_OP","or")},xor(e,t){return M("NA_COMPL_OP","xor")}},vector:{add(e,t){return t.map((t=>Se.add(e,t)))},subtract(e,t){return t.map((t=>Se.subtract(e,t)))},multiply(e,t){return t.map((t=>Se.multiply(e,t)))},divide(e,t){return t.map((t=>Se.divide(e,t)))},power(e,t){return t.map((t=>Se.power(e,t)))},modulo(e,t){return t.map((t=>Se.modulo(e,t)))},and(e,t){return t.map((t=>e&&t))},or(e,t){return t.map((t=>e||t))},xor(e,t){return t.map((t=>e!==t))},concat(e,t){return[e,...t]}},matrix:{add(e,t){return t.map((t=>t.map((t=>Se.add(e,t)))))},subtract(e,t){return t.map((t=>t.map((t=>Se.subtract(e,t)))))},multiply(e,t){return t.map((t=>t.map((t=>Se.multiply(e,t)))))},divide(e,t){return t.map((t=>t.map((t=>Se.divide(e,t)))))},power(e,t){return t.map((t=>t.map((t=>Se.power(e,t)))))},modulo(e,t){return t.map((t=>t.map((t=>Se.modulo(e,t)))))},and(e,t){return t.map((t=>t.map((t=>e&&t))))},or(e,t){return t.map((t=>t.map((t=>e||t))))},xor(e,t){return t.map((t=>t.map((t=>e!==t))))},concat(e,t){return M("BAD_CONCAT")}},dataFrame:{multiply(e,t){t.data=t.data.map((t=>isNaN(t[0])?t:t.map((t=>{let n=t.length;if(t.indexOf(".")){n-=1}return Se.toStringSignificant(Se.multiply(e,Se.fromString(t)),n)}))));return t},divide(e,t){t.data=t.data.map((t=>isNaN(t[0])?t:t.map((t=>{let n=t.length;if(t.indexOf(".")){n-=1}return Se.toStringSignificant(Se.divide(e,Se.fromString(t)),n)}))));return t}},map:{add(e,t){return h(t,(t=>Se.add(e,t)))},subtract(e,t){return h(t,(t=>Se.subtract(e,t)))},multiply(e,t){return h(t,(t=>Se.multiply(e,t)))},divide(e,t){return h(t,(t=>Se.divide(e,t)))},power(e,t){return h(t,(t=>Se.power(e,t)))},modulo(e,t){return h(t,(t=>Se.modulo(e,t)))},and(e,t){return h(t,(t=>e&&t))},or(e,t){return h(t,(t=>e||t))},xor(e,t){return h(t,(t=>e!==t))}},mapWithVectorValues:{add(e,t){return h(t,(t=>t.map((t=>Se.add(e,t)))))},subtract(e,t){return h(t,(t=>t.map((t=>Se.subtract(e,t)))))},multiply(e,t){return h(t,(t=>t.map((t=>Se.multiply(e,t)))))},divide(e,t){return h(t,(t=>t.map((t=>Se.divide(e,t)))))},power(e,t){return h(t,(t=>t.map((t=>Se.power(e,t)))))},modulo(e,t){return h(t,(t=>t.map((t=>Se.modulo(e,t)))))},and(e,t){return h(t,(t=>t.map((t=>e&&t))))},or(e,t){return h(t,(t=>t.map((t=>e||t))))},xor(e,t){return h(t,(t=>t.map((t=>e!==t))))}}},complex:{scalar:{add(e,t){return[Se.add(e[0],t),e[1]]},subtract(e,t){return[Se.subtract(e[0],t),e[1]]},multiply(e,t){return[Se.multiply(e[0],t),Se.multiply(e[1],t)]},divide(e,t){return Lt.divide(e,[t,Se.zero])},power(e,t){return Lt.power(e,[t,Se.zero])},modulo(e,t){return M("NA_COMPL_OP","modulo")},and(e,t){return M("NA_COMPL_OP","and")},or(e,t){return M("NA_COMPL_OP","or")},xor(e,t){return M("NA_COMPL_OP","xor")}},complex:{add(e,t){return[Se.add(e[0],t[0]),Se.add(e[1],t[1])]},subtract(e,t){return[Se.subtract(e[0],t[0]),Se.subtract(e[1],t[1])]},multiply(e,t){return Lt.multiply(e,t)},divide(e,t){return Lt.divide(e,t)},power(e,t){return Lt.power(e,t)},modulo(e,t){return M("NA_COMPL_OP","modulo")},and(e,t){return M("NA_COMPL_OP","and")},or(e,t){return M("NA_COMPL_OP","or")},xor(e,t){return M("NA_COMPL_OP","xor")}}},vector:{scalar:{add(e,t){return e.map((e=>Se.add(e,t)))},subtract(e,t){return e.map((e=>Se.subtract(e,t)))},multiply(e,t){return e.map((e=>Se.multiply(e,t)))},divide(e,t){return e.map((e=>Se.divide(e,t)))},power(e,t){return e.map((e=>Se.power(e,t)))},modulo(e,t){return e.map((e=>Se.modulo(e,t)))},and(e,t){return e.map((e=>e&&t))},or(e,t){return e.map((e=>e||t))},xor(e,t){return e.map((e=>e!==t))},concat(e,t){return[...e,t]}},map:{add(e,t){return h(t,(t=>e.map((e=>Se.add(t,e)))))},subtract(e,t){return h(t,(t=>e.map((e=>Se.subtract(t,e)))))},multiply(e,t){return h(t,(t=>e.map((e=>Se.multiply(t,e)))))},divide(e,t){return h(t,(t=>e.map((e=>Se.divide(t,e)))))},power(e,t){return h(t,(t=>e.map((e=>Se.power(t,e)))))},modulo(e,t){return h(t,(t=>e.map((e=>Se.modulo(t,e)))))},and(e,t){return h(t,(t=>e.map((e=>t&&e))))},or(e,t){return h(t,(t=>e.map((e=>t||e))))},xor(e,t){return h(t,(t=>e.map((e=>t!==e))))}}},rowVector:{rowVector:{add(e,t){if(e.length!==t.length){return M("MIS_ELNUM")}return e.map(((e,n)=>Se.add(e,t[n])))},subtract(e,t){if(e.length!==t.length){return M("MIS_ELNUM")}return e.map(((e,n)=>Se.subtract(e,t[n])))},divide(e,t){if(e.length!==t.length){return M("MIS_ELNUM")}return e.map(((e,n)=>Se.divide(e,t[n])))},dot(e,t){if(e.length!==t.length){return M("MIS_ELNUM")}return us(e,t)},cross(e,t){if(e.length!==3||t.length!==3){return M("CROSS")}const n=[Se.zero,Se.zero,Se.zero];n[0]=Se.subtract(Se.multiply(e[1],t[2]),Se.multiply(e[2],t[1]));n[1]=Se.subtract(Se.multiply(e[2],t[0]),Se.multiply(e[0],t[2]));n[2]=Se.subtract(Se.multiply(e[0],t[1]),Se.multiply(e[1],t[0]));return n},multiply(e,t){if(e.length===1&&t.length===1){return[Se.multiply(e[0],t[0])]}return M("MIS_ELNUM")},asterisk(e,t){if(e.length!==t.length){return M("MIS_ELNUM")}return e.map(((e,n)=>Se.multiply(e,t[n])))},power(e,t){if(e.length!==t.length){return M("MIS_ELNUM")}return e.map(((e,n)=>Se.power(e,t[n])))},modulo(e,t){if(e.length!==t.length){return M("MIS_ELNUM")}return e.map(((e,n)=>Se.modulo(e,t[n])))},and(e,t){if(e.length!==t.length){return M("MIS_ELNUM")}return e.map(((e,n)=>e&&t[n]))},or(e,t){if(e.length!==t.length){return M("MIS_ELNUM")}return e.map(((e,n)=>e||t[n]))},xor(e,t){if(e.length!==t.length){return M("MIS_ELNUM")}return e.map(((e,n)=>e!==t[n]))},concat(e,t){return e.concat(t)},unshift(e,t){return[e,t]}},columnVector:{add(e,t){if(e.length===1&&t.length===1){return[Se.add(e[0],t[0])]}return M("MIS_ELNUM")},subtract(e,t){if(e.length===1&&t.length===1){return[Se.subtract(e[0],t[0])]}return M("MIS_ELNUM")},dot(e,t){if(e.length!==t.length){return M("MIS_ELNUM")}return us(e,t)},cross(e,t){if(e.length!==3||t.length!==3){return M("CROSS")}const n=[Se.zero,Se.zero,Se.zero];n[0]=Se.subtract(Se.multiply(e[1],t[2]),Se.multiply(e[2],t[1]));n[1]=Se.subtract(Se.multiply(e[2],t[0]),Se.multiply(e[0],t[2]));n[2]=Se.subtract(Se.multiply(e[0],t[1]),Se.multiply(e[1],t[0]));return n},multiply(e,t){if(e.length!==t.length){return M("MIS_ELNUM")}return us(e,t)},asterisk(e,t){if(e.length!==t.length){return M("MIS_ELNUM")}return e.map(((e,n)=>Se.multiply(e,t[n])))},power(e,t){if(e.length===1&&t.length===1){return[Se.power(e[0],t[0])]}return M("MIS_ELNUM")},modulo(e,t){if(e.length===1&&t.length===1){return[Se.modulo(e[0],t[0])]}return M("MIS_ELNUM")},and(e,t){if(e.length===1&&t.length===1){return[e[0]&&t[0]]}return M("MIS_ELNUM")},or(e,t){if(e.length===1&&t.length===1){return[e[0]||t[0]]}return M("MIS_ELNUM")},xor(e,t){if(e.length===1&&t.length===1){return[e[0]!==t[0]]}return M("MIS_ELNUM")},concat(e,t){return"BAD_CONCAT"},unshift(e,t){return"BAD_CONCAT"}},matrix:{add(e,t){if(e.length!==t[0].length){return M("MIS_ELNUM")}return t.map((t=>t.map(((t,n)=>Se.add(e[n],t)))))},subtract(e,t){if(e.length!==t[0].length){return M("MIS_ELNUM")}return t.map((t=>t.map(((t,n)=>Se.subtract(e[n],t)))))},concat(e,t){if(e.length!==t[0].length){return M("BAD_CONCAT")}return t.map(((t,n)=>[e[n],...t]))},unshift(e,t){if(e.length!==t.length){return M("BAD_CONCAT")}return[e,...t]}}},columnVector:{rowVector:{add(e,t){if(e.length===1&&t.length===1){return[Se.add(e[0],t[0])]}return M("MIS_ELNUM")},subtract(e,t){if(e.length===1&&t.length===1){return[Se.subtract(e[0],t[0])]}return M("MIS_ELNUM")},dot(e,t){if(e.length!==t.length){return M("MIS_ELNUM")}return us(e,t)},cross(e,t){if(e.length!==3||t.length!==3){return M("CROSS")}const n=[Se.zero,Se.zero,Se.zero];n[0]=Se.subtract(Se.multiply(e[1],t[2]),Se.multiply(e[2],t[1]));n[1]=Se.subtract(Se.multiply(e[2],t[0]),Se.multiply(e[0],t[2]));n[2]=Se.subtract(Se.multiply(e[0],t[1]),Se.multiply(e[1],t[0]));return n},multiply(e,t){if(e.length!==t.length){return M("MIS_ELNUM")}return us(e,t)},divide(e,t){return e.map((e=>t.map((t=>Se.divide(e,t)))))},asterisk(e,t){if(e.length!==t.length){return M("MIS_ELNUM")}return e.map(((e,n)=>Se.multiply(e,t[n])))},power(e,t){if(e.length===1&&t.length===1){return[Se.power(e[0],t[0])]}return M("MIS_ELNUM")},modulo(e,t){if(e.length===1&&t.length===1){return[Se.modulo(e[0],t[0])]}return M("MIS_ELNUM")},and(e,t){if(e.length===1&&t.length===1){return[e[0]&&t[0]]}return M("MIS_ELNUM")},or(e,t){if(e.length===1&&t.length===1){return[e[0]||t[0]]}return M("MIS_ELNUM")},xor(e,t){if(e.length===1&&t.length===1){return[e[0]!==t[0]]}return M("MIS_ELNUM")},concat(e,t){return"BAD_CONCAT"},unshift(e,t){return"BAD_CONCAT"}},columnVector:{add(e,t){if(e.length!==t.length){return M("MIS_ELNUM")}return e.map(((e,n)=>Se.add(e,t[n])))},subtract(e,t){if(e.length!==t.length){return M("MIS_ELNUM")}return e.map(((e,n)=>Se.subtract(e,t[n])))},divide(e,t){if(e.length!==t.length){return M("MIS_ELNUM")}return e.map(((e,n)=>Se.divide(e,t[n])))},dot(e,t){if(e.length!==t.length){return M("MIS_ELNUM")}return us(e,t)},cross(e,t){if(e.length!==3||t.length!==3){return M("CROSS")}const n=[Se.zero,Se.zero,Se.zero];n[0]=Se.subtract(Se.multiply(e[1],t[2]),Se.multiply(e[2],t[1]));n[1]=Se.subtract(Se.multiply(e[2],t[0]),Se.multiply(e[0],t[2]));n[2]=Se.subtract(Se.multiply(e[0],t[1]),Se.multiply(e[1],t[0]));return n},multiply(e,t){if(e.length===1&&t.length===1){return[Se.multiply(e[0],t[0])]}return M("MIS_ELNUM")},asterisk(e,t){if(e.length!==t.length){return M("MIS_ELNUM")}return e.map(((e,n)=>Se.multiply(e,t[n])))},power(e,t){if(e.length!==t.length){return M("MIS_ELNUM")}return e.map(((e,n)=>Se.power(e,t[n])))},modulo(e,t){if(e.length!==t.length){return M("MIS_ELNUM")}return e.map(((e,n)=>Se.modulo(e,t[n])))},and(e,t){if(e.length!==t.length){return M("MIS_ELNUM")}return e.map(((e,n)=>e&&t[n]))},or(e,t){if(e.length!==t.length){return M("MIS_ELNUM")}return e.map(((e,n)=>e||t[n]))},xor(e,t){if(e.length!==t.length){return M("MIS_ELNUM")}return e.map(((e,n)=>e!==t[n]))},concat(e,t){if(e.length!==t.length){return M("MIS_ELNUM")}return e.map(((e,n)=>[e,t[n]]))},unshift(e,t){return e.concat(t)}},matrix:{add(e,t){const n=m(t);if(e.length!==t.length){return M("MIS_ELNUM")}for(let r=0;r<t.length;r++){for(let s=0;s<t[0].length;s++){n[r][s]=Se.add(t[r][s],e[s])}}return n},subtract(e,t){const n=m(t);if(e.length!==t.length){return M("MIS_ELNUM")}for(let r=0;r<t.length;r++){for(let s=0;s<t[0].length;s++){n[r][s]=Se.subtract(t[r][s],e[s])}}return n},concat(e,t){if(e.length!==t.length){return M("MIS_ELNUM")}return t.map(((t,n)=>[e[n],...t]))},unshift(e,t){return"BAD_CONCAT"}}},matrix:{scalar:{add(e,t){return e.map((e=>e.map((e=>Se.add(e,t)))))},subtract(e,t){return e.map((e=>e.map((e=>Se.subtract(e,t)))))},multiply(e,t){return e.map((e=>e.map((e=>Se.multiply(e,t)))))},divide(e,t){return e.map((e=>e.map((e=>Se.divide(e,t)))))},power(e,t){if(t==="T"){return is(e)}if(e.length===e[0].length&&Se.areEqual(t,[BigInt(-1),BigInt(1)])){return Wt.invert(e)}return e.map((e=>e.map((e=>Se.power(e,t)))))},modulo(e,t){return e.map((e=>e.map((e=>Se.modulo(e,t)))))}},rowVector:{unshift(e,t){if(e[0].length!==t.length){return M("MIS_ELNUM")}return[...e,t]}},columnVector:{multiply(e,t){if(e[0].length!==t.length){return M("MIS_ELNUM")}return e.map((e=>us(e,t)))},concat(e,t){if(e.length!==t.length){return M("MIS_ELNUM")}return e.map(((e,n)=>[...e,t[n]]))}},matrix:{add(e,t){if(e.length!==t.length){return M("MIS_ELNUM")}if(e[0].length!==t[0].length){return M("MIS_ELNUM")}return e.map(((e,n)=>e.map(((e,r)=>Se.add(e,t[n][r])))))},subtract(e,t){if(e.length!==t.length){return M("MIS_ELNUM")}if(e[0].length!==t[0].length){return M("MIS_ELNUM")}return e.map(((e,n)=>e.map(((e,r)=>Se.subtract(e,t[n][r])))))},dot(e,t){if(e.length!==t.length){return M("MIS_ELNUM")}if(e[0].length!==t[0].length){return M("MIS_ELNUM")}return e.map(((e,n)=>us(e,t[n]))).reduce(((e,t)=>Se.add(e,t)))},cross(e,t){return M("CROSS")},multiply(e,t){},asterisk(e,t){if(e.length!==t.length){return M("MIS_ELNUM")}if(e[0].length!==t[0].length){return M("MIS_ELNUM")}return e.map(((e,n)=>e.map(((e,r)=>Se.multiply(e,t[n][r])))))},divide(e,t){if(e.length!==t.length){return M("MIS_ELNUM")}if(e[0].length!==t[0].length){return M("MIS_ELNUM")}return e.map(((e,n)=>e.map(((e,r)=>Se.divide(e,t[n][r])))))},power(e,t){if(e.length!==t.length){return M("MIS_ELNUM")}if(e[0].length!==t[0].length){return M("MIS_ELNUM")}return e.map(((e,n)=>e.map(((e,r)=>Se.power(e,t[n][r])))))},modulo(e,t){if(e.length!==t.length){return M("MIS_ELNUM")}if(e[0].length!==t[0].length){return M("MIS_ELNUM")}return e.map(((e,n)=>e.map(((e,r)=>Se.modulo(e,t[n][r])))))},and(e,t){if(e.length!==t.length){return M("MIS_ELNUM")}if(e[0].length!==t[0].length){return M("MIS_ELNUM")}return e.map(((e,n)=>e.map(((e,r)=>e&&t[n][r]))))},or(e,t){if(e.length!==t.length){return M("MIS_ELNUM")}if(e[0].length!==t[0].length){return M("MIS_ELNUM")}return e.map(((e,n)=>e.map(((e,r)=>e||t[n][r]))))},xor(e,t){if(e.length!==t.length){return M("MIS_ELNUM")}if(e[0].length!==t[0].length){return M("MIS_ELNUM")}return e.map(((e,n)=>e.map(((e,r)=>e!==t[n][r]))))},concat(e,t){if(e.length!==t.length){return M("MIS_ELNUM")}return e.map(((e,n)=>e.concat(t[n])))},unshift(e,t){if(e[0].length!==t[0].length){return M("MIS_ELNUM")}return e.concat(t)}},map:{}},dataFrame:{multiply(e,t){e.data=e.data.map((e=>isNaN(e[0])?e:e.map((e=>{let n=e.length;if(e.indexOf(".")){n-=1}return Se.toStringSignificant(Se.multiply(t,Se.fromString(e)),n)}))));return e},divide(e,t){e.data=e.data.map((e=>isNaN(e[0])?e:e.map((e=>{let n=e.length;if(e.indexOf(".")){n-=1}return Se.toStringSignificant(Se.divide(t,Se.fromString(e)),n)}))));return e}},map:{scalar:{add(e,t){return h(e,(e=>Se.add(e,t)))},subtract(e,t){return h(e,(e=>Se.subtract(e,t)))},multiply(e,t){return h(e,(e=>Se.multiply(e,t)))},divide(e,t){return h(e,(e=>Se.divide(e,t)))},power(e,t){return h(e,(e=>Se.power(e,t)))},modulo(e,t){return h(e,(e=>Se.modulo(e,t)))},and(e,t){return h(e,(e=>e&&t))},or(e,t){return h(e,(e=>e||t))},xor(e,t){return h(e,(e=>e!==t))}},vector:{add(e,t){return h(e,(e=>t.map((t=>Se.add(e,t)))))},subtract(e,t){return h(e,(e=>t.map((t=>Se.subtract(e,t)))))},multiply(e,t){return h(e,(e=>t.map((t=>Se.multiply(e,t)))))},divide(e,t){return h(e,(e=>t.map((t=>Se.divide(e,t)))))},power(e,t){return h(e,(e=>t.map((t=>Se.power(e,t)))))},modulo(e,t){return h(e,(e=>t.map((t=>Se.modulo(e,t)))))},and(e,t){return h(e,(e=>t.map((t=>e&&t))))},or(e,t){return h(e,(e=>t.map((t=>e||t))))},xor(e,t){return h(e,(e=>t.map((t=>e!==t))))}},matrix:{},map:{}},mapWithVectorValues:{scalar:{add(e,t){return h(e,(e=>e.map((e=>Se.add(e,t)))))},subtract(e,t){return h(e,(e=>e.map((e=>Se.subtract(e,t)))))},multiply(e,t){return h(e,(e=>e.map((e=>Se.multiply(e,t)))))},divide(e,t){return h(e,(e=>e.map((e=>Se.divide(e,t)))))},power(e,t){return h(e,(e=>e.map((e=>Se.power(e,t)))))},modulo(e,t){return h(e,(e=>e.map((e=>Se.modulo(e,t)))))},and(e,t){return h(e,(e=>e.map((e=>e&&t))))},or(e,t){return h(e,(e=>e.map((e=>e||t))))},xor(e,t){return h(e,(e=>e.map((e=>e!==t))))}},vector:{},matrix:{},map:{},mapWithVectorValues:{}}};const hs={scalar:{scalar:{relate(e,t,n,r){return os(e,t,n,r)}},vector:{relate(e,t,n,r){if(r===undefined){return n.map((n=>os(e,t,n,undefined)))}else if(typeof r!=="object"){return n.map((n=>os(e,t,n,r)))}else if(Array.isArray(r)){return n.map(((n,s)=>os(e,t,n,r[s])))}}},matrix:{relate(e,t,n,r){if(r===undefined){return n.map((n=>n.map((n=>os(e,t,n,undefined)))))}else if(typeof r!=="object"){return n.map((n=>n.map((n=>os(e,t,n,r)))))}else if(Array.isArray(r)){return n.map(((n,s)=>n.map(((n,a)=>os(e,t,n,r[s][a])))))}}},map:{relate(e,t,n,r){if(r===undefined){return h(n,(n=>os(e,t,n,undefined)))}else if(typeof r!=="object"){return h(n,(n=>os(e,t,n,r)))}else{const s=new Map;for(const[a,l]of n.entries()){s.set(a,os(e,t,l,r[a]))}return s}}}},vector:{scalar:{relate(e,t,n,r){if(r===undefined){return t.map((t=>os(e,t,n,undefined)))}else if(typeof r!=="object"){return t.map((t=>os(e,t,n,r)))}else if(Array.isArray(r)){return t.map(((t,s)=>os(e,t,n,r[s])))}}}},rowVector:{rowVector:{relate(e,t,n,r){if(r===undefined){return t.map(((t,r)=>os(e,t,n[r],undefined)))}}}},columnVector:{columnVector:{relate(e,t,n,r){if(r===undefined){return t.map(((t,r)=>os(e,t,n[r],undefined)))}}}},matrix:{scalar:{relate(e,t,n,r){if(r===undefined){return t.map((t=>t.map((t=>os(e,t,n,undefined)))))}else if(typeof r!=="object"){return t.map((t=>t.map((t=>os(e,t,n,r)))))}else if(Array.isArray(r)){return t.map(((t,s)=>t.map(((t,a)=>os(e,t,n,r[s][a])))))}}}}};const gs=(e,t)=>{switch(t){case"scalar":return e[1]===BigInt(0);case"vector":for(let t=0;t<e.length;t++){if(e[t][1]===BigInt(0)){return true}}return false;case"matrix":for(let t=0;t<e.length;t++){for(let n=0;n<e[0].length;n++){if(e[t][n][1]===BigInt(0)){return true}}}return false;case"map":for(const[t,n]of Object.entries(e)){if(n[1]===BigInt(0)){return true}}return false;case"mapWithVectorValues":for(const[t,n]of Object.entries(e)){for(let e=0;e<n.length;e++){if(n[e][1]===BigInt(0)){return true}}}return false;default:return false}};const ys=Object.freeze({unary:fs,binary:ms,relations:hs,dtype:ds});const bs=/[\uD800-\uDBFF][\uDC00-\uDFFF][\uFE00\uFE01]?/g;const Rs=(e,t)=>{if(t.dtype!==I.RATIONAL&&t.dtype!==I.RANGE){return M("STR_INDEX")}const n=g(bs,e);let r="";if(n.length===0){if(t.dtype===I.RATIONAL){r=e.charAt(Se.toNumber(t.value)-1)}else if(t.dtype===I.RANGE){const n=Se.toNumber(t.value[0]);const s=Se.toNumber(t.value[1]);const a=t.value[2]==="∞"?e.length:Se.toNumber(t.value[2]);if(s===1){r=e.slice(n-1,a)}else{for(let t=n-1;t<a;t+=s){r+=e.charAt(t)}}}}else{let s=0;let a=0;let l="";let o=0;let i=0;let u=0;if(t.dtype===I.RATIONAL){o=Se.toNumber(t.value);i=1;u=o}else{o=Se.toNumber(t.value[0]);i=Se.toNumber(t.value[1]);u=Se.toNumber(t.value[2])}let c=o;for(let t=0;t<n.length;t++){const o=n[t].index;l=e.slice(a,o);while(c<=u&&s+l.length>=c){r+=l[c-s-1];c+=i}if(c<=u&&s+l.length===c-1){r+=n[t].value;c+=i}if(c>u){return{value:r,unit:null,dtype:I.STRING}}s+=l.length+1;a=o+n[t].length}if(c>=s&&c<=u){l=e.slice(a);while(c<=u&&s+l.length>=c){r+=l[c-s-1];c+=i}}else{return M("BIGINDEX")}}return{value:r,unit:null,dtype:I.STRING}};const As=e=>{const[t,n,r,s,a,l,o]=e;const i=t.value;const u=n.value;const c={type:"line",data:{datasets:undefined},options:{responsive:true,legend:false,title:{display:true,text:r.value},tooltips:{mode:"index"},scales:{xAxes:[{type:"linear",display:true,scaleLabel:{display:true,labelString:s.value}}],yAxes:[{type:"linear",display:true,scaleLabel:{display:true,labelString:a.value}}]}},width:l||"600px",height:o||"300px"};let p;if(Se.isRational(u[0])){p=new Array(1);const e=new Array(i.length);for(let t=0;t<u.length;t++){e[t]={x:Se.toNumber(i[t]),y:Se.toNumber(u[t])}}p[0]={data:e,fill:false,borderColor:"#000",borderWiidth:2}}else{p=new Array(u.length);for(let e=0;e<u.length;e++){const t=new Array(i.length);for(let n=0;n<i.length;n++){t[n]={x:Se.toNumber(i[n]),y:Se.toNumber(u[e][n])}}p[e]={data:t,fill:false,borderColor:"#000",borderWiidth:2}}}c.data.datasets=p;return{value:c,unit:undefined,dtype:I.IMAGE}};function Os(e,t,n){const r=e.format?e.format.value:"h15";if(!Array.isArray(t.name)){e[t.name]=t}else if(t.value===null){for(let n=0;n<t.name.length;n++){e[t.name[n]]={value:null}}}else if(Ut(t)){const n=Boolean(t.dtype&I.QUANTITY);let r=t.resultdisplay;r=r.replace(/\\(begin|end){[bp]matrix}/g,"").trim();const s=r.split(/&|\\\\/);if(t.dtype&I.MATRIX){const r=t.dtype-I.MATRIX;const a=n?t.value.plain.length:t.value.length;const l=t.name.length/a;let o=0;for(let i=0;i<a;i++){for(let a=0;a<l;a++){const l=n?{plain:t.value.plain[i][a],inBaseUnits:t.value.inBaseUnits[i][a]}:t.value[i][a];e[t.name[i]]={name:t.name[o],value:l,resultdisplay:n?Lr(s[o].trim()+" '"+t.unit+"'"):s[o].trim(),expos:t.expos,unit:n?t.unit:undefined,dtype:r};o+=1}}}else{const r=Boolean(t.dtype&I.COLUMNVECTOR);const a=t.dtype-(r?I.COLUMNVECTOR:I.ROWVECTOR);for(let r=0;r<t.name.length;r++){const l=n?{plain:t.value.plain[r],inBaseUnits:t.value.inBaseUnits[r]}:t.value[r];e[t.name[r]]={name:t.name[r],value:l,resultdisplay:n?Lr(s[r].trim()+" '"+t.unit+"'"):s[r].trim(),expos:t.expos,unit:n?t.unit:undefined,dtype:a}}}}else if(t.dtype&I.MAP){const s=t.value.unit;const a=s&&s.name?s.name:undefined;const l=t.dtype-I.MAP;let o=0;if(t.dtype&I.QUANTITY){for(const s of t.value.plain.values()){const i={value:{plain:s},expos:t.expos,factor:t.factor,dtype:l};i.resultdisplay=We(s,r,n);if(a){i.resultdisplay+=" "+E(a)}e[t.name[o]]=i;o+=1}o=0;for(const n of t.value.inBaseUnits.values()){e[t.name[o]].value.inBaseUnits=n;o+=1}}else{for(const s of t.value.values()){const i={value:s,expos:t.expos,factor:t.factor,dtype:l};i.resultdisplay=Se.isRational(s)?We(s,r,n):String(s);if(a){i.resultdisplay+=" "+E(a)}e[t.name[o]]=i;o+=1}}}else if(t.dtype===I.DATAFRAME){for(let n=0;n<t.name.length;n++){const r=t.value.data[n][0];const s=t.value.dtype[n];const a=s&I.RATIONAL?Se.fromString(r):r;const l={value:a,unit:t.unit[t.value.units[n]],dtype:s,resultdisplay:s&I.RATIONAL?Lr(We(a)):Lr(a)};if(t.value.units[n]){l.value={plain:l.value};const e=t.unit[t.value.units[n]];l.value.inBaseUnits=Se.multiply(Se.add(l.value.plain,e.gauge),e.factor);l.expos=e.expos;l.resultdisplay+=" "+E(l.unit.name)}e[t.name[n]]=l}}else if(t.dtype===I.TUPLE){let n=0;for(const r of t.value.values()){e[t.name[n]]=r;n+=1}}else if(t.dtype===I.MODULE){if(t.name.length!==t.value.length){return M("MULT_MIS")}else{let n=0;for(const r of t.value.values()){const s=m(r);e[t.name[n]]=s;n+=1}}}}const vs=(...e)=>{for(let t=0;t<e.length;t++){if(e[t].dtype&I.MAP&&e[t].dtype&I.RATIONAL){return true}}return false};const Ns=e=>e.dtype===I.COMPLEX?"complex":e.dtype<128?"scalar":Wt.isVector(e)?"vector":e.dtype&I.MATRIX?"matrix":e.dtype===I.DATAFRAME?"dataFrame":e.dtype&I.MAP&&(e.dtype&I.ROWVECTOR||e.dtype&I.COLUMNVECTOR)?"mapWithVectorValues":e.dtype&I.MAP?"map":"other";const Es=(e,t)=>{let n=Ns(e);let r=Ns(t);let s=false;if(Ut(e)&&Ut(t)){s=true;if(n==="vector"){n=e.dtype&I.ROWVECTOR?"rowVector":"columnVector"}if(r==="vector"){r=t.dtype&I.ROWVECTOR?"rowVector":"columnVector"}}return[n,r,s]};const Ts=(e,t)=>{if(e.length<t+2){return undefined}return e[t+1]};const Is=["abs","argument","Im","Re","Γ"];const xs=(e,t)=>e.dtype===I.STRING?e.value:e.dtype===I.RATIONAL?We(e.value,"h15",t):Ut(e.dtype)?Wt.displayAlt(e,"h15",t):e.dtype&I.MAP?En.displayAlt(e.value,"h15",t):e.value;const Ms=(e,t,n,r,s)=>{const a=e.split(" ");const l=[];let o;for(let e=0;e<a.length;e++){const i=a[e];const u=i.charAt(0);if(u==="®"){const e=new Array(2);const t=i.indexOf("/");e[0]=BigInt(i.slice(1,t));e[1]=BigInt(i.slice(t+1));const n=Object.create(null);n.value=e;n.unit=Object.create(null);n.unit.expos=T;n.dtype=I.RATIONAL;l.push(Object.freeze(n))}else if(u==="©"){const e=i.slice(1).split(",");const t=new Array(2);t[0]=[BigInt(e[0]),BigInt(e[1])];t[1]=[BigInt(e[2]),BigInt(e[3])];const n=Object.create(null);n.value=t;n.unit=Object.create(null);n.unit.expos=T;n.dtype=I.COMPLEX;l.push(Object.freeze(n))}else if(u==="¿"){const n=i.substring(1);let s=Object.create(null);if(n==="undefined"){s.value=undefined;s.unit=null;s.dtype=0}else if(n==="T"&&Ts(a,e)==="^"&&l.length>0&&Ut(l[l.length-1])){s.value="T";s.unit=null;s.dtype=I.RATIONAL}else{const e=t[n];if(!e){return M("V_NAME",n)}s=Ur(e,r);if(s.dtype===I.ERROR){return s}}l.push(Object.freeze(s))}else if(u==='"'){const e=i.charAt(i.length-1);const t=u==='"'&&e==='"'?i.slice(1,-1).trim():i.trim();l.push(Object.freeze({value:t,unit:null,dtype:I.STRING}))}else if(/^``/.test(i)){l.push(hn.dataFrameFromCSV(O(i.slice(2,-2)),{}))}else if(u==="`"){const e=i.charAt(i.length-1);const t=u==="`"&&e==="`"?i.slice(1,-1).trim():i.trim();l.push(Object.freeze({value:t,unit:null,dtype:I.RICHTEXT}))}else{switch(i){case"true":case"false":{const e=Object.create(null);e.value=i==="true";e.unit=null;e.dtype=I.BOOLEAN;l.push(Object.freeze(e));break}case"π":{const e=Object.create(null);e.value=Se.pi;e.dtype=I.RATIONAL;e.unit=Object.create(null);e.unit.expos=T;l.push(Object.freeze(e));break}case"e":{const e=Object.create(null);e.value="e";e.dtype=I.RATIONAL;e.unit=Object.create(null);e.unit.expos=T;l.push(Object.freeze(e));break}case"j":{const e=Object.create(null);e.value=[Se.zero,Se.one];e.unit=Object.create(null);e.unit.expos=T;e.dtype=I.COMPLEX;l.push(Object.freeze(e));break}case"ℏ":{const e=Object.create(null);e.value=Se.hbar;e.dtype=I.RATIONAL;e.unit=Object.create(null);e.unit.expos=Object.freeze(r?[2,1,-1,0,0,0,0,0]:T);l.push(Object.freeze(e));break}case"∠":{const e=l.pop();const t=l.pop();if(t.dtype!==I.RATIONAL||e.dtype!==I.RATIONAL){return M("NAN_OP")}const n=Se.toNumber(e.value);const r=Object.create(null);r.value=[Se.multiply(t.value,Se.fromNumber(Math.cos(n))),Se.multiply(t.value,Se.fromNumber(Math.sin(n)))];r.unit=Object.create(null);r.unit.expos=T;r.dtype=I.COMPLEX;l.push(Object.freeze(r));break}case"+":case"-":{const e=l.pop();const t=l.pop();const n=i==="+"?"add":"subtract";if(!((t.dtype&I.RATIONAL||t.dtype&I.COMPLEX)&&(e.dtype&I.RATIONAL||e.dtype&I.COMPLEX))){return M("NAN_OP")}if(r){if(!$e(t.unit.expos,e.unit.expos)){return M("UNIT_ADD")}}const[s,a,o]=Es(t,e);const u=Object.create(null);u.value=ys.binary[s][a][n](t.value,e.value);if(u.value.dtype&&u.value.dtype===I.ERROR){return u.value}u.unit=t.unit;u.dtype=ys.dtype[s][a](t.dtype,e.dtype,i);l.push(Object.freeze(u));break}case"~":{const e=l.pop();if(!(e.dtype&I.RATIONAL||e.dtype===I.COMPLEX)){return M("NAN_OP")}const t=Object.create(null);t.value=ys.unary[Ns(e)]["negate"](e.value);if(t.value.dtype&&t.value.dtype===I.ERROR){return t.value}t.unit=e.unit;t.dtype=e.dtype;l.push(Object.freeze(t));break}case"×":case"·":case"*":case"⌧":{const e=l.pop();const t=e.dtype===I.DATAFRAME?m(e):e;const n=l.pop();if(!((n.dtype&I.RATIONAL||n.dtype&I.COMPLEX)&&(t.dtype&I.RATIONAL||t.dtype&I.COMPLEX||t.dtype===I.DATAFRAME))){return M("NAN_OP")}const s=Object.create(null);let a=Object.create(null);if(r){if(n.dtype===I.DATAFRAME&&t.dtype===I.RATIONAL||n.dtype===I.RATIONAL&&t.dtype===I.DATAFRAME){a=n.dtype===I.DATAFRAME?n.unit:t.unit}else{a.expos=n.unit.expos.map(((e,n)=>e+t.unit.expos[n]))}}else{a.expos=T}s.unit=t.dtype===I.DATAFRAME?m(t.unit):Object.freeze(a);const[o,u,c]=Es(n,t);const p=c?{"×":"cross","·":"dot","*":"asterisk","⌧":"multiply"}[i]:"multiply";s.dtype=i==="*"||o==="scalar"||o==="map"||o==="complex"||u==="scalar"||u==="map"||u==="complex"?ys.dtype[o][u](n.dtype,t.dtype,p):i==="·"?I.RATIONAL:i==="×"?I.COLUMNVECTOR:Wt.multResultType(n,t);s.value=ys.binary[o][u][p](n.value,t.value);if(s.value.dtype&&s.value.dtype===I.ERROR){return s.value}l.push(Object.freeze(s));break}case"/":case"//":case"÷":case"///":case"∕":{const e=l.pop();const t=l.pop();if(!((t.dtype&I.RATIONAL||t.dtype===I.COMPLEX)&&(e.dtype&I.RATIONAL||e.dtype===I.COMPLEX))){return M("NAN_OP")}const n=Object.create(null);const s=Object.create(null);s.expos=r?t.unit.expos.map(((t,n)=>t-e.unit.expos[n])):T;n.unit=Object.freeze(s);const[a,o,i]=Es(t,e);n.value=ys.binary[a][o]["divide"](t.value,e.value);n.dtype=ys.dtype[a][o](t.dtype,e.dtype,"divide");if(gs(n.value,Ns(n))){return M("DIV")}l.push(Object.freeze(n));break}case"^":{const e=l.pop();const t=l.pop();if(Wt.isVector(t)&&e.value==="T"){const e=m(t);e.dtype=t.dtype+(t.dtype&I.ROWVECTOR?I.COLUMNVECTOR-I.ROWVECTOR:I.ROWVECTOR-I.COLUMNVECTOR);l.push(Object.freeze(e));break}if(!((t.dtype&I.RATIONAL||t.dtype===I.COMPLEX)&&(e.dtype&I.RATIONAL||e.dtype===I.COMPLEX)||Ut(t)&&e.value==="T")){return M("NAN_OP")}const n=Object.create(null);const s=Object.create(null);s.expos=T;if(r){const n=typeof e.unit==="number"?e.unit:Se.toNumber(e.value);s.expos=t.unit.expos.map((e=>e*n))}n.unit=Object.freeze(s);const[a,o,u]=Es(t,e);n.value=ys.binary[a][o]["power"](t.value,e.value);if(n.value.dtype){return n.value}n.dtype=Lt.isComplex(n.value)?I.COMPLEX:ys.dtype[a][o](t.dtype,e.dtype,i);l.push(Object.freeze(n));break}case"^*":{const e=l.pop();if(!(e.dtype&I.COMPLEX)){return M("NA_REAL"),"conjugate"}const t={value:Lt.conjugate(e.value),unit:e.unit,dtype:e.dtype};l.push(Object.freeze(t));break}case"&":case"&_":{const e=l.pop();const s=l.pop();const a=i==="&"?"concat":"unshift";const[o,u,c]=Es(s,e);let p=Object.create(null);if(s.dtype===I.STRING&&s.dtype===I.STRING){const t=xs(s,n);const r=xs(e,n);p.value=t+r;p.unit=null;p.dtype=I.STRING}else if(s.dtype&I.DATAFRAME&&Wt.isVector(e)&&i==="&"){p=hn.append(s,e,t,r);if(p.dtype===I.ERROR){return p}}else if(s.dtype&I.MAP||e.dtype&I.MAP){p=En.append(s,e,o,u,t);if(p.dtype===I.ERROR){return p}}else{if(r){if(!$e(s.unit.expos,e.unit.expos)){return M("UNIT_ADD")}}p.value=ys.binary[o][u][a](s.value,e.value);if(p.value.dtype){return p.value}p.dtype=ys.dtype[o][u](s.dtype,e.dtype,i);p.unit=s.unit}l.push(Object.freeze(p));break}case"√":case"∛":case"∜":{const e=i.charCodeAt(0)-8728;const t=[BigInt(1),BigInt(e)];const n=l.pop();if(!(n.dtype&I.RATIONAL||n.dtype&I.COMPLEX)){return M("NAN_OP")}const s=Object.create(null);const a=Object.create(null);a.expos=T;if(r){a.expos=n.unit.expos.map((t=>t/e))}s.unit=Object.freeze(a);const o=Ns(n);s.value=ys.binary[o]["scalar"]["power"](n.value,t);if(s.value.dtype&&s.value.dtype===I.ERROR){return s.value}s.dtype=Lt.isComplex(s.value)?I.COMPLEX:ys.dtype[o]["scalar"](n.dtype,I.RATIONAL,i);l.push(Object.freeze(s));break}case"root":{const e=l.pop();const t=l.pop();if(!(t.dtype&I.RATIONAL&(e.dtype&I.RATIONAL))){return M("NAN_OP")}const n=Object.create(null);const s=Object.create(null);s.expos=T;if(r){s.expos=e.unit.expos.map((e=>e/Number(t.value[0])))}n.unit=Object.freeze(s);const a=Se.reciprocal(t.value);const o=Ns(t);n.value=ys.binary[o]["scalar"]["power"](e.value,a);if(n.value.dtype&&n.value.dtype===I.ERROR){return n.value}n.dtype=ys.dtype[o]["scalar"](t.dtype,I.RATIONAL,i);l.push(Object.freeze(n));break}case".":{const e=l.pop();const n=l.pop();const s=Sr(n,e,t,r);if(s.dtype===I.ERROR){return s}l.push(Object.freeze(s));break}case"[]":{const n=Number(a[e+1]);e+=1;const s=[];for(let e=0;e<n;e++){s.unshift(l.pop())}const o=l.pop();let i;if(o.dtype&I.DATAFRAME){i=hn.range(o,s,t,r)}else if(o.dtype&I.MAP){i=En.valueFromMap(o,s,r)}else if(o.dtype&I.STRING){i=Rs(o.value,s[0])}else if(o.dtype===I.MODULE){if(n===1){i=Ur(o.value[s[0].value],r)}else{i={value:new Map,unit:null,dtype:I.TUPLE};for(let e=0;e<s.length;e++){const t=s[e].value;i.value.set(t,Ur(o.value[t],r))}}}else{const e=s[0];const a=n===2?s[1]:{value:Se.zero,unit:T,dtype:I.RATIONAL};i=o.dtype&I.DATAFRAME?hn.range(o,e,a,t,r):Wt.submatrix(o,e,a)}if(i.dtype===I.ERROR){return i}l.push(Object.freeze(i));break}case"..":{const e=l.pop();const t=l.pop();if(!(t.dtype===I.RATIONAL||t.dtype===I.RANGE)){return M("NAN_OP")}const n=Object.create(null);n.unit=null;n.dtype=I.RANGE;n.value=t.dtype===I.RATIONAL?[t.value,Se.one,e.value]:[t.value[0],t.value[2],e.value];l.push(Object.freeze(n));break}case":":{const e=l.pop();const t=l.pop();if(t.dtype!==I.STRING){return M("BAD_KEYSTR")}l.push(Object.freeze({name:t.value,value:e.value,unit:e.unit,dtype:e.dtype}));break}case"normal":case"uniform":case"lognormal":{const e=l.pop();const t=l.pop();break}case"!":{const e=l.pop();if(!(e.dtype&I.RATIONAL)){return M("NAN_OP")}if(r){if(!$e(e.unit.expos,T)){return M("FACT")}}const t=e.value;if(!Se.isInteger(t)||Se.isNegative(t)){return M("FACT")}const n=Object.create(null);n.unit=T;n.dtype=I.RATIONAL;n.value=ys.unary[Ns(e)]["factorial"](t);if(n.value.dtype){return n.value}l.push(Object.freeze(n));break}case"%":{const e=l.pop();if(!(e.dtype&I.RATIONAL)){return M("NAN_OP")}const t=Object.create(null);t.unit=e.unit;t.dtype=e.dtype;t.value=ys.unary[Ns(e)]["percent"](e.value);if(t.value){return t.value}l.push(Object.freeze(t));break}case"|":case"‖":{const e=l.pop();if(!(e.dtype&I.RATIONAL||e.dtype===I.COMPLEX)){return M("NAN_OP")}const t=i==="|"?"abs":"norm";const n=Object.create(null);n.unit=e.unit;n.dtype=I.RATIONAL;n.value=ys.unary[Ns(e)][t](e.value);if(n.value.dtype&&n.value.dtype===I.ERROR){return n.value}l.push(Object.freeze(n));break}case"matrix":{const t=Number(a[e+1]);const n=Number(a[e+2]);e+=2;if(l[l.length-1].dtype===I.RANGE){l.push(Wt.operandFromRange(l.pop().value))}else{l.push(Wt.operandFromTokenStack(l,t,n))}break}case"abs":case"cos":case"sin":case"tan":case"acos":case"asin":case"atan":case"sec":case"csc":case"cot":case"asec":case"acsc":case"acot":case"exp":case"log":case"ln":case"log10":case"log2":case"cosh":case"sinh":case"tanh":case"sech":case"csch":case"coth":case"acosh":case"asinh":case"atanh":case"asech":case"acsch":case"acoth":case"Gamma":case"Γ":case"logGamma":case"logΓ":case"logFactorial":case"cosd":case"sind":case"tand":case"acosd":case"asind":case"atand":case"secd":case"cscd":case"cotd":case"asecd":case"acscd":case"acotd":case"Re":case"Im":case"argument":case"chr":case"round":case"sqrt":case"sign":{const e=l.pop();if(!(e.dtype&I.RATIONAL||e.dtype&I.COMPLEX)){return M("UNREAL",i)}const t=Object.create(null);const n=Object.create(null);n.expos=r?ss.functionExpos(i,[e]):T;if(n.expos.dtype&&n.expos.dtype===I.ERROR){return n.expos}t.unit=Object.freeze(n);const s=e.dtype&I.RATIONAL?"scalar":"complex";const a=e.dtype&I.MAP&&Wt.isVector(e)?h(e.value,(e=>e.map((e=>ss.unary[s][i](e))))):Wt.isVector(e)?e.value.map((e=>ss.unary[s][i](e))):Ut(e)?e.value.map((e=>e.map((e=>ss.unary[s][i](e))))):vs(e)?h(e.value,(e=>ss.unary[s][i](e))):ss.unary[s][i](e.value);if(a.dtype&&a.dtype===I.ERROR){return a}t.value=Object.freeze(a);t.dtype=i==="chr"?e.dtype-I.RATIONAL+I.STRING:e.dtype&I.COMPLEX&&Is.includes(i)?e.dtype-I.COMPLEX+I.RATIONAL:e.dtype;l.push(Object.freeze(t));break}case"logn":case"atan2":case"hypot":case"gcd":case"rms":case"binomial":case"zeros":{const e=[];e.push(l.pop());e.unshift(l.pop());if(!(e[0].dtype&I.RATIONAL)){return M("")}const t=Object.create(null);const n=Object.create(null);n.expos=r?ss.functionExpos(i,e):T;if(n.dtype&&n.dtype===I.ERROR){return n}t.unit=Object.freeze(n);const[s,a]=as("binary",i,e);t.value=Object.freeze(s);t.dtype=a;l.push(Object.freeze(t));break}case"roundn":{const e=l.pop();const t=l.pop();if(!(t.dtype&I.RATIONAL)){return M("")}if(!(e.dtype&I.STRING)){return M("")}if(!/(?:f-?|r)\d+/.test(e.value)){return M("")}const n=e.value.charAt()==="f"?"roundFixed":"roundSignificant";const r=Number(e.value.slice(1));const s=t.dtype&I.MAP&&Wt.isVector(t)?h(t.value,(e=>e.map((e=>ss.binary[n]([e,r]))))):Wt.isVector(t)?t.value.map((e=>ss.binary[n]([e,r]))):Ut(t)?t.value.map((e=>e.map((e=>ss.binary[n]([e,r]))))):vs(t)?h(t.value,(e=>ss.binary[n]([e,r]))):ss.binary[n]([t.value,r]);if(s.dtype&&s.dtype===I.ERROR){return s}const a=Object.create(null);a.value=Object.freeze(s);a.unit=t.unit;a.dtype=t.dtype;if(t.name){a.name=t.name}l.push(Object.freeze(a));break}case"dataframe":case"max":case"min":case"sum":case"product":case"range":case"mean":case"median":case"variance":case"stddev":{const n=Number(a[e+1]);e+=1;const s=[];for(let e=0;e<n;e++){const e=l.pop();if(i!=="dataframe"&&!(e.dtype&I.RATIONAL)){return M("NANARG",i)}s.unshift(e)}if(i==="dataframe"){const e=hn.dataFrameFromVectors(s,t);if(e.dtype&&e.dtype===I.ERROR){return e}l.push(e);break}const o=Object.create(null);const u=Object.create(null);u.expos=r?ss.functionExpos(i,s):T;if(u.dtype&&u.dtype===I.ERROR){return M("")}o.unit=Object.freeze(u);const[c,p]=as("reduce",i,s);o.value=Object.freeze(c);o.dtype=p;l.push(Object.freeze(o));break}case"random":{const e=Object.create(null);e.value=Se.fromNumber(Math.random());e.unit=Object.create(null);e.unit.expos=T;e.dtype=I.RATIONAL;l.push(Object.freeze(e));break}case"isNaN":{const e=l.pop();const t=Object.create(null);t.value=!(e.dtype&I.RATIONAL);t.unit=null;t.dtype=I.BOOLEAN;l.push(Object.freeze(t));break}case"length":{const e=l.pop();const t=e.value;const n=Wt.isVector(e)?t.length:e.dtype&I.MATRIX?t.length*t[0].length:e.dtype===I.STRING?t.length-g(/[\uD800-\uD8FF\uFE00\uFE01]/g,t).length:e.dtype&I.MAP?e.keys().value.length:0;const r=Object.create(null);r.value=Object.freeze(Se.fromNumber(n));r.unit=Object.create(null);r.unit.expos=T;r.dtype=I.RATIONAL;l.push(Object.freeze(r));break}case"count":{const e=l.pop();const t=l.pop();if(e.dtype!==I.STRING||t.dtype!==I.STRING){return M("COUNT")}const n=Object.create(null);n.value=Object.freeze(Se.fromNumber(t.value.split(e.value).length-1));n.unit=Object.create(null);n.unit.expos=T;n.dtype=I.RATIONAL;l.push(Object.freeze(n));break}case"format":{const e=l.pop().value;const t=We(l.pop().value,e);l.push({value:t,unit:null,dtype:I.STRING});break}case"lerp":{const e=new Array(3);e[2]=l.pop();e[1]=l.pop();e[0]=l.pop();const t=ss.lerp(e,r);if(t.dtype===I.ERROR){return t}l.push(t);break}case"matrix2table":{const e=l.pop();const n=l.pop();const r=l.pop();const s=hn.matrix2table(r,n,e,t);if(s.dtype===I.ERROR){return s}l.push(s);break}case"transpose":l.push(Wt.transpose(l.pop()));break;case"trace":l.push(Wt.trace(l.pop()));break;case"fetch":return M("FETCH");case"lineChart":{const t=Number(a[e+1]);e+=1;const n=new Array(t);for(let e=t-1;e>=0;e--){n[e]=l.pop()}return As(n)}case"function":{const o=a[e+1];const i=Number(a[e+2]);e+=2;const u=new Array(i);for(let e=i-1;e>=0;e--){u[e]=l.pop()}let c;if(Ts(a,e)==="."){let t=l.pop().value;if(t.value){t=t.value}const s=t[o];if(s===undefined){return M("F_NAME",o)}if(s.dtype===I.ERROR){return s}if(s.isPrivate){return M("PRIVATE",o)}c=Us(s,u,n,r,t);e+=1}else if(s&&s[o]){const e=s[o];c=Us(e,u,n,r,s)}else if(t[o]&&t[o].dtype===I.MODULE){const e=t[o]["value"];c=Us(e,u,n,r)}else{return M("BAD_FUN_NM",o)}if(c.dtype===I.ERROR){return c}l.push(c);break}case"=":case"==":case"<":case">":case"<=":case"≤":case">=":case"≥":case"≠":case"!=":case"∈":case"∉":case"⋐":{const e=l.pop();const t=l.pop();if(r&&!(t.dtype&I.STRING||e.dtype&I.STRING||t.dtype===I.NULL||e.dtype===I.NULL)){if(!$e(t.unit.expos,e.unit.expos)){return M("UNIT_COMP")}}const n=Object.create(null);n.unit=null;const s=t.dtype&I.BOOLEANFROMCOMPARISON?o.value:undefined;if(d(i,["∈","∉","⋐"])){n.value=os(i,t.value,e.value,s)}else{const[r,a,l]=Es(t,e);n.value=ys.relations[r][a].relate(i,t.value,e.value,s)}if(n.value.dtype&&n.value.dtype===I.ERROR){return n.value}n.dtype=I.BOOLEANFROMCOMPARISON;o=e;l.push(Object.freeze(n));break}case"and":case"or":case"∧":case"∨":case"⊻":{const t=l.pop();const n=l.pop();if(!(n.dtype&I.BOOLEAN)||!(t.dtype&I.BOOLEAN)){return M("LOGIC",a[e])}const r={and:"and",or:"or","∧":"and","∨":"or","⊻":"xor"}[i];const[s,o,u]=Es(n,t);const c=Object.create(null);c.unit=null;c.value=ys.binary[s][o][r](n.value,t.value);if(c.value.dtype&&c.value.dtype===I.ERROR){return c.value}c.dtype=ys.dtype[s][o](n.dtype,t.dtype,i);l.push(Object.freeze(c));break}case"not":case"¬":{const e=l.pop();if(!(e.dtype&I.BOOLEAN)){return M("LOGIC",i)}const t=Object.create(null);t.unit=null;t.value=ys.unary[Ns(e)]["not"](e.value);if(t.value.dtype&&t.value.dtype===I.ERROR){return t.value}t.dtype=I.BOOLEAN;l.push(Object.freeze(t));break}case"cases":{const o=Number(a[e+1]);e+=1;const i=new Array(o);for(let e=o-1;e>=0;e--){i[e]=l.pop()}for(let u=0;u<o;u++){if((i[u].dtype&I.BOOLEAN)===0){return M("LOGIC","if")}if(i[u].value){const o=a[e+u+1].replace(/§/g," ");const i=Ms(o,t,n,r,s);if(i.dtype===I.ERROR){return i}l.push(i);break}}e+=o;break}case"applyUnit":{if(!r){return M("UNIT_AWARE",a[e+1])}const n=l.pop();if(!(n.dtype&I.RATIONAL)){return M("QUANT_NUM")}const s=a[e+1];e+=1;const o=Object.create(null);o.unit=Object.create(null);o.dtype=n.dtype;if(!r){o.value=n.value;if(n.dtype&I.MAP){o.unit=et(s,t)}else{o.unit.name=s}}else{const e=et(s,t);if(e.dtype&&e.dtype===I.ERROR){return e}if(Ut(n)){o.unit.expos=n.unit.expos.map(((t,n)=>t+e.expos[n]));o.value=Wt.convertToBaseUnits(n,e.gauge,e.factor)}else if(n.dtype&I.MAP){o.unit=et(n.unit);o.value=n.value}else{o.unit.expos=n.unit.expos.map(((t,n)=>t+e.expos[n]));o.value=Se.multiply(Se.add(n.value,e.gauge),e.factor)}}l.push(Object.freeze(o));break}case"modulo":{const e=l.pop();const t=l.pop();if(!(t.dtype&I.RATIONAL&(e.dtype&I.RATIONAL))){return M("NAN_OP")}const[n,r,s]=Es(t,e);const a=Object.create(null);a.unit=Object.create(null);a.unit.expos=T;a.value=ys.binary[n][r]["modulo"](t.value,e.value);if(a.value.dtype&&a.value.dtype===I.ERROR){return a.value}a.dtype=ys.dtype[n][r](t.dtype,e.dtype,i);l.push(Object.freeze(a));break}case"⎾⏋":case"⎿⏌":{const e=l.pop();if(!(e.dtype&I.RATIONAL)){return M("NAN_OP")}if(r){if(!$e(e.unit.expos,T)){{return M("")}}}const t=i==="⎾⏋"?"ceil":"floor";const n=Object.create(null);n.value=ys.unary[Ns(e)][t](e.value);if(n.value.dtype&&n.value.dtype===I.ERROR){return n.value}n.unit=e.unit;n.dtype=e.dtype;l.push(Object.freeze(n));break}case"()":{const e=[];e.unshift(l.pop());e.unshift(l.pop());if(r){if(!$e(e[0].unit.expos,T)||!$e(e[1].unit.expos,T)){return M("BINOM")}}const t=Object.create(null);t.unit=Object.create(null);t.unit.expos=T;const[n,s]=as("binary","binomial",e);t.value=n;t.dtype=s;l.push(Object.freeze(t));break}case"raise":return{value:l.pop().value,unit:null,dtype:I.ERROR};case"\\blue":case"\\gray":case"\\green":case"\\orange":case"\\pink":case"\\purple":case"\\red":{const e=m(l.pop());if(e.dtype===I.STRING){e.unit=i.slice(1)}l.push(e);break}}}}const i=l.pop();if(l.length>0){return M("ERROR")}return i};const Cs=(e,t,n)=>{let r;let s=Se.increment(t);let a=0;if(e.dtype===I.RANGE){r=t;s=Se.add(t,n);a=I.RATIONAL}else if(e.dtype===I.STRING&&e.value[Se.fromNumber(t)]==="\ud835"){r=Se.fromNumber(e.value[t]+e.value[t+1]);s=Se.add(t,2);a=I.STRING}else{r=e.value[Se.toNumber(t)];a=e.dtype&I.STRING?I.STRING:e.dtype&I.ROWVECTOR?e.dtype-I.ROWVECTOR:e.dtype&I.COLUMNVECTOR?e.dtype-I.COLUMNVECTOR:e.dtype-I.MATRIX}const l={value:r,unit:e.unit,dtype:a};return[l,s]};const Ls=["while","for"];const Us=(e,t,n,r,s)=>{if(e.dtype===I.ERROR){return e}if(t.length>e.parameters.length){return M("NUMARGS",e.name)}const a=Object.create(null);for(let n=0;n<t.length;n++){a[e.parameters[n]]=t[n]}if(e.parameters.length>t.length){for(let n=t.length;n<e.parameters.length;n++){a[e.parameters[n]]={value:undefined,unit:null,dtype:0}}}const l=[{type:"if",condition:true,endOfBlock:e.statements.length-1}];for(let t=0;t<e.statements.length;t++){const o=e.statements[t];const i=o.stype;const u=l.length-1;switch(i){case"statement":{if(l[u].condition){const e=Ms(o.rpn,a,n,r,s);if(e.dtype===I.ERROR){return e}if(o.name){o.resultdisplay=r?"!!":"!";const[t,s]=ws(o,e,r);Os(a,t,n)}}break}case"if":{if(l[u].condition){const e=Ms(o.rpn,a,n,r,s);if(e.dtype===I.ERROR){return e}l.push({type:"if",condition:e.value,endOfBlock:o.endOfBlock})}else{t=o.endOfBlock}break}case"else if":{if(l[u].type==="if"&&l[u].condition){t=l[u].endOfBlock;l.pop()}else{const e=Ms(o.rpn,a,n,r,s);if(e.dtype===I.ERROR){return e}l[l.length-1].condition=e.value}break}case"else":if(l[u].type==="if"&&l[u].condition){t=l[u].endOfBlock;l.pop()}else{l[u].condition=true}break;case"while":{if(l[u].condition){const e={type:"while",startStatement:t,rpn:o.rpn,endOfBlock:o.endOfBlock};const i=Ms(o.rpn,a,n,r,s);if(i.dtype===I.ERROR){return i}e.condition=i.value;if(e.condition===true){l.push(e)}else{t=o.endOfBlock}}else{t=o.endOfBlock}break}case"for":{const e={type:"for",condition:true,startStatement:t,endOfBlock:o.endOfBlock};const i=o.rpn.split(" ");i.pop();e.dummyVariable=i.shift().slice(1);const u=Ms(i.join(" "),a,n,r,s);e.index=u.dtype&I.RANGE?u.value[0]:Se.fromNumber(0);e.step=u.dtype&I.RANGE?u.value[1]:Se.fromNumber(0);e.endIndex=u.dtype&I.RANGE?u.value[2]:Se.fromNumber(u.value.length-1);const[c,p]=Cs(u,e.index,e.step);e.nextIndex=p;e.iterable=u;l.push(e);a[e.dummyVariable]=c;break}case"break":{if(l[u].condition){for(let e=l.length-1;e>0;e--){if(Ls.includes(l[e].type)||e===0){t=l[e].endOfBlock;l.pop();break}else{l.pop()}}}break}case"end":{if(l[u].type==="if"&&t>=l[u].endOfBlock){l.pop()}else if(l[u].type==="if"&&l[u].condition){if(t<l[u].endOfBlock){t=l[u].endOfBlock}l.pop()}else if(l[u].type==="while"){const e=Ms(l[u].rpn,a,n,r,s);if(e.dtype===I.ERROR){return e}l[u].condition=e.value;if(l[u].condition){t=l[u].startStatement}else{l.pop()}}else if(l[u].type==="for"){l[u].index=l[u].nextIndex;const e=Se.isRational(l[u].index)?Se.lessThanOrEqualTo(l[u].index,l[u].endIndex):l[u].index<=l[u].endIndex;if(e){const[e,n]=Cs(l[u].iterable,l[u].index,l[u].step);a[l[u].dummyVariable]=e;l[u].nextIndex=n;t=l[u].startStatement}else{l.pop()}}break}case"return":if(l[u].condition){if(o.rpn){const e=Ms(o.rpn,a,n,r,s);return e}else{return{value:Se.zero,unit:T,dtype:I.RATIONAL}}}break;case"echo":if(l[u].condition){if(o.rpn){const e=Ms(o.rpn,a,n,r,s);if(e.dtype===I.ERROR){return e}const t=e.dtype===I.RATIONAL?Se.toNumber(e.value):e.value;console.log(t)}}break;case"raise":if(l[u].condition){if(o.rpn){const e=Ms(o.rpn,a,n,r,s);return{value:e.value,unit:null,dtype:I.ERROR}}else{return{value:o.rpn,unit:null,dtype:I.ERROR}}}break}}};const Ss=(e,t)=>{e.value=null;e.resultDisplay="\\color{firebrick}\\text{"+t.value+"}";e.altResultDisplay=t.value;e.error=true;if(e.resulttemplate.indexOf("!")>-1){e.tex+="= "+e.resultDisplay;e.alt+=t.value}else if(e.resulttemplate.indexOf("@")>-1){e.tex=e.resulttemplate.replace(/@@?/,e.resultDisplay);e.alt=e.altresulttemplate.replace(/@@?/,e.altResultDisplay)}else{e.tex=e.tex.replace(/[?%] *[?%]|[?%]/,e.resultDisplay);e.alt=e.alt.replace(/[?%] *[?%]|[?%]/,e.altResultDisplay)}return[e,t]};const ws=(e,t,n)=>{let r=Object.create(null);r.value=m(t.value);r.unit=m(t.unit);r.dtype=t.dtype;if(r.dtype===I.COMPLEX&&Se.isZero(Lt.im(r.value))){r.value=Lt.re(r.value);r.dtype=1}if(r.dtype!==I.ERROR&&n&&e.resultdisplay.indexOf("!")===-1&&(e.expos||r.unit&&r.unit.expos&&Array.isArray(r.unit.expos))){const t=e.expos?e.expos:T;if(!$e(r.unit.expos,t)){const t=e.expos?"UNIT_RES":"UNIT_MISS";r=M(t)}}if(r.dtype===I.ERROR){return Ss(e,r)}if(e.resulttemplate&&e.resulttemplate.indexOf("!")>-1&&!(r.dtype===I.DATAFRAME||r.dtype&I.MAP||Ut(r)||r.dtype&I.TUPLE)){return Ss(e,M("BAD_DISPLAY"))}r.value=r.dtype===I.RATIONAL?Se.normalize(r.value):r.dtype===I.COMPLEX?[Se.normalize(r.value[0]),Se.normalize(r.value[1])]:r.value;e.dtype=r.dtype;const s=e.factor&&(e.factor!==1||e.gauge);if(r.dtype&I.DATAFRAME||e.resultdisplay.indexOf("!")>-1){e.unit=r.unit}else if(n&&r.dtype&I.RATIONAL){if(!s&$e(r.unit.expos,T)){e.factor=Se.one;e.gauge=Se.zero;e.expos=T}r.value={plain:Ut(r)?Wt.convertFromBaseUnits({value:r.value,dtype:r.dtype},e.gauge,e.factor):r.dtype&I.MAP?En.convertFromBaseUnits(r.value,e.gauge,e.factor):Se.subtract(Se.divide(r.value,e.factor),e.gauge),inBaseUnits:r.value};e.dtype+=I.QUANTITY;e.expos=r.unit.expos}else if(s){r.value={plain:r.value,inBaseUnits:Ut(r)&&r.dtype&I.MAP?h(r.value,(t=>t.map((t=>Se.multiply(Se.add(t,e.gauge),e.factor))))):Ut(r)?Wt.convertToBaseUnits({value:r.value,dtype:r.dtype},e.gauge,e.factor):r.dtype&I.MAP?h(r.value,(t=>Se.multiply(Se.add(t,e.gauge),e.factor))):Se.multiply(Se.add(r.value,e.gauge),e.factor)};e.dtype+=I.QUANTITY}else if(r.dtype&I.RATIONAL||r.dtype&I.COMPLEX){e.expos=T}if(r.value){e.value=r.value}return[e,r]};const Ds=(e,t,n="1,000,000.")=>{e.tex=e.template;e.alt=e.altTemplate;const r=/\?\?|!!|%%|@@|¡¡/.test(e.resulttemplate);const s=t.format?t.format.value:"h15";if(e.tex.indexOf("〖")>-1){const a=jr(e.tex,t,r,s,n);if(a.dtype&&a.dtype===I.ERROR){const[t,n]=Ss(e,a);return t}else{e.tex=a}}if(e.rpn){let a=Ms(e.rpn,t,n,r);if(a.dtype===I.ERROR){[e,a]=Ss(e,a);return e}let l;[e,l]=ws(e,a,r);if(e.error){return e}e=Pr(e,l,s,n,r)}return e};const Bs=new RegExp(Se.numberPattern);const _s=/('[^']+'|[°ΩÅK])$/;const Ps="(-?(?:0x[0-9A-Fa-f]+|[0-9]+(?: [0-9]+\\/[0-9]+|(?:\\.[0-9]+)?(?:e[+-]?[0-9]+|%)?)))";const ks="(0x[0-9A-Fa-f]+|[0-9]+(?: [0-9]+\\/[0-9]+|(?:\\.[0-9]+)?(?:e[+-]?[0-9]+|%)?))";const zs=new RegExp("^"+Ps+"(?: *([+-]) *j +"+ks+"|∠"+Ps+"(°)?)");const js=(e,t,n)=>{let r="";let s="";const a=_s.exec(e);if(a){r=a[0].replace(/'/g,"").trim();e=e.slice(0,-a[0].length).trim();s=E(r)}if(/^[({[].* to /.test(e)){return[0,null,I.ERROR,""]}else if(e==="true"||e==="false"){return[Boolean(e),null,I.BOOLEAN,`\\mathord{\\text{${e}}}`]}else if(/^\x22.+\x22/.test(e)){if(t==="format"){return Ye(e.slice(1,-1).trim())}else{const t=Lr(e,n);return[e,undefined,I.STRING,t]}}else if(/^[([]/.test(e)){const[t,a]=Lr(e,n,true);const l=Ms(a,{},n,false,{});let o=l.dtype&I.RATIONAL?T:null;let i=l.dtype;if(r){o=r;i+=I.QUANTITY;return[l.value,o,i,t+"\\,"+s]}else{return[l.value,o,i,t]}}else if(/^``/.test(e)){e=O(e.slice(2,-2));const t=hn.dataFrameFromCSV(e,{});if(t.dtype===I.DATAFRAME){return[t.value,t.unit,I.DATAFRAME,hn.display(t.value,"h3",n)]}else{if(r){t.unit=r;t.dtype=I.MAP+I.RATIONAL+I.QUANTITY}return[t.value,t.unit,t.dtype,En.display(t,"h3",n)+"\\;"+s]}}else if(zs.test(e)){const t=Lr(e,n);const r=e.match(zs);let s;let a;if(r[3]){s=Se.fromString(r[1]);a=Se.fromString(r[3]);if(r[2]==="-"){a=Se.negate(a)}}else{const e=Se.fromString(r[1]);let t=Se.fromString(r[4]);if(r[5]){t=Se.divide(Se.multiply(t,Se.pi),Se.fromNumber(180))}s=Se.multiply(e,Se.fromNumber(Math.cos(Se.toNumber(t))));a=Se.multiply(e,Se.fromNumber(Math.sin(Se.toNumber(t))))}return[[s,a],T,I.COMPLEX,t]}else if(e.match(Bs)){const t=Lr(e,n);if(r){return[Se.fromString(e),r,I.RATIONAL+I.QUANTITY,t+"\\;"+s]}else{return[Se.fromString(e),T,I.RATIONAL,t]}}else{return[0,null,I.ERROR,""]}};const Vs=(e,t)=>{if(e.name&&e.value&&e.dtype&I.QUANTITY){const n=e.unit===undefined?{name:"",factor:Se.one,gauge:Se.zero,log:"",expos:T}:typeof e.unit==="string"?et(e.unit,t):e.unit;if(n.dtype&&n.dtype===I.ERROR){e.tex+=" \\color{firebrick}{\\text{"+n.value+"}}";e.alt+=n.value;return e}e.expos=n.expos;if(Se.isRational(e.value)){e.value={plain:e.value,inBaseUnits:Se.multiply(Se.add(e.value,n.gauge),n.factor)}}else if(Ut(e)){e.value={plain:e.value,inBaseUnits:Wt.convertToBaseUnits(e,n.gauge,n.factor)}}else if(e.dtype&I.MAP){const t=m(e.value);const r=En.convertToBaseUnits(t,n.gauge,n.factor);e.value={plain:t,inBaseUnits:r};e.unit={expos:n.expos}}}if(e.rpn&&!e.value){if(e.unit){const n=e.unit?et(e.unit,t):{factor:1,gauge:0,expos:T};e.factor=n.factor;e.gauge=n.gauge;e.expos=n.expos}}};const Fs=/^(?:[A-Za-zıȷ\u0391-\u03C9\u03D5\u210B\u210F\u2110\u2112\u2113\u211B\u212C\u2130\u2131\u2133]|(?:\uD835[\uDC00-\udc33\udc9c-\udcb5]))[A-Za-z0-9_\u0391-\u03C9\u03D5\u0300-\u0308\u030A\u030C\u0332\u20d0\u20d1\u20d6\u20d7\u20e1]*′*$/;const qs=/^(if|else if|else|return|raise|while|for|break|echo|end)\b/;const Gs=/^(?:private +)?function (?:[A-Za-zıȷ\u0391-\u03C9\u03D5\u210B\u210F\u2110\u2112\u2113\u211B\u212C\u2130\u2131\u2133]|(?:\uD835[\uDC00-\udc33\udc9c-\udcb5]))[A-Za-z0-9_\u0391-\u03C9\u03D5\u0300-\u0308\u030A\u030C\u0332\u20d0\u20d1\u20d6\u20d7\u20e1]*′*\(/;const Ys=/"[^"]*"|``.*|`[^`]*`|'[^']*'|#|[^"`'#]+/g;const Ws=e=>{const t=e.indexOf("=");if(t===-1){return false}const n=e.slice(0,t).trim();if(Fs.test(n)){return true}if(n.indexOf(",")===-1){return false}let r=true;const s=n.split(",");s.forEach((e=>{if(!Fs.test(e.trim())){r=false}}));return r};const $s=e=>{const t=g(Ys,e);for(let n=0;n<t.length;n++){if(t[n].value==="#"){e=e.slice(0,t[n].index);break}}return e.trim()};const Hs=(e,t)=>{const n=Object.create(null);const r=e.split(/\r?\n/g);for(let e=0;e<r.length;e++){const s=$s(r[e]);if(s.length===0){continue}if(Gs.test(s)){const[s,a]=Zs(r,t,e);if(s.dtype&&s.dtype===I.ERROR){return s}n[s.name]=s;e=a}else if(Ws(s)){const[s,a]=Ks(r,t,e);n[s.name]=s;e=a}}return{value:n,unit:null,dtype:I.MODULE}};const Xs=(e,t,n)=>{for(let r=n+1;r<t.length;r++){const n=t[r].trim();if(n.length===0){continue}e+="\n"+n;if(n.slice(-2)==="``"){return[e,r]}}};const Zs=(e,t,n)=>{const r=$s(e[n]);const s=r.indexOf("function");const a=r.indexOf("(");const l=r.slice(s+8,a).trim();const o=/^private /.test(r);const i=r.slice(a+1,-1).trim();const u=i.length===0?[]:i.split(/, */g);const c={name:l,dtype:I.MODULE,isPrivate:o,parameters:u,statements:[]};const p=[];let f="";let d=false;let m="";let h="";let g=false;for(let r=n+1;r<e.length;r++){let n=$s(e[r]);if(n.length===0){continue}if(d){n=m.slice(-1)===";"&&"})]".indexOf(n.charAt(0))>-1?m.slice(0,-1).trim()+n:m+n}if(/[{([,;]$/.test(n)){d=true;m=n;continue}else if(e.length>r+1&&/^\s*[+\-)\]}]/.test(e[r+1])){d=true;m=n;continue}const s=qs.exec(n);if(s){h=s[0];f=n.slice(h.length).trim();if(f.length>0&&/^``/.test(f)){[f,r]=Xs(f,e,r)}}else{if(Ws(n)){const t=n.indexOf("=");h=n.slice(0,t-1).trim();f=n.slice(t+1).trim();if(/^``/.test(f)){[f,r]=Xs(f,e,r)}g=true}else{return[M("FUNC_LINE",l+", line "+(r+1)),r]}}let a="";if(f){[,a]=Lr(f,t,true)}const o=g?"statement":h;if(g&&/[,;]/.test(h)){h=h.split(/[,;]/).map((e=>e.trim()))}c.statements.push({name:h,rpn:a,stype:o});if(o==="if"||o==="while"||o==="for"){p.push({type:o,statementNum:c.statements.length-1})}else if(o==="end"){if(p.length===0){return[c,r]}const e=p[p.length-1];c.statements[e.statementNum].endOfBlock=c.statements.length-1;p.pop()}g=false;d=false;m="";h="";f=""}return[M("END_MISS",l),0]};const Ks=(e,t,n)=>{let r=false;let s="";let a=n;for(let t=n;t<e.length;t++){const n=$s(e[t]);if(n.length===0){continue}if(r){s=s.slice(-1)===";"&&"})]".indexOf(n.charAt(0))>-1?s.slice(0,-1).trim()+n:s+n}else{s=n}if(/[{([,;]$/.test(s)){r=true}else if(e.length>t+1&&/^\s*[+\-)\]}]/.test(e[t+1])){r=true}else{a=t;break}}const l=s.indexOf("=");let o=s.slice(0,l).trim();if(/[,;]/.test(o)){o=o.split(/[,;]/).map((e=>e.trim()))}const i=s.slice(l+1).trim();const[u,c,p,f]=js(i,o,t);const d={name:o,value:u,unit:c,dtype:p,resultDisplay:f};Vs(d,{});return[d,a]};const Qs=/[+\-×·*∘⌧/^%‰&√!¡|‖&=<>≟≠≤≥∈∉⋐∧∨⊻¬]|\xa0(function|modulo|\\atop|root|sum|\?{}|%|⎾⏋|⎿⏌|\[\]|\(\))\xa0/;const Js=/^(``.+``|[$$£¥\u20A0-\u20CF]?(\?{1,2}|@{1,2}|%{1,2}|!{1,2})[^=!(?@%!{})]*)$/;const ea=/^[^=]+=\s*``/;const ta=/^[$£¥\u20A0-\u20CF]/;const na=/^(?:[A-Za-zıȷ\u0391-\u03C9\u03D5\u210B\u210F\u2110\u2112\u2113\u211B\u212C\u2130\u2131\u2133]|(?:\uD835[\uDC00-\udc33\udc9c-\udcb5]))[A-Za-z0-9_\u0391-\u03C9\u03D5\u0300-\u0308\u030A\u030C\u0332\u20d0\u20d1\u20d6\u20d7\u20e1]*′*$/;const ra=/^[([](?:[A-Za-zıȷ\u0391-\u03C9\u03D5\u210B\u210F\u2110\u2112\u2113\u211B\u212C\u2130\u2131\u2133]|(?:\uD835[\uDC00-\udc33\udc9c-\udcb5]))[A-Za-z0-9_\u0391-\u03C9\u03D5\u0300-\u0308\u030A\u030C\u0332\u20d0\u20d1\u20d6\u20d7\u20e1]*′*[,;].+[)\]]$/;const sa=/^(π|true|false|root|if|else|and|or|otherwise|modulo|for|while|break|return|raise)$/;const aa=(e,t)=>{const n=Lr(e,t);return{entry:e,tex:n,alt:e}};const la=(e,t="1,000,000.")=>{let n="";let r="";let s="";let a=false;let l=false;let o=false;let i=false;let u=false;let c=0;let p="";let f="";let d="";let m="";let h="";let g=false;let y;let b;let R;let A="";if(Gs.test(e)){let n="";const r=e.indexOf("function");const s=e.indexOf("(");n=e.slice(r+8,s).trim();const a=Hs(e,t);const l=a.dtype&&a.dtype===I.ERROR;if(l){window.alert(a.value)}const o={entry:e,name:n,value:l?a.value:a.value[n],dtype:l?I.ERROR:I.MODULE,error:l};return o}A=e;const O=ea.test(A);const v=O?A.indexOf("=")+1:A.lastIndexOf("=")+1;if(v>1){r=A.substring(0,v-1).replace(/ +$/,"");if(r.length>0&&/;\s*$/.test(r)){u=true;r=r.replace(/;\s*$/,"")}r=r.trim();s=A.substring(v).trim();if(Js.test(s)){a=true;l=s.indexOf("!")>-1;o=s.indexOf("@")>-1;i=s.indexOf("%")>-1;c=r.indexOf("=")+1;if(c){n=r.slice(0,c-1).trim();p=r.substring(c).trim();if(ra.test(n)){n=n.slice(1,-1).trim()}if(/[,;]/.test(n)){const e=n.split(/[,;]/);for(let n=0;n<e.length;n++){const r=e[n].trim();if(sa.test(r)||!na.test(r)){return aa(A,t)}}h=e.map((e=>e.trim()))}else{if(na.test(n)&&!sa.test(n)){h=n}else{p=r}}}else{p=r}}else if(O){h=r;p=s}else if(na.test(r)&&!sa.test(r)){h=r;if(s===""){const e=Lr(A,t);return{entry:A,tex:e,alt:A}}}else{return aa(A,t)}}else{return aa(A,t)}if(p.length>0){if(/^\s*fetch\(/.test(p)){f=""}else{[f,d]=Lr(p,t,true);if(l||o||f.indexOf("〖")===-1||/\u00a0for\u00a0/.test(d)){f=""}else if(i){f=""}else{if(Qs.test(" "+d+" ")){f="{\\color{#0000ff}"+f+"}"}else{f=""}}}}if(ta.test(s)){g=true;b=s.charAt(0)}if(a){y=null;if(!g){b=s.replace(/[?@%!']/g,"").trim()}if(l){m=s}else{if(b){m=s.trim().replace(/([^ ?!@%]+)$/,"'"+"$1"+"'");m=Lr(m,t).replace(/\\%/g,"%").replace("@ @","@@")}else{m=Lr(s,t).replace(/\\%/g,"%").replace("@ @","@@")}m=m.replace(/\\text\{(\?\??|%%?)\}/,"$1");m=m.replace(/([?%]) ([?%])/,"$1"+"$2")}}else{[y,b,R,m]=js(s,h,t);if(R===I.ERROR){return aa(A,t)}d=""}let N="";let E="";if(!o){N=Lr(r,t);if(u){N="\\begin{aligned}"+N;const e=N.indexOf("=");N=N.slice(0,e)+"&"+N.slice(e)}const e=u?"\\\\ &":"";E=r;if(f.length>0&&!i){N+=` ${e}= `+f}if(!l){N+=" "+(u?"\\\\&":"")+"= "+m;E+=" = "+s}if(u){N+="\\end{aligned}"}}const T={entry:A,template:N,altTemplate:E,resultdisplay:m,dtype:R,error:false};if(h){T.name=h}if(a){T.resulttemplate=m;T.altresulttemplate=s}else{T.tex=N;T.alt=E}if(d){T.rpn=d}if(y){T.value=y}if(b){if(Array.isArray(b)){T.expos=b}else{T.unit=b}}return T};const oa=/^(?:[A-Za-zıȷ\u0391-\u03C9\u03D5\u210B\u210F\u2110\u2112\u2113\u211B\u212C\u2130\u2131\u2133]|(?:\uD835[\uDC00-\udc33\udc9c-\udcb5]))[A-Za-z0-9_\u0391-\u03C9\u03D5\u0300-\u0308\u030A\u030C\u0332\u20d0\u20d1\u20d6\u20d7\u20e1]*′* *= *(?:fetch|import)\(/;const ia=/^[^=]+= *import/;const ua=/^Error while reading file. Status Code: \d*$/;const ca=/\\text{[^}]+}/;const pa=/^lineChart/;const fa=e=>{const t=e.replace(/^[^()]+\("?/,"");return t.replace(/"?\).*$/,"").trim()};const da=(e,t,n,r)=>{const s=Object.create(null);s.entry=e;s.name=e.replace(/=.+$/,"").trim();let a=Lr(e.replace(/\s*=\s*[$$£¥\u20A0-\u20CF]?(?:!{1,2}).*$/,""),r);const l=fa(e);if(/\.(?:csv|txt)$/.test(l)){const e=l.replace(/.+\//,"");const t=ca.exec(a);a=a.slice(0,t.index)+"\\text{"+y(e)+"})"}s.tex=a;s.alt=e;if(t==="File not found."||ua.test(t)){s.dtype=I.ERROR;s.tex+=` = \\red{\\text{${t}}}`;s.alt=" = "+t;s.value=null;return s}const o=ia.test(e)?Hs(t,r):hn.dataFrameFromCSV(t,n);s.value=o.value;s.dtype=o.dtype;s.unit=o.unit;s.isFetch=true;if(o.dtype===I.MODULE&&/^importedParameters *=/.test(e)){let e="\\begin{matrix}";let t=0;Object.entries(o.value).forEach((([r,s])=>{n[r]=s;e+=Lr(s.name)+" & ";t+=1;if(t===5){e=e.slice(0,-1)+"\\\\ ";t=0}}));e=e.slice(0,t===0?-2:-1)+"\\end{matrix}";s.tex=s.tex.replace("\\mathrm{importedParameters}",e)}return s};const ma=(e,t,n,r,s,a,l,o)=>{const i=e.state.doc;const u=i.attrs.inDraftMode;const c=i.attrs.decimalFormat;Promise.all(l.map((e=>fetch(e,{method:"GET",headers:{"Content-Type":"text/plain;charset=UTF-8"},mode:"cors"})))).then((e=>Promise.all(e.map((e=>{if(e.status!==200&&e.status!==0){return e.status===404?"File not found.":"Error while reading file. Status Code: "+e.status}return e.text()}))))).then((l=>{const p=e.state;if(p.selection.to===s+1){p.selection=p.selection.constructor.near(p.doc.resolve(s+1))}const f=p.tr;for(let e=0;e<l.length;e++){const s=o[e];const p=n?i.nodeAt(s).attrs.entry:r.entry;const d=da(p,l[e],a,c);d.inDraftMode=u;f.replaceWith(s,s+1,t.createAndFill(d));if(d.name){Os(a,d,c)}}try{ha(e,t,n,r,s,a,f)}catch(n){const a=r.template.indexOf(r.resultdisplay);r.tex=r.template.slice(0,a)+"\\text{"+n+"}";f.replaceWith(s,s+1,t.createAndFill(r));f.setSelection(e.state.selection.constructor.near(f.doc.resolve(s+1)));e.dispatch(f);e.focus()}}))};const ha=(e,t,n,r,s,a,l)=>{const o=e.state.doc;const i=o.attrs.decimalFormat;if(!n&&(r.name||r.rpn)){o.nodesBetween(0,s,(function(e){if(e.type.name==="calculation"){const t=e.attrs;if(t.name){if(t.name==="importedParameters"){Object.entries(t.value).forEach((([e,t])=>{a[e]=t}))}else{Os(a,t,i)}}}}));o.nodesBetween(s+1,o.content.size,(function(e,t){if(e.type.name==="calculation"&&e.attrs.dtype===I.MODULE){Os(a,e.attrs,i)}}));if(!oa.test(r.entry)){let e=m(r);Vs(e,a);if(e.rpn){e=Ds(e,a,i)}if(e.name){Os(a,e,i)}e.displayMode=r.displayMode;l.replaceWith(s,s+1,t.createAndFill(e))}}const u=n?0:s+1;o.nodesBetween(u,o.content.size,(function(e,r){if(e.type.name==="calculation"){const s=n?!oa.test(e.attrs.entry):!e.attrs.isFetch;if(s){const s=e.attrs.entry;let o=n||pa.test(s)?la(s,i):m(e.attrs);o.displayMode=e.attrs.displayMode;if(n||o.rpn||o.name&&!(a[o.name]&&a[o.name].isFetch)){if(n){Vs(o,a)}if(o.rpn){o=Ds(o,a,i)}if(o.name){Os(a,o,i)}if(n||o.rpn){l.replaceWith(r,r+1,t.createAndFill(o))}}else if(o.name&&!(n&&o.isFetch)){if(o.name){if(o.name==="importedParameters"){Object.entries(o.value).forEach((([e,t])=>{a[e]=t}))}else{Os(a,o,i)}}}}}}));if(!n){l.setSelection(e.state.selection.constructor.near(l.doc.resolve(s+1)))}e.dispatch(l);e.focus()};function ga(e,t,n=false,r,s){const a=e.state.doc;if(!(n||r.name||r.rpn)){const n=e.state;if(n.selection.to===s+1){n.selection=n.selection.constructor.near(n.doc.resolve(s+1))}const a=n.tr;try{a.replaceWith(s,s+1,t.createAndFill(r))}catch(e){}finally{e.dispatch(a);e.focus()}return}const l=Object.create(null);l.format={value:"h15"};const o=[];const i=[];if(!n){const e=r.entry;if(oa.test(e)){o.push(fa(e));i.push(s)}}else{a.nodesBetween(0,a.content.size,(function(e,t){if(e.type.name==="calculation"&&!e.attrs.value){const n=e.attrs.entry;if(oa.test(n)){o.push(fa(n));i.push(t)}else if(/^function /.test(n)){e.attrs=la(n,a.attrs.decimalFormat);Os(l,e.attrs,a.attrs.decimalFormat)}}else if(e.attrs.isFetch||e.attrs.dtype&&e.attrs.dtype===I.MODULE){Os(l,e.attrs,a.attrs.decimalFormat)}}))}if(o.length>0){ma(e,t,n,r,s,l,o,i)}else{const a=e.state;if(a.selection.to===s+1){a.selection=a.selection.constructor.near(a.doc.resolve(s+1))}const o=a.tr;try{ha(e,t,n,r,s,l,o)}catch(n){const a=r.template.indexOf(r.resultdisplay);r.tex=r.template.slice(0,a)+"\\text{"+n+"}";o.replaceWith(s,s+1,t.createAndFill(r));o.setSelection(e.state.selection.constructor.near(o.doc.resolve(s+1)));e.dispatch(o);e.focus()}}}const ya=(e,t={},n=false,r="1,000,000.")=>{let s=la(e,r);Vs(s,t);if(s.rpn){s=Ds(m(s),t,r)}if(s.name){Os(t,s)}return n?s.alt:s.tex};t.autoCorrect=f;t.calculate=ya;t.evaluate=Ds;t.improveQuantities=Vs;t.parse=Lr;t.prepareStatement=la;t.scanModule=Hs;t.updateCalculations=ga;Object.defineProperty(t,"__esModule",{value:true})}));