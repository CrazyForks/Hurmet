(function(e,t){typeof exports==="object"&&typeof module!=="undefined"?t(exports):typeof define==="function"&&define.amd?define(["exports"],t):(e=e||self,t(e.hurmet={}))})(this,function(e){"use strict";const t=(e,t)=>{if(t.length===0){return false}let n=0;let r=0;let s=t.length-1;while(r<s){n=Math.floor((r+s)/2);if(e>t[n]){r=n+1}else{s=n}}return e===t[r]};const n=e=>{if(null==e||"object"!=typeof e){return e}if(e instanceof Date){return(new Date).setTime(e.valueOf())}if(Array.isArray(e)){const t=[];for(let r=0,s=e.length;r<s;r++){t[r]=n(e[r])}return t}if(e instanceof Map){const t=new Map;for(const[r,s]of e.entries()){t.set(r,n(s))}return t}if(typeof e==="object"){const t=Object.create(null);Object.entries(e).forEach(([e,r])=>{t[e]=n(r)});return t}throw new Error("Unable to clone obj! Its type isn't supported.")};const r=(e,t)=>{const n=new Map;for(const[r,s]of e.entries()){n.set(r,t(s))}return n};const s=(e,t)=>{if(e.constructor!==RegExp){throw new Error("not RegExp")}const n=[];let r=null;if(e.global){while(r=e.exec(t)){n.push({value:r[0],index:r.index,length:r[0].length})}}else if(r=e.exec(t)){n.push({value:r[0],index:r.index,length:r[0].length})}return n};const a=/([!?:<>\-~/]=| \.|~~|\+-|-\+|<-->|<->|<>|<--|<-|-->|->|=>|-:|\^\^|\||\/\/\/|\b(bar|hat|vec|tilde|dot|ddot|ul)|\b(bb|bbb|cc|ff|ss) [A-Za-z]|\\?[A-Za-z]{2,}|\\ |root [234]|<<|>>|\^-?[0-9]+|\\\|||\/_|''|""|00)\s$/;const l={acute:"́",bar:"̅",breve:"̆",check:"̌",dot:"̇",ddot:"̈",grave:"̀",hat:"̂",harpoon:"⃑",leftharpoon:"⃐",leftrightvec:"⃡",leftvec:"⃖",ring:"̊",tilde:"̃",vec:"⃗",ul:"̲"};const i={alpha:"α",beta:"β",chi:"χ",delta:"δ",Delta:"Δ",epsilon:"ε",varepsilon:"ɛ",eta:"η",gamma:"γ",Gamma:"Γ",iota:"ι",kappa:"κ",lambda:"λ",Lambda:"Λ",mu:"μ",nu:"ν",omega:"ω",Omega:"Ω",phi:"ϕ",varphi:"φ",Phi:"Φ",pi:"π",Pi:"Π",psi:"ψ",Psi:"Ψ",rho:"ρ",sigma:"σ",Sigma:"Σ",tau:"τ",theta:"θ",vartheta:"ϑ",Theta:"Θ",upsilon:"υ",xi:"ξ",Xi:"Ξ",zeta:"ζ",prime:"ʹ",ee:"ε",ll:"λ",sqrt:"√","root 2":"√","root 3":"∛","root 4":"∜",AA:"∀",CC:"ℂ",EE:"∃",HH:"ℍ",NN:"ℕ",QQ:"ℚ",RR:"ℝ",ZZ:"ℤ",OO:"𝒪",ii:"√(-1)",oo:"∞",ooo:"°",not:"¬","-:":"÷","\\ ":"˽","\\cdots":"⋯","\\vdots":"⋮","\\ddots":"⋱","\\floor":"⎿⏌","\\ceil":"⎾⏋",xx:"×","\\int":"∫","\\iint":"∬","\\oint":"∮","\\sum":"∑",nn:"∩",nnn:"⋂",uu:"∪",uuu:"⋃","\\del":"∂","\\grad":"∇","\\hbar":"ℏ","\\ell":"ℓ","\\nabla":"∇","\\alef":"ℵ","\\subset":"⊂","\\supset":"⊃","\\Subset":"⋐","\\forall":"∀","\\therefore":"∴","\\mapsto":"↦","\\checkmark":"✓",bar:"ˉ",dot:"˙",ddot:"¨",hat:"ˆ",tilde:"˜",vec:" ⃗","\\land":"∧","\\lor":"∨","\\not":"¬","\\notin":"∉","\\euro":"€","\\pound":"£","\\yen":"¥","^^":"∧",vv:"∨",vvv:"⋁","\\xor":"⊻","\\in":"∈","!=":"≠","<>":"≠",":=":"≔","?=":"≟","<=":"≤",">=":"≥","-=":"≡","~=":"≅","~~":"≈","+-":"±","-+":"∓","<<":"⟨",">>":"⟩","///":"∕","<->":"↔","<-":"←","<--":"⟵","--\x3e":"⟶","->":"→","=>":"⇒","<--\x3e":"\\xrightleftarrows","\\circ":"∘","\\otimes":"⊗","\\|":"¦","||":"‖","/_":"∠"," .":"·","''":"′",'""':"″"};const o={"^":"","-":"⁻",2:"²",3:"³",1:"¹",0:"⁰",4:"⁴",5:"⁵",6:"⁶",7:"⁷",8:"⁸",9:"⁹","(":"",")":""};const u=e=>{let t="";for(const n of e){t+=o[n]}return t};const c={bb:[56255,56249],bbb:[56567,56561],cc:[56411,56405],ff:[56671,56665]};const p=[56634,56639,56645,56647,56648,56649,56657,56477,56480,56481,56483,56484,56487,56488,56493,56506,56508,56513,56516];const f={C:"ℂ",H:"ℍ",N:"ℕ",P:"ℙ",Q:"ℚ",R:"ℝ",Z:"ℤ"};const d={B:"ℬ",E:"ℰ",F:"ℱ",H:"ℋ",I:"ℐ",L:"ℒ",M:"ℳ",R:"ℛ",e:"ℯ",g:"ℊ",l:"ℓ",o:"ℴ"};const m=e=>{const n=e.indexOf(" ");const r=e.substring(n+1);const s=e.substring(0,n);switch(s){case"bb":case"bbb":case"cc":case"ff":{const e=r.charCodeAt(0);let n="";if(e<65||e>122){return null}const a=e<91?0:1;if(s==="cc"&&a&&e!==108){return null}if(e>90&&s==="bbb"){return null}const l=e+c[s][a];if(t(l,p)){n=s==="bbb"?f[r]:d[r]}else{n="\ud835"+String.fromCharCode(l)}return n}default:return null}};const h={line:0,ch:0};const g=e=>{const t=e.getCursor();if(t.ch>0){const n=e.getRange(h,t);if(n.slice(-1)===" "){const r=a.exec(n);if(r){const s=r[0].slice(0,-1);let a;const o=l[s];if(o){const s=n.slice(0,-(r[0].length+1))+o;e.setValue(s+e.getValue().slice(n.length));const a={line:t.line,ch:t.ch-r[0].length+o.length};e.setCursor(a)}else{a=i[s];if(!a){if(s.charAt(0)==="^"){a=u(s)}else{if(s.indexOf(" ")>0){a=m(s)}}}}if(a){const s=n.slice(0,-r[0].length)+a;e.setValue(s+e.getValue().slice(n.length));const l={line:t.line,ch:t.ch-r[0].length+a.length};e.setCursor(l)}}}}};const y=Object.freeze([0,0,0,0,0,0,0,0,0]);const R=Object.freeze({NULL:0,RATIONAL:1,COMPLEX:2,BOOLEAN:4,FROMCOMPARISON:8,BOOLEANFROMCOMPARISON:12,STRING:16,QUANTITY:32,DATE:64,RANGE:128,TUPLE:256,DICT:512,MAP:1024,ROWVECTOR:2048,COLUMNVECTOR:4096,MATRIX:8192,DATAFRAME:16384,MODULE:32768,ERROR:65536,UNIT:131072,IMAGE:262144});const b=Object.freeze({EN:{ERROR:"Error. Hurmet does not understand the expression.",ERR_FUNC:"@",BAD_FUN_NM:'Error. Unrecognized function name "@".',DIV:"Error. Divide by zero.",NAN:"Error. Value of $@$ is not a numeric.",NULL:"Error. Missing value for $@$.",V_NAME:"Error. Variable $@$ not found.",F_NAME:"Error. Function @ not found.",NAN_OP:"Error. Arithmetic operation on a non-numeric value.",UNIT_ADD:"Error. Adding incompatible units.",UNIT_COMP:"Error. Comparing incompatible units.",UNIT_RES:"Error. Calculated units are not compatible with the desired result unit:",UNIT_MISS:"Error. No units specified for the result.",UNIT_IN:"Error. Incorrect unit for input to function @.",UNIT_ARG:"Error. Unit mis-match between arguments to function @.",DATE:"Error. Date required.",LOGIC:"Error. Logic operation “@” on a non-boolean value.",FACT:"Error. Factorial may be applied only to a unit-less non-negative integer.",PER:"Error. Percentage may be applied only to a unit-less number.",BINOM:"Error. Binomial may be applied only to unit-less numbers.",LOGF:"Error. Argument to log!() must be a non-negative integer.","Γ0":"Error. Γ(0) is infinite.","ΓPOLE":"Error. Γ() of a negative integer is infinite.","LOGΓ":"Error. Argument to logΓ() must be a positive number, for now.",TAN90:"Error. tan($@$) is infinite.",ATRIG:"Error. Input to @ must be between -1 and 1.",COT:"Error. Input to @ must not be zero.",ASEC:"Error. Absolute value of input to @ must be ≥ 1",STRING:"Error. Text operand required.",NUMARGS:"Error. Wrong number of arguments passed to function @.",NONSQUARE:"Error. Only a square matrix can be inverted.",SINGULAR:"Error. Matrix is singular and cannot be inverted.",BAD_ROW_NAME:"Error. Data frame does not have a row named @.",BAD_COLUMN_NAME:"Error. Data frame does not have a column named @.",SINGLE_ARG:"Error. A call to a data frame must have two arguments in the brackets.",BAD_TYPE:"Error. Unrecognized data type for $@$.",CONCAT:'Error. Cannot add strings. Use "&" if concatenation is desired.',MATRIX_DIV:"Error. Cannot divide one matrix by another.",MATRIX_MOD:"Error. Cannot take the modulo of one matrix by another.",BAD_INDEX:"Error. Index to a matrix must be numeric.",FUNC_LINE:"Error in function @.",BAD_BREAK:"Error in function @. break called outside of a loop",FETCH:"Error. A fetch() function must be the only item in its expression.",STR_INDEX:"Error. The index to text may be only a real number or a range.",UNIT_NAME:"Error. Unrecognized unit name: @",INT_NUM:'Error. Number display type "@" must be an integer.',TWO_MAPS:"Error. Both operands are maps. Hurmet accepts only one.",BAD_FORMAT:"Error. Invalid format @.",BAD_PREC:"Error. Significant digit specification must be between 1 and 15.",ZERO_ROOT:"Error. Zeroth root.",BAD_ROOT:"Error while taking root.",UNREAL:'Error. Argument to function "@" must be a real number.',BIGINDEX:"Error. Index too large.",MIS_ELNUM:"Error. Mis-matched number of elements",CROSS:"Error. Cross product can be performed only on three-vectors.",QUANT_NUM:"Error. A Quantity must include a numeric magnitude.",CURRENCY:"Error. Currency exchange rates must be defined before using a monetary unit.",DF_UNIT:'Invalid unit "&" in data frame.',FORM_FRAC:"Error. Hurmet can do binary or hexadecimal format only on integers.",PRIVATE:"Error. Function @ is not private.",GCD:"Error. The gcd function can take only integers as arguments.",BAD_KEY:'Error. Dictionary does not contain key "@".',IMMUT_UDF:`Error. Variable @ already contains a user-defined function.\n                Hurmet cannot assign a different value to @.`,IMMUT_DF:`Error. Variable @ already contains a data frame.\n                Hurmet cannot assign a different value to @.`}});const A=(e,t)=>{if(e===""){return{value:"Error",unit:null,dtype:R.ERROR}}let n=b["EN"][e];if(n===undefined){return{value:"Error",unit:null,dtype:R.ERROR}}if(t){n=n.replace(/@/g,t)}else{n=n.replace(/@ ?/,"")}return{value:n,unit:null,dtype:R.ERROR}};const N=BigInt(0);const v=BigInt(1);const T=BigInt(2);const E=[N,v];const O=[v,v];const I=[T,v];const M=[BigInt(3.1415926535897933e59),BigInt(1e59)];const x=[BigInt(2.718281828459045e57),BigInt(1e57)];const L=[BigInt(1054571817),BigInt(1e43)];const C=e=>e>=N?e:BigInt(-1)*e;const U="^(-?)(?:([0-9]+)(?: ([0-9]+)\\/([0-9]+)|(?:\\.([0-9]+))?(?:e([+-]?[0-9]+))?)|(0x[0-9A-Fa-f]+))";const S=new RegExp(U);const w=e=>{if(Number.isInteger(e)){return[BigInt(e),v]}else{const t=e.toExponential().match(S);const n=t[5]||"";const r=BigInt(t[6])-BigInt(n.length);if(r<0){return[BigInt(t[1]+t[2]+n),BigInt(10)**-r]}else if(t[4]){const e=BigInt(t[4]);return V([BigInt(t[1]+t[2])*e+BigInt(t[3])])}else{return V([BigInt(t[1]+t[2]+n)*BigInt(10)**r,v])}}};const D=e=>{const t=e.match(S);let n;if(t[5]){const e=t[5]||"";const r=t[6]||"0";const s=BigInt(r)-BigInt(e.length);const a=BigInt(t[2]+e);n=s<0?[a,BigInt(10)**-s]:V([a*BigInt(10)**s,v])}else if(t[4]){const e=BigInt(t[4]);const r=BigInt(t[1]+t[2])*e+BigInt(t[3]);n=V([r,e])}else if(t[2]){n=[BigInt(t[2]),v]}else if(t[7]){n=[BigInt(e),v]}if(t[1]){n=z(n)}return n};const B=(e,t)=>{e=C(e);t=C(t);while(t!==N){const n=e%t;e=t;t=n}return e};const k=(e,t)=>{if(!ye.isInteger(e)||!ye.isInteger(t)){return A("GCD")}return[B(e[0]/e[1],t[0]/t[1]),v]};const V=e=>{const[t,n]=e;if(n===v){return e}const r=B(t,n);return r===v?e:[t/r,n/r]};const _=e=>{return Array.isArray(e)&&e.length===2&&typeof e[0]==="bigint"&&typeof e[1]==="bigint"};const q=e=>e[1]===v||e[0]%e[1]===N;const F=e=>e[0]===N;const G=e=>e[0]<N;const P=e=>e[0]>N;const z=e=>[BigInt(-1)*e[0],e[1]];const Y=e=>{const t=e[0]<N?BigInt(-1)*e[0]:e[0];return[t,e[1]]};const W=e=>[e[0]+e[1],e[1]];const H=e=>[e[0]-e[1],e[1]];const $=e=>{if(e[0]%e[1]===N){return[e[0]/e[1],v]}return e[0]>=N?[e[0]/e[1],v]:[e[0]/e[1]-v,v]};const j=e=>{if(e[0]%e[1]===N){return[e[0]/e[1],v]}return e[0]>=N?[e[0]/e[1]+v,v]:[e[0]/e[1],v]};const K=(e,t)=>{return e[1]===t[1]?[e[0]+t[0],e[1]]:V([e[0]*t[1]+t[0]*e[1],e[1]*t[1]])};const Z=(e,t)=>{return e[1]===t[1]?[e[0]-t[0],e[1]]:V([e[0]*t[1]-t[0]*e[1],e[1]*t[1]])};const X=(e,t)=>[e[0]*t[0],e[1]*t[1]];const Q=(e,t)=>{let n=e[0]*t[1];let r=e[1]*t[0];if(r<0){n*=BigInt(-1);r*=BigInt(-1)}return[n,r]};const J=(e,t)=>{if(t[0]===N){return[v,v]}else{t=V(t);return q(t)?[e[0]**t[0],e[1]**t[0]]:P(e)||le(t,O)||ae(t,z(O))?w(pe(e)**pe(t)):se(re(t,I),O)?w(-1*(-1*pe(e))**pe(t)):A("BAD_ROOT")}};const ee=e=>w(Math.sqrt(pe(e)));const te=e=>w(Math.exp(pe(e)));const ne=e=>{let t=e[1];let n=e[0];if(n<0){t*=BigInt(-1);n*=BigInt(-1)}return[t,n]};const re=(e,t)=>{const n=Q(V(e),V(t));return[C(n[0]%n[1]),v]};const se=(e,t)=>{return e[1]===t[1]?e[0]===t[0]:e[0]*t[1]===e[1]*t[0]};const ae=(e,t)=>{return G(e)!==G(t)?G(e):G(Z(e,t))};const le=(e,t)=>{return P(e)!==P(t)?P(e):P(Z(e,t))};const ie=(e,t)=>ae(e,t)||se(e,t);const oe=(e,t)=>le(e,t)||se(e,t);const ue=(e,t)=>le(e,t)?[e[0],e[1]]:[t[0],t[1]];const ce=(e,t)=>ae(e,t)?[e[0],e[1]]:[t[0],t[1]];const pe=e=>{const t=Number(e[0])/Number(e[1]);if(!isNaN(t)){return t}const n=fe(e,20);return Number(n)};const fe=(e,t)=>{if(F(e)){return"0"}else{const n=C(e[0]/e[1]);if(n>0){return de(e,t-String(n).length)}else{const n=String(C(e[1]/e[0])).length;return de(e,n+t-1)}}};const de=(e,t)=>{if(F(e)){return"0"}else if(t<0){const n=-t;const r=de(Q(e,[BigInt(10)**BigInt(n),v]),0);return r+"0".repeat(n)}else{const[n,r]=V(e);const s=n/r;let a=n%r;let l=String(s);if(a===N&&t>0){l+="."+"0".repeat(t)}else if(a!==N){a=C(a);const e=a*BigInt(10)**BigInt(t);let n=e/r;const i=e%r;if(t===0){return C(T*i)>=C(r)?String(s+v):l}if(C(T*i)>=C(r)){n=n+v}l+="."+String(n).padStart(t,"0")}return l}};const me=["1","1","2","6","24","120","720","5040","40320","362880","3628800","39916800","479001600","6227020800","87178291200","1307674368000","20922789888000","355687428096000","6402373705728000","121645100408832000","2432902008176640000","51090942171709440000","1124000727777607680000","25852016738884976640000","620448401733239439360000","15511210043330985984000000","403291461126605635584000000","10888869450418352160768000000","304888344611713860501504000000","8841761993739701954543616000000","265252859812191058636308480000000","8222838654177922817725562880000000","263130836933693530167218012160000000","8683317618811886495518194401280000000","295232799039604140847618609643520000000","10333147966386144929666651337523200000000","371993326789901217467999448150835200000000","13763753091226345046315979581580902400000000","523022617466601111760007224100074291200000000","20397882081197443358640281739902897356800000000","815915283247897734345611269596115894272000000000","33452526613163807108170062053440751665152000000000","1405006117752879898543142606244511569936384000000000","60415263063373835637355132068513997507264512000000000","2658271574788448768043625811014615890319638528000000000","119622220865480194561963161495657715064383733760000000000","5502622159812088949850305428800254892961651752960000000000","258623241511168180642964355153611979969197632389120000000000","12413915592536072670862289047373375038521486354677760000000000","608281864034267560872252163321295376887552831379210240000000000","30414093201713378043612608166064768844377641568960512000000000000","1551118753287382280224243016469303211063259720016986112000000000000","80658175170943878571660636856403766975289505440883277824000000000000","4274883284060025564298013753389399649690343788366813724672000000000000","230843697339241380472092742683027581083278564571807941132288000000000000","12696403353658275925965100847566516959580321051449436762275840000000000000","710998587804863451854045647463724949736497978881168458687447040000000000000","40526919504877216755680601905432322134980384796226602145184481280000000000000","2350561331282878571829474910515074683828862318181142924420699914240000000000000","138683118545689835737939019720389406345902876772687432540821294940160000000000000","8320987112741390144276341183223364380754172606361245952449277696409600000000000000","507580213877224798800856812176625227226004528988036003099405939480985600000000000000","31469973260387937525653122354950764088012280797258232192163168247821107200000000000000","1982608315404440064116146708361898137544773690227268628106279599612729753600000000000000","126886932185884164103433389335161480802865516174545192198801894375214704230400000000000000","8247650592082470666723170306785496252186258551345437492922123134388955774976000000000000000","544344939077443064003729240247842752644293064388798874532860126869671081148416000000000000000","36471110918188685288249859096605464427167635314049524593701628500267962436943872000000000000000","2480035542436830599600990418569171581047399201355367672371710738018221445712183296000000000000000","171122452428141311372468338881272839092270544893520369393648040923257279754140647424000000000000000","11978571669969891796072783721689098736458938142546425857555362864628009582789845319680000000000000000","850478588567862317521167644239926010288584608120796235886430763388588680378079017697280000000000000000","61234458376886086861524070385274672740778091784697328983823014963978384987221689274204160000000000000000","4470115461512684340891257138125051110076800700282905015819080092370422104067183317016903680000000000000000","330788544151938641225953028221253782145683251820934971170611926835411235700971565459250872320000000000000000","24809140811395398091946477116594033660926243886570122837795894512655842677572867409443815424000000000000000000","1885494701666050254987932260861146558230394535379329335672487982961844043495537923117729972224000000000000000000","145183092028285869634070784086308284983740379224208358846781574688061991349156420080065207861248000000000000000000","11324281178206297831457521158732046228731749579488251990048962825668835325234200766245086213177344000000000000000000","894618213078297528685144171539831652069808216779571907213868063227837990693501860533361810841010176000000000000000000","71569457046263802294811533723186532165584657342365752577109445058227039255480148842668944867280814080000000000000000000","5797126020747367985879734231578109105412357244731625958745865049716390179693892056256184534249745940480000000000000000000","475364333701284174842138206989404946643813294067993328617160934076743994734899148613007131808479167119360000000000000000000","39455239697206586511897471180120610571436503407643446275224357528369751562996629334879591940103770870906880000000000000000000","3314240134565353266999387579130131288000666286242049487118846032383059131291716864129885722968716753156177920000000000000000000","281710411438055027694947944226061159480056634330574206405101912752560026159795933451040286452340924018275123200000000000000000000","24227095383672732381765523203441259715284870552429381750838764496720162249742450276789464634901319465571660595200000000000000000000","2107757298379527717213600518699389595229783738061356212322972511214654115727593174080683423236414793504734471782400000000000000000000","185482642257398439114796845645546284380220968949399346684421580986889562184028199319100141244804501828416633516851200000000000000000000","16507955160908461081216919262453619309839666236496541854913520707833171034378509739399912570787600662729080382999756800000000000000000000","1485715964481761497309522733620825737885569961284688766942216863704985393094065876545992131370884059645617234469978112000000000000000000000","135200152767840296255166568759495142147586866476906677791741734597153670771559994765685283954750449427751168336768008192000000000000000000000","12438414054641307255475324325873553077577991715875414356840239582938137710983519518443046123837041347353107486982656753664000000000000000000000","1156772507081641574759205162306240436214753229576413535186142281213246807121467315215203289516844845303838996289387078090752000000000000000000000","108736615665674308027365285256786601004186803580182872307497374434045199869417927630229109214583415458560865651202385340530688000000000000000000000","10329978488239059262599702099394727095397746340117372869212250571234293987594703124871765375385424468563282236864226607350415360000000000000000000000","991677934870949689209571401541893801158183648651267795444376054838492222809091499987689476037000748982075094738965754305639874560000000000000000000000","96192759682482119853328425949563698712343813919172976158104477319333745612481875498805879175589072651261284189679678167647067832320000000000000000000000","9426890448883247745626185743057242473809693764078951663494238777294707070023223798882976159207729119823605850588608460429412647567360000000000000000000000","933262154439441526816992388562667004907159682643816214685929638952175999932299156089414639761565182862536979208272237582511852109168640000000000000000000000","93326215443944152681699238856266700490715968264381621468592963895217599993229915608941463976156518286253697920827223758251185210916864000000000000000000000000"];const he=e=>{if(ae(e,[BigInt(101),v])){return D(me[pe(e)])}else{return ge(W(e))}};const ge=e=>{const t=Z(e,O);const n=X(I,ee(Q(x,M)));const r=J(Q(K(t,w(11.400511)),x),K(t,[v,T]));const s=["2.48574089138753565546e-5","1.05142378581721974210","-3.45687097222016235469","4.51227709466894823700","-2.98285225323576655721","1.05639711577126713077","-0.195428773191645869583","0.0170970543404441224307","-0.000571926117404305781283","0.00000463399473359905636708","-0.00000000271994908488607703910"];let a=D(s[0]);for(let e=1;e<=10;e++){a=K(a,Q(D(s[e]),K(t,w(e))))}return X(X(n,r),a)};const ye=Object.freeze({fromNumber:w,fromString:D,normalize:V,isRational:_,isInteger:q,isZero:F,isNegative:G,isPositive:P,negate:z,abs:Y,increment:W,decrement:H,exp:te,floor:$,ceil:j,add:K,subtract:Z,multiply:X,divide:Q,reciprocal:ne,gcd:k,hbar:L,modulo:re,one:O,pi:M,power:J,sqrt:ee,two:I,areEqual:se,lessThan:ae,greaterThan:le,lessThanOrEqualTo:ie,greaterThanOrEqualTo:oe,factorial:he,lanczos:ge,max:ue,min:ce,numberPattern:U,toNumber:pe,toString:de,toStringSignificant:fe,zero:E});const Re=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"];const be=/\B(?=(\d{3})+$)/g;const Ae=/\B(?=(\d{4})+$)/g;const Ne=/(\d)(?=(\d\d)+\d$)/g;const ve=/^([beEfhkmprsStx%])?(-?[\d]+)?$/;const Te=e=>{let t="";for(let n=0;n<e.length;n++){const r=e.charCodeAt(n);t+=r===49?"¹":r===50?"²":r===51?"³":String.fromCharCode(r+8256)}return t};const Ee=e=>{let t="";for(let n=0;n<e.length;n++){t+=String.fromCharCode(e.charCodeAt(n)+8272)}return t};const Oe=e=>{return(e[1]?"-":"")+e[2]+"\\,"+Te(e[3])+"⁄"+Ee(e[4])};const Ie=e=>e>=BigInt(0)?e:BigInt(-1)*e;const Me=(e,t)=>{const n=t.numDigits;switch(t.ftype){case"h":{const t=String(ye.toString(e,0));if(t.replace("-","").length>=n){return t}if(n<1||n>15){return A("BAD_PREC")}return ye.toNumber(e).toPrecision(n)}case"f":case"%":return ye.toString(e,n);case"r":case"p":{if(n<1||n>15){return A("BAD_PREC")}const t=ye.toNumber(e).toPrecision(n);return t.indexOf("e")>-1?Number(t).toPrecision():t}case"s":case"S":case"e":case"E":case"n":case"N":case"k":if(n<1||n>15){return A("BAD_PREC")}return ye.toNumber(e).toExponential(n-1).replace("+","");default:{e=ye.normalize(e);const n=ye.isNegative(e)?"-":"";const r=Ie(e[0]);const s=e[1];switch(t.ftype){case"m":{const e=String(r/s);const t=r%s;return n+e+" "+Te(t)+"⁄"+Ee(s)}case"t":return n+String(r/s);case"b":case"x":case"X":if(s!==BigInt(1)){return A("INT_NUM",t.ftype)}if(r<=Number.MAX_SAFE_INTEGER){return t.ftype==="b"?n+"0b"+Number(r).toString(2):t.ftype==="x"?n+"0x"+Number(r).toString(16):n+"0x"+Number(r).toString(16).toUpperCase()}else{return""}}}}};const xe=(e,t)=>{const n=t.charAt(1);if(n==="0"){return e}else if(t==="1,00,000."){return e.replace(Ne,"$1{,}")}else if(t==="1,0000,0000."){return e.replace(Ae,"$1{,}")}else{return e.replace(be,n===","?"{,}":n===" "?"\\:":n==="’"?"’":".")}};const Le=(e,t,n)=>{const r=e.indexOf(".");if(r===-1){return xe(e,t)}else{const s=e.slice(0,r);const a=t.slice(-1);let l=(a==="."?".":"{,}")+e.slice(r+1);if(n){l=l.replace(/(\.|{,})?0+$/,"")}return xe(s,t)+l}};const Ce=e=>{const t=ve.exec(e);if(!t){const t=A("BAD_FORMAT",e).value;return[e,undefined,R.ERROR,"\\text{"+t+"}"]}const n=t[1]||"h";let r=Number(t[2]||"15");switch(n){case"b":case"x":case"X":return[e,undefined,R.STRING,"\\text{"+n+"}"];case"t":r=0;break;case"f":case"%":break;default:if(r<1||r>15){const t="\\text{"+A("BAD_PREC").value+"}";return[e,undefined,R.ERROR,t]}}return[e,undefined,R.STRING,"\\text{"+n+String(r)+"}"]};const Ue=(e,t="h3",n="1,000,000.")=>{if(ye.isZero(e)){return"0"}const r={ftype:t.charAt(0)};if(t.length>1){r.numDigits=Number(t.slice(1))}if(r.ftype==="%"||r.ftype==="p"){e[0]=e[0]*BigInt(100)}if((r.ftype==="b"||r.ftype==="x")&&!ye.isInteger(e)){return A("FORM_FRAC")}const s=Me(e,r);switch(r.ftype){case"f":case"r":case"h":return Le(s,n,r.ftype==="h");case"t":return xe(s,n);case"%":case"p":return Le(s,n)+"%";case"m":case"b":case"x":case"X":return s;default:{const e=s.indexOf("e");let t=s.slice(0,e);if(n.slice(-1)===","){t=t.replace(".","{,}")}switch(r.ftype){case"e":case"E":{const n=t+"\\text{"+r.ftype;if(s.charAt(e+1)==="-"){return n+"-}"+s.slice(e+2)}else{return n+"}"+s.slice(e+1)}}case"s":case"S":case"n":case"N":{const n=r.ftype==="S"?"×":"\\mkern2mu{\\cdot}\\mkern1mu";return t+n+"10^{"+s.slice(e+1)+"}"}case"k":{const n=Number(s.slice(e+1));const r=n/3;const a=r>=0?Math.floor(r):Math.ceil(r);const l=n%3;if(l!==0){t=String(Number(t)*Math.pow(10,l))}return t+Re[8+a]}}}}};const Se=Object.freeze({UNARY:0,BINARY:1,SUB:2,SUP:3,ACCENT:4,UNARYMINUS:5,DIV:6,PRIME:7,ORD:9,VAR:10,NUM:11,PUNCT:12,LONGVAR:13,LEFTBRACKET:14,RIGHTBRACKET:15,UNDEROVER:16,LEFTRIGHT:17,STRING:18,QUANTITY:19,BIN:20,ADD:21,MULT:22,REL:23,LOGIC:24,SEP:25,FUNCTION:26,ACCESSOR:28,ENVIRONMENT:29,FACTORIAL:30,SUPCHAR:31,ANGLE:32,COLON:33,KEYWORD:34,PROPERTY:36,COMMENT:37,RETURN:38,TO:39});const we=/^-(?![-=<>:])/;const De=new RegExp(ye.numberPattern);const Be=(e,t)=>{let n="";if(e[7]){n="\\mathrm{"&e[7]&"}"}else if(e[4]){return Oe(e)}else{n=e[2];if(e[5]){n+="."+e[5]}n=Le(n,t);if(e[6]){if(e[6].charAt(0)==="-"){return n+"\\text{e-}"+e[6].slice(1)}else{return n+"\\text{e}"+e[6]}}}if(e[1]){n="\\text{-}"+n}return n};const ke=e=>{switch(e.ttype){case Se.NUM:case Se.ORD:case Se.VAR:case Se.RIGHTBRACKET:case Se.LONGVAR:case Se.QUANTITY:case Se.SUPCHAR:case Se.PRIME:case Se.FACTORIAL:return false;default:return true}};const Ve=/^(?:(?:[A-Za-zıȷ\u0391-\u03C9\u03D5\u212C\u2130\u2131\u210B\u2110\u2112\u2133\u211B\u212F\u210A\u2113\u2134]|(?:\uD835[\uDC00-\udc33\udc9c-\udccf]))[A-Za-z0-9_\u0391-\u03C9\u03D5\u0300-\u0308\u030A\u030C\u0332\u20d0\u20d1\u20d6\u20d7\u20e1]*|!in|-->|->|left\.|right\.|log10|log2)/;const _e=Object.freeze({true:["true","\\mathord{\\text{true}}",Se.ORD,""],false:["false","\\mathord{\\text{false}}",Se.ORD,""],cos:["cos","\\cos",Se.FUNCTION,""],cosd:["cosd","\\operatorname{\\cos_d}",Se.FUNCTION,""],if:["if","\\mathrel{\\mathrm{if}}",Se.LOGIC,""],else:["else","\\mathrel{\\mathrm{else}}",Se.LOGIC,""],and:["and","\\mathrel{\\mathrm{and}}",Se.LOGIC,""],or:["or","\\mathrel{\\mathrm{or}}",Se.LOGIC,""],for:["for","\\mathrel{\\mathrm{for}}",Se.KEYWORD,""],while:["while","\\mathrel{\\mathrm{while}}",Se.KEYWORD,""],in:["in","\\mathrel{\\mathrm{in}}",Se.KEYWORD,""],break:["break","\\mathrel{\\mathrm{break}}",Se.KEYWORD,""],to:["to","\\mathbin{\\mathrm{to}}",Se.TO,""],raise:["raise","\\mathrel{\\mathrm{raise}}",Se.UNARY,""],echo:["echo","\\mathrel{\\mathrm{echo}}",Se.UNARY,""],return:["return","\\mathrel{\\mathrm{return}}",Se.RETURN,""],sqrt:["sqrt","\\sqrt",Se.UNARY,""],otherwise:["otherwise","\\mathrel{\\mathrm{otherwise}}",Se.LOGIC,""],root:["root","\\sqrt",Se.BINARY,""],sin:["sin","\\sin",Se.FUNCTION,""],sind:["sind","\\operatorname{\\sin_d}",Se.FUNCTION,""],tan:["tan","\\tan",Se.FUNCTION,""],tand:["tand","\\operatorname{\\tan_d}",Se.FUNCTION,""],cotd:["cotd","\\operatorname{\\cot_d}",Se.FUNCTION,""],secd:["secd","\\operatorname{\\sec_d}",Se.FUNCTION,""],cscd:["cscd","\\operatorname{\\csc_d}",Se.FUNCTION,""],log:["log","\\log",Se.FUNCTION,""],ln:["ln","\\ln",Se.FUNCTION,""],log10:["log10","\\log_{10}",Se.FUNCTION,""],log2:["log2","\\log_{2}",Se.FUNCTION,""],"log!":["log!","\\operatorname{log!}",Se.FUNCTION,""],"π":["π","π",Se.ORD,""],"ℓ":["ℓ","ℓ",Se.VAR,""],modulo:["modulo","\\operatorname{modulo}",Se.MULT,""],"->":["->","→",Se.REL,""],"--\x3e":["--\x3e","\\xrightarrow",Se.UNARY,""],"<--\x3e":["<--\x3e","\\xrightleftarrows",Se.UNARY,""]});const qe=/^([/÷\u2215_:,;^+\\\-–−*×∘⊗⦼⊙√∛∜·.%∘|╏‖¦><=≟≠≡≤≥≅∈∉⋐!¡‼¬∧∨⊻~#?⇒⟶⟵→←&@′″∀∃∫∬∮∑([{⟨⌊⎿⌈⎾〖〗⏋⌉⏌⌋⟩}\])˽∣ℂℕℚℝℤℓℏ∠¨ˆˉ˙˜▪✓\u00A0\u20D7]+)/;const Fe=Object.freeze({"#":["#","#",Se.COMMENT,""],"/":["/","\\frac{",Se.DIV,""],"//":["//","\\dfrac{",Se.DIV,""],"///":["///","/",Se.MULT,""],"∕":["∕","∕",Se.MULT,""],"÷":["÷","÷",Se.MULT,""],_:["_","_",Se.SUB,""],"^":["^","^",Se.SUP,""],"+":["+","+",Se.ADD,""],"-":["-","-",Se.ADD,""],"–":["-","-",Se.ADD,""],"−":["-","-",Se.ADD,""],"*":["*","*",Se.MULT,""],"×":["×","×",Se.MULT,""],"∘":["∘","\\circ",Se.MULT,""],"⊗":["⊗","⊗",Se.MULT,""],"√":["√","\\sqrt",Se.UNARY,""],"∛":["∛","\\sqrt[3]",Se.UNARY,""],"∜":["∜","\\sqrt[4]",Se.UNARY,""],"+-":["+-","±",Se.BIN,""],"**":["**","\\star",Se.BIN,""],"·":["·","⋅",Se.MULT,""],"...":["...","\\dots",Se.ORD,""],"%":["%","\\%",Se.FACTORIAL,""],"-:":["-:","÷",Se.MULT,""],"=":["=","=",Se.REL,""],"==":["==","==",Se.REL,""],"≡":["≡","≡",Se.REL,""],">":[">","\\gt",Se.REL,""],"<":["<","\\lt",Se.REL,""],"?=":["?=","≟",Se.REL,""],"≟":["≟","≟",Se.REL,""],"≠":["≠","≠",Se.REL,""],"!=":["!=","≠",Se.REL,""],"<>":["<>","≠",Se.REL,""],":=":[":=","≔",Se.REL,""],"<=":["<=","≤",Se.REL,""],"≤":["≤","≤",Se.REL,""],">=":[">=","≥",Se.REL,""],"≥":["≥","≥",Se.REL,""],"-=":["-=","≡",Se.REL,""],"~=":["~=","≅",Se.REL,""],"≅":["≅","≅",Se.REL,""],"~~":["~~","≈",Se.REL,""],"~":["~","\\sim",Se.REL,""],"=>":["=>","⇒",Se.REL,""],"⟶":["⟶","\\xrightarrow",Se.UNARY,""],"⟵":["⟵","\\xleftarrow",Se.UNARY,""],"⇒":["⇒","⇒",Se.REL,""],"<=>":["<=>","⇔",Se.REL,""],"-<":["-<","≺",Se.REL,""],">-":[">-","≻",Se.REL,""],"-<=":["-<=","⪯",Se.REL,""],">-=":[">-=","⪰",Se.REL,""],"_|_":["_|_","\\bot",Se.REL,""],"|--":["|--","⊢",Se.REL,""],"|==":["|==","\\models",Se.REL,""],"∈":["∈","∈",Se.REL,""],"∉":["∉","∉",Se.REL,""],"⋐":["⋐","⋐",Se.REL,""],"▪":["▪","\\mathrel{▪}",Se.REL,""],"!":["!","!",Se.FACTORIAL,""],"‼":["‼","!!",Se.FACTORIAL,""],"!!":["!!","!!",Se.FACTORIAL,""],"¡":["¡","¡",Se.FACTORIAL,""],"&":["&","\\mathbin{\\&}",Se.ADD,""],"′":["′","'",Se.PRIME,""],"″":["″","''",Se.PRIME,""],"′′":["′′","''",Se.PRIME,""],"′′′":["′′′","'''",Se.PRIME,""],"∀":["∀","∀",Se.LOGIC,""],"∃":["∃","∃",Se.LOGIC,""],"∧":["∧","∧",Se.LOGIC,""],"∨":["∨","∨",Se.LOGIC,""],"⊻":["⊻","⊻",Se.LOGIC,""],"¬":["¬","¬",Se.UNARY,""],"∫":["∫","∫",Se.UNDEROVER,""],"∬":["∬","∬",Se.UNDEROVER,""],"∮":["∮","∮",Se.UNDEROVER,""],"∑":["∑","∑",Se.UNDEROVER,""],"(":["(","(",Se.LEFTBRACKET,")"],"[":["[","[",Se.LEFTBRACKET,"]"],"{":["{","\\{",Se.LEFTBRACKET,"\\}"],"{:":["{:","{",Se.LEFTBRACKET,"}"],"⟨":["⟨","⟨",Se.LEFTBRACKET,"⟩"],")":[")",")",Se.RIGHTBRACKET,""],"]":["]","]",Se.RIGHTBRACKET,""],"}":["}","\\}",Se.RIGHTBRACKET,""],"⟩":["⟩","⟩",Se.RIGHTBRACKET,""],":}":[":}","}",Se.RIGHTBRACKET,""],"|":["|","|",Se.LEFTRIGHT,""],"||":["||","\\Vert ",Se.LEFTRIGHT,""],"‖":["‖","\\Vert ",Se.LEFTRIGHT,""],"<<":["<<","⟨",Se.LEFTBRACKET,"⟩"],">>":[">>","⟩",Se.RIGHTBRACKET,""],"⎿":["⎿","\\lfloor ",Se.LEFTBRACKET,"\\rfloor "],"⌋":["⌋","\\rfloor ",Se.RIGHTBRACKET,""],"⏌":["⏌","\\rfloor ",Se.RIGHTBRACKET,""],"⌈":["⌈","\\lceil ",Se.LEFTBRACKET,"\\rceil "],"⎾":["⎾","\\lceil ",Se.LEFTBRACKET,"\\rceil "],"⌉":["⌉","\\rceil ",Se.RIGHTBRACKET,""],"⏋":["⏋","\\rceil ",Se.RIGHTBRACKET,""],"〖":["〖","{",Se.LEFTBRACKET,"}"],"〗":["〗","}",Se.RIGHTBRACKET,""],"¦":["¦","\\mid ",Se.REL,""],"ℂ":["ℂ","ℂ",Se.ORD,""],"ℕ":["ℕ","ℕ",Se.ORD,""],"ℚ":["ℚ","ℚ",Se.ORD,""],"ℝ":["ℝ","ℝ",Se.ORD,""],"ℤ":["ℤ","ℤ",Se.ORD,""],"ℏ":["ℏ","ℏ",Se.ORD,""],"→":["→","→",Se.REL,""],"←":["←","←",Se.REL,""],">->":[">->","↣",Se.REL,""],"->>":["->>","↠",Se.REL,""],"|->":["|->","↦",Se.REL,""],"<--":["<--","\\xleftarrow",Se.UNARY,""],"==>":["==>","\\xRightarrow",Se.UNARY,""],"<==":["<==","\\xLeftarrow",Se.UNARY,""],"<--\x3e":["<--\x3e","\\xleftrightarrow",Se.UNARY,""],"<==>":["<==>","\\xLeftrightarrow",Se.UNARY,""],"∠":["∠","∠",Se.ANGLE,""],"✓":["✓","✓",Se.ORD,""],"˽":["˽","~",Se.PUNCT,""],"\\,":["\\,",",\\:",Se.SEP,""],"\\;":["\\;",";\\:",Se.SEP,""],":":[":",":",Se.COLON,""],",":[",",",\\:",Se.SEP,""],";":[";",";\\:",Se.SEP]});const Ge=/^(\\[A-Za-z]+\.?|\\([:.!\u0020]|'+))/;const Pe=Object.freeze({"\\aleph":["\\aleph","ℵ",Se.VAR,""],"\\beth":["\\beth","ℶ",Se.VAR,""],"\\gimel":["gimel","ℷ",Se.VAR,""],"\\daleth":["daleth","ℸ",Se.VAR,""],"\\atop":["\\atop","\\atop{",Se.DIV,""],"\\cdots":["\\cdots","⋯",Se.BIN,""],"\\vdots":["\\vdots","⋮",Se.BIN,""],"\\ddots":["\\ddots","⋱",Se.BIN,""],"\\iff":["\\iff","\\iff",Se.LOGIC,""],"\\land":["\\land","\\land",Se.BIN,""],"\\lor":["\\lor","\\lor",Se.BIN,""],"\\in":["\\in","∈",Se.REL,""],"\\notin":["\\notin","∉",Se.REL,""],"\\Subset":["\\Subset","⋐",Se.REL,""],"\\left.":["\\left.","\\left.",Se.LEFTBRACKET,"\\right."],"\\right.":["\\right.","\\right.",Se.RIGHTBRACKET,""],"\\mod":["\\mod","\\mod",Se.BIN,""],"\\diamond":["\\diamond","\\diamond",Se.ORD,""],"\\square":["\\square","\\square",Se.ORD,""],"\\int":["\\int","\\int",Se.UNDEROVER,""],"\\iint":["\\iint","\\iint",Se.UNDEROVER,""],"\\iiint":["\\iiint","\\iiint",Se.UNDEROVER,""],"\\oint":["\\oint","\\oint",Se.UNDEROVER,""],"\\oiint":["\\oiint","\\oiint",Se.UNDEROVER,""],"\\oiiint":["\\oiiint","\\oiiint",Se.UNDEROVER,""],"\\sum":["\\sum","\\sum",Se.UNDEROVER,""],"\\prod":["\\prod","\\prod",Se.UNDEROVER,""],"\\quad":["\\quad","\\quad",Se.PUNCT,""],"\\qquad":["\\qquad","\\qquad",Se.PUNCT,""]});const ze=Object.freeze(["Bbb","Overrightarrow","acute","bar","bm","bold","boldsymbol","breve","check","ddot","dot","frak","grave","hat","mathbb","mathbf","mathcal","mathfrak","mathit","mathnormal","mathring","mathrm","mathscr","mathsf","mathtt","overbrace","overgroup","overleftarrow","overleftharpoon","overleftrightarrow","overline","overlinesegment","overrightarrow","overrightharpoon","textbf","textit","textrm","textsf","texttt","tilde","underbrace","undergroup","underleftarrow","underleftrightarrow","underline","underlinesegment","underrightarrow","utilde","vec","widecheck","widehat","widetilde"]);const Ye=Object.freeze(["arccos","arcsin","arctan","arctg","arcctg","cos","cosec","cosh","cot","cotg","coth","csc","ctg","cth","det","dim","exp","gcd","lg","lim","ln","log","max","min","sec","sin","sinh","sh","sup","tan","tanh","tg","th"]);const We=Object.freeze(["bcancel","blue","boxed","cancel","clap","color","gray","green","llap","mathclap","not","operatorname","orange","phantom","pink","pu","purple","red","rlap","sout","sqrt","tag","xLeftarrow","xLeftrightarrow","xRightarrow","xcancel","xleftarrow","xleftrightarrow","xleftharpoondown","xleftharpoons","xleftharpoonup","xlongequal","xmapsto","xrightarrow","xrightharpoondown","xrightharpoonup","xrightleftarrows","xrightleftharpoons","xtofrom","xtwoheadleftarrow","xtwoheadrightarrow"]);const He=Object.freeze(["dfrac","frac","lower","overset","raisebox","stackrel","tag","tfrac","underset"]);const $e=Object.freeze(["Bumpeq","Colonapprox","Coloneq","Coloneqq","Colonsim","Darr","Doteq","Downarrow","Eqcolon","Eqqcolon","Harr","Larr","Leftarrow","Leftrightarrow","Lleftarrow","Longleftarrow","Longleftrightarrow","Longrightarrow","Lrarr","Lsh","Rarr","Rightarrow","Rrightarrow","Rsh","Supset","Subset","Uarr","Uparrow","Updownarrow","Vdash","Vvdash","approx","approxeq","asymp","backepsilon","backsim","backsimeq","between","bowtie","bumpeq","circeq","circlearrowleft","circlearrowright","colonapprox","coloneq","coloneqq","colonsim","cong","curlyeqprec","curlyeqsucc","curvearrowleft","curvearrowright","dArr","darr","dashleftarrow","dashrightarrow","dashv","dblcolon","doteq","doteqdot","downarrow","downdownarrows","downharpoonleft","downharpoonright","eqcirc","eqcolon","eqqcolon","eqsim","eqslantgtr","eqslantless","equiv","fallingdotseq","frown","ge","geq","geqq","geqslant","gets","gg","ggg","gggtr","gnapprox","gneq","gneqq","gnsim","gt","gtrapprox","gtreqless","gtreqqless","gtrless","gtrsim","gvertneqq","hArr","harr","hookleftarrow","hookrightarrow","iff","impliedby","implies","in","isin","Join","gets","impliedby","implies","in","isin","lArr","larr","le","leadsto","leftarrow","leftarrowtail","leftharpoondown","leftharpoonup","leftleftarrows","leftrightarrow","leftrightarrows","leftrightharpoons","leftrightsquigarrow","leq","leqq","leqslant","lessapprox","lesseqgtr","lesseqqgtr","lessgtr","lesssim","ll","lll","llless","lnapprox","lneq","lneqq","lnsim","longleftarrow","longleftrightarrow","longmapsto","longrightarrow","looparrowleft","looparrowright","lrArr","lrarr","lt","lvertneqq","mapsto","mid","models","multimap","nLeftarrow","nLeftrightarrow","nRightarrow","nVDash","nVdash","ncong","ne","nearrow","neq","nexists","ngeq","ngeqq","ngeqslant","ngtr","ni","nleftarrow","nleftrightarrow","nleq","nleqq","nleqslant","nless","nmid","notin","notni","nparallel","nprec","npreceq","nrightarrow","nshortmid","nshortparallel","nsim","nsubseteq","nsubseteqq","nsucc","nsucceq","nsupseteq","nsupseteqq","ntriangleleft","ntrianglelefteq","ntriangleright","ntrianglerighteq","nvDash","nvdash","nwarrow","owns","parallel","perp","pitchfork","prec","precapprox","preccurlyeq","preceq","precnapprox","precneqq","precnsim","precsim","propto","rArr","rarr","restriction","rightarrow","rightarrowtail","rightharpoondown","rightharpoonup","rightleftarrows","rightleftharpoons","rightrightarrows","rightsquigarrow","risingdotseq","searrow","shortmid","shortparallel","sim","simeq","smallfrown","smallsmile","smile","sqsubset","sqsubseteq","sqsupset","sqsupseteq","sub","sube","subset","subseteq","subseteqq","subsetneq","subsetneqq","succ","succapprox","succcurlyeq","succeq","succnapprox","succneqq","succnsim","succsim","supe","supset","supseteq","supseteqq","supsetneq","supsetneqq","swarrow","thickapprox","thicksim","to","trianglelefteq","triangleq","trianglerighteq","twoheadleftarrow","twoheadrightarrow","uArr","uarr","uparrow","updownarrow","upharpoonleft","upharpoonright","upuparrows","varpropto","varsubsetneq","varsubsetneqq","varsupsetneq","varsupsetneqq","vartriangle","vartriangleleft","vartriangleright","vcentcolon","vdash","vDash"]);const je=/^⁻?[²³¹⁰⁴⁵⁶⁷⁸⁹]+/;const Ke=e=>{if(e.length>1){const t=s(/[#$&%_~^]/g,e);const n=t.length;if(n>0){for(let r=n-1;r>=0;r--){const n=t[r];const s=n.index;if(n.value==="~"){e=e.slice(0,s)+"\\textasciitilde "+e.slice(s+1)}else if(n.value==="^"){e=e.slice(0,s)+"\\textasciicircum "+e.slice(s+1)}else if(s===0){e="\\"+e}else{const t=e.substr(s-1,1);if(t!=="\\"){e=e.slice(0,s)+"\\"+e.slice(s)}}}}}return e};const Ze=e=>[e[0],e[1],e[2],e[3]];const Xe=Object.freeze({"̀":"\\grave","́":"\\acute","̂":"\\hat","̃":"\\tilde","̄":"\\bar","̅":"\\bar","̇":"\\dot","̈":"\\ddot","̊":"\\mathring","̌":"\\check","̲":"\\underline","⃐":"\\overleftharpoon","⃑":"\\overrightharpoon","⃖":"\\overleftarrow","⃗":"\\vec","⃡":"\\overleftrightarrow"});const Qe=Object.freeze({"̀":"\\grave","́":"\\acute","̂":"\\widehat","̃":"\\widetilde","̄":"\\overline","̅":"\\overline","̇":"\\dot","̈":"\\ddot","̊":"\\mathring","̌":"\\check","̲":"\\underline","⃐":"\\overleftharpoon","⃑":"\\overrightharpoon","⃖":"\\overleftarrow","⃗":"\\overrightarrow","⃡":"\\overleftrightarrow"});const Je=e=>{const t=e.indexOf("_");return t===-1?e:e.slice(0,t+1)+"{"+e.slice(t+1)+"}"};const et=e=>{const t=e.slice(-1);return!/[\u0300-\u0308\u030A\u030C\u0332\u20d0\u20d1\u20d6\u20d7\u20e1]/.test(t)?e:e.length===2?Xe[t]+"{"+e.slice(0,-1)+"}":Qe[t]+"{"+e.slice(0,-1)+"}"};const tt=(e,n)=>{const r=Ve.exec(e);if(r){const s=r[0].replace(/_*$/,"");const a=e.charAt(s.length);const l=_e[s];if(l){return l}else if(/^\(/.test(a)){return n.ttype===Se.ACCENT?[s,s+"}{",Se.FUNCTION,""]:s==="sqrt"?[s,"\\sqrt",Se.UNARY,""]:s==="f"?[s,s,Se.FUNCTION,""]:t(s,Ye)?[s,"\\"+s,Se.FUNCTION,""]:[s,"\\operatorname{"+Je(s)+"}",Se.FUNCTION,""]}else if(n.ttype===Se.ACCESSOR){return[s,s,Se.PROPERTY,""]}else if(/[_\u0300-\u0308\u030A\u030C\u0332\u20d0\u20d1\u20d6\u20d7\u20e1]/.test(s)){let e="";if(s.indexOf("_")===-1){e=et(s);return[s,e,s.length>2?Se.LONGVAR:Se.VAR,""]}else{const t=s.split("_");for(let e=t.length-1;e>=0;e--){t[e]=et(t[e]);if(e>0){t[e]="_\\mathrm{"+t[e]+"}"}}e=t.join("");return[s,e,t[0].length>1?Se.LONGVAR:Se.VAR,""]}}else if(s.length===2&s.charAt(0)==="\ud835"){return[s,s,Se.VAR,""]}else if(s.length>1){return[s,s,Se.LONGVAR,""]}else{if(s.charAt(0)==="\ud835"){return[s.substring(0,2),s.substring(0,2),Se.VAR,""]}else{return[s.charAt(0),s.charAt(0),Se.VAR,""]}}}};const nt=(e,n,r)=>{let s=0;let a="";let l;if(e.charAt(0)==='"'){s=e.indexOf('"',1);if(s>0){a=e.substring(1,s);return['"'+a+'"',a,Se.STRING,""]}else{return[e,e,Se.STRING,""]}}if(/^#/.test(e)){a=e.slice(2);s=a.indexOf("\n");if(s>-1){const e=a.indexOf("\n");if(e>-1&&e<s){s=e}}if(s>-1){a=a.slice(0,s)}return[`#${a}`,`\\text{\\texttt{ \\#${a}}}`,Se.COMMENT,""]}if(e.charAt(0)==="`"){s=e.indexOf("`",1);if(s>0){a=e.slice(1,s);return["`"+a+"`",a,Se.STRING,""]}else{return[e,e,Se.STRING,""]}}if(e.charAt(0)==="'"){s=e.indexOf("'",1);if(s>0){a=e.substring(1,s);return["'"+a+"'",a,Se.QUANTITY,""]}else{return[e,e,Se.PRIME,""]}}l=Ge.exec(e);if(l){const e=l[0];a=e.substring(1);if(t(a,ze)){return[e,e,Se.ACCENT,""]}if(t(a,We)){return[e,e,Se.UNARY,""]}if(t(a,He)){return[e,e,Se.BINARY,""]}if(t(a,$e)){return[e,e,Se.REL,""]}const n=Pe[e];if(n){return Ze(n)}return[e,e,Se.ORD,""]}if(we.test(e)){if(ke(r)){const t=e.match(De);if(t){a=Be(t,n);return[t[0],a,Se.NUM,""]}}return["-","-",Se.ADD,""]}const i=e.match(De);if(i){a=Be(i,n);return[i[0],a,Se.NUM,""]}if(/^_[([{]/.test(e)){return["_","_",Se.SUB,""]}const o=tt(e,r);if(o){return Ze(o)}const u=je.exec(e);if(u){return[u[0],u[0],Se.SUPCHAR,""]}l=qe.exec(e);if(l){const e=l[0];for(let t=e.length;t>=1;t--){a=e.substr(0,t);if(Fe[a]){return Ze(Fe[a])}}}const c=e.charAt(0);if(c==="."&&(r.ttype===Se.VAR||r.ttype===Se.LONGVAR||r.ttype===Se.STRING||r.input==="]"||r.ttype===Se.PROPERTY)){return[".","{.}",Se.ACCESSOR,""]}return[c,Ke(c),Se.VAR,""]};const rt=(e,t,n)=>{if(e==null&&t==null){return true}if(e==null||t==null){return false}e=Array.isArray(e)?e:n[e].expos;t=Array.isArray(t)?t:n[t].expos;if(!Array.isArray(e)||!Array.isArray(t)){return false}if(e.length!==t.length){return false}for(let n=0;n<e.length;++n){if(e[n]!==t[n]){return false}}return true};const st=JSON.parse('{"Y":1e24,"yotta":1e24,"Z":1e21,"zetta":1e21,"E":1e18,"exa":1e18,"P":1e15,"peta":1e15,"T":1e12,"tera":1e12,"G":1e9,"giga":1e9,"M":1e6,"mega":1e6,"k":1000,"kilo":1000,"h":100,"hecto":100,"deka":10,"d":0.1,"deci":0.1,"c":0.01,"centi":0.01,"m":0.001,"milli":0.001,"µ":1e-6,"µ":1e-6,"micro":1e-6,"n":1e-9,"nano":1e-9,"p":1e-12,"pico":1e-12,"f":1e-15,"femto":1e-15,"a":1e-18,"atto":1e-18,"z":1e-21,"zepto":1e-21,"y":1e-24,"yocto":1e-24,"Ki":1024,"kibi":1024,"Mi":1048576,"mebi":1048576,"Gi":1073741824,"gibi":1073741824,"Ti":1099511627776,"tebi":1099511627776}');const at=Object.freeze(JSON.parse(`{\n"#":["0.45359237", "1","0","0",[0,1,0,0,0,0,0,0,0]],\n"$":["1","1","0","USD",[0,0,0,0,0,0,0,1,0]],\n"'":["0.3048","1","0","0",[1,0,0,0,0,0,0,0,0]],\n"A":["1","1","0","siSymbol",[0,0,0,1,0,0,0,0,0]],\n"AUD":["1","1","0","AUD",[0,0,0,0,0,0,0,1,0]],\n"Adobe point":["0.0254","72","0","0",[1,0,0,0,0,0,0,0,0]],\n"At":["1","1","0","siSymbol",[0,0,0,0,1,0,1,0,0]],\n"Australian dollar":["1","1","0","AUD",[0,0,0,0,0,0,0,1,0]],\n"BRL":["1","1","0","BRL",[0,0,0,0,0,0,0,1,0]],\n"BTU":["1055.056","1","0","0",[2,1,-2,0,0,0,0,0,0]],\n"BThU":["1055.056","1","0","0",[2,1,-2,0,0,0,0,0,0]],\n"Bq":["1","1","0","siSymbol",[0,0,-1,0,0,0,0,0,0]],\n"Brazilian Real":["1","1","0","BRL",[0,0,0,0,0,0,0,1,0]],\n"British Pound":["1","1","0","GBP",[0,0,0,0,0,0,0,1,0]],\n"Btu":["1055.056","1","0","0",[2,1,-2,0,0,0,0,0,0]],\n"C":["1","1","0","siSymbol",[0,0,1,1,0,0,0,0,0]],\n"C$":["1","1","0","CAD",[0,0,0,0,0,0,0,1,0]],\n"CAD":["1","1","0","CAD",[0,0,0,0,0,0,0,1,0]],\n"CCF":["2.8316846592","1","0","0",[3,0,0,0,0,0,0,0,0]],\n"CHF":["1","1","0","CHF",[0,0,0,0,0,0,0,1,0]],\n"CNY":["1","1","0","CNY",[0,0,0,0,0,0,0,1,0]],\n"CY":["0.764554857984","1","0","0",[3,0,0,0,0,0,0,0,0]],\n"Calorie":["4186.8","1","0","0",[2,1,-2,0,0,0,0,0,0]],\n"Canadian dollar":["1","1","0","CAD",[0,0,0,0,0,0,0,1,0]],\n"Celsius":["1","1","273.15","0",[0,0,0,0,1,0,0,0,0]],\n"Chinese Yuan":["1","1","0","CNY",[0,0,0,0,0,0,0,1,0]],\n"Ci":["37000000000","1","0","siSymbol",[0,0,-1,0,0,0,0,0,0]],\n"Ckm":["100000","1","0","siSymbol",[1,0,0,0,0,0,0,0,0]],\n"Da":["1.66053872e-24","1","0","siSymbol",[0,1,0,0,0,0,0,0,0]],\n"Dalton":["1.66053872e-24","1","0","0",[0,1,0,0,0,0,0,0,0]],\n"Didot point":["15.625","41559","0","0",[1,0,0,0,0,0,0,0,0]],\n"EB":["9223372036854770000","1","0","0",[0,0,0,0,0,1,0,0,0]],\n"EMU":["0.01","360000","0","0",[1,0,0,0,0,0,0,0,0]],\n"EUR":["1","1","0","EUR",[0,0,0,0,0,0,0,1,0]],\n"EiB":["9223372036854770000","1","0","0",[0,0,0,0,0,1,0,0,0]],\n"Euro":["1","1","0","EUR",[0,0,0,0,0,0,0,1,0]],\n"F":["1","1","0","siSymbol",[-2,-1,4,2,0,0,0,0,0]],\n"Fahrenheit":["5","9","459","0",[0,0,0,0,1,0,0,0,0]],\n"G":["0.0001","1","0","siSymbol",[-2,-2,-2,-1,0,0,0,0,0]],\n"GB":["8589934592","1","0","0",[0,0,0,0,0,1,0,0,0]],\n"GBP":["1","1","0","GBP",[0,0,0,0,0,0,0,1,0]],\n"Gal":["0.01","1","0","siSymbol",[1,0,-2,0,0,0,0,0,0]],\n"Gi":["10","12.5663706143592","0","siWord",[0,0,0,0,1,0,1,0,0]],\n"GiB":["8589934592","1","0","0",[0,0,0,0,0,1,0,0,0]],\n"Gregorian year":["31556952","1","0","0",[0,0,1,0,0,0,0,0,0]],\n"Gy":["1","1","0","siSymbol",[2,0,-2,0,0,0,0,0,0]],\n"H":["1","1","0","siSymbol",[2,1,-2,-2,0,0,0,0,0]],\n"HK$":["1","1","0","HKD",[0,0,0,0,0,0,0,1,0]],\n"HKD":["1","1","0","HKD",[0,0,0,0,0,0,0,1,0]],\n"HP":["745.69987158227","1","0","0",[2,1,-3,0,0,0,0,0,0]],\n"Hong Kong dollar":["1","1","0","HKD",[0,0,0,0,0,0,0,1,0]],\n"Hz":["1","1","0","siSymbol",[0,0,-1,0,0,0,0,0,0]],\n"INR":["1","1","0","INR",[0,0,0,0,0,0,0,1,0]],\n"Indian Rupee":["1","1","0","INR",[0,0,0,0,0,0,0,1,0]],\n"Israeli New Shekel":["1","1","0","ILS",[0,0,0,0,0,0,0,1,0]],\n"J":["1","1","0","siSymbol",[2,1,-2,0,0,0,0,0,0]],\n"JPY":["1","1","0","JPY",[0,0,0,0,0,0,0,1,0]],\n"Japanese Yen":["1","1","0","JPY",[0,0,0,0,0,0,0,1,0]],\n"Joule":["1","1","0","0",[2,1,-2,0,0,0,0,0,0]],\n"Julian year":["31557600","1","0","0",[0,0,1,0,0,0,0,0,0]],\n"Jy":["1e-26","1","0","siSymbol",[0,1,-2,0,0,0,0,0,0]],\n"K":["1","1","0","0",[0,0,0,0,1,0,0,0,0]],\n"KiB":["8192","1","0","0",[0,0,0,0,0,1,0,0,0]],\n"L":["0.001","1","0","siSymbol",[3,0,0,0,0,0,0,0,0]],\n"Lego stud":["0.008","1","0","siSymbol",[1,0,0,0,0,0,0,0,0]],\n"MB":["8388608","1","0","0",[0,0,0,0,0,1,0,0,0]],\n"MCM":["5.06707479097497e-07","1","0","0",[2,0,0,0,0,0,0,0,0]],\n"MMBtu":["1055056000","1","0","0",[2,1,-2,0,0,0,0,0,0]],\n"MMbbl":["158987.294928","1","0","0",[3,0,0,0,0,0,0,0,0]],\n"MMbblpd":["158987.294928","86400","0","0",[3,0,-1,0,0,0,0,0,0]],\n"MMscf":["28316.846592","1","0","0",[3,0,0,0,0,0,0,0,0]],\n"MMscfd":["0.32774128","1","0","0",[3,0,0,0,0,0,0,0,0]],\n"MT":["1000","1","0","0",[0,1,0,0,0,0,0,0,0]],\n"MXN":["1","1","0","MXN",[0,0,0,0,0,0,0,1,0]],\n"Mach":["331.6","1","0","0",[1,0,-1,0,0,0,0,0,0]],\n"Mbbl":["158.987294928","1","0","0",[3,0,0,0,0,0,0,0,0]],\n"Mexican Peso":["1","1","0","MXN",[0,0,0,0,0,0,0,1,0]],\n"MiB":["8388608","1","0","0",[0,0,0,0,0,1,0,0,0]],\n"Mscfd":["0.00032774128","1","0","0",[3,0,0,0,0,0,0,0,0]],\n"Mscfh":["0.00786579072","1","0","0",[3,0,0,0,0,0,0,0,0]],\n"N":["1","1","0","siSymbol",[1,1,-2,0,0,0,0,0,0]],\n"NM":["1852","1","0","0",[1,0,0,0,0,0,0,0,0]],\n"PB":["9007199254740990","1","0","0",[0,0,0,0,0,1,0,0,0]],\n"PS":["735.49875","1","0","0",[2,1,-3,0,0,0,0,0,0]],\n"Pa":["1","1","0","siSymbol",[-1,1,-2,0,0,0,0,0,0]],\n"Pascal":["1","1","0","siWord",[-1,1,-2,0,0,0,0,0,0]],\n"Pferdestärke":["735.49875","1","0","0",[2,1,-3,0,0,0,0,0,0]],\n"PiB":["9007199254740990","1","0","0",[0,0,0,0,0,1,0,0,0]],\n"R":["0.000258","1","0","siSymbol",[0,-1,1,1,0,0,0,0,0]],\n"R$":["1","1","0","BRL",[0,0,0,0,0,0,0,1,0]],\n"RT":["3516.8532","1","0","0",[2,1,-3,0,0,0,0,0,0]],\n"S":["1","1","0","siSymbol",[-2,-1,3,2,0,0,0,0,0]],\n"SF":["0.09290304","1","0","0",[2,0,0,0,0,0,0,0,0]],\n"SY":["0.83612736","1","0","0",[2,0,0,0,0,0,0,0,0]],\n"Sv":["1","1","0","siSymbol",[2,0,-2,0,0,0,0,0,0]],\n"Swiss Franc":["1","1","0","CHF",[0,0,0,0,0,0,0,1,0]],\n"T":["1","1","0","siSymbol",[-2,-2,-2,-1,0,0,0,0,0]],\n"TB":["8796093022208","1","0","0",[0,0,0,0,0,1,0,0,0]],\n"TeX point":["0.0003515","1","0","0",[1,0,0,0,0,0,0,0,0]],\n"TiB":["8796093022208","1","0","0",[0,0,0,0,0,1,0,0,0]],\n"US$":["1","1","0","USD",[0,0,0,0,0,0,0,1,0]],\n"USD":["1","1","0","USD",[0,0,0,0,0,0,0,1,0]],\n"V":["1","1","0","siSymbol",[2,1,-3,-1,0,0,0,0,0]],\n"VA":["1","1","0","siSymbol",[2,1,-3,0,0,0,0,0,0]],\n"W":["1","1","0","siSymbol",[2,1,-3,0,0,0,0,0,0]],\n"Wb":["1","1","0","siSymbol",[2,1,-2,-1,0,0,0,0,0]],\n"Wh":["3600","1","0","siSymbol",[2,1,-2,0,0,0,0,0,0]],\n"Yen":["1","1","0","JPY",[0,0,0,0,0,0,0,1,0]],\n"Yuan":["1","1","0","CNY",[0,0,0,0,0,0,0,1,0]],\n"a":["31556925.9747","1","0","siSymbol",[0,0,1,0,0,0,0,0,0]],\n"ac":["4046.8564224","1","0","0",[2,0,0,0,0,0,0,0,0]],\n"acre":["4046.8564224","1","0","0",[2,0,0,0,0,0,0,0,0]],\n"admiralty mile":["1853.188","1","0","0",[1,0,0,0,0,0,0,0,0]],\n"af":["1233.48183754752","1","0","0",[3,0,0,0,0,0,0,0,0]],\n"amp":["1","1","0","0",[0,0,0,1,0,0,0,0,0]],\n"ampere":["1","1","0","siWord",[0,0,0,1,0,0,0,0,0]],\n"ampere turn":["1","1","0","siWord",[0,0,0,0,1,0,1,0,0]],\n"amu":["1.66053872e-24","1","0","0",[0,1,0,0,0,0,0,0,0]],\n"angstrom":["0.0000000001","1","0","0",[1,0,0,0,0,0,0,0,0]],\n"angstrom star":["0.00000000010000015","1","0","0",[1,0,0,0,0,0,0,0,0]],\n"apostilb":["1","3.14159265358979","0","0",[-2,0,0,0,0,0,1,0,0]],\n"arcminute":["3.14159265358979","10800","0","0",[0,0,0,0,0,0,0,0,0]],\n"arcsecond":["3.14159265358979","648000","0","0",[0,0,0,0,0,0,0,0,0]],\n"are":["100","1","0","0",[2,0,0,0,0,0,0,0,0]],\n"as":["4.3.14159265358979","648000","0","0",[0,0,0,0,0,0,0,0,0]],\n"asb":["1","3.14159265358979","0","0",[-2,0,0,0,0,0,1,0,0]],\n"assay ton":["0.0875","3","0","0",[0,1,0,0,0,0,0,0,0]],\n"astronomical unit":["149597870691","1","0","0",[1,0,0,0,0,0,0,0,0]],\n"atmosphere":["101325","1","0","siSymbol",[-1,1,-2,0,0,0,0,0,0]],\n"au":["149597870691","1","0","0",[1,0,0,0,0,0,0,0,0]],\n"bar":["100000","1","0","siWord",[-1,1,-2,0,0,0,0,0,0]],\n"barg":["100000","1","0","0",[-1,1,-2,0,0,0,0,0,0]],\n"barleycorn":["0.0254","3","0","0",[1,0,0,0,0,0,0,0,0]],\n"barrel":["0.158987294928","1","0","0",[3,0,0,0,0,0,0,0,0]],\n"barrel bulk":["0.14158423296","1","0","0",[3,0,0,0,0,0,0,0,0]],\n"basis point":["0.0001","1","0","0",[0,0,0,0,0,0,0,0,0]],\n"baud":["1","1","0","siSymbol",[0,0,-1,0,0,1,0,0,0]],\n"bbl":["0.158987294928","1","0","0",[3,0,0,0,0,0,0,0,0]],\n"becquerel":["1","1","0","siWord",[0,0,-1,0,0,0,0,0,0]],\n"beer barrel":["0.119240471196","1","0","0",[3,0,0,0,0,0,0,0,0]],\n"bit":["1","1","0","0",[0,0,0,0,0,1,0,0,0]],\n"blink":["0.864","1","0","0",[0,0,1,0,0,0,0,0,0]],\n"bo":["0.158987294928","1","0","0",[3,0,0,0,0,0,0,0,0]],\n"boe":["6119000000","1","0","0",[2,1,-2,0,0,0,0,0,0]],\n"boiler horsepower":["9812.5","1","0","0",[2,1,-3,0,0,0,0,0,0]],\n"bpd":["0.158987294928","86400","0","0",[3,0,-1,0,0,0,0,0,0]],\n"bph":["0.158987294928","3600","0","0",[3,0,-1,0,0,0,0,0,0]],\n"breadth":["0.2286","1","0","0",[1,0,0,0,0,0,0,0,0]],\n"bushel":["0.03523907016688","1","0","0",[3,0,0,0,0,0,0,0,0]],\n"byte":["8","1","0","0",[0,0,0,0,0,1,0,0,0]],\n"caballo de vapor":["735.49875","1","0","0",[2,1,-3,0,0,0,0,0,0]],\n"cal":["4.1868","1","0","0",[2,1,-2,0,0,0,0,0,0]],\n"calorie":["4.1868","1","0","siWord",[2,1,-2,0,0,0,0,0,0]],\n"candela":["1","1","0","siWord",[0,0,0,0,0,0,1,0,0]],\n"candlepower":["1","1","0","siWord",[0,0,0,0,0,0,1,0,0]],\n"carat":["0.00002","1","0","0",[0,1,0,0,0,0,0,0,0]],\n"cc":["0.000001","1","0","0",[3,0,0,0,0,0,0,0,0]],\n"cd":["1","1","0","siSymbol",[0,0,0,0,0,0,1,0,0]],\n"centipoise":["0.001","1","0","0",[-1,1,-1,0,0,0,0,0,0]],\n"centistoke":["0.000001","1","0","0",[2,0,-1,0,0,0,0,0,0]],\n"cfm":["0.0004719474432","1","0","0",[3,0,-1,0,0,0,0,0,0]],\n"cfs":["0.028316846592","1","0","0",[3,0,-1,0,0,0,0,0,0]],\n"ch":["735.49875","1","0","0",[2,1,-3,0,0,0,0,0,0]],\n"chain":["79200","3937","0","0",[1,0,0,0,0,0,0,0,0]],\n"cheval vapeur":["735.49875","1","0","0",[2,1,-3,0,0,0,0,0,0]],\n"cmil":["5.06707479097497e-10","1","0","0",[2,0,0,0,0,0,0,0,0]],\n"cmm":["0.00001","1","0","0",[1,0,0,0,0,0,0,0,0]],\n"constant":["1","1","0","0",[0,0,0,0,0,0,0,0,0]],\n"coulomb":["1","1","0","siWord",[0,0,1,1,0,0,0,0,0]],\n"cp":["1","1","0","siWord",[0,0,0,0,0,0,1,0,0]],\n"cps":["1","1","0","0",[0,0,-1,0,0,0,0,0,0]],\n"cu ft":["0.028316846592","1","0","0",[3,0,0,0,0,0,0,0,0]],\n"cu in":["0.000016387064","1","0","0",[3,0,0,0,0,0,0,0,0]],\n"cu yd":["0.764554857984","1","0","0",[3,0,0,0,0,0,0,0,0]],\n"cubic meter":["1","1","0","0",[3,0,0,0,0,0,0,0,0]],\n"cubic metre":["1","1","0","0",[3,0,0,0,0,0,0,0,0]],\n"cup":["0.0002365882365","1","0","0",[3,0,0,0,0,0,0,0,0]],\n"curie":["37000000000","1","0","siWord",[0,0,-1,0,0,0,0,0,0]],\n"cv":["735.49875","1","0","0",[2,1,-3,0,0,0,0,0,0]],\n"cy":["0.764554857984","1","0","0",[3,0,0,0,0,0,0,0,0]],\n"d":["86400","1","0","0",[0,0,1,0,0,0,0,0,0]],\n"daN":["10","1","0","0",[1,1,-2,0,0,0,0,0,0]],\n"darcy":["0.0000000000009869233","1","0","0",[2,0,0,0,0,0,0,0,0]],\n"day":["86400","1","0","0",[0,0,1,0,0,0,0,0,0]],\n"deg":["3.14159265358979","180","0","0",[0,0,0,0,0,0,0,0,0]],\n"degree":["3.14159265358979","180","0","0",[0,0,0,0,0,0,0,0,0]],\n"dekan":["31.4159265358979","180","0","0",[0,0,0,0,0,0,0,0,0]],\n"diopter":["1","1","0","0",[-1,0,0,0,0,0,0,0,0]],\n"dioptre":["1","1","0","0",[-1,0,0,0,0,0,0,0,0]],\n"dollar":["1","1","0","USD",[0,0,0,0,0,0,0,1,0]],\n"drum":["0.20819764812","1","0","0",[3,0,0,0,0,0,0,0,0]],\n"dscf":["0.028316846592","1","0","0",[3,0,0,0,0,0,0,0,0]],\n"dyn":["0.00001","1","0","0",[1,1,-2,0,0,0,0,0,0]],\n"dyne":["0.00001","1","0","0",[1,1,-2,0,0,0,0,0,0]],\n"eV":["1.602176462e-19","1","0","0",[2,1,-2,0,0,0,0,0,0]],\n"electric horsepower":["746","1","0","0",[2,1,-3,0,0,0,0,0,0]],\n"electrical horsepower":["746","1","0","0",[2,1,-3,0,0,0,0,0,0]],\n"electron volt":["1.602176462e-19","1","0","0",[2,1,-2,0,0,0,0,0,0]],\n"erg":["0.0000001","1","0","0",[2,1,-2,0,0,0,0,0,0]],\n"euro":["1","1","0","EUR",[0,0,0,0,0,0,0,1,0]],\n"exabyte":["9223372036854770000","1","0","0",[0,0,0,0,0,1,0,0,0]],\n"exbibyte":["9223372036854770000","1","0","0",[0,0,0,0,0,1,0,0,0]],\n"farad":["1","1","0","siWord",[-2,-1,4,2,0,0,0,0,0]],\n"faraday":["96485.339924","1","0","0",[0,0,1,1,0,0,0,0,0]],\n"fathom":["1.8288","1","0","0",[1,0,0,0,0,0,0,0,0]],\n"fc":["10.7639104167097","1","0","0",[-2,0,0,0,0,0,1,0,1]],\n"feet":["0.3048","1","0","0",[1,0,0,0,0,0,0,0,0]],\n"fermi":["0.000000000000001","1","0","siWord",[1,0,0,0,0,0,0,0,0]],\n"fl oz":["0.003785411784","128","0","0",[3,0,0,0,0,0,0,0,0]],\n"flop":["1","1","0","0",[0,0,-1,0,0,0,0,0,0]],\n"fluid ounce":["0.003785411784","128","0","0",[3,0,0,0,0,0,0,0,0]],\n"food calorie":["4186.8","1","0","0",[2,1,-2,0,0,0,0,0,0]],\n"foot":["0.3048","1","0","0",[1,0,0,0,0,0,0,0,0]],\n"footcandle":["10.7639104167097","1","0","0",[-2,0,0,0,0,0,1,0,1]],\n"footlambert":["1","3.14159265358979","0","0",[-2,0,0,0,0,0,1,0,0]],\n"fortnight":["1209600","1","0","0",[0,0,1,0,0,0,0,0,0]],\n"fps":["0.3048","1","0","0",[1,0,-1,0,0,0,0,0,0]],\n"franklin":["0.00000000033356","1","0","siWord",[0,0,1,1,0,0,0,0,0]],\n"ft":["0.3048","1","0","0",[1,0,0,0,0,0,0,0,0]],\n"ft water":["2988.874","1","0","0",[-1,1,-2,0,0,0,0,0,0]],\n"ftc":["10.7639104167097","1","0","0",[-2,0,0,0,0,0,1,0,1]],\n"ftl":["3.426259","1","0","0",[-2,0,0,0,0,0,1,0,0]],\n"furlong":["201.168","1","0","0",[1,0,0,0,0,0,0,0,0]],\n"g":["0.001","1","0","siSymbol",[0,1,0,0,0,0,0,0,0]],\n"gal":["0.003785411784","1","0","0",[3,0,0,0,0,0,0,0,0]],\n"galileo":["0.01","1","0","siWord",[1,0,-2,0,0,0,0,0,0]],\n"gallon":["0.003785411784","1","0","0",[3,0,0,0,0,0,0,0,0]],\n"gauss":["0.0001","1","0","siSymbol",[-2,-2,-2,-1,0,0,0,0,0]],\n"gigabyte":["8589934592","1","0","0",[0,0,0,0,0,1,0,0,0]],\n"gilbert":["10","12.5663706143592","0","siWord",[0,0,0,0,1,0,1,0,0]],\n"gill":["0.003785411784","32","0","0",[3,0,0,0,0,0,0,0,0]],\n"gon":["3.14159265358979","200","0","0",[0,0,0,0,0,0,0,0,0]],\n"gongjin":["1","1","0","siSymbol",[0,1,0,0,0,0,0,0,0]],\n"gongli":["1000","1","0","siSymbol",[1,0,0,0,0,0,0,0,0]],\n"gpd":["0.003785411784","86400","0","0",[3,0,-1,0,0,0,0,0,0]],\n"gph":["0.003785411784","3600","0","0",[3,0,-1,0,0,0,0,0,0]],\n"gpm":["0.003785411784","60","0","0",[3,0,-1,0,0,0,0,0,0]],\n"gps":["0.003785411784","1","0","0",[3,0,-1,0,0,0,0,0,0]],\n"gr":["0.00006479891","1","0","0",[0,1,0,0,0,0,0,0,0]],\n"grad":["3.14159265358979","200","0","0",[0,0,0,0,0,0,0,0,0]],\n"grain":["0.00006479891","1","0","0",[0,1,0,0,0,0,0,0,0]],\n"gram":["0.001","1","0","0",[0,1,0,0,0,0,0,0,0]],\n"gramme":["0.001","1","0","0",[0,1,0,0,0,0,0,0,0]],\n"gray":["1","1","0","0",[2,0,-2,0,0,0,0,0,0]],\n"great year":["814000000000","1","0","0",[0,0,1,0,0,0,0,0,0]],\n"gsm":["0.001","1","0","0",[-2,1,0,0,0,0,0,0,0]],\n"gutenberg":["0.0254","7200","0","0",[1,0,0,0,0,0,0,0,0]],\n"gōngjin":["1","1","0","siSymbol",[0,1,0,0,0,0,0,0,0]],\n"gōngli":["1000","1","0","siSymbol",[1,0,0,0,0,0,0,0,0]],\n"h":["3600","1","0","0",[0,0,1,0,0,0,0,0,0]],\n"ha":["10000","1","0","siSymbol",[2,0,0,0,0,0,0,0,0]],\n"hand":["0.1016","1","0","0",[1,0,0,0,0,0,0,0,0]],\n"hectare":["10000","1","0","siWord",[2,0,0,0,0,0,0,0,0]],\n"helek":["10","3","0","0",[0,0,1,0,0,0,0,0,0]],\n"hemisphere":["6.28318530717959","1","0","0",[0,0,0,0,0,0,0,0,1]],\n"henrie":["1","1","0","siWord",[2,1,-2,-2,0,0,0,0,0]],\n"henry":["1","1","0","siWord",[2,1,-2,-2,0,0,0,0,0]],\n"hertz":["1","1","0","siWord",[0,0,-1,0,0,0,0,0,0]],\n"hk":["735.49875","1","0","0",[2,1,-3,0,0,0,0,0,0]],\n"horsepower":["745.69987158227","1","0","0",[2,1,-3,0,0,0,0,0,0]],\n"hour":["3600","1","0","0",[0,0,1,0,0,0,0,0,0]],\n"hp":["745.69987158227","1","0","0",[2,1,-3,0,0,0,0,0,0]],\n"hpE":["746","1","0","0",[2,1,-3,0,0,0,0,0,0]],\n"hpI":["745.69987158227","1","0","0",[2,1,-3,0,0,0,0,0,0]],\n"hpM":["735.49875","1","0","0",[2,1,-3,0,0,0,0,0,0]],\n"hpS":["9812.5","1","0","0",[2,1,-3,0,0,0,0,0,0]],\n"hr":["3600","1","0","0",[0,0,1,0,0,0,0,0,0]],\n"in":["0.0254","1","0","0",[1,0,0,0,0,0,0,0,0]],\n"in Hg":["3863.8","1","0","0",[-1,1,-2,0,0,0,0,0,0]],\n"inch":["0.0254","1","0","0",[1,0,0,0,0,0,0,0,0]],\n"inche":["0.0254","1","0","0",[1,0,0,0,0,0,0,0,0]],\n"jansky":["1e-26","1","0","0",[0,1,-2,0,0,0,0,0,0]],\n"jar":["1","900000000","0","0",[-2,-1,4,2,0,0,0,0,0]],\n"joule":["1","1","0","0",[2,1,-2,0,0,0,0,0,0]],\n"k":["4448.2216152605","1","0","0",[1,1,-2,0,0,0,0,0,0]],\n"kB":["8192","1","0","0",[0,0,0,0,0,1,0,0,0]],\n"kB":["8192","1","0","0",[0,0,0,0,0,1,0,0,0]],\n"kairi":["1852","1","0","0",[1,0,0,0,0,0,0,0,0]],\n"kanal":["505.8570528","1","0","0",[2,0,0,0,0,0,0,0,0]],\n"katal":["6.02214179e+23","1","0","siWord",[0,0,-1,0,0,1,0,0,0]],\n"kcal":["4186.8","1","0","0",[2,1,-2,0,0,0,0,0,0]],\n"kcmil":["5.06707479097497e-07","1","0","0",[2,0,0,0,0,0,0,0,0]],\n"keg":["0.058673882652","1","0","0",[3,0,0,0,0,0,0,0,0]],\n"kelvin":["1","1","0","0",[0,0,0,0,1,0,0,0,0]],\n"kgf":["9.80665","1","0","0",[1,1,-2,0,0,0,0,0,0]],\n"kilo":["1","1","0","0",[0,1,0,0,0,0,0,0,0]],\n"kilobyte":["8192","1","0","0",[0,0,0,0,0,1,0,0,0]],\n"kilogram":["1","1","0","0",[0,1,0,0,0,0,0,0,0]],\n"kilogramme":["1","1","0","0",[0,1,0,0,0,0,0,0,0]],\n"kilopond":["9.80665","1","0","0",[1,1,-2,0,0,0,0,0,0]],\n"kip":["4448.2216152605","1","0","0",[1,1,-2,0,0,0,0,0,0]],\n"klf":["4448.2216152605","0.3048","0","0",[0,1,-2,0,0,0,0,0,0]],\n"kn":["1852","3600","0","0",[1,0,-1,0,0,0,0,0,0]],\n"knot":["1852","3600","0","0",[1,0,-1,0,0,0,0,0,0]],\n"kp":["9.80665","1","0","0",[1,1,-2,0,0,0,0,0,0]],\n"kpf":["4448.2216152605","0.3048","0","0",[0,1,-2,0,0,0,0,0,0]],\n"kph":["1000/3600","1","0","0",[1,0,-1,0,0,0,0,0,0]],\n"kpph":["1000/3600","1","0","0",[-1,1,-3,0,0,0,0,0,0]],\n"ks":["735.49875","1","0","0",[2,1,-3,0,0,0,0,0,0]],\n"ksf":["47880.2589803358","1","0","0",[-1,1,-2,0,0,0,0,0,0]],\n"ksi":["6894757.29316836","1","0","0",[-1,1,-2,0,0,0,0,0,0]],\n"kwh":["3600000","1","0","0",[2,1,-2,0,0,0,0,0,0]],\n"l":["0.001","1","0","siSymbol",[3,0,0,0,0,0,0,0,0]],\n"lambert":["10000","3.14159265358979","0","0",[-2,0,0,0,0,0,1,0,0]],\n"lb":["0.45359237","1","0","0",[0,1,0,0,0,0,0,0,0]],\n"lbf":["4.4482216152605","1","0","0",[1,1,-2,0,0,0,0,0,0]],\n"lbm":["0.45359237","1","0","0",[0,1,0,0,0,0,0,0,0]],\n"league":["5556","1","0","0",[1,0,0,0,0,0,0,0,0]],\n"lf":["0.3048","1","0","0",[1,0,0,0,0,0,0,0,0]],\n"li":["500","1","0","0",[1,0,0,0,0,0,0,0,0]],\n"light year":["9460730472580800","1","0","0",[1,0,0,0,0,0,0,0,0]],\n"link":["2400","11811","0","0",[1,0,0,0,0,0,0,0,0]],\n"liter":["0.001","1","0","siWord",[3,0,0,0,0,0,0,0,0]],\n"litre":["0.001","1","0","siWord",[3,0,0,0,0,0,0,0,0]],\n"lm":["1","1","0","siSymbol",[0,0,0,0,0,0,1,0,1]],\n"long ton":["1016.0469088","1","0","0",[0,1,0,0,0,0,0,0,0]],\n"lt":["1016.0469088","1","0","0",[0,1,0,0,0,0,0,0,0]],\n"ltpd":["0.0117598021851852","1","0","0",[0,1,-1,0,0,0,0,0,0]],\n"lumen":["1","1","0","siWord",[0,0,0,0,0,0,1,0,1]],\n"lunar day":["89416.32","1","0","0",[0,0,1,0,0,0,0,0,0]],\n"lunar month":["2551442.976","1","0","0",[0,0,1,0,0,0,0,0,0]],\n"lux":["1","1","0","siWord",[-2,0,0,0,0,0,1,0,1]],\n"lx":["1","1","0","siSymbol",[-2,0,0,0,0,0,1,0,1]],\n"m":["1","1","0","siSymbol",[1,0,0,0,0,0,0,0,0]],\n"mD":["9.869233e-16","1","0","0",[2,0,0,0,0,0,0,0,0]],\n"marathon":["42195","1","0","0",[1,0,0,0,0,0,0,0,0]],\n"marla":["25.29285264","1","0","0",[2,0,0,0,0,0,0,0,0]],\n"mas":["3.14159265358979","648000000","0","0",[0,0,0,0,0,0,0,0,0]],\n"maxwell":["0.00000001","1","0","siSymbol",[2,1,-2,-1,0,0,0,0,0]],\n"mb":["100","1","0","0",[-1,1,-2,0,0,0,0,0,0]],\n"megabyte":["8388608","1","0","0",[0,0,0,0,0,1,0,0,0]],\n"megaton TNT":["4184000000000000","1","0","0",[2,1,-2,0,0,0,0,0,0]],\n"megatons TNT":["4184000000000000","1","0","0",[2,1,-2,0,0,0,0,0,0]],\n"megohm":["1000000","1","0","0",[2,1,-3,-2,0,0,0,0,0]],\n"meter":["1","1","0","siWord",[1,0,0,0,0,0,0,0,0]],\n"metre":["1","1","0","siWord",[1,0,0,0,0,0,0,0,0]],\n"metric horsepower":["735.49875","1","0","0",[2,1,-3,0,0,0,0,0,0]],\n"metric ton":["1000","1","0","0",[0,1,0,0,0,0,0,0,0]],\n"mgd":["3785.411784","86400","0","0",[3,0,-1,0,0,0,0,0,0]],\n"mho":["1","1","0","0",[-2,-1,3,2,0,0,0,0,0]],\n"mi":["1609.344","1","0","0",[1,0,0,0,0,0,0,0,0]],\n"mil":["0.0000254","1","0","0",[1,0,0,0,0,0,0,0,0]],\n"mile":["1609.344","1","0","0",[1,0,0,0,0,0,0,0,0]],\n"min":["60","1","0","0",[0,0,1,0,0,0,0,0,0]],\n"minute":["60","1","0","0",[0,0,1,0,0,0,0,0,0]],\n"moa":["3.14159265358979","10800","0","0",[0,0,0,0,0,0,0,0,0]],\n"mol":["6.02214179e+23","1","0","0",[0,0,0,0,0,1,0,0,0]],\n"mole":["6.02214179e+23","1","0","0",[0,0,0,0,0,1,0,0,0]],\n"mpg":["1609.344","0.003785411784","0","0",[-2,0,0,0,0,0,0,0,0]],\n"mph":["0.44704","1","0","0",[1,0,-1,0,0,0,0,0,0]],\n"mt":["1000","1","0","0",[0,1,0,0,0,0,0,0,0]],\n"nautical mile":["1852","1","0","0",[1,0,0,0,0,0,0,0,0]],\n"newton":["1","1","0","0",[1,1,-2,0,0,0,0,0,0]],\n"nit":["1","1","0","0",[-2,0,0,0,0,0,1,0,0]],\n"ohm":["1","1","0","siWord",[2,1,-3,-2,0,0,0,0,0]],\n"ounce":["0.45359237","16","0","0",[0,1,0,0,0,0,0,0,0]],\n"oz":["0.45359237","16","0","0",[0,1,0,0,0,0,0,0,0]],\n"oz t":["0.0311034768","1","0","0",[0,1,0,0,0,0,0,0,0]],\n"parsec":["30856780000000000","1","0","0",[1,0,0,0,0,0,0,0,0]],\n"pc":["0.0254","6","0","0",[1,0,0,0,0,0,0,0,0]],\n"pcf":["4.4482216152605","0.028316846592","0","0",[-2,1,-2,0,0,0,0,0,0]],\n"pci":["4.4482216152605","0.000016387064","0","0",[-2,1,-2,0,0,0,0,0,0]],\n"pebibyte":["9007199254740990","1","0","0",[0,0,0,0,0,1,0,0,0]],\n"peck":["0.00880976754172","1","0","0",[3,0,0,0,0,0,0,0,0]],\n"perfect ream":["516","1","0","0",[0,0,0,0,0,1,0,0,0]],\n"person":["1","1","0","0",[0,0,0,0,0,1,0,0,0]],\n"petabyte":["9007199254740990","1","0","0",[0,0,0,0,0,1,0,0,0]],\n"pfd":["0.5","1","0","0",[0,1,0,0,0,0,0,0,0]],\n"pferdestärke":["735.49875","1","0","0",[2,1,-3,0,0,0,0,0,0]],\n"pfund":["0.5","1","0","0",[0,1,0,0,0,0,0,0,0]],\n"phot":["10000","1","0","0",[-2,0,0,0,0,0,1,0,0]],\n"pica":["0.0254","6","0","0",[1,0,0,0,0,0,0,0,0]],\n"pied du roi":["9000","27706","0","0",[1,0,0,0,0,0,0,0,0]],\n"pieze":["1000","1","0","0",[-1,1,-2,0,0,0,0,0,0]],\n"pint":["0.000473176473","1","0","0",[3,0,0,0,0,0,0,0,0]],\n"pk":["735.49875","1","0","0",[2,1,-3,0,0,0,0,0,0]],\n"platonic year":["814000000000","1","0","0",[0,0,1,0,0,0,0,0,0]],\n"plf":["4.4482216152605","0.3048","0","0",[0,1,-2,0,0,0,0,0,0]],\n"point":["0.0254","72","0","0",[1,0,0,0,0,0,0,0,0]],\n"poise":["0.1","1","0","siWord",[-1,1,-1,0,0,0,0,0,0]],\n"pound":["0.45359237","1","0","0",[0,1,0,0,0,0,0,0,0]],\n"poundal":["4.4482216152605","32.174","0","0",[1,1,-2,0,0,0,0,0,0]],\n"ppm":["0.000001","1","0","0",[0,0,0,0,0,0,0,0,0]],\n"ppmdv":["0.000001","1","0","0",[0,0,0,0,0,0,0,0,0]],\n"ppmv":["0.000001","1","0","0",[0,0,0,0,0,0,0,0,0]],\n"ppmw":["0.000001","1","0","0",[0,0,0,0,0,0,0,0,0]],\n"printer's point":["0.0003515","1","0","0",[1,0,0,0,0,0,0,0,0]],\n"printer's ream":["516","1","0","0",[0,0,0,0,0,1,0,0,0]],\n"ps":["735.49875","1","0","0",[2,1,-3,0,0,0,0,0,0]],\n"psf":["4.4482216152605","0.09290304","0","0",[-1,1,-2,0,0,0,0,0,0]],\n"psi":["4.4482216152605","0.00064516","0","0",[-1,1,-2,0,0,0,0,0,0]],\n"psia":["6894.75729316836","1","0","0",[-1,1,-2,0,0,0,0,0,0]],\n"psig":["6894.75729316836","1","14.6959","0",[-1,1,-2,0,0,0,0,0,0]],\n"px":["0.0254","96","0","0",[1,0,0,0,0,0,0,0,0]],\n"pz":["1000","1","0","0",[-1,1,-2,0,0,0,0,0,0]],\n"quart":["0.003785411784","4","0","0",[3,0,0,0,0,0,0,0,0]],\n"quire":["25","1","0","0",[0,0,0,0,0,1,0,0,0]],\n"rad":["1","1","0","0",[0,0,0,0,0,0,0,0,0]],\n"radian":["1","1","0","0",[0,0,0,0,0,0,0,0,0]],\n"rankin":["5","9","0","0",[0,0,0,0,1,0,0,0,0]],\n"rd":["0.01","1","0","siSymbol",[2,0,-2,0,0,0,0,0,0]],\n"real":["1","1","0","BRL",[0,0,0,0,0,0,0,1,0]],\n"ream":["500","1","0","0",[0,0,0,0,0,1,0,0,0]],\n"rem":["0.01","1","0","siSymbol",[2,0,-2,0,0,0,0,0,0]],\n"rev":["6.28318530717959","1","0","0",[0,0,0,0,0,0,0,0,0]],\n"rod":["19800","3937","0","0",[1,0,0,0,0,0,0,0,0]],\n"roentgen":["0.000258","1","0","siWord",[0,-1,1,1,0,0,0,0,0]],\n"rpm":["6.28318530717959","3600","0","0",[0,0,-1,0,0,0,0,0,0]],\n"röntgen":["0.000258","1","0","siWord",[0,-1,1,1,0,0,0,0,0]],\n"s":["1","1","0","siSymbol",[0,0,1,0,0,0,0,0,0]],\n"saltspoon":["0.003785411784","3072","0","0",[3,0,0,0,0,0,0,0,0]],\n"scf":["0.028316846592","1","0","0",[3,0,0,0,0,0,0,0,0]],\n"scfd":["0.028316846592","86400","0","0",[3,0,-1,0,0,0,0,0,0]],\n"scfh":["0.028316846592","3600","0","0",[3,0,-1,0,0,0,0,0,0]],\n"scfm":["0.028316846592","60","0","0",[3,0,-1,0,0,0,0,0,0]],\n"sea mile":["1852","1","0","0",[1,0,0,0,0,0,0,0,0]],\n"sec":["1","1","0","0",[0,0,1,0,0,0,0,0,0]],\n"second":["1","1","0","0",[0,0,1,0,0,0,0,0,0]],\n"section":["2589988.110336","1","0","0",[2,0,0,0,0,0,0,0,0]],\n"sennight":["604800","1","0","0",[0,0,1,0,0,0,0,0,0]],\n"sheet":["1","1","0","0",[0,0,0,0,0,1,0,0,0]],\n"short ream":["480","1","0","0",[0,0,0,0,0,1,0,0,0]],\n"short ton":["907.18474","1","0","0",[0,1,0,0,0,0,0,0,0]],\n"siemen":["1","1","0","siWord",[-2,-1,3,2,0,0,0,0,0]],\n"sievert":["1","1","0","siWord",[2,0,-2,0,0,0,0,0,0]],\n"slinch":["175.126835246477","1","0","0",[0,1,0,0,0,0,0,0,0]],\n"slug":["14.5939029372064","1","0","0",[0,1,0,0,0,0,0,0,0]],\n"smoot":["1.7018","1","0","0",[0,1,0,0,0,0,0,0,0]],\n"span":["0.2286","1","0","0",[1,0,0,0,0,0,0,0,0]],\n"sphere":["12.5663706143592","1","0","0",[0,0,0,0,0,0,0,0,1]],\n"sq ft":["0.09290304","1","0","0",[2,0,0,0,0,0,0,0,0]],\n"sq in":["0.00064516","1","0","0",[2,0,0,0,0,0,0,0,0]],\n"sq km":["1000000","1","0","0",[2,0,0,0,0,0,0,0,0]],\n"sq mi":["2589988.110336","1","0","0",[2,0,0,0,0,0,0,0,0]],\n"sq yd":["0.83612736","1","0","0",[2,0,0,0,0,0,0,0,0]],\n"square degree":["0.000304617419786709","1","0","0",[0,0,0,0,0,0,0,0,1]],\n"square meter":["1","1","0","0",[2,0,0,0,0,0,0,0,0]],\n"square metre":["1","1","0","0",[2,0,0,0,0,0,0,0,0]],\n"square mi":["2589988.110336","1","0","0",[2,0,0,0,0,0,0,0,0]],\n"sr":["1","1","0","siSymbol",[0,0,0,0,0,0,0,0,1]],\n"ssp":["0.003785411784","3072","0","0",[3,0,0,0,0,0,0,0,0]],\n"standard volume":["22.414","1","0","0",[3,0,0,0,0,0,0,0,0]],\n"statampere":["0.00000000033356","1","0","0",[0,0,0,1,0,0,0,0,0]],\n"statcoulomb":["0.00000000033356","1","0","0",[0,0,1,1,0,0,0,0,0]],\n"statfarad":["0.0000000000011126","1","0","0",[-2,-1,4,2,0,0,0,0,0]],\n"stathenrie":["898760000000","1","0","0",[2,1,-2,-2,0,0,0,0,0]],\n"stathenry":["898760000000","1","0","0",[2,1,-2,-2,0,0,0,0,0]],\n"statohm":["898760000000","1","0","0",[2,1,-3,-2,0,0,0,0,0]],\n"statvolt":["299.79","1","0","0",[2,1,-3,-1,0,0,0,0,0]],\n"statwatt":["0.0000001","1","0","0",[2,1,-3,0,0,0,0,0,0]],\n"steam horsepower":["9812.5","1","0","0",[2,1,-3,0,0,0,0,0,0]],\n"steradian":["1","1","0","0",[0,0,0,0,0,0,0,0,1]],\n"stere":["1","1","0","0",[3,0,0,0,0,0,0,0,0]],\n"stoke":["0.0001","1","0","0",[2,0,-1,0,0,0,0,0,0]],\n"stone":["6.35029318","1","0","0",[0,1,0,0,0,0,0,0,0]],\n"stpd":["0.0104998233796296","1","0","0",[0,1,-1,0,0,0,0,0,0]],\n"stunde":["3600","1","0","0",[0,0,1,0,0,0,0,0,0]],\n"survey feet":["1200","3937","0","0",[1,0,0,0,0,0,0,0,0]],\n"survey foot":["1200","3937","0","0",[1,0,0,0,0,0,0,0,0]],\n"Sv":["1","1","0","siSymbol",[2,0,-2,0,0,0,0,0,0]],\n"sverdrup":["1000000","1","0","0",[3,0,-1,0,0,0,0,0,0]],\n"sym":["1","1","0","siSymbol",[0,0,0,0,0,1,0,0,0]],\n"tablespoon":["0.003785411784","256","0","0",[3,0,0,0,0,0,0,0,0]],\n"tbsp":["0.003785411784","256","0","0",[3,0,0,0,0,0,0,0,0]],\n"teaspoon":["0.003785411784","768","0","0",[3,0,0,0,0,0,0,0,0]],\n"tebibyte":["8796093022208","1","0","0",[0,0,0,0,0,1,0,0,0]],\n"terabyte":["8796093022208","1","0","0",[0,0,0,0,0,1,0,0,0]],\n"tesla":["1","1","0","siSymbol",[-2,-2,-2,-1,0,0,0,0,0]],\n"therm":["105480400","1","0","0",[2,1,-2,0,0,0,0,0,0]],\n"tidal day":["89416.32","1","0","0",[0,0,1,0,0,0,0,0,0]],\n"ton":["907.18474","1","0","0",[0,1,0,0,0,0,0,0,0]],\n"tonf":["8896.443230521","1","0","0",[1,1,-2,0,0,0,0,0,0]],\n"ton TNT":["4184000000","1","0","0",[2,1,-2,0,0,0,0,0,0]],\n"ton refrigeration":["3516.8532","1","0","0",[2,1,-3,0,0,0,0,0,0]],\n"tonne":["1000","1","0","0",[0,1,0,0,0,0,0,0,0]],\n"tons TNT":["4184000000","1","0","0",[2,1,-2,0,0,0,0,0,0]],\n"tons refrigeration":["3516.8532","1","0","0",[2,1,-3,0,0,0,0,0,0]],\n"township":["93239571.972096","1","0","0",[2,0,0,0,0,0,0,0,0]],\n"toz":["0.0311034768","1","0","0",[0,1,0,0,0,0,0,0,0]],\n"tpy":["0.0000287475400032297","1","0","0",[0,1,-1,0,0,0,0,0,0]],\n"tropical year":["31556925.9747","1","0","0",[0,0,1,0,0,0,0,0,0]],\n"troy ounce":["0.0311034768","1","0","0",[0,1,0,0,0,0,0,0,0]],\n"tsp":["0.003785411784","768","0","0",[3,0,0,0,0,0,0,0,0]],\n"twip":["0.0254","1440","0","0",[1,0,0,0,0,0,0,0,0]],\n"unit":["1","1","0","0",[0,0,0,0,0,1,0,0,0]],\n"vapeur":["735.49875","1","0","0",[2,1,-3,0,0,0,0,0,0]],\n"var":["1","1","0","siSymbol",[2,1,-3,0,0,0,0,0,0]],\n"varistor":["1","1","0","siWord",[2,1,-3,0,0,0,0,0,0]],\n"volt":["1","1","0","siWord",[2,1,-3,-1,0,0,0,0,0]],\n"watt":["1","1","0","siWord",[2,1,-3,0,0,0,0,0,0]],\n"weber":["1","1","0","siSymbol",[2,1,-2,-1,0,0,0,0,0]],\n"week":["604800","1","0","0",[0,0,1,0,0,0,0,0,0]],\n"wppm":["0.000001","1","0","0",[0,0,0,0,0,0,0,0,0]],\n"yard":["0.9144","1","0","0",[1,0,0,0,0,0,0,0,0]],\n"yd":["0.9144","1","0","0",[1,0,0,0,0,0,0,0,0]],\n"year":["31556952","1","0","0",[0,0,1,0,0,0,0,0,0]],\n"yen":["1","1","0","JPY",[0,0,0,0,0,0,0,1,0]],\n"£":["1","1","0","GBP",[0,0,0,0,0,0,0,1,0]],\n"¥":["1","1","0","JPY",[0,0,0,0,0,0,0,1,0]],\n"°":["3.14159265358979","180","0","0",[0,0,0,0,0,0,0,0,0]],\n"°C":["1","1","273.15","0",[0,0,0,0,1,0,0,0,0]],\n"°F":["5","9","459","0",[0,0,0,0,1,0,0,0,0]],\n"°K":["1","1","0","0",[0,0,0,0,1,0,0,0,0]],\n"°R":["5","9","0","0",[0,0,0,0,1,0,0,0,0]],\n"°R":["5","9","0","0",[0,0,0,0,1,0,0,0,0]],\n"Å":["0.0000000001","1","0","0",[1,0,0,0,0,0,0,0,0]],\n"Ω":["1","1","0","siSymbol",[2,1,-3,-2,0,0,0,0,0]],\n"”":["0.0254","1","0","0",[1,0,0,0,0,0,0,0,0]],\n"₨":["1","1","0","INR",[0,0,0,0,0,0,0,1,0]],\n"₪":["1","1","0","ILS",[0,0,0,0,0,0,0,1,0]],\n"€":["1","1","0","EUR",[0,0,0,0,0,0,0,1,0]],\n"℃":["1","1","273.15","0",[0,0,0,0,1,0,0,0,0]],\n"℉":["5","9","459","0",[0,0,0,0,1,0,0,0,0]],\n"Ω":["1","1","0","siSymbol",[2,1,-3,-2,0,0,0,0,0]],\n"K":["1","1","0","0",[0,0,0,0,1,0,0,0,0]],\n"Å":["0.0000000001","1","0","0",[1,0,0,0,0,0,0,0,0]]\n}`));const lt=(e,t,n)=>{const r=e.trim();const s=r.length;const a={name:r,factor:ye.one,gauge:ye.zero,log:"",expos:[0,0,0,0,0,0,0,0,0]};if(e===""){return a}let l="";let i;let o=false;let u="";let c=false;let p=false;for(let e=1;e<3;e++){if(e===1){o=true;l=r;if(s>2){if(l.charAt(l.length-1)==="s"){if(!(l==="cfs"||s===3&l.charAt(1)==="p")){l=l.slice(0,-1)}}}let e="";if(s>3){const t=/^(yotta|zetta|exa|peta|tera|giga|mega|kilo|hecto|deka|deci|centi|milli|micro|nano|pico|femto|atto|zepto|yocto)/.exec(l);if(t){e=t[0].value;o=true;l=l.slice(e.length)}}}else{o=false;u=l.charAt(0);if("YZEPTGMkhdcmnpfazyµμ".indexOf(u)>-1){o=true;l=l.substring(1)}}if(n&&n.value[l]){const e=n.unit[n.value[l].unit];a.factor=ye.multiply(n.value[l].value,e.factor);a.expos=e.expos;return a}if(o){i=at[l];if(i){p=true}if(e===1&&p&&u===""){break}else if(p){if(e===1){p=i[3]==="siWord";c=true;break}else{p=i[3]==="siSymbol";c=true}}}}if(p){a.gauge=ye.fromString(i[2]);a.expos=i[4];if(a.expos[7]===1){if(t){a.factor=ye.reciprocal(t[i[3]])}else{return A("CURRENCY")}}else{a.factor=ye.divide(ye.fromString(i[0]),ye.fromString(i[1]))}if(c){a.factor=ye.multiply(a.factor,ye.fromNumber(st[u]))}}else{return A("UNIT_NAME",r)}return a};const it=/[0-9·\-⁰¹²³\u2074-\u2079⁻/^()]/;const ot=/[0-9-]/;const ut=/[⁰¹²³\u2074-\u2079⁻]/;const ct=e=>{switch(e){case"²":return"2";case"³":return"3";case"⁻":return"-";case"¹":return"1";case"⁰":return"0";default:return String.fromCharCode(e.charCodeAt(0)-8256)}};const pt=(e,t)=>{if(!e){return{name:null,factor:null,gauge:null,log:"",expos:null}}const n=t.currencies?t.currencies.value:null;const r=t.units?t.units:null;let s=e.trim();s=s.replace(/[*.•×\-−](?![0-9.])/g,"·");const a={name:s,factor:ye.one,gauge:ye.zero,log:"",expos:y};if(s===""){return a}else if(s==="°"||s==="°ʹ"||s==="degMinSec"){a.factor=ye.fromString("0.0174532925199433");return a}else if(s==="feetInch"){a.unitExpos=[1,0,0,0,0,0,0,0,0];a.factor=ye.fromString("0.3048");return a}else if(s==="″"||s==="ʹʹ"){a.unitExpos=[1,0,0,0,0,0,0,0,0];a.factor=ye.fromString("0.0254");return a}const l=";";let i=false;let o="";let u="";let c="";let p="";const f=[];let d=0;const m=[{symbol:"",prec:-1}];let h="";for(let e=0;e<s.length;e++){o=s.charAt(e);if(ot.test(o)){if(!i){c+=l;p+=l;m.push({symbol:"^",prec:3});i=true}c+=o;p+=o}else if(ut.test(o)){if(!i){c+=l;p+=l;m.push({symbol:"^",prec:3});i=true}const e=ct(o);c+=e;p+=e}else if(o==="^"){c+=l;p+=l;m.push({symbol:"^",prec:3});i=true}else if(o==="·"||o==="/"){i=false;c+=l;p+=l;while(m[m.length-1].prec>=1){const e=m.pop().symbol;c+=e+l;p+=e+l}m.push({symbol:o,prec:1})}else if(o==="("){m.push({symbol:"(",prec:0})}else if(o===")"){while(m[m.length-1].prec>0){const e=m.pop().symbol;c+=e+l;p+=e+l}m.pop();i=false}else if(o==="-"){i=true;m.push({symbol:"^",prec:3});m.push({symbol:"-",prec:2});c+=l;p+=l}else{i=false;let t;for(t=e+1;t<s.length;t++){if(it.test(s.charAt(t))){break}}u=s.substring(e,t);h=lt(u,n,r);if(h.dtype&&h.dtype===R.ERROR){return h}if(h.factor===0){a.name="";return a}c+=String(h.factor[0])+","+String(h.factor[1]);p+="¿"+d;f.push(h.expos);d+=1;e=t-1}}if(u===a.name){return h}while(m.length>1){const e=m.pop().symbol;c+=l+e;p+=l+e}const g=[];const b=[];const N=c.split(l);const v=p.split(l);let T=1;let E;d=0;for(let e=0;e<N.length;e++){if(/[·/\-^]/.test(N[e])){T=g.pop();E=b.pop()}switch(N[e]){case"·":g[g.length-1]=ye.multiply(g[g.length-1],T);b[b.length-1]=b[b.length-1].map((e,t)=>{return e+E[t]});break;case"/":if(ye.isZero(T)){return A("DIV")}g[g.length-1]=ye.divide(g[g.length-1],T);b[b.length-1]=b[b.length-1].map((e,t)=>{return e-E[t]});break;case"^":g[g.length-1]=ye.power(g[g.length-1],T);b[b.length-1]=b[b.length-1].map(e=>e*E);break;case"-":g[g.length-1]=ye.negate(g[g.length-1]);break;default:if(N[e].indexOf(",")>-1){const t=N[e].split(",");g.push([BigInt(t[0]),BigInt(t[1])])}else{g.push([BigInt(N[e]),BigInt(1)])}if(v[e].charAt(0)==="¿"){b.push(f[d]);d+=1}else{b.push(v[e])}}}a.factor=g.pop();a.expos=b.pop();return a};const ft=["Gamma","abs","acos","acosd","acot","acotd","acsc","acscd","asec","asecd","asin","asind","atan","atan2","atand","binomial","chr","cos","cosd","cosh","cosh","cot","cotd","coth","coth","csc","cscd","csch","csch","exp","fetch","format","gcd","hypot","isNaN","length","lerp","ln","log","log10","log2","logFactorial","logGamma","logn","logΓ","random","rms","round","roundSig","roundn","sec","secd","sech","sech","sign","sin","sind","sinh","sinh","tan","tand","tanh","tanh","trace","transpose","zeros","Γ"];const dt=["lineChart","max","mean","median","min","product","range","stddev","sum","variance"];const mt=["cos","cosd","cot","cotd","csc","cscd","sec","secd","sin","sind","tand","tan"];const ht=e=>{const t=ye.fromString(e);return"▸"+String(t[0])+"/"+String(t[1])};const gt=new RegExp(ye.numberPattern);const yt=/^(:?\uD835[\uDC9C-\uDCCF]|[\udc9d\udca0\udca1\udca3\udca4\udca7\udca8\udcad\udcba\udcbc\udcc1\udcc4])/;const Rt={"ℬ":"B","ℰ":"E","ℱ":"F","ℋ":"H","ℐ":"I","ℒ":"L","ℳ":"M","ℛ":"R","ℯ":"e","ℊ":"g","ℓ":"l","ℴ":"o"};const bt=e=>{const t=yt.exec(e);if(!t){return e}let n="";if(e.charAt(0)==="\ud835"){const t=e.charCodeAt(1);n=String.fromCharCode(t-(t<=56501?56411:56405))}else{n=Rt[e.charAt(0)]}return`\\mathcal{${n}}`+e.slice(t[0].length)};const At=(e,t)=>{switch(t.ttype){case Se.NUM:case Se.ORD:case Se.VAR:case Se.RIGHTBRACKET:case Se.LONGVAR:case Se.QUANTITY:case Se.SUPCHAR:case Se.PRIME:case Se.FACTORIAL:return e}if(e.output==="-"){return{input:"~",output:"\\text{-}",ttype:Se.UNARYMINUS}}else{return{input:"+",output:"~+",ttype:Se.UNARYMINUS}}};const Nt={"⁻":"-","²":"2","³":"3","¹":"1","⁰":"0","⁴":"4","⁵":"5","⁶":"6","⁷":"7","⁸":"8","⁹":"9"};const vt=e=>{let t="";for(const n of e){t+=Nt[n]}return t};const Tt=/^(#([a-f0-9]{6}|[a-f0-9]{3})|[a-z]+|\([^)]+\))/i;const Et=/^(\*|·|\.|-[A-Za-z])/;const Ot=/^[A-Za-z0-9_\-⁰¹²³\u2074-\u2079⁻/·*.°′″‴ΩΩµμ]+/;const It=e=>{let t=" {\\text{";let n=false;for(let r=0;r<e.length;r++){let s=e.charAt(r);if(ut.test(s)){s=ct(s)}if(Et.test(e.slice(r))){t+="}\\mkern1mu{\\cdot}\\mkern1mu\\text{"}else if(/[0-9-]/.test(s)){s=s==="-"?"\\text{-}":s;if(n){t+=s}else{t+="}^{"+s;n=true}}else if(s==="^"){t+="}^{";n=true}else if(n){t+="}\\text{"+s;n=false}else{t+=s}}return t+"}}"};const Mt=/^-?[$$£¥\u20A0-\u20CF]/;const xt=(e,t,n,r)=>{let s="";let a="";let l="";let i=false;e=e.replace(/'/g,"");let o="";let u="";const c=Mt.exec(e);if(c){o=c[0];u=o;e=e.slice(o.length).trim();if(o.charAt(0)==="-"){i=true;o="\\text{-}"+o.slice(1);u=u.slice(1)}o=o.replace("$","\\$")}const p=e.charAt(0);if(p==="?"||p==="@"||p==="!"||p==="%"){l=e.substring(0,e.charAt(1)===p?2:1);s=o+"\\text{"+l+"}"}else if("([{".indexOf(p)>-1){const i=p==="{"?"}":p==="["?"]":p==="("?")":"}";const o=e.indexOf(i);l=e.slice(0,o+1);if(r){[s,a]=Xt(l,t,true);if(n!==" "){a=a.replace(/\xa0/g,n)}}else{s=Xt(l,t,false)}}else{const n=e.match(gt);if(n){l=n[0];a=ht(l);s=o+Be(n,t)}}if(o.length>0){a=l+" "+"applyUnit"+" "+u;if(i){a="-"+a}return[s,a]}s+="\\;";if(l.length<e.length){e=e.slice(l.length);e=e.replace(/^\s*/,"");let t="";if("°′″".indexOf(e.charAt(0))>-1){s=s.replace(/\\;$/,"")}const n=Ot.exec(e);if(n){e=n[0];if(r){a+=" "+"applyUnit"+" "+e}const s=e.indexOf("//");if(s>=0){const n=e.slice(0,s);const r=e.slice(s+2);t="\\frac{"+It(n)+"}{"+It(r)+"}"}else{t=It(e)}}if(t.length>0&&l.length===0){t="\\,"+t}s+=t}return[s,a]};const Lt=/[0-9A-Za-zøØıȷ(\u0391-\u03A9\u03B1-\u03C9ϕℎℏ¨ˆˉ˙˜\uD835\uDC34-\uDC67\uDEE2-\uDF14ℂℇ\u210A-\u2113\u2118-\u211D\u2124-\u2126\u2128-\u212D\u212F-\u2138\u213D-\u2149\u2183\u2184\u2206\u221A-\u221C\u221E]/;const Ct=(e,t,n,r)=>{const s=e.replace(/^.*\xa0/,"").replace(/§$/," ");n.push(s);e=e.length===s.length?"":e.slice(0,e.length-s.length);r.numArgs+=1;if(t==="otherwise"){e+="true"}return e};const Ut=/^[\^⁻⁰¹²³\u2074-\u2079]/;const St=/^ *\(/;const wt=(e,t,n)=>{let r="";if(e.charAt(0)!=="^"){r=/^[⁰¹²³\u2074-\u2079⁻]+/.exec(e)[0];r=ct(r)}else if(!St.test(e.slice(1))){r=nt(e.slice(1),t,{input:"",output:"",ttype:50})[0]}else{r="(";let t=1;for(let n=2;n<e.length;n++){const s=e.charAt(n);r+=s;if("\"'`".indexOf(s)>-1){const t=e.indexOf(s,n+1);r+=e.slice(n+1,t+1);n=t}else if("([{⟨⌈⎿⎾〖".indexOf(s)>-1){t+=1}else if(")]}⟩⌉⌋⏌〗".indexOf(s)>-1){t-=1}if(t===0){break}}}const s=r.charAt(0)==="("?r.slice(1,-1).trim():r;if(n){const e=Xt(s,t,true);return[r,"{"+e[0]+"}",e[1]]}else{const e=Xt(s,t,false);return[r,"{"+e+"}",""]}};const Dt=(e,t,n)=>{if(t.length>0){const e=t[t.length-1].ttype;if(e===Se.UNARY||e===Se.BINARY){return false}if(e===Se.SUB||e===Se.SUP){if(t[t.length-1].isOnFunction){return false}}}let r=false;if(e.output){const t=e.output.charAt(e.length-1);if(")]}".indexOf(t)>-1){if((t===")"||t==="]")&&/^[([]/.test(n)){return false}else{r=true}}else{switch(e.ttype){case Se.ORD:case Se.NUM:case Se.VAR:case Se.LONGVAR:case Se.PRIME:case Se.SUP:case Se.SUPCHAR:case Se.SUB:case Se.PROPERTY:case Se.QUANTITY:case Se.RIGHTBRACKET:case Se.FACTORIAL:r=true;break;default:r=false}}}if(r&&Bt(n,e)){return true}return false};const Bt=(e,n)=>{const r=e.charAt(0);let s=false;if(e.length>0){if(r==="|"||r==="‖");else if(/^#?[({[]/.test(e)&&t(n.ttype,[Se.ORD,Se.NUM,Se.RIGHTBRACKET,Se.QUANTITY])){return true}else{if(Lt.test(r)){s=!/^(if|and|atop|or|else|modulo|otherwise|not|for|in|while)\b/.test(e)}}}return s};const kt=e=>{if(e.output.indexOf("\\frac{")>-1){e.output="\\left("+e.output+"\\right)"}else{e.output="("+e.output+")"}return e};const Vt=e=>{return{input:e.input,output:e.output,ttype:e.ttype,closeDelim:e.closeDelim}};const _t=/^[ \f\r\t\v\u1680\u2000-\u200a\u2028\u2029\u202f\u205f\u3000\ufeff]+/;const qt=[12,12,15,13,16,10,7,15,-1,-1,-1,-1,1,-1,0,0,-1,0,-1,-1,0,6,7,5,4,1,-1,16,15,-1,14,13,9,3,2,10,-1,-1,4,3];const Ft=[12,12,15,13,16,10,2,15,-1,2,2,2,1,2,2,0,1,1,2,2,1,2,2,1,1,1,2,-1,15,2,14,13,9,-1,1,-1,15,-1,1,-1];const Gt=0;const Pt=1;const zt=2;const Yt=3;const Wt=4;const Ht=5;const $t=6;const jt=7;const Kt=8;const Zt=9;const Xt=(e,n="1,000,000.",r=false)=>{let s="";let a="";let l={};let i={input:"",output:"",ttype:50};let o=true;let u=0;let c=false;let p=false;let f=false;let d=false;let m;const h=[];const g=[];const y=[{delimType:Gt,isTall:false}];let R=true;let b="";let A="";let N=" ";let v=-1;const T=[];const E=e=>{if(r&&e>=0){while(g.length>0){if(g[g.length-1].prec<e){break}a+=g.pop().symbol+N}}};const O=(t,n,o)=>{if(!n){return}if(h.length===0){if(i.ttype!==Se.RIGHTBRACKET&&i.ttype!==Se.LEFTRIGHT){m={pos:u,ttype:i.ttype,closeDelim:""}}return}const c=h[h.length-1];if((t===2||t===12||t===14||t===15)&&(i.ttype!==Se.RIGHTBRACKET&&i.ttype!==Se.LEFTRIGHT)&&c.prec<t){m={pos:u,ttype:i.ttype,closeDelim:""};return}let p={};while(h[h.length-1].prec>=t){m=h.pop();if(m.prec===0){p=y[y.length-1];if((m.ttype===Se.LEFTBRACKET||m.ttype===Se.LEFTRIGHT)&&m.closeDelim.length>0){if(h.length>0){if(m.ttype===Se.LEFTRIGHT&&l.output===")"&&h[h.length-1].closeDelim===")"){if(p.isTall){s=s.substring(0,m.pos)+"\\middle"+s.substring(m.pos);y[y.length-1].isTall=true}m=h.pop();y.pop();p=y[y.length-1]}}if(m.closeDelim==="\\rvert "&&o){m.closeDelim=o}if(p.delimType===Wt){s=s.slice(0,m.pos)+p.open+s.slice(m.pos+1);m.closeDelim=p.close}else if(p.delimType===jt){s=s.slice(0,m.pos)+p.open+s.slice(m.pos+2);m.closeDelim=p.close}else if(p.delimType===Pt&&p.name==="("&&/^(\/|\\atop\s)/.test(e)){s=s.substring(0,m.pos)+s.substring(m.pos+1);m.closeDelim=""}else if(p.delimType===$t&&p.open.length>3){s=s.slice(0,m.pos)+p.open+s.slice(m.pos+2);m.closeDelim=p.close}else if(p.isPrecededByDiv&&p.delimType===Pt&&p.name==="("&&(/^[^^_!%]/.test(e)||e.length===0)){s=s.substring(0,m.pos)+s.substring(m.pos+1);m.closeDelim=""}else if(p.isTall){if(/^\\left/.test(s.substring(m.pos))===false){s=s.substring(0,m.pos)+"\\left"+s.substring(m.pos)}if(/\\right/.test(m.closeDelim)===false){m.closeDelim="\\right"+l.output}}}}s=s.replace(/\\, *$/,"");s+=m.closeDelim;if(m.closeDelim.slice(-1)==="{"){if(m.ttype===Se.BINARY){h.push({prec:12,pos:m.pos,ttype:Se.UNARY,closeDelim:"}"});if(r){a+=N;if(g[g.length-1].symbol==="\\sqrt"){g[g.length-1].symbol="root"}}}m.ttype=Se.UNARY;i={input:"",output:"",ttype:Se.UNARY};return}if(h.length===0||m.prec===0){return}}};e=e.replace(_t,"");e=e.replace(/\s+$/,"");while(e.length>0){if(e.charAt(0)==="\n"){e=e.slice(1);const t=i?i.input.slice(-1):"0";if(i.ttype===Se.COMMENT||"{[(,;+-".indexOf(t)===-1&&!/^ *[)}\]]/.test(e)){O(0,true);s+="\\\\ ";const t=/^ +/.exec(e);if(t){s+="\\quad ".repeat(t[0].length-1)}}e=e.trim()}o=true;f=c&&R&&Dt(i,h,e);if(f){const e=i.ttype;l={input:"⌧",output:e===Se.LONGVAR||e===Se.NUM?"\\,":"",ttype:Se.MULT};p=false;o=false}if(o){const t=nt(e,n,i);l={input:t[0],output:t[1],ttype:t[2],closeDelim:t[3]};e=e.substring(l.input.length);p=_t.test(e);e=e.replace(_t,"");d=Bt(e,l)}switch(l.ttype){case Se.ACCESSOR:case Se.PUNCT:case Se.BIN:case Se.ADD:case Se.MULT:case Se.REL:case Se.ANGLE:case Se.UNDEROVER:{if(l.output.length>0&&"- +".indexOf(l.output)>-1){l=At(l,i)}if(r&&l.ttype!==Se.PUNCT){if(l.output!=="\\text{-}"){a+=N}v=qt[l.ttype];E(v)}const e=Ft[l.ttype];O(e,R);s+=l.output+" ";u=s.length;if(l.ttype===Se.UNDEROVER&&y.length>1){y[y.length-1].isTall=true}else if(r){g.push({prec:v,symbol:l.input})}R=true;break}case Se.NUM:case Se.ORD:O(2,R);if(r){E(-1);a+=l.ttype===Se.NUM?ht(l.input):l.input}if(c){u=s.length}if(r&&(i.ttype===Se.MULT||d&&i.ttype!==Se.DIV)){l=kt(l)}s+=l.output+" ";R=true;if(r&&!p&&d){a+=N;O(2,R);E(7);g.push({prec:qt[Se.MULT],symbol:"⌧"})}break;case Se.STRING:{O(2,R);const e=l.input.charAt(0);if(r){a+=e+l.output+e}l.output=Ke(l.output);l.output=l.output.replace(/ +$/,"\\,");s+="\\text{"+l.output+"}";R=true;break}case Se.VAR:case Se.LONGVAR:if(l.ttype===Se.LONGVAR&&i.input==="⌧"){s+="\\,"}O(7,R);if(c){u=s.length}l.output=bt(l.output);if(!r){if(l.ttype===Se.LONGVAR){l.output="\\mathrm{"+l.output+"}"}}else if(i.input==="for"){a+='"'+l.input+'"'}else{if(e.charAt(0)==="."){l.output=l.ttype===Se.LONGVAR?"\\mathrm{"+l.output+"}":l.output}else{l.output=l.input;l.output="〖"+l.output}a+="¿"+l.input}s+=l.output+" ";if(r){y[y.length-1].isTall=true}R=true;break;case Se.QUANTITY:{O(2,R);if(c){u=s.length}const[e,t]=xt(l.input,n,N,r);l.output=e;if(i.ttype===Se.MULT||d){l=kt(l)}if(r){a+=N+t}s+=l.output;if(/\\begin|\\frac/.test(l.output)){y[y.length-1].isTall=true}R=true;if(r&&!p&&d){a+=N;O(2,R);E(7);g.push({prec:qt[Se.MULT],symbol:"⌧"})}break}case Se.PROPERTY:{O(15,R);if(r){a+='"'+l.output+'"'}const e=l.input.indexOf("_");if(e>-1){s+=l.input.substring(0,e)+"_\\mathrm{"+l.input.substring(e+1)+"}"}else{l.output=Ke(l.output);l.output=l.output.replace(/ +$/,"\\,");s+="\\text{"+l.output+"}"}R=true;break}case Se.TO:{y[y.length-1].delimType=Zt;O(1,R);u=s.length;s+=l.output;if(r){a+=N;E(3);const e=y[y.length-1].symbol;const t=e==="("?"normal":e==="["?"uniform":"lognormal";g.push({prec:3,symbol:t})}break}case Se.COLON:{let t=false;const n=y[y.length-1];if(n.delimType===$t){t=true}else if(n.delimType===Pt&&n.name==="{"){n.delimType=$t;t=true}else if(n.delimType===Pt&&n.name==="["){n.delimType=Ht}v=t?1:3;if(r){a+=N;E(v)}O(1,R);u=s.length;if(r){g.push({prec:v,symbol:t?":":".."});if(e.charAt(0)==="]"&&!t){a+='"∞"'}}s+=l.output;break}case Se.DIV:if(r){a+=N}O(2,true);E(7);if(l.input==="//"){h.push({prec:2,pos:m.pos,ttype:Se.DIV,closeDelim:"}"});s=s.substring(0,m.pos)+"\\frac{"+s.substring(m.pos)+"}{"}else if(l.input==="/"){h.push({prec:2,pos:m.pos,ttype:Se.DIV,closeDelim:"}"});s=s.substring(0,m.pos)+"\\dfrac{"+s.substring(m.pos)+"}{"}else{h.push({prec:2,pos:m.pos,ttype:Se.DIV,closeDelim:"}}"});s=s.substring(0,m.pos)+"{{"+s.substring(m.pos)+"}\\atop{"}if(r){if(l.input==="\\atop"){if(y[y.length-1].delimType===Pt){g.push({prec:7,symbol:"()"})}}else{g.push({prec:7,symbol:l.input})}}y[y.length-1].isTall=true;u=s.length;R=false;break;case Se.SUB:{O(15,true);const e=i.ttype===Se.FUNCTION?"}{":"}";h.push({prec:15,pos:m.pos,ttype:Se.SUB,closeDelim:e});s+="_{";if(r){a+="_"}R=false;break}case Se.SUP:if(r){a+=N;E(13)}O(13,true);if(i.ttype===Se.RIGHTBRACKET){h.push({prec:13,pos:m.pos,ttype:Se.SUP,closeDelim:"}"})}else{h.push({prec:13,pos:u,ttype:Se.SUP,closeDelim:"}"})}if(r){g.push({prec:13,symbol:"^"})}s+="^{";R=false;break;case Se.SUPCHAR:{if(r){a+=N;E(13)}O(13,true);const e=vt(l.output);if(i.ttype===Se.RIGHTBRACKET){h.push({prec:13,pos:m.pos,ttype:Se.SUP,closeDelim:"}"})}else{h.push({prec:13,pos:u,ttype:Se.SUP,closeDelim:"}"})}s+="^{"+e;if(r){g.push({prec:13,symbol:"^"});a+=ht(e)}R=true;break}case Se.FUNCTION:{O(2,R);u=s.length;if(Ut.test(e)){const[s,a,i]=wt(e,n,r);if(r&&i===`▸1/1${N}~`&&t(l.input,mt)){l.input="a"+l.input;l.output="\\a"+l.output.slice(1)}else{if(r){l.input+=N+i+N+"^"}l.output+="^"+a}const o=s.length+(e.charAt(0)==="^"?1:0);e=e.slice(o).trim()}if(r){g.push({prec:12,symbol:l.input});if(i.input==="⌧"){s+="×"}}b=e.charAt(0);h.push({prec:12,pos:s.length,ttype:Se.FUNCTION,closeDelim:b==="("?"":"}"});s+=l.output;s+=b==="("?"":"{";A=l.input;R=false;break}case Se.ACCENT:if(r){a+=N;E(16)}O(1,R);if(r){h.push({prec:16,pos:s.length,ttype:Se.ACCENT,closeDelim:"〗"});s+="〖"+l.input;a+="¿"+l.input}else{h.push({prec:16,pos:s.length,ttype:Se.ACCENT,closeDelim:"}"});s+=l.output+"{"}y[y.length-1].isTall=true;R=false;break;case Se.PRIME:O(15,true);if(r){a+=l.input}s=s.trim()+l.output+" ";R=true;break;case Se.BINARY:{O(1,R);u=s.length;const e=l.input==="root"?"]{":"}{";h.push({prec:12,pos:s.length,ttype:Se.BINARY,closeDelim:e});if(r){g.push({prec:12,symbol:l.output})}s+=l.output+(l.input==="root"?"[":"{");y[y.length-1].isTall=true;R=false;break}case Se.UNARY:O(1,R);u=s.length;h.push({prec:12,pos:s.length,ttype:Se.UNARY,closeDelim:"}"});if(r){g.push({prec:12,symbol:l.input})}if(r&&i.input==="⌧"){s+="×"}s+=l.output;if(/det|inf/.test(l.input)&&e.charAt(0)==="_"){h.push({prec:15,pos:s.length,ttype:Se.SUB,closeDelim:"}"});l={input:"_",output:"_",ttype:Se.SUB};s+="_{";e=e.substring(1);e=e.replace(/^\s+/,"")}else if(l.input==="\\color"){const t=Tt.exec(e);if(t){s+="{"+t[0].replace(/[()]/g,"")+"}";h.pop();e=e.slice(t[0].length).trim()}else{s+="{"}}else{s+="{"}y[y.length-1].isTall=true;R=false;break;case Se.FACTORIAL:O(14,true);h.push({prec:14,pos:m.pos,ttype:Se.FACTORIAL,closeDelim:""});if(r){E(14);a+=N+l.output}s+=l.output;R=true;break;case Se.RETURN:O(1,R);u=s.length;if(r){E(4);g.push({prec:4,symbol:"return"})}s+=l.output+" ";break;case Se.KEYWORD:O(1,true);u=s.length;if(r){E(2);if(l.input==="in"){a+=N;g.push({prec:v,symbol:"for"})}}s+=l.output+" ";break;case Se.LOGIC:{O(1,R);if(r){a+=N}E(4);const e=y[y.length-1];if(l.input==="if"||l.input==="otherwise"){if(e.delimType===Pt&&e.name==="{"){e.delimType=jt;e.close="\\end{cases}";e.open="\\begin{cases}";if(r&&N===" "&&l.input==="if"){a=a.slice(0,e.rpnPos)+a.slice(e.rpnPos).replace(/\xa0/g,"§")}}}if(e.delimType===jt&&t(l.input,["if","otherwise"])){s+="&"}s+=l.output;if(r){if(e.delimType===jt&&(l.input==="if"||l.input==="otherwise")){a=Ct(a,l.input,T,e);N=" "}else{g.push({prec:4,symbol:l.input})}}u=s.length;R=true;break}case Se.LEFTBRACKET:{O(2,R);const n=i.ttype===Se.DIV;let o=false;const c={prec:0,pos:s.length,ttype:Se.LEFTBRACKET};if((l.input==="("||l.input==="[")&&i.ttype<5){c.closeDelim=""}else if(l.input==="("&&m.ttype===Se.BINARY){c.closeDelim=""}else{c.closeDelim=l.closeDelim;o=(l.input==="("||l.input==="[")&&i.ttype===Se.FUNCTION;s+=l.output}h.push(c);if(r){while(g.length>0&&g[g.length-1].symbol==="."){a+=N+g.pop().symbol}g.push({prec:0,symbol:l.output.trim()})}const p=/^\s*[)}\]]/.test(e)?0:1;const f={name:l.input,isTall:false,open:l.output,close:c.closeDelim,numArgs:p,numRows:p,rpnPos:a.length,isPrecededByDiv:n,isFuncParen:o};if(o){f.delimType=zt;f.name=A}else if(i.ttype===Se.SUB){f.delimType=Kt;f.name="("}else if(l.input==="{"){f.delimType=Pt;f.rpnLength=a.length}else if(l.input==="["&&(t(i.ttype,[Se.VAR,Se.LONGVAR,Se.STRING,Se.PROPERTY])||i.input==="]")){a+=N;f.delimType=Yt}else{f.delimType=Pt;f.name=l.input}y.push(f);A="";u=s.length;R=false;break}case Se.SEP:{O(1,R);u=s.length;if(l.input==="\\,"||l.input==="\\;"){s+=l.output+" "}else{const t=y[y.length-1];if(t.delimType===Pt&&!(l.input===","&&t.name==="{")){t.delimType=Wt;const e=t.name==="["?"b":t.name==="("?"p":"B";t.open=`\\begin{${e}matrix}`;t.close=`\\end{${e}matrix}`;t.isTall=true;l.output=l.input===","?"&":"\\\\"}else if(t.delimType===Wt&&l.input===","){l.output="&"}else if(t.delimType===$t&&l.input===";"){l.output="\\\\";if(!t.open.length<5){t.open="\\begin{Bmatrix}";t.close="\\end{Bmatrix}";t.isTall=true}}else if(t.delimType>3&&l.input===";"){l.output="\\\\"}if(r){if(i.ttype===Se.LEFTBRACKET&&t.delimType===Yt){a+="▸0/1"}a+=N;E(1)}s+=l.output+" ";if(r){if(y.length===1){a+=l.output}else{if(l.input===";"){t.numRows+=1;if(y.length>0&&t.delimType===jt){N="§"}}if(t.numRows===1){if(l.input===","||l.input===" "&&t.delimType===Wt){if(e.charAt(0)==="]"){a+="▸0/1"}}}t.numArgs+=1}}}R=true;break}case Se.RIGHTBRACKET:{O(0,true,l.output);const n=y.pop();if(n.isTall&&y.length>1){y[y.length-1].isTall=true}if(r){while(g.length>0&&g[g.length-1].prec>0){a+=N+g.pop().symbol}if(n.delimType===jt&&i.input!=="otherwise"){a=Ct(a,"otherwise",T,n);N=" "}const r=g.pop();const s=n.numArgs;const o=n.numRows;const u=n.numArgs/n.numRows;const c=s===0?"":N;switch(n.delimType){case zt:{let e=g.pop().symbol;if(s===2){if(e==="log"){e="logn"}if(e==="round"){e="roundn"}}a+=e.slice(-1)==="^"?c+e:t(e,ft)?c+e:t(e,dt)?c+e+N+s:c+"function"+N+e+N+s;break}case Yt:a+=c+"[]"+N+s;break;case Wt:a+=c+"matrix"+N+o+N+u;break;case jt:N=" ";a+=N+"cases"+N+o+N;while(T.length>0){a+=T.shift()}a=a.slice(0,-1);break;case $t:a+=c+"dictionary"+N+s;break;case Ht:a+=N+"matrix"+N+"1"+N+"1";break;case Zt:break;default:if(r.symbol==="\\lfloor"){a+=N+"⎿⏌"}if(r.symbol==="\\lceil"){a+=N+"⎾⏋"}}if(l.input===")"&&/^[([]/.test(e)||l.input==="]"&&/^\(/.test(e)){a+=N;g.push({prec:qt[Se.MULT],symbol:"⌧"})}}u=s.length;R=m.ttype!==Se.BINARY;break}case Se.LEFTRIGHT:{O(1,R);const e=y[y.length-1];let t=false;if(h.length>0){t=h[h.length-1].ttype===Se.LEFTRIGHT||h[h.length-1].closeDelim==="⟩"||h[h.length-1].closeDelim==="\\right."||h[h.length-1].closeDelim==="\\end{vmatrix}"}if(t){e.close=l.input==="|"?"\\rvert ":"\\rVert ";h[h.length-1].closeDelim=e.close;O(0,R);y.pop();if(r){while(g.length>0&&g[g.length-1].prec>0){a+=N+g.pop().symbol}a+=N+g.pop().symbol}R=m.ttype!==Se.BINARY}else if(e.delimType===Pt&&e.name==="{"){s+="\\mid ";u=s.length;R=true}else{h.push({prec:0,pos:s.length,ttype:Se.LEFTRIGHT,closeDelim:l.input==="|"?"\\rvert ":"\\rVert "});y.push({delimType:Pt,name:l.input,isTall:false,open:l.input==="|"?"\\lvert ":"\\lVert ",close:l.input==="|"?"\\rvert ":"\\rVert ",numArgs:1,numRows:1,rpnPos:a.length,isPrecededByDiv:i.ttype===Se.DIV});if(r){g.push({prec:0,symbol:l.output})}s+=l.input==="|"?"\\lvert ":"\\lVert ";u=s.length;R=false}break}case Se.COMMENT:O(0,true);s+=l.output+" ";break;default:if(r){a+=N;E(12)}O(1,R);h.push({prec:1,pos:s.length,ttype:Se.ORD,closeDelim:""});if(r){g.push({prec:12,symbol:l.output})}s+=l.output+" ";u=s.length;R=true}i=Vt(l);c=p||l.input==="⌧"}O(0,true);if(r){while(g.length>0){a+=N+g.pop().symbol}const e=/〖[^ ]+/g;let t;while((t=e.exec(s))!==null){if("¨ˆˉ˙˜".indexOf(t[0][1])===-1){const e=t.index+t[0].length;s=s.substring(0,e)+"〗"+s.substring(e)}}}s=s.replace(/ {2,}/g," ");s=s.replace(/\s+(?=[_^'!)}\]〗])/g,"");s=s.replace(/\s+$/,"");return r?[s,a]:s};const Qt=e=>{return e.dtype&R.ROWVECTOR||e.dtype&R.COLUMNVECTOR||e.dtype&R.MATRIX};const Jt=e=>{return(e.dtype&R.ROWVECTOR||e.dtype&R.COLUMNVECTOR)>0};const en=(e,t,n)=>{e.value=Jt(e)?e.value.map(e=>ye.divide(e,n)):e.value.map(e=>e.map(e=>ye.divide(e,n)));if(!ye.isZero(t)){e.value=Jt(e)?e.value.map(e=>ye.subtract(e,t)):e.value.map(e=>e.map(e=>ye.subtract(e,t)))}return e.value};const tn=(e,t,n)=>{if(!ye.isZero(t)){e.value=Jt(e)?e.value.map(e=>ye.add(e,t)):e.value.map(e=>e.map(e=>ye.add(e,t)))}return Jt(e)?e.value.map(e=>ye.multiply(e,n)):e.value.map(e=>e.map(e=>ye.multiply(e,n)))};const nn=(e,t,n)=>{let r="\\begin";if(e.dtype&R.MATRIX){r+="{pmatrix}";const s=e.value.length;const a=e.value[1].length;for(let l=0;l<s;l++){for(let s=0;s<a;s++){r+=Ue(e.value[l][s],t,n)+" &"}r=r.slice(0,-1)+" \\\\ "}r=r.slice(0,-3).trim();r+="\\end{pmatrix}"}else{r+="{bmatrix}";const s=e.dtype&R.ROWVECTOR?" & ":" \\\\ ";if(e.value.plain){const a=e.value.plain.length;for(let l=0;l<a;l++){r+=Ue(e.value.plain[l],t,n)+(l<a-1?s:"")}}else{const a=e.value.length;for(let l=0;l<a;l++){const i=e.dtype&R.RATIONAL?Ue(e.value[l],t,n):e.dtype&R.BOOLEAN||e.dtype&R.STRING?"\\text{"+e.value[l]+"}":e.value[l];r+=i+(l<a-1?s:"")}}r+="\\end{bmatrix}"}return r};const rn=(e,t,n)=>{let r="";if(e.dtype&R.MATRIX){r+="(";const s=e.value.length;const a=e.value[1].length;for(let l=0;l<s;l++){for(let s=0;s<a;s++){r+=Ue(e.value[l][s],t,n).replace("{,}",",")+", "}r=r.slice(0,-2)+"; "}r=r.slice(0,-2).trim();r+=")"}else{r+="[";const s=e.dtype&R.ROWVECTOR?", ":"; ";if(e.value.plain){const a=e.value.plain.length;for(let l=0;l<a;l++){r+=Ue(e.value.plain[l],t,n).replace("{,}",",")+(l<a-1?s:"")}}else{const a=e.value.length;for(let l=0;l<a;l++){const i=e.dtype&R.RATIONAL?Ue(e.value[l],t,n).replace("{,}",","):e.value[l];r+=i+(l<a-1?s:"")}}r+="]"}return r};const sn=(e,t,n)=>{let r="\\begin{Bmatrix}";Object.keys(e).forEach(s=>{const a=e[s];r+="\\text{"+s+"}: \\begin{bmatrix}";const l=a.plain.length;if(a.plain){for(let e=0;e<l;e++){r+=Ue(a.plain[e],t,n)+(e<l-1?", ":"")}}else{for(let e=0;e<l;e++){const s=ye.isRational(a[e])?Ue(a[e],t,n):typeof a[e]==="boolean"||typeof a[e]==="string"?"\\text{"+a[e]+"}":a[e];r+=s+(e<l-1?" & ":"")}}r+="\\end{bmatrix} \\\\"});r=r.slice(0,-2)+"\\end{Bmatrix}";return r};const an=(e,t,n)=>{let r="{";Object.keys(e).forEach(s=>{const a=e[s];r+=s+": [";const l=a.plain.length;if(a.plain){for(let e=0;e<l;e++){r+=Ue(a.plain[e],t,n)+(e<l-1?", ":"").replace("{,}",",")+" "}}else{for(let e=0;e<l;e++){const s=ye.isRational(a[e])?Ue(a[e],t,n).replace("{,}",",")+" ":String(a[e])+"}";r+=s+(e<l-1?" ":"")}}r+="];"});return r.slice(0,-1)+"}"};const ln=e=>{const t=ye.isRational(e)?ye.toNumber(e):e;if(t===1){return[ye.one]}else{const e=[];for(let n=0;n<t;n++){e.push(new Array(t).fill(ye.zero));e[n][n]=ye.one}return e}};const on=(e,t)=>{if(e.length!==e[0].length){return A("NONSQUARE")}const r=e.length;let s=0;let a=0;let l=0;let i=ye.zero;let o=ye.one;const u=n(e);const c=ln(r);for(s=0;s<r;s+=1){i=u[s][s];if(ye.isZero(i)){for(a=s+1;a<r;a++){if(!ye.isZero(u[a][s])){for(l=0;l<r;l++){i=u[s][l];u[s][l]=u[a][l];u[a][l]=i;i=c[s][l];c[s][l]=c[a][l];c[a][l]=i}break}}i=u[s][s];if(ye.isZero(i)){return A("SINGULAR")}}if(t){o=ye.divide(o,i);if(s===r-1){return o}}for(l=0;l<r;l++){u[s][l]=ye.divide(u[s][l],i);c[s][l]=ye.divide(c[s][l],i)}for(a=0;a<r;a++){if(a===s){continue}i=u[a][s];for(l=0;l<r;l++){u[a][l]=ye.subtract(u[a][l],ye.multiply(i,u[s][l]));c[a][l]=ye.subtract(c[a][l],ye.multiply(i,c[s][l]))}}}return c};const un=(e,t,n)=>{if(!(t.dtype&R.RATIONAL||t.dtype&R.RANGE)){return A("BAD_INDEX")}const r={value:[],unit:e.unit,dtype:e.dtype};let s=0;let a=1;let l=0;if(t.dtype&R.RANGE){s=ye.toNumber(t.value[0]);a=ye.toNumber(t.value[1]);l=t.value[2]==="∞"?e.value.length:ye.toNumber(t.value[2])}else if(ye.areEqual(t.value,ye.zero)){s=1;l=e.value.length}else{s=ye.toNumber(t.value);l=s}if(Jt(e)){if(s===l){r.value=e.value[s-1];r.dtype=e.dtype-(e.dtype&R.ROWVECTOR)-(e.dtype&R.COLUMNVECTOR)}else if(a===1){r.value=e.value.slice(s-1,l)}else{for(let t=s-1;t<l;t+=a){r.value.push(e.value[t])}}return r}let i=0;let o=1;let u=0;if(n){if(n.dtype&R.RANGE){i=ye.toNumber(n.value[0]);o=ye.toNumber(n.value[1]);u=n.value[2]==="∞"?e.value[0].length:ye.toNumber(n.value[2])}else if(ye.areEqual(n.value,ye.zero)){i=1;u=e.value[0].length}else{i=ye.toNumber(n.value);u=i}}if(s===l&&i===u){r.value=e.value[s-1][i-1];r.dtype-=R.MATRIX}else if(s===l){if(o===1){r.value=e.value[s-1].slice(i-1,u)}else{for(let t=i-1;t<u;t+=o){r.value.push(e.value[s-1][t])}}r.dtype=r.dtype-R.MATRIX+R.ROWVECTOR}else if(i===u){for(let t=s-1;t<l;t+=a){r.value.push(e.value[t][i-1])}r.dtype=r.dtype-R.MATRIX+R.COLUMNVECTOR}else if(o===1){for(let t=s-1;t<l;t+=a){r.value.push([]);r.value[r.value.length-1]=e.value[t].slice(i-1,u)}}else{for(let t=s-1;t<l;t+=a){r.value.push([]);for(let n=i-1;n<u;n+=o){r.value[r.value.length-1].push(e[t][n])}}}return r};const cn=(e,t)=>{if(e.dtype&R.ROWVECTOR&&t.dtype&R.COLUMNVECTOR){return R.RATIONAL}else if(e.dtype&R.MATRIX&&t.dtype&R.COLUMNVECTOR){return R.COLUMNVECTOR}else if(e.dtype&R.ROWVECTOR&&t.dtype&R.MATRIX){return R.ROWVECTOR}else{return R.MATRIX}};const pn=e=>{const t=[];if(ye.greaterThan(e[2],e[0])){for(let n=e[0];ye.lessThan(n,e[2]);n=ye.add(n,e[1])){t.push(n)}}else{for(let n=e[0];ye.greaterThanOrEqualTo(n,e[2]);n=ye.add(n,e[1])){t.push(n)}}if(!ye.areEqual(t[t.length-1],e[2])){t.push(e[2])}return{value:t,unit:y,dtype:R.RATIONAL+R.ROWVECTOR}};const fn=(e,t,n)=>{if(t===1&&n===1){return e.pop()}else if(t===1||n===1){const r=Math.max(t,n);const s=new Array(r);let a=e[e.length-1].dtype;a+=t===1?R.ROWVECTOR:R.COLUMNVECTOR;for(let t=r-1;t>=0;t--){s[t]=e.pop().value}return{value:s,unit:a&R.RATIONAL?y:null,dtype:a}}else{const r=new Array(t);const s=e[e.length-1].dtype+R.MATRIX;for(let e=0;e<t;e++){r[e]=new Array(n)}for(let s=t-1;s>=0;s--){for(let t=n-1;t>=0;t--){r[s][t]=e.pop().value}}return{value:r,unit:s&R.RATIONAL?y:null,dtype:s}}};const dn=(e,t)=>{if(e===1){return{value:new Array(t).fill(ye.zero),unit:y,dtype:R.RATIONAL+R.ROWVECTOR}}else if(t===1){return{value:new Array(e).fill(ye.zero),unit:y,dtype:R.RATIONAL+R.COLUMNVECTOR}}else{const n=[];for(let r=0;r<e;r++){n.push(new Array(t).fill(ye.zero))}return{value:n,unit:y,dtype:R.RATIONAL+R.MATRIX}}};const mn=Object.freeze({convertFromBaseUnits:en,convertToBaseUnits:tn,display:nn,displayAlt:rn,displayMapOfVectors:sn,displayAltMapOfVectors:an,identity:ln,invert:on,isVector:Jt,multResultType:cn,operandFromRange:pn,operandFromTokenStack:fn,submatrix:un,zeros:dn});const hn=/〖[^〗]*〗/;const gn=e=>e.dtype&R.DICT||e.dtype&R.MAP||e.dtype&R.DATAFRAME;const yn=/([([{|‖]|[^\\][,;:])$/;const Rn=(e,t,n)=>{let r;while((r=hn.exec(e))!==null){const s=r[0].replace(/[〖〗()]/g,"").trim().replace(/'/g,"′");let a=r[0].length;let l=r.index;let i;if(!t[s]&&s==="T"){i={dtype:R.RATIONAL,resultdisplay:"\\text{T}"}}else if(!t[s]){return A("V_NAME",s)}else{i={dtype:t[s].dtype,resultdisplay:t[s].resultdisplay}}let o=false;if((gn(i)||Qt(i)||i.dtype&R.STRING)&&/^(?:\\left)?[.[]/.test(e.slice(l+r[0].length).trim())){o=true;const t=l;e=e.slice(0,l)+"\\text{"+s+"}"+e.slice(l+a);l+=s.length+7;a=l-t;l=t;continue}if(!i||!i.resultdisplay){const e=s?s:"?";return A("NULL",e)}else if(i.error){return A("NULL",s)}let u=true;if(Qt(i)){u=false}if(n&&i.dtype&R.QUANTITY){u=true}let c=false;if(l>0){const t=e.slice(0,l).trim();if(yn.test(t)){const t=e.slice(l+s.length+2).trim();c=t.length>0&&/^([)|‖\]},;:]|\\right)/.test(t)}else if(/^\\begin{[bp]matrix}/.test(i.resultdisplay)){c=/\\end{[bp]matrix}$/.test(i.resultdisplay)}}u=u&&!c;let p="";if(o){p="\\text{"+s+"}"}else if(n){p=u?"\\left("+i.resultdisplay+"\\right)":i.resultdisplay}else{let e=i.resultdisplay;const t=i.resultdisplay.lastIndexOf("{\\text{");if(t>-1){e=i.resultdisplay.slice(0,t)+i.resultdisplay.slice(t).replace(/\{\\text\{[^}]*\}\}/,"").trim();e=e.replace(/\\; *$/,"").trim()}p=u?"\\left("+e+"\\right)":e}e=e.substring(0,l)+p+e.substring(l+a)}return e};const bn=(e,t)=>{if(e.value===null||e.value===undefined){const t=e.name?e.name:"?";return A("NULL",t)}if(e.dtype===R.RATIONAL){return n(e)}else if(e.dtype&R.BOOLEAN){return n(e)}else if(e.dtype===R.STRING){return An(e.value)}else if(e.dtype===R.DATAFRAME){return{value:e.value,unit:e.unit,dtype:R.DATAFRAME}}else if(e.dtype&R.DICT){return n(e)}else if(e.dtype&R.QUANTITY){const r=e.dtype-R.QUANTITY;const s=n(t?e.value.inBaseUnits:e.value.plain);return{value:s,unit:n(t?e.expos:y),dtype:r}}else if(Qt(e)){const t=e.dtype&R.RATIONAL?y:null;return n({value:e.value,unit:t,dtype:e.dtype})}else if(e.dtype&R.MAP){const t=e.dtype&R.RATIONAL?y:null;return n({value:e.value,unit:t,dtype:e.dtype})}else if(e.dtype===R.MODULE){return{value:e.value,unit:null,dtype:R.MODULE}}else{const t=e.name?e.name:"?";return A("BAD_TYPE",t)}};const An=e=>{const t=e.charAt(0);const n=e.charAt(e.length-1);return{value:t==='"'&&n==='"'?e.slice(1,-1).trim():e.trim(),unit:null,dtype:R.STRING}};const Nn=Object.freeze({fromAssignment:bn,fromString:An});const vn=ye.negate(ye.one);const Tn=[BigInt(1),BigInt(2)];const En=[BigInt(30),BigInt(1)];const On=[BigInt(45),BigInt(1)];const In=[BigInt(60),BigInt(1)];const Mn=[BigInt(90),BigInt(1)];const xn=(e,t)=>{const n=t.length;let r=n===1?t[0].unit:null;switch(e){case"abs":case"real":case"round":case"roundn":case"sign":case"trace":case"fetch":return r;case"cos":case"sin":case"tan":case"sec":case"csc":case"cot":case"acos":case"arccos":case"asin":case"arcsin":case"atan":case"arctan":case"asec":case"arcsec":case"acsc":case"arccsc":case"acot":case"arccot":case"cosd":case"sind":case"tand":case"secd":case"cscd":case"cotd":case"acosd":case"asind":case"atand":case"asecd":case"acscd":case"acotd":case"gud":if(!rt(r,y)){return A("UNIT_IN",e)}return y;case"exp":case"log":case"ln":case"log10":case"log2":case"logn":case"cosh":case"sinh":case"tanh":case"sech":case"csch":case"coth":case"acosh":case"asinh":case"atanh":case"asech":case"acsch":case"acoth":case"binomial":case"gamma":if(!rt(r,y)){return A("UNIT_IN",e)}return y;case"gcd":case"mht":if(!rt(r,y)){return A("UNIT_IN",e)}return e==="hmt"?[1,0,0,0,0,0,0,0,0]:[0,0,0,0,0,0,0,0,0];case"hypot":case"rms":case"sum":case"mean":case"median":case"min":case"max":case"range":case"stddev":case"variance":r=t[0].unit;for(let n=1;n<t.length;n++){const s=t[n].unit;if(r.length!==s.length){return A("UNIT_ARG",e)}for(let t=0;t<r.length;t++){if(r[t]!==s[t]){return A("UNIT_ARG",e)}}}return r;case"product":for(let e=1;e<t.length;e++){const n=t[e].unit;t[0].unit.map((e,t)=>e+n[t])}return t[0];default:return A("F_NAME",e)}};const Ln=e=>{if(ye.isZero(e)){return A("Γ0")}else if(ye.isPositive(e)&&ye.isInteger(e)&&ye.toNumber(e)<101){return ye.factorial(ye.subtract(e,ye.one))}else if(ye.isNegative(e)&&ye.isInteger(e)){return A("ΓPOLE")}else if(ye.lessThan(e,Tn)){return ye.fromNumber(Math.PI/Math.sin(Math.PI*ye.toNumber(e))*ye.toNumber(Ln(ye.subtract(ye.one,e))))}else{return ye.lanczos(e)}};const Cn=(e,t)=>{if(ye.areEqual(e,t)){return ye.one}if(ye.isZero(e)){return ye.zero}if(ye.isInteger(e)&&ye.isInteger(t)&&ye.isPositive(e)&&ye.isPositive(t)){return ye.divide(ye.factorial(e),ye.multiply(ye.factorial(t),ye.factorial(ye.subtract(e,t))))}else if(ye.isInteger(e)&&ye.isInteger(t)&&ye.isPositive(t)){return ye.multiply(ye.power(vn,t),Un(ye.negate(e),t))}else{return ye.divide(Ln(ye.increment(e)),ye.multiply(Ln(ye.increment(t)),Ln(ye.increment(ye.subtract(e,t)))))}};const Un=(e,t)=>{return Cn(ye.add(e,ye.decrement(t)),t)};const Sn=ye.divide(ye.pi,[BigInt(180),BigInt(1)]);const wn={abs(e){return ye.abs(e)},cos(e){return ye.areEqual(e,ye.divide(ye.pi,ye.two))?ye.zero:ye.fromNumber(Math.cos(ye.toNumber(e)))},sin(e){return ye.fromNumber(Math.sin(ye.toNumber(e)))},tan(e){if(ye.areEqual(e,ye.divide(ye.pi,ye.two))){return A("TAN90","π/2")}return ye.fromNumber(Math.tan(ye.toNumber(e)))},acos(e){if(ye.greaterThan(ye.abs(e),ye.one)){return A("ATRIG","acos")}return ye.fromNumber(Math.acos(ye.toNumber(e)))},asin(e){if(ye.greaterThan(ye.abs(e),ye.one)){return A("ATRIG","asin")}return ye.fromNumber(Math.asin(ye.toNumber(e)))},atan(e){return ye.fromNumber(Math.atan(ye.toNumber(e)))},sec(e){return ye.fromNumber(1/Math.cos(ye.toNumber(e)))},csc(e){return ye.fromNumber(1/Math.sin(ye.toNumber(e)))},cot(e){if(ye.isZero(e)){return A("COT","cotangent")}return ye.fromNumber(1/Math.tan(ye.toNumber(e)))},asec(e){if(ye.greaterThanOrEqualTo(ye.abs(e),ye.one)){return A("ASEC","arcecant")}const t=Math.atn(Math.sqrt(ye.toNumber(ye.decrement(ye.multiply(e,e)))));return ye.isPositive(e)?ye.fromNumber(t):ye.fromNumber(t-Math.PI)},acot(e){if(ye.greaterThanOrEqualTo(ye.abs(e),ye.one)){return A("ASEC","acot")}const t=Math.atn(1/Math.sqrt(ye.toNumber(ye.decrement(ye.multiply(e,e)))));return ye.isPositive(e)?ye.fromNumber(t):ye.fromNumber(t-Math.PI)},acsc(e){return ye.fromNumber(Math.atn(-ye.toNumber(e))+Math.PI)},exp(e){return ye.exp(e)},log(e){return ye.fromNumber(Math.log(ye.toNumber(e)))},ln(e){return ye.fromNumber(Math.log(ye.toNumber(e)))},log10(e){return ye.fromNumber(Math.log10(ye.toNumber(e)))},log2(e){return ye.fromNumber(Math.log2(ye.toNumber(e)))},cosh(e){const t=ye.toNumber(e);return ye.fromNumber((Math.exp(t)+Math.exp(-t))/2)},sinh(e){const t=ye.toNumber(e);return ye.fromNumber((Math.exp(t)-Math.exp(-t))/2)},tanh(e){const t=ye.toNumber(e);return ye.fromNumber((Math.exp(t)-Math.exp(-t))/(Math.exp(t)+Math.exp(-t)))},sech(e){const t=ye.toNumber(e);return ye.fromNumber(2/(Math.exp(t)+Math.exp(-t)))},csch(e){const t=ye.toNumber(e);return ye.fromNumber(2/(Math.exp(t)-Math.exp(-t)))},coth(e){const t=ye.toNumber(e);return ye.fromNumber((Math.exp(t)+Math.exp(-t))/(Math.exp(t)-Math.exp(-t)))},acosh(e){const t=ye.toNumber(e);return ye.fromNumber(Math.log(t+Math.sqrt(t-1)*Math.sqrt(t+1)))},asinh(e){const t=ye.toNumber(e);return ye.fromNumber(Math.log(t+Math.sqrt(Math.pow(t,2)+1)))},atanh(e){const t=ye.toNumber(e);return ye.fromNumber((Math.log(1+t)-Math.log(1-t))/2)},asech(e){const t=ye.toNumber(e);return ye.fromNumber(Math.log((Math.sqrt(-t*t+1)+1)/t))},ascsh(e){const t=ye.toNumber(e);return ye.fromNumber(Math.log(Math.sqrt(1+1/Math.pow(t,2))+1/t))},asoth(e){const t=ye.toNumber(e);return ye.fromNumber((Math.log(1+1/t)-Math.log(1-1/t))/2)},Gamma(e){return Ln(e)},"Γ"(e){return Ln(e)},sign(e){return ye.isPositive(e)?ye.one:ye.isZero?ye.zero:vn},cosd(e){if(ye.areEqual(e,Mn)){return ye.zero}if(ye.areEqual(e,In)){return Tn}return this.cos(ye.multiply(e,Sn))},sind(e){if(ye.areEqual(e,En)){return Tn}return this.sin(ye.multiply(e,Sn))},tand(e){if(ye.areEqual(e,On)){return ye.one}if(ye.areEqual(e,Mn)){return A("TAN90","90°")}return this.tan(ye.multiply(e,Sn))},cotd(e){return this.cot(ye.multiply(e,Sn))},cscd(e){return this.csc(ye.multiply(e,Sn))},secd(e){return this.sec(ye.multiply(e,Sn))},acosd(e){const t=this.acos(e);return t.dtype?t:ye.divide(t,Sn)},asind(e){const t=this.asin(e);return t.dtype?t:ye.divide(t,Sn)},atand(e){return ye.divide(this.atan(e),Sn)},acotd(e){const t=this.acot(e);return t.dtype?t:ye.divide(t,Sn)},acscd(e){const t=this.acsc(e);return t.dtype?t:ye.divide(t,Sn)},asecd(e){const t=this.asec(e);return t.dtype?t:ye.divide(t,Sn)},chr(e){return String.fromCodePoint(Number(e))},round(e){return ye.fromString(ye.toString(e,0))}};const Dn={logn([e,t]){return ye.fromNumber(Math.log(ye.toNumber(t))/Math.log(ye.toNumber(e)))},roundFixed([e,t]){return ye.fromString(ye.toString(e,t))},roundSignificant([e,t]){return ye.fromString(ye.toStringSignificant(e,t))},atan2([e,t]){return ye.fromNumber(Math.atan2(ye.toNumber(t),ye.toNumber(e)))},hypot([e,t]){const n=ye.max(e,t);const r=ye.divide(ye.min(e,t),n);return ye.multiply(n,ye.sqrt(ye.increment(ye.multiply(r,r))))},gcd([e,t]){return ye.gcd(e,t)},rms([e,t]){return this.hypot(e,t)},binomial([e,t]){return Cn(e,t)},zeros([e,t]){return mn.zeros(ye.toNumber(e),ye.toNumber(t))}};const Bn={max(e){return e.reduce((e,t)=>ye.max(e,t))},min(e){return e.reduce((e,t)=>ye.min(e,t))},sum(e){return e.reduce((e,t)=>ye.add(e,t))},product(e){return e.reduce((e,t)=>ye.multiply(e,t))},mean(e){const t=this.sum(e);return ye.divide(t,ye.fromNumber(e.length))},median(e){const t=this.max(e);const n=this.min(e);return ye.divide(ye.add(t,n),ye.two)},range(e){return ye.subtract(this.max(e),this.min(e))},variance(e){const t=this.sum(e);const n=ye.divide(t,ye.fromNumber(e.length));const r=e.reduce((e,t)=>ye.add(e,ye.pow(ye.subtract(t,n),ye.two)));return ye.divide(r,ye.subtract(ye.fromNumber(e.length),ye.one))},stddev(e){const t=this.variance(e);return ye.power(t,Tn)}};const kn=(e,t)=>{for(let t=0;t<3;t++){if(!(e[t].dtype&R.RATIONAL)){return A("")}}let n=y;if(t){if(e[0].expos!==e[1].expos){return A("")}if(e[1].expos!==e[2].expos){return A("")}n=e[0].expose}const r=e[0].value;const s=e[1].value;const a=e[2].value;for(let e=0;e<r.length-1;e++){if(ye.lessThanOrEqualTo(r[e],a)&ye.lessThanOrEqualTo(a,r[e+1])){const t=ye.divide(ye.subtract(s[e+1],s[e]),ye.subtract(r[e+1],r[e]));const l=ye.add(s[e],ye.multiply(t,ye.subtract(a,r[e])));return{value:l,unit:n,dtype:R.RATIONAL}}}};const Vn=Object.freeze({functionExpos:xn,unary:wn,binary:Dn,reduce:Bn,lerp:kn});const _n=(e,t,r)=>{if(r.length===1){const n=mn.isVector(r[0])?r[0].value:r.dtype&R.MATRIX?r[0].value.flat():r[0].value;const s=Vn[e][t](n);let a=r[0].dtype;if(e==="reduce"){if(a&R.MATRIX){a-=R.MATRIX}if(a&R.ROWVECTOR){a-=R.ROWVECTOR}if(a&R.COLUMNVECTOR){a-=R.COLUMNVECTOR}}return[s,a]}else{let s=0;let a=false;let l=r[0].dtype;for(s=0;s<r.length;s++){if(mn.isVector(r[s])){a=true;l=r[s].dtype;break}}const i=r.map(e=>e.value);if(!a){return[Vn[e][t](i),r[0].dtype]}else{const r=n(i);const a=[];for(let n=0;n<i[s].length;n++){r[s]=i[s][n];a.push(Vn[e][t](r))}return[a,l]}}};const qn=(e,n,r)=>{const s=e.length-2*n;const a=e[e.length-1].dtype;const l=e[e.length-1].unit;let i=t(a,[R.RATIONAL,R.BOOLEAN,R.STRING]);if(i){for(let t=e.length-2*n+1;t<e.length;t+=2){if(e[t].dtype!==a){i=false;break}if(e[t].unit!==l){i=false;break}}}if(i){const t=Object.create(null);t.dtype=a+R.MAP;t.unit=a===R.RATIONAL?y:null;t.value=new Map;while(e.length>s){const n=e.pop().value;t.value.set(e.pop().value,n)}return t}else{const t=new Map;const n=Object.create(null);while(e.length>s){const s=e.pop();const a=e.pop().value;const l=s.unit;if(typeof l==="string"){if(!n[l]){const e=pt(l,r);if(e.dtype&e.dtype===R.ERROR){return l}if(e){n[l]=e}}}t.set(a,{value:s.value,unit:l,dtype:s.dtype})}return{value:t,unit:n,dtype:R.DICT}}};const Fn=(e,t)=>{const n=new Map;for(const[r,s]of e.entries()){n.set(r,{value:t(s.value),unit:s.unit,dtype:s.dtype})}return n};const Gn=(e,t,r)=>{const s=new Map;for(let a=0;a<t.length;a++){const l=t[a];const i=n(e.value.get(l));if(i===undefined){return A("BAD_KEY",l)}if(t.length>1){s.set(l,i)}else{if(typeof i.unit==="string"){if(r){const t=e.unit[i.unit];i.value=ye.multiply(ye.add(i.value,t.gauge),t.factor);i.unit=t.expos}else{i.unit=y}i.dtype=R.RATIONAL}return i}}return{value:s,unit:e.unit,dtype:R.DICT}};const Pn=(e,t,n)=>{let r="\\{";for(const[s,a]of e.entries()){r+="\\text{"+Ke(s)+"}: ";const e=a.value===undefined?"":a.dtype===R.RATIONAL?Ue(a.value,t,n):a.dtype===R.RATIONAL+R.QUANTITY?Ue(a.value,t,n)+"\\,"+It(a.unit):a.dtype===R.STRING?"\\text{"+Ke(a.value)+"}":"\\text{"+Ke(String(a.value))+"}";r+=e+",\\:"}return r.slice(0,-3)+"\\}"};const zn=(e,t,n)=>{let r="{";for(const[s,a]of e.entries()){r+=s+": ";const e=a.value===undefined?"":a.dtype===R.RATIONAL?Ue(a.value,t,n):a.dtype===R.RATIONAL+R.QUANTITY?Ue(a.value,t,n).replace("{,}",",")+" "+a.unit:a.dtype===R.STRING?a.value:String(a.value);r+=e+", "}return r.slice(0,-2)+"}"};const Yn=Object.freeze({fromTokenStack:qn,display:Pn,displayAlt:zn,toValue:Gn});const Wn=(e,t,n,r)=>{if(t===false&&r){return false}if(t===true&&r){t=r}switch(e){case"=":if(ye.isRational(t)&&ye.isRational(n)){return ye.areEqual(t,n)}else{return t===n}case"≠":case"!=":case"/=":if(ye.isRational(t)&&ye.isRational(n)){return!ye.areEqual(t,n)}else{return t!==n}case">":if(ye.isRational(t)&&ye.isRational(n)){return ye.greaterThan(t,n)}else{return t>n}case"<":if(ye.isRational(t)&&ye.isRational(n)){return ye.lessThan(t,n)}else{return t<n}case"≥":case">=":if(ye.isRational(t)&&ye.isRational(n)){return ye.greaterThanOrEqualTo(t,n)}else{return t>=n}case"≤":case"<=":if(ye.isRational(t)&&ye.isRational(n)){return ye.lessThanOrEqualTo(t,n)}else{return t<=n}case"∈":case"⋐":if(typeof t==="string"&&typeof n==="string"){return n.indexOf(t)>-1}break;case"∉":if(typeof t==="string"&&typeof n==="string"){return n.indexOf(t)===-1}}};const Hn=e=>e[0].map((t,n)=>e.map(e=>e[n]));const $n=(e,t)=>{return e.map((e,n)=>ye.multiply(e,t[n])).reduce((e,t)=>ye.add(e,t))};const jn=e=>{return e.map(e=>ye.multiply(e,e)).reduce((e,t)=>ye.add(e,t))};const Kn=[BigInt(1),BigInt(100)];const Zn={scalar:{abs(e){return ye.abs(e)},norm(e){return ye.abs(e)},negate(e){return ye.negate(e)},exp(e){return ye.exp(e)},floor(e){return ye.floor(e)},ceil(e){return ye.ceil(e)},percent(e){return ye.multiply(Kn,e)},factorial(e){return ye.factorial(e)},not(e){return!e}},vector:{abs(e){return ye.sqrt(jn(e))},norm(e){return ye.sqrt(jn(e))},negate(e){return e.map(e=>ye.negate(e))},exp(e){return e.map(e=>ye.exp(e))},floor(e){return e.map(e=>ye.floor(e))},ceil(e){return e.map(e=>ye.ceil(e))},percent(e){return e.map(e=>ye.multiply(Kn,e))},factorial(e){return e.map(e=>ye.factorial(e))},not(e){return e.map(e=>!e)}},matrix:{abs(e){return mn.invert(e,true)},norm(e){if(e.length===e[0].length){let t=ye.zero;for(let n=0;n<e.length;n++){t=ye.add(t,jn(e[n]))}return t.sqrt()}},negate(e){return e.map(e=>e.map(e=>ye.negate(e)))},exp(e){return e.map(e=>e.map(e=>ye.exp(e)))},floor(e){return e.map(e=>e.map(e=>ye.floor(e)))},ceil(e){return e.map(e=>e.map(e=>ye.ceil(e)))},percent(e){return e.map(e=>e.map(e=>ye.multiply(Kn,e)))},factorial(e){return e.map(e=>e.map(e=>ye.factorial(e)))},not(e){return e.map(e=>e.map(e=>!e))}},dictionary:{abs(e){return Fn(e,e=>ye.abs(e))},negate(e){return Fn(e,e=>ye.negate(e))},floor(e){return Fn(e,e=>ye.floor(e))},ceil(e){return Fn(e,e=>ye.ceil(e))},percent(e){return Fn(e,e=>ye.multiply(Kn,e))}},map:{abs(e){return r(e,e=>ye.abs(e))},negate(e){return r(e,e=>ye.negate(e))},exp(e){return r(e,e=>ye.exp(e))},floor(e){return r(e,e=>ye.floor(e))},ceil(e){return r(e,e=>ye.ceil(e))},percent(e){return r(e,e=>ye.multiply(Kn,e))},factorial(e){return r(e,e=>ye.factorial(e))},not(e){return r(e,e=>!e)}},mapWithVectorValues:{abs(e){return r(e,e=>e.map(e=>ye.abs(e)))},negate(e){return r(e,e=>e.map(e=>ye.negate(e)))},exp(e){return r(e,e=>e.map(e=>ye.exp(e)))},floor(e){return r(e,e=>e.map(e=>ye.floor(e)))},ceil(e){return r(e,e=>e.map(e=>ye.ceil(e)))},percent(e){return r(e,e=>e.map(e=>ye.multiply(Kn,e)))},factorial(e){return r(e,e=>e.map(e=>ye.factorial(e)))},not(e){return r(e,e=>e.map(e=>!e))}}};const Xn={scalar:{scalar(e,t){return e},vector(e,t){return t},matrix(e,t){return t},dictionary(e,t){return t},map(e,t){return t},mapWithVectorValues(e,t){return t}},vector:{scalar(e,t){return e},map(e,t){return t+(e&R.ROWVECTOR)+(e&R.COLUMNVECTOR)}},rowVector:{rowVector(e,t){return e},columnVector(e,t){return e},matrix(e,t){return t}},columnVector:{rowVector(e,t){return e},columnVector(e,t){return e},matrix(e,t){return t}},matrix:{scalar(e,t){return e},rowVector(e,t){return e},columnVector(e,t){return e},matrix(e,t){return e},map(e,t){return 0}},map:{scalar(e,t){return e},vector(e,t){return e+(t&R.ROWVECTOR)+(t&R.COLUMNVECTOR)},matrix(e,t){return 0},map(e,t){return e}},mapWithVectorValues:{scalar(e,t){return e}}};const Qn={scalar:{scalar:{add(e,t){return ye.add(e,t)},subtract(e,t){return ye.subtract(e,t)},multiply(e,t){return ye.multiply(e,t)},divide(e,t){return ye.divide(e,t)},power(e,t){return ye.power(e,t)},modulo(e,t){return ye.modulo(e,t)},and(e,t){return e&&t},or(e,t){return e||t},xor(e,t){return e!==t}},vector:{add(e,t){return t.map(t=>ye.add(e,t))},subtract(e,t){return t.map(t=>ye.subtract(e,t))},multiply(e,t){return t.map(t=>ye.multiply(e,t))},divide(e,t){return t.map(t=>ye.divide(e,t))},power(e,t){return t.map(t=>ye.power(e,t))},modulo(e,t){return t.map(t=>ye.modulo(e,t))},and(e,t){return t.map(t=>e&&t)},or(e,t){return t.map(t=>e||t)},xor(e,t){return t.map(t=>e!==t)}},matrix:{add(e,t){return t.map(t=>t.map(t=>ye.add(e,t)))},subtract(e,t){return t.map(t=>t.map(t=>ye.subtract(e,t)))},multiply(e,t){return t.map(t=>t.map(t=>ye.multiply(e,t)))},divide(e,t){return t.map(t=>t.map(t=>ye.divide(e,t)))},power(e,t){return t.map(t=>t.map(t=>ye.power(e,t)))},modulo(e,t){return t.map(t=>t.map(t=>ye.modulo(e,t)))},and(e,t){return t.map(t=>t.map(t=>e&&t))},or(e,t){return t.map(t=>t.map(t=>e||t))},xor(e,t){return t.map(t=>t.map(t=>e!==t))}},dictionary:{multiply(e,t){return Fn(t,t=>ye.multiply(e,t))},divide(e,t){return Fn(t,t=>ye.divide(e,t))}},map:{add(e,t){return r(t,t=>ye.add(e,t))},subtract(e,t){return r(t,t=>ye.subtract(e,t))},multiply(e,t){return r(t,t=>ye.multiply(e,t))},divide(e,t){return r(t,t=>ye.divide(e,t))},power(e,t){return r(t,t=>ye.power(e,t))},modulo(e,t){return r(t,t=>ye.modulo(e,t))},and(e,t){return r(t,t=>e&&t)},or(e,t){return r(t,t=>e||t)},xor(e,t){return r(t,t=>e!==t)}},mapWithVectorValues:{add(e,t){return r(t,t=>t.map(t=>ye.add(e,t)))},subtract(e,t){return r(t,t=>t.map(t=>ye.subtract(e,t)))},multiply(e,t){return r(t,t=>t.map(t=>ye.multiply(e,t)))},divide(e,t){return r(t,t=>t.map(t=>ye.divide(e,t)))},power(e,t){return r(t,t=>t.map(t=>ye.power(e,t)))},modulo(e,t){return r(t,t=>t.map(t=>ye.modulo(e,t)))},and(e,t){return r(t,t=>t.map(t=>e&&t))},or(e,t){return r(t,t=>t.map(t=>e||t))},xor(e,t){return r(t,t=>t.map(t=>e!==t))}}},vector:{scalar:{add(e,t){return e.map(e=>ye.add(e,t))},subtract(e,t){return e.map(e=>ye.subtract(e,t))},multiply(e,t){return e.map(e=>ye.multiply(e,t))},divide(e,t){return e.map(e=>ye.divide(e,t))},power(e,t){return e.map(e=>ye.power(e,t))},modulo(e,t){return e.map(e=>ye.modulo(e,t))},and(e,t){return e.map(e=>e&&t)},or(e,t){return e.map(e=>e||t)},xor(e,t){return e.map(e=>e!==t)}},map:{add(e,t){return r(t,t=>e.map(e=>ye.add(t,e)))},subtract(e,t){return r(t,t=>e.map(e=>ye.subtract(t,e)))},multiply(e,t){return r(t,t=>e.map(e=>ye.multiply(t,e)))},divide(e,t){return r(t,t=>e.map(e=>ye.divide(t,e)))},power(e,t){return r(t,t=>e.map(e=>ye.power(t,e)))},modulo(e,t){return r(t,t=>e.map(e=>ye.modulo(t,e)))},and(e,t){return r(t,t=>e.map(e=>t&&e))},or(e,t){return r(t,t=>e.map(e=>t||e))},xor(e,t){return r(t,t=>e.map(e=>t!==e))}}},rowVector:{rowVector:{add(e,t){if(e.length!==t.length){return A("MIS_ELNUM")}return e.map((e,n)=>ye.add(e,t[n]))},subtract(e,t){if(e.length!==t.length){return A("MIS_ELNUM")}return e.map((e,n)=>ye.subtract(e,t[n]))},divide(e,t){if(e.length!==t.length){return A("MIS_ELNUM")}return e.map((e,n)=>ye.divide(e,t[n]))},dot(e,t){if(e.length!==t.length){return A("MIS_ELNUM")}return $n(e,t)},cross(e,t){if(e.length!==3||t.length!==3){return A("CROSS")}const n=[ye.zero,ye.zero,ye.zero];n[0]=ye.multiply(ye.subtract(ye.multiply(e[1],t[2]),e[2],t[1]));n[1]=ye.multiply(ye.subtract(ye.multiply(e[2],t[0]),e[0],t[2]));n[2]=ye.multiply(ye.subtract(ye.multiply(e[0],t[1]),e[1],t[0]));return n},multiply(e,t){if(e.length===1&&t.length===1){return[ye.multiply(e[0],t[0])]}return A("MIS_ELNUM")},asterisk(e,t){if(e.length!==t.length){return A("MIS_ELNUM")}return e.map((e,n)=>ye.multiply(e,t[n]))},power(e,t){if(e.length!==t.length){return A("MIS_ELNUM")}return e.map((e,n)=>ye.power(e,t[n]))},modulo(e,t){if(e.length!==t.length){return A("MIS_ELNUM")}return e.map((e,n)=>ye.modulo(e,t[n]))},and(e,t){if(e.length!==t.length){return A("MIS_ELNUM")}return e.map((e,n)=>e&&t[n])},or(e,t){if(e.length!==t.length){return A("MIS_ELNUM")}return e.map((e,n)=>e||t[n])},xor(e,t){if(e.length!==t.length){return A("MIS_ELNUM")}return e.map((e,n)=>e!==t[n])}},columnVector:{add(e,t){if(e.length===1&&t.length===1){return[ye.add(e[0],t[0])]}return A("MIS_ELNUM")},subtract(e,t){if(e.length===1&&t.length===1){return[ye.subtract(e[0],t[0])]}return A("MIS_ELNUM")},dot(e,t){if(e.length!==t.length){return A("MIS_ELNUM")}return $n(e,t)},cross(e,t){if(e.length!==3||t.length!==3){return A("CROSS")}const n=[ye.zero,ye.zero,ye.zero];n[0]=ye.multiply(ye.subtract(ye.multiply(e[1],t[2]),e[2],t[1]));n[1]=ye.multiply(ye.subtract(ye.multiply(e[2],t[0]),e[0],t[2]));n[2]=ye.multiply(ye.subtract(ye.multiply(e[0],t[1]),e[1],t[0]));return n},multiply(e,t){if(e.length!==t.length){return A("MIS_ELNUM")}return $n(e,t)},asterisk(e,t){if(e.length!==t.length){return A("MIS_ELNUM")}return e.map((e,n)=>ye.multiply(e,t[n]))},power(e,t){if(e.length===1&&t.length===1){return[ye.power(e[0],t[0])]}return A("MIS_ELNUM")},modulo(e,t){if(e.length===1&&t.length===1){return[ye.modulo(e[0],t[0])]}return A("MIS_ELNUM")},and(e,t){if(e.length===1&&t.length===1){return[e[0]&&t[0]]}return A("MIS_ELNUM")},or(e,t){if(e.length===1&&t.length===1){return[e[0]||t[0]]}return A("MIS_ELNUM")},xor(e,t){if(e.length===1&&t.length===1){return[e[0]!==t[0]]}return A("MIS_ELNUM")}},matrix:{add(e,t){if(e.length!==t[0].length){return A("MIS_ELNUM")}return t.map(t=>t.map((t,n)=>ye.add(e[n],t)))},subtract(e,t){if(e.length!==t[0].length){return A("MIS_ELNUM")}return t.map(t=>t.map((t,n)=>ye.subtract(e[n],t)))}}},columnVector:{rowVector:{add(e,t){if(e.length===1&&t.length===1){return[ye.add(e[0],t[0])]}return A("MIS_ELNUM")},subtract(e,t){if(e.length===1&&t.length===1){return[ye.subtract(e[0],t[0])]}return A("MIS_ELNUM")},dot(e,t){if(e.length!==t.length){return A("MIS_ELNUM")}return $n(e,t)},cross(e,t){if(e.length!==3||t.length!==3){return A("CROSS")}const n=[ye.zero,ye.zero,ye.zero];n[0]=ye.multiply(ye.subtract(ye.multiply(e[1],t[2]),e[2],t[1]));n[1]=ye.multiply(ye.subtract(ye.multiply(e[2],t[0]),e[0],t[2]));n[2]=ye.multiply(ye.subtract(ye.multiply(e[0],t[1]),e[1],t[0]));return n},multiply(e,t){if(e.length!==t.length){return A("MIS_ELNUM")}return $n(e,t)},asterisk(e,t){if(e.length!==t.length){return A("MIS_ELNUM")}return e.map((e,n)=>ye.multiply(e,t[n]))},power(e,t){if(e.length===1&&t.length===1){return[ye.power(e[0],t[0])]}return A("MIS_ELNUM")},modulo(e,t){if(e.length===1&&t.length===1){return[ye.modulo(e[0],t[0])]}return A("MIS_ELNUM")},and(e,t){if(e.length===1&&t.length===1){return[e[0]&&t[0]]}return A("MIS_ELNUM")},or(e,t){if(e.length===1&&t.length===1){return[e[0]||t[0]]}return A("MIS_ELNUM")},xor(e,t){if(e.length===1&&t.length===1){return[e[0]!==t[0]]}return A("MIS_ELNUM")}},columnVector:{add(e,t){if(e.length!==t.length){return A("MIS_ELNUM")}return e.map((e,n)=>ye.add(e,t[n]))},subtract(e,t){if(e.length!==t.length){return A("MIS_ELNUM")}return e.map((e,n)=>ye.subtract(e,t[n]))},divide(e,t){if(e.length!==t.length){return A("MIS_ELNUM")}return e.map((e,n)=>ye.divide(e,t[n]))},dot(e,t){if(e.length!==t.length){return A("MIS_ELNUM")}return $n(e,t)},cross(e,t){if(e.length!==3||t.length!==3){return A("CROSS")}const n=[ye.zero,ye.zero,ye.zero];n[0]=ye.multiply(ye.subtract(ye.multiply(e[1],t[2]),e[2],t[1]));n[1]=ye.multiply(ye.subtract(ye.multiply(e[2],t[0]),e[0],t[2]));n[2]=ye.multiply(ye.subtract(ye.multiply(e[0],t[1]),e[1],t[0]));return n},multiply(e,t){if(e.length===1&&t.length===1){return[ye.multiply(e[0],t[0])]}return A("MIS_ELNUM")},asterisk(e,t){if(e.length!==t.length){return A("MIS_ELNUM")}return e.map((e,n)=>ye.multiply(e,t[n]))},power(e,t){if(e.length!==t.length){return A("MIS_ELNUM")}return e.map((e,n)=>ye.power(e,t[n]))},modulo(e,t){if(e.length!==t.length){return A("MIS_ELNUM")}return e.map((e,n)=>ye.modulo(e,t[n]))},and(e,t){if(e.length!==t.length){return A("MIS_ELNUM")}return e.map((e,n)=>e&&t[n])},or(e,t){if(e.length!==t.length){return A("MIS_ELNUM")}return e.map((e,n)=>e||t[n])},xor(e,t){if(e.length!==t.length){return A("MIS_ELNUM")}return e.map((e,n)=>e!==t[n])}},matrix:{add(e,t){const r=n(t);if(e.length!==t.length){return A("MIS_ELNUM")}for(let n=0;n<t.length;n++){for(let s=0;s<t[0].length;s++){r[n][s]=ye.add(t[n][s],e[s])}}return r},subtract(e,t){const r=n(t);if(e.length!==t.length){return A("MIS_ELNUM")}for(let n=0;n<t.length;n++){for(let s=0;s<t[0].length;s++){r[n][s]=ye.subtract(t[n][s],e[s])}}return r}}},matrix:{scalar:{add(e,t){return e.map(e=>e.map(e=>ye.add(e,t)))},subtract(e,t){return e.map(e=>e.map(e=>ye.subtract(e,t)))},multiply(e,t){return e.map(e=>e.map(e=>ye.multiply(e,t)))},divide(e,t){return e.map(e=>e.map(e=>ye.divide(e,t)))},power(e,t){if(t==="T"){return Hn(e)}if(e.length===e[0].length&&ye.areEqual(t,[BigInt(-1),BigInt(1)])){return mn.invert(e)}return e.map(e=>e.map(e=>ye.power(e,t)))},modulo(e,t){return e.map(e=>e.map(e=>ye.modulo(e,t)))}},rowVector:{},columnVector:{},matrix:{add(e,t){if(e.length!==t.length){return A("MIS_ELNUM")}if(e[0].length!==t[0].length){return A("MIS_ELNUM")}return e.map((e,n)=>e.map((e,r)=>ye.add(e,t[n][r])))},subtract(e,t){if(e.length!==t.length){return A("MIS_ELNUM")}if(e[0].length!==t[0].length){return A("MIS_ELNUM")}return e.map((e,n)=>e.map((e,r)=>ye.subtract(e,t[n][r])))},dot(e,t){if(e.length!==t.length){return A("MIS_ELNUM")}if(e[0].length!==t[0].length){return A("MIS_ELNUM")}return e.map((e,n)=>$n(e,t[n])).reduce((e,t)=>ye.add(e,t))},cross(e,t){return A("CROSS")},multiply(e,t){},asterisk(e,t){if(e.length!==t.length){return A("MIS_ELNUM")}if(e[0].length!==t[0].length){return A("MIS_ELNUM")}return e.map((e,n)=>e.map((e,r)=>ye.multiply(e,t[n][r])))},divide(e,t){if(e.length!==t.length){return A("MIS_ELNUM")}if(e[0].length!==t[0].length){return A("MIS_ELNUM")}return e.map((e,n)=>e.map((e,r)=>ye.divide(e,t[n][r])))},power(e,t){if(e.length!==t.length){return A("MIS_ELNUM")}if(e[0].length!==t[0].length){return A("MIS_ELNUM")}return e.map((e,n)=>e.map((e,r)=>ye.power(e,t[n][r])))},modulo(e,t){if(e.length!==t.length){return A("MIS_ELNUM")}if(e[0].length!==t[0].length){return A("MIS_ELNUM")}return e.map((e,n)=>e.map((e,r)=>ye.modulo(e,t[n][r])))},and(e,t){if(e.length!==t.length){return A("MIS_ELNUM")}if(e[0].length!==t[0].length){return A("MIS_ELNUM")}return e.map((e,n)=>e.map((e,r)=>e&&t[n][r]))},or(e,t){if(e.length!==t.length){return A("MIS_ELNUM")}if(e[0].length!==t[0].length){return A("MIS_ELNUM")}return e.map((e,n)=>e.map((e,r)=>e||t[n][r]))},xor(e,t){if(e.length!==t.length){return A("MIS_ELNUM")}if(e[0].length!==t[0].length){return A("MIS_ELNUM")}return e.map((e,n)=>e.map((e,r)=>e!==t[n][r]))}},map:{}},dictionary:{scalar:{multiply(e,t){return Fn(e,e=>ye.multiply(e,t))},divide(e,t){return Fn(e,e=>ye.divide(e,t))}}},map:{scalar:{add(e,t){return r(e,e=>ye.add(e,t))},subtract(e,t){return r(e,e=>ye.subtract(e,t))},multiply(e,t){return r(e,e=>ye.multiply(e,t))},divide(e,t){return r(e,e=>ye.divide(e,t))},power(e,t){return r(e,e=>ye.power(e,t))},modulo(e,t){return r(e,e=>ye.modulo(e,t))},and(e,t){return r(e,e=>e&&t)},or(e,t){return r(e,e=>e||t)},xor(e,t){return r(e,e=>e!==t)}},vector:{add(e,t){return r(e,e=>t.map(t=>ye.add(e,t)))},subtract(e,t){return r(e,e=>t.map(t=>ye.subtract(e,t)))},multiply(e,t){return r(e,e=>t.map(t=>ye.multiply(e,t)))},divide(e,t){return r(e,e=>t.map(t=>ye.divide(e,t)))},power(e,t){return r(e,e=>t.map(t=>ye.power(e,t)))},modulo(e,t){return r(e,e=>t.map(t=>ye.modulo(e,t)))},and(e,t){return r(e,e=>t.map(t=>e&&t))},or(e,t){return r(e,e=>t.map(t=>e||t))},xor(e,t){return r(e,e=>t.map(t=>e!==t))}},matrix:{},map:{}},mapWithVectorValues:{scalar:{add(e,t){return r(e,e=>e.map(e=>ye.add(e,t)))},subtract(e,t){return r(e,e=>e.map(e=>ye.subtract(e,t)))},multiply(e,t){return r(e,e=>e.map(e=>ye.multiply(e,t)))},divide(e,t){return r(e,e=>e.map(e=>ye.divide(e,t)))},power(e,t){return r(e,e=>e.map(e=>ye.power(e,t)))},modulo(e,t){return r(e,e=>e.map(e=>ye.modulo(e,t)))},and(e,t){return r(e,e=>e.map(e=>e&&t))},or(e,t){return r(e,e=>e.map(e=>e||t))},xor(e,t){return r(e,e=>e.map(e=>e!==t))}},vector:{},matrix:{},map:{},mapWithVectorValues:{}}};const Jn={scalar:{scalar:{relate(e,t,n,r){return Wn(e,t,n,r)}},vector:{relate(e,t,n,r){if(r===undefined){return n.map(n=>Wn(e,t,n,undefined))}else if(typeof r!=="object"){return n.map(n=>Wn(e,t,n,r))}else if(Array.isArray(r)){return n.map((n,s)=>Wn(e,t,n,r[s]))}}},matrix:{relate(e,t,n,r){if(r===undefined){return n.map(n=>n.map(n=>Wn(e,t,n,undefined)))}else if(typeof r!=="object"){return n.map(n=>n.map(n=>Wn(e,t,n,r)))}else if(Array.isArray(r)){return n.map((n,s)=>n.map((n,a)=>Wn(e,t,n,r[s][a])))}}},map:{relate(e,t,n,s){if(s===undefined){return r(n,n=>Wn(e,t,n,undefined))}else if(typeof s!=="object"){return r(n,n=>Wn(e,t,n,s))}else{const r=new Map;for(const[a,l]of n.entries()){r.set(a,Wn(e,t,l,s[a]))}return r}}}},vector:{scalar:{relate(e,t,n,r){if(r===undefined){return t.map(t=>Wn(e,t,n,undefined))}else if(typeof r!=="object"){return t.map(t=>Wn(e,t,n,r))}else if(Array.isArray(r)){return t.map((t,s)=>Wn(e,t,n,r[s]))}}}},rowVector:{rowVector:{relate(e,t,n,r){if(r===undefined){return t.map((t,r)=>Wn(e,t,n[r],undefined))}}}},columnVector:{columnVector:{relate(e,t,n,r){if(r===undefined){return t.map((t,r)=>Wn(e,t,n[r],undefined))}}}},matrix:{scalar:{relate(e,t,n,r){if(r===undefined){return t.map(t=>t.map(t=>Wn(e,t,n,undefined)))}else if(typeof r!=="object"){return t.map(t=>t.map(t=>Wn(e,t,n,r)))}else if(Array.isArray(r)){return t.map((t,s)=>t.map((t,a)=>Wn(e,t,n,r[s][a])))}}}}};const er=(e,t)=>{switch(t){case"scalar":return e[1]===BigInt(0);case"vector":for(let t=0;t<e.length;t++){if(e[t][1]===BigInt(0)){return true}}return false;case"matrix":for(let t=0;t<e.length;t++){for(let n=0;n<e[0].length;n++){if(e[t][n][1]===BigInt(0)){return true}}}return false;case"map":for(const[t,n]of Object.entries(e)){if(n[1]===BigInt(0)){return true}}return false;case"mapWithVectorValues":for(const[t,n]of Object.entries(e)){for(let e=0;e<n.length;e++){if(n[e][1]===BigInt(0)){return true}}}return false;default:return false}};const tr=Object.freeze({unary:Zn,binary:Qn,relations:Jn,dtype:Xn});const nr=(e,t,n)=>{e=r(e,e=>ye.divide(e,n));if(!ye.isZero(t)){e=r(e,e=>ye.subtract(e,t))}return e};const rr=(e,t,n)=>{if(!ye.isZero(t)){e=r(e,e=>ye.add(e,t))}return r(e,e=>ye.multiply(e,n))};const sr=(e,t,n)=>{let r="\\{";for(const[s,a]of e.entries()){r+="\\text{"+s+"}: ";r+=Ue(a,t,n)+",\\:"}return r.slice(0,-3)+"\\}"};const ar=(e,t,n)=>{let r="{";for(const[s,a]of e.entries()){r+='"'+s+'": ';r+=Ue(a,t,n)+", "}return r.slice(0,-2)+"}"};const lr=(e,t)=>{return Qt(e)?mn.convertToBaseUnits({value:e.value,dtype:e.dtype},t.gauge,t.factor).value:e.dtype&R.DICT?e.value:ye.multiply(ye.add(e.value,t.gauge),t.factor)};const ir=(e,t,r)=>{const s=e.dtype&R.RATIONAL;const a=r&&e.dtype&R.QUANTITY;if(t.length===1){const r=t[0];const l=n(e.value.get(r));if(!s){return{value:l,unit:undefined,dtype:e.dtype-R.MAP}}else if(a){const t=e.dtype-R.MAP-R.QUANTITY;const n=lr({value:l,dtype:R.RATIONAL},e.unit);return{value:n,unit:e.unit.expos,dtype:t}}else{return{value:l,unit:y,dtype:e.dtype-R.MAP-(e.dtype&R.QUANTITY)}}}else{const r=new Map;for(let s=0;s<t.length;s++){r.set(t[s],n(e.value.get(t[s])))}return{value:r,unit:n(e.unit),dtype:e.dtype}}};const or=Object.freeze({convertFromBaseUnits:nr,convertToBaseUnits:rr,display:sr,displayAlt:ar,valueFromMap:ir});const ur=(e,t)=>{const n=[];for(let r=e;r<=t;r++){n.push(r)}return n};const cr=(e,t,r,s,a)=>{let l;let i;let o=[];let u;if(r===undefined&&t.dtype===R.STRING){if(t.value in e.value.rowMap){l=e.value.rowMap[t.value];i=l;o=ur(0,e.value.data.length-1)}else if(t.value in e.value.columnMap){l=0;i=e.value.data[0].length-1;o.push(e.value.columnMap[t.value])}else{return A("BAD_ROW_NAME",t.value)}}else{if(t.dtype===R.STRING){l=e.value.rowMap[t.value];if(isNaN(l)){return A("BAD_ROW_NAME",t.value)}i=l}else if(t.dtype===R.RATIONAL){if(ye.toNumber(t.value)===0){l=0;i=e.value.data[0].length-1}else{l=ye.toNumber(t.value)-1;i=l}}else if(t.dtype===R.RANGE){l=ye.toNumber(t.value[0])-1;i=ye.toNumber(t.value[2])-1}else if(Jt(t));if(r.dtype===R.STRING){const t=e.value.columnMap[r.value];if(isNaN(t)){return A("BAD_COLUMN_NAME",r.value)}o.push(t)}else if(r.dtype===R.RATIONAL){if(ye.isZero(r.value)){o=ur(0,e.value.data.length-1)}else{const e=ye.toNumber(r.value)-1;o=ur(e,e)}}else if(r.dtype===R.RANGE){const e=ye.toNumber(r.value[0])-1;const t=ye.toNumber(r.value[2])-1;o=ur(e,t)}else if(Jt(r)){o=r.value.map(t=>{return ye.isRational(t)?ye.toNumber(t-1):e.value.columnMap[t]})}}if(Jt(t)&&o.length===1){const n=o[0];let r=e.value.dtype[n];r+=t.dtype&R.COLUMNVECTOR?R.COLUMNVECTOR:R.ROWVECTOR;let l=r&R.RATIONAL?y:null;let i=t.value.map(t=>e.value.data[n][e.value.rowMap[t]]);if(a&&r&R.QUANTITY){const t=e.value.units[n]?e.value.units[n]:undefined;const r=pt(t,s);l=r.expos;i=i.map(e=>ye.multiply(ye.add(e,r.gauge),r.factor))}return{value:i,unit:l,dtype:r}}else if(l===i&&o.length===1){let t=e.value.dtype[o[0]];if(t&R.QUANTITY){t-=R.QUANTITY}const n=o[0];let r=e.value.data[n][l];let i=t&R.RATIONAL?y:null;if(a&&e.value.units[n]){const t=e.value.units[n]?e.value.units[n]:undefined;const a=pt(t,s);r=ye.multiply(ye.add(r,a.gauge),a.factor);i=a.expos}return{value:r,unit:i,dtype:t}}else if(l===i){const t=new Map;u=Object.create(null);for(let n=0;n<o.length;n++){const r=e.value.data[o[n]][l];const a=e.value.units[o[n]]?e.value.units[o[n]]:undefined;if(a){const e=pt(a,s);if(e.dtype&e.dtype===R.ERROR){return e}if(e&&!u[a]){u[a]=e}}t.set(e.value.columns[o[n]],{value:r,unit:a,dtype:e.value.dtype[o[n]]})}return{value:t,unit:u,dtype:R.DICT}}else if(o.length===1){const t=o[0];const n=e.value.units[t]?e.value.units[t]:null;const r=e.value.data[JSON].slice(l,i+1);return{value:r,unit:n,dtype:e.value.dtype[t]+R.COLUMNVECTOR}}else{const t=[];const r=[];const s=[];const a=[];const u=Object.create(null);const c=Object.create(null);for(let n=0;n<o.length;n++){t.push(e.columns[o[n]]);r.push(e.units[o[n]]);s.push(e.dtype[o[n]]);a.push(e.data[o[n]].slice(l,i+1));u[e.columns[n]]=n}return n({value:{data:a,columns:t,columnMap:u,rowMap:false,units:r,dtype:s},unit:c,dtype:R.DATAFRAME})}};const pr=new RegExp(ye.numberPattern+"$");const fr=(e,t)=>{const n=[];const r=[];const s=Object.create(null);const a=/^(?:[Nn]ame|[Ii]ndex)\s*,/.test(e)?Object.create(null):false;const l=[];const i=[];const o=Object.create(null);const u=/^ï»¿/.test(e)?3:0;let c=0;let p=0;let f=false;let d=1;const m=e=>{e=e.trim();if(c===0){r.push(e);s[e]=p}else if(c===1&&p===0&&/^[Uu]nit$/.test(e)){f=true;l.push("");d=2}else if(c===1&&p>0&&f){l.push(e);if(e.length>0){if(!o[e]){const n=pt(e,t);if(n){o[e]=n}else{return A("DF_UNIT",e)}}}}else{if(c===d){n.push([])}const t=e==="true"?true:e==="false"?false:pr.test(e)?ye.fromString(e):e===""?undefined:e;n[p].push(t);if(a&&p===0){a[e]=c-(f?2:1)}}};if(e.indexOf('"')===-1){const t=e.split(/\r?\n/g);for(const e of t){if(e.length>0){p=0;const t=e.split(",");for(const e of t){m(e.trim());p++}c+=1}}}else{let t="";let n=false;for(let r=u;r<e.length;r++){const s=e[r];const a=e[r+1];if(s==='"'&&n&&a==='"'){t+=s;++r;continue}if(s==='"'){n=!n;continue}if(s===","&&!n){m(t);t="";++p;continue}if(s==="\r"&&a==="\n"&&!n){m(t);t="";++c;p=0;++r;continue}if(s==="\n"&&!n){m(t);t="";++c;p=0;++r;continue}if(s==="\r"&&!n){m(t);t="";++c;p=0;++r;continue}t+=s}if(t.length>0){m(t)}}for(let e=0;e<n.length;e++){for(let t=0;t<n[0].length;t++){const r=n[e][t];if(r===undefined){continue}i.push(ye.isRational(r)?R.RATIONAL+(l.length>0&&l[e].length>0?R.QUANTITY:0):r==="true"||r==="false"?R.BOOLEAN:R.STRING);break}}return{value:{data:n,columns:r,columnMap:s,rowMap:a,units:l,dtype:i},unit:o,dtype:R.DATAFRAME}};const dr=e=>{const t=e.data[0].length;const n=e.data.length;let r="\\begin{array}{";r+=e.rowMap?"l|":"r|";for(let e=1;e<n;e++){r+="c "}r=r.slice(0,-1)+"}";if(!e.rowMap){r+="&"}for(let t=0;t<n;t++){r+=Xt(e.columns[t])+"&"}r=r.slice(0,-1)+" \\\\ ";if(e.units.length>0){if(!e.rowMap){r+="&"}for(let t=0;t<n;t++){let n="";if(e.units[t].length>0){const r=Xt("'"+e.units[t]+"'");n=r.replace("\\;\\, ","")}r+=n+"&"}r=r.slice(0,-1)+" \\\\ "}r+="\\hline";for(let s=0;s<t;s++){if(!e.rowMap){r+=String(s+1)+" &"}for(let t=0;t<n;t++){const n=e.data[t][s];r+=n===undefined?"&":e.dtype[t]&R.RATIONAL?ye.toString(n,Math.log10(Number(n[1]))).replace(",","{,}")+" &":e.dtype[t]&R.STRING?"\\text{"+Ke(n)+"}&":e.dtype[t]&R.BOOLEAN?"\\text{"+n+"}&":n+" &"}r=r.slice(0,-1)+" \\\\ "}r=r.slice(0,-3).trim();r+="\\end{array}";return r};const mr=e=>{const t=e.data[0].length;const n=e.data.length;let r="`";if(!e.rowMap){r+=","}for(let t=0;t<n;t++){r+=e.columns[t]+","}r=r.slice(0,-1)+"\n";if(e.units.length>0){if(!e.rowMap){r+=","}for(let t=0;t<n;t++){r+=e.units[t]+","}r=r.slice(0,-1)+"\n"}for(let s=0;s<t;s++){if(!e.rowMap){r+=String(s+1)+","}for(let t=0;t<n;t++){const n=e.data[t][s];r+=e.dtype[t]&R.RATIONAL?ye.toString(n,Math.log10(Number(n[1]))).replace(",","{,}")+",":n+","}r=r.slice(0,-1)+"\n"}r=r.slice(0,2).trim();r+="`";return r};const hr=Object.freeze({dataFrameFromCSV:fr,display:dr,displayAlt:mr,range:cr});const gr=/[\uD800-\uDBFF][\uDC00-\uDFFF][\uFE00\uFE01]?/g;const yr=(e,t)=>{if(t.dtype!==R.RATIONAL&&t.dtype!==R.RANGE){return A("STR_INDEX")}const n=s(gr,e);let r="";if(n.length===0){if(t.dtype===R.RATIONAL){r=e.charAt(ye.toNumber(t.value)-1)}else if(t.dtype===R.RANGE){const n=ye.toNumber(t.value[0]);const s=ye.toNumber(t.value[1]);const a=t.value[2]==="∞"?e.length:ye.toNumber(t.value[2]);if(s===1){r=e.slice(n-1,a)}else{for(let t=n-1;t<a;t+=s){r+=e.charAt(t)}}}}else{let s=0;let a=0;let l="";let i=0;let o=0;let u=0;if(t.dtype===R.RATIONAL){i=ye.toNumber(t.value);o=1;u=i}else{i=ye.toNumber(t.value[0]);o=ye.toNumber(t.value[1]);u=ye.toNumber(t.value[2])}let c=i;for(let t=0;t<n.length;t++){const i=n[t].index;l=e.slice(a,i);while(c<=u&&s+l.length>=c){r+=l[c-s-1];c+=o}if(c<=u&&s+l.length===c-1){r+=n[t].value;c+=o}if(c>u){return{value:r,unit:null,dtype:R.STRING}}s+=l.length+1;a=i+n[t].length}if(c>=s&&c<=u){l=e.slice(a);while(c<=u&&s+l.length>=c){r+=l[c-s-1];c+=o}}else{return A("BIGINDEX")}}return{value:r,unit:null,dtype:R.STRING}};const Rr=e=>{const[t,n,r,s,a]=e;const l=t.value;const i=n.value;const o={type:"line",data:{datasets:undefined},options:{responsive:true,legend:false,title:{display:true,text:r.value},tooltips:{mode:"index"},scales:{xAxes:[{type:"linear",display:true,scaleLabel:{display:true,labelString:s.value}}],yAxes:[{type:"linear",display:true,scaleLabel:{display:true,labelString:a.value}}]}}};let u;if(ye.isRational(i[0])){u=new Array(1);const e=new Array(l.length);for(let t=0;t<i.length;t++){e[t]={x:ye.toNumber(l[t]),y:ye.toNumber(i[t])}}u[0]={data:e,fill:false,borderColor:"#000",borderWiidth:2}}else{u=new Array(i.length);for(let e=0;e<i.length;e++){const t=new Array(l.length);for(let n=0;n<l.length;n++){t[n]={x:ye.toNumber(l[n]),y:ye.toNumber(i[e][n])}}u[e]={data:t,fill:false,borderColor:"#000",borderWiidth:2}}}o.data.datasets=u;return{value:o,unit:undefined,dtype:R.IMAGE}};const br=(e,t,n,r,s)=>{if(t){if(e.resulttemplate.indexOf("?")>-1||e.resulttemplate.indexOf("!")>-1||e.resulttemplate.indexOf("@")>-1||e.resulttemplate.indexOf("%")>-1){e.value=t.value;let a="";let l="";if(e.resulttemplate.indexOf("!")>-1){a="";l=""}else if(t.dtype===R.DICT){a=Yn.display(t.value,n,r);l=Yn.displayAlt(t.value,n,r)}else if(Qt(t)&&t.dtype&R.MAP){a=mn.displayMapOfVectors(t.value,n,r);l=mn.displayAltMapOfVectors(t.value,n,r)}else if(Qt(t)){a=mn.display(s?{value:t.value.plain,dtype:t.dtype}:t,n,r);l=mn.displayAlt(s?{value:t.value.plain,dtype:t.dtype}:t,n,r)}else if(t.dtype===R.DATAFRAME){a=hr.display(t.value);l=hr.displayAlt(t.value)}else if(t.dtype&R.MAP){a=or.display(t.value.plain?t.value.plain:t.value,n,r);l=or.displayAlt(t.value.plain?t.value.plain:t.value,n,r)}else if(t.dtype&R.STRING){a="\\text{"+Ke(t.value)+"}";if(t.unit){a=`${t.unit}{${a}}`}l=t.value}else if(t.dtype&R.BOOLEAN){a="\\text{"+t.value+"}";l=String(t.value)}else if(t.value.plain){a=Ue(t.value.plain,n,r);if(a.dtype&&a.dtype===R.ERROR){a="\\color{firebrick}\\text{"+a.value+"}";l=a.value}else{l=a.replace("{,}",",")}}else if(ye.isRational(t.value)){a=Ue(t.value,n,r);if(a.dtype&&a.dtype===R.ERROR){a="\\color{firebrick}\\text{"+a.value+"}";l=a.value}else{l=a.replace("{,}",",")}}else{a=t.value;l=a}e.resultdisplay=e.resulttemplate.replace(/(\? *\??|@@?|%%?)/,a);if(e.resulttemplate.indexOf("@")>-1){e.tex=e.resultdisplay;e.alt=e.altresulttemplate.replace(/@@?/,l)}else{e.tex=e.tex.replace(/[?%] *[?%]|[?%]/,a);e.alt=e.alt.replace(/[?%] *[?%]|[?%]/,l)}}}return e};const Ar=(...e)=>{for(let t=0;t<e.length;t++){if(e[t].dtype&R.MAP&&e[t].dtype&R.RATIONAL){return true}}return false};const Nr=e=>{return e.dtype<128?"scalar":mn.isVector(e)?"vector":e.dtype&R.MATRIX?"matrix":e.dtype&R.DICT?"dictionary":e.dtype&R.MAP&&(e.dtype&R.ROWVECTOR||e.dtype&R.COLUMNVECTOR)?"mapWithVectorValues":e.dtype&R.MAP?"map":"other"};const vr=(e,t)=>{let n=Nr(e);let r=Nr(t);let s=false;if(Qt(e)&&Qt(t)){s=true;if(n==="vector"){n=e.dtype&R.ROWVECTOR?"rowVector":"columnVector"}if(r==="vector"){r=t.dtype&R.ROWVECTOR?"rowVector":"columnVector"}}return[n,r,s]};const Tr=(e,t)=>{if(e.length<t+2){return undefined}return e[t+1]};const Er=(e,t)=>{return e.dtype===R.STRING?e.value:e.dtype===R.RATIONAL?Ue(e.value,"h15",t):Qt(e.dtype)?mn.displayAlt(e,"h15",t):e.dtype&R.MAP?or.displayAlt(e.value,"h15",t):e.value};const Or=(e,t,n,a,l)=>{const i=e.split(" ");const o=[];let u;for(let e=0;e<i.length;e++){const c=i[e];const p=c.charAt(0);if(p==="▸"){const e=new Array(2);const t=c.indexOf("/");e[0]=BigInt(c.slice(1,t));e[1]=BigInt(c.slice(t+1));o.push({value:e,unit:y,dtype:R.RATIONAL})}else if(p==="¿"){const n=c.substring(1);let r;if(n==="undefined"){r={value:undefined,unit:null,dtype:0}}else if(n==="T"&&Tr(i,e)==="^"&&o.length>0&&Qt(o[o.length-1])){r={value:"T",unit:null,dtype:R.RATIONAL}}else{const e=t[n];if(!e){return A("V_NAME",n)}r=Nn.fromAssignment(e,a);if(r.dtype===R.ERROR){return r}}o.push(r)}else if(p==='"'){o.push(Nn.fromString(c))}else if(p==="`"){o.push(hr.dataFrameFromCSV(c.slice(1,-1).trim(),{}))}else{switch(c){case"true":case"false":o.push({value:c==="true",unit:null,dtype:R.BOOLEAN});break;case"π":o.push({value:ye.pi,unit:y,dtype:R.RATIONAL});break;case"e":o.push({value:"e",unit:y,dtype:R.RATIONAL});break;case"ℏ":o.push({value:ye.hbar,unit:a?[2,1,-1,0,0,0,0,0,0]:y,dtype:R.RATIONAL});break;case"+":case"-":{const e=o.pop();const t=o.pop();const n=c==="+"?"add":"subtract";if(!(t.dtype&R.RATIONAL&(e.dtype&R.RATIONAL))){return A("NAN_OP")}if(a){if(!rt(t.unit,e.unit)){return A("UNIT_ADD")}}const[r,s,l]=vr(t,e);t.value=tr.binary[r][s][n](t.value,e.value);if(t.value.dtype&&t.value.dtype===R.ERROR){return t.value}t.dtype=tr.dtype[r][s](t.dtype,e.dtype);o.push(t);break}case"~":{const e=o.pop();if(!(e.dtype&R.RATIONAL)){return A("NAN_OP")}e.value=tr.unary[Nr(e)]["negate"](e.value);if(e.value.dtype&&e.value.dtype===R.ERROR){return e.value}o.push(e);break}case"×":case"·":case"*":case"⌧":{const e=o.pop();const t=o.pop();if(!(t.dtype&R.RATIONAL&&(e.dtype&R.RATIONAL||e.dtype===R.DICT))){return A("NAN_OP")}if(a){t.unit=t.dtype===R.DICT&&e.dtype===R.RATIONAL?t.unit:t.dtype===R.RATIONAL&&e.dtype===R.DICT?e.unit:t.unit.map((t,n)=>t+e.unit[n])}const[n,r,s]=vr(t,e);const l=s?{"×":"cross","·":"dot","*":"asterisk","⌧":"multiply"}[c]:"multiply";t.dtype=c==="*"||n==="scalar"||n==="map"||r==="scalar"||r==="map"?tr.dtype[n][r](t.dtype,e.dtype):c==="·"?R.RATIONAL:c==="×"?R.COLUMNVECTOR:mn.multResultType(t,e);t.value=tr.binary[n][r][l](t.value,e.value);if(t.value.dtype&&t.value.dtype===R.ERROR){return t.value}o.push(t);break}case"/":case"//":case"÷":case"///":case"∕":{const e=o.pop();const t=o.pop();if(!(t.dtype&R.RATIONAL&(e.dtype&R.RATIONAL))){return A("NAN_OP")}if(a){t.unit=t.unit.map((t,n)=>t-e.unit[n])}const[n,r,s]=vr(t,e);t.value=tr.binary[n][r]["divide"](t.value,e.value);t.dtype=tr.dtype[n][r](t.dtype,e.dtype);if(er(t.value,Nr(t))){return A("DIV")}o.push(t);break}case"^":{const e=o.pop();const t=o.pop();if(!(t.dtype&R.RATIONAL&(e.dtype&R.RATIONAL)||Qt(t)&&e.value==="T")){return A("NAN_OP")}if(a){const n=typeof e.unit==="number"?e.unit:ye.toNumber(e.value);t.unit=t.unit.map(e=>e*n)}if(mn.isVector(t)&&e.value==="T"){t.dtype+=t.dtype&R.ROWVECTOR?R.COLUMNVECTOR-R.ROWVECTOR:R.ROWVECTOR-R.COLUMNVECTOR}else{const[n,r,s]=vr(t,e);t.value=tr.binary[n][r]["power"](t.value,e.value);if(t.value.dtype&&t.value.dtype===R.ERROR){return t.value}t.dtype=tr.dtype[n][r](t.dtype,e.dtype)}o.push(t);break}case"&":{const e=o.pop();const t=o.pop();if(t.dtype===R.STRING&&t.dtype===R.STRING){const r=Er(t,n);const s=Er(e,n);o.push({value:r+s,unit:null,dtype:R.STRING})}else if(mn.isVector(t)){if(mn.isVector(e)){t.value.splice(t.value.length,0,e.value)}else{t.value.push(e.value)}o.push(t)}else if(mn.isVector(e)){e.value.unshift(t.value);o.push(e)}else{o.push({value:[t.value,e.value],unit:t.unit,dtype:t.dtype+R.ROWVECTOR})}break}case"√":case"∛":case"∜":{const e=c.charCodeAt(0)-8728;const t=[BigInt(1),BigInt(e)];const n=o.pop();if(!(n.dtype&R.RATIONAL)){return A("NAN_OP")}if(a){n.unit=n.unit.map(t=>t/e)}const r=Nr(n);n.value=tr.binary[r]["scalar"]["power"](n.value,t);if(n.value.dtype&&n.value.dtype===R.ERROR){return n.value}n.dtype=tr.dtype[r]["scalar"](n.dtype,R.RATIONAL);o.push(n);break}case"root":{const e=o.pop();const t=o.pop();if(!(t.dtype&R.RATIONAL&(e.dtype&R.RATIONAL))){return A("NAN_OP")}if(a){e.unit=e.unit.map(e=>e/Number(t.value[0]))}const n=ye.reciprocal(t.value);const r=Nr(t);t.value=tr.binary[r]["scalar"]["power"](e.value,n);if(t.value.dtype&&t.value.dtype===R.ERROR){return t.value}t.dtype=tr.dtype[r]["scalar"](t.dtype,R.RATIONAL);o.push(e);break}case".":{const e=o.pop();const n=o.pop();let r;if(n.dtype&R.MAP){r=or.valueFromMap(n,[e.value],a)}else if(n.dtype&R.DICT){r=Yn.toValue(n,[e.value],a)}else if(n.dtype&R.DATAFRAME){const s={value:ye.zero,unit:y,dtype:R.RATIONAL};r=hr.range(n,e,s,t)}else if((n.dtype===R.STRING||n.dtype&R.ARRAY)&&e.dtype===R.RATIONAL){const t=ye.toNumber(e.value);r={unit:n.unit,dtype:n.dtype};r.value=n.value.slice(t-1,t)}else if((n.dtype===R.STRING||n.dtype&R.ARRAY)&&e.dtype===R.RANGE){const t=e.value[0]-1;const s=e.value[1];const a=e.value[2]==="∞"?n.value.length:e.value[2];r={unit:n.unit,dtype:n.dtype};if(s===1){r.value=n.value.slice(t,a)}else{r.value=[];for(let e=t;e<a;e+=s){r.value.push(n.value[e])}}}else if(n.dtype===R.MODULE){r=Nn.fromAssignment(n.value[e.value],a)}if(r.dtype===R.ERROR){return r}o.push(r);break}case"[]":{const n=Number(i[e+1]);e+=1;const r=[];for(let e=0;e<n;e++){r.unshift(o.pop())}const s=o.pop();let l;if(s.dtype&R.DICT){for(let e=0;e<n;e++){r[e]=r[e].value}l=Yn.toValue(s,r,a)}else if(s.dtype&R.DATAFRAME){l=r.length===1?hr.range(s,r[0],undefined,t,a):hr.range(s,r[0],r[1],t,a)}else if(s.dtype&R.MAP){for(let e=0;e<n;e++){r[e]=r[e].value}l=or.valueFromMap(s,r,a)}else if(s.dtype&R.STRING){l=yr(s.value,r[0])}else if(s.dtype===R.MODULE){if(n===1){l=Nn.fromAssignment(s.value[r[0].value],a)}else{l=[];for(let e=0;e<r.length;e++){l.push(Nn.fromAssignment(s.value[r[e].value],a))}}}else{const e=r[0];const i=n===2?r[1]:{value:ye.zero,unit:y,dtype:R.RATIONAL};l=s.dtype&R.DATAFRAME?hr.range(s,e,i,t,a):mn.submatrix(s,e,i)}if(l.dtype===R.ERROR){return l}o.push(l);break}case"..":{const e=o.pop();const t=o.pop();if(t.dtype===R.RATIONAL){o.push({value:[t.value,ye.one,e.value],unit:null,dtype:R.RANGE})}else if(t.dtype===R.RANGE){t.value.splice(1,1);t.value.push(e.value);o.push(t)}else{return A("NAN_OP")}break}case"normal":case"uniform":case"lognormal":{const e=o.pop();const t=o.pop();break}case"!":{const e=o.pop();if(!(e.dtype&R.RATIONAL)){return A("NAN_OP")}if(a){if(!rt(e.unit,y)){return A("FACT")}}const t=e.value;if(!ye.isInteger(t)||ye.isNegative(t)){return A("FACT")}e.value=tr.unary[Nr(e)]["factorial"](e.value);if(e.value.dtype&&e.value.dtype===R.ERROR){return e.value}o.push(e);break}case"%":{const e=o.pop();if(!(e.dtype&R.RATIONAL)){return A("NAN_OP")}e.value=tr.unary[Nr(e)]["percent"](e.value);if(e.value.dtype&&e.value.dtype===R.ERROR){return e.value}o.push(e);break}case"|":case"‖":{const e=o.pop();if(!(e.dtype&R.RATIONAL)){return A("NAN_OP")}const t=c==="|"?"abs":"norm";e.value=tr.unary[Nr(e)][t](e.value);if(e.value.dtype&&e.value.dtype===R.ERROR){return e.value}e.dtype=R.RATIONAL;o.push(e);break}case"matrix":{const t=Number(i[e+1]);const n=Number(i[e+2]);e+=2;if(o[o.length-1].dtype===R.RANGE){o.push(mn.operandFromRange(o.pop().value))}else{o.push(mn.operandFromTokenStack(o,t,n))}break}case"abs":case"cos":case"sin":case"tan":case"acos":case"asin":case"atan":case"sec":case"csc":case"cot":case"asec":case"acsc":case"acot":case"exp":case"log":case"ln":case"log10":case"log2":case"cosh":case"sinh":case"tanh":case"sech":case"csch":case"coth":case"acosh":case"asinh":case"atanh":case"asech":case"acsch":case"acoth":case"Gamma":case"Γ":case"logGamma":case"logΓ":case"logFactorial":case"cosd":case"sind":case"tand":case"acosd":case"asind":case"atand":case"secd":case"cscd":case"cotd":case"asecd":case"acscd":case"acotd":case"chr":case"round":case"sign":{const e=o.pop();if(!(e.dtype&R.RATIONAL)){return A("UNREAL",c)}const t=a?Vn.functionExpos(c,[e]):y;if(t.dtype&&t.dtype===R.ERROR){return t}const n=e.dtype&R.MAP&&mn.isVector(e)?r(e.value,e=>e.map(e=>Vn.unary[c](e))):mn.isVector(e)?e.value.map(e=>Vn.unary[c](e)):Qt(e)?e.value.map(e=>e.map(e=>Vn.unary[c](e))):Ar(e)?r(e.value,e=>Vn.unary[c](e)):Vn.unary[c](e.value);if(n.dtype&&n.dtype===R.ERROR){return n}const s=c==="chr"?e.dtype-R.RATIONAL+R.STRING:e.dtype;o.push({value:n,unit:t,dtype:s});break}case"logn":case"atan2":case"hypot":case"gcd":case"rms":case"binomial":case"zeros":{const e=[];e.push(o.pop());e.unshift(o.pop());if(!(e[0].dtype&R.RATIONAL)){return A("")}if(!(e[1].dtype&R.RATIONAL)){return A("")}const t=a?Vn.functionExpos(c,e):y;if(t.dtype&&t.dtype===R.ERROR){return t}const[n,r]=_n("binary",c,e);o.push({value:n,unit:t,dtype:r});break}case"roundn":{const e=o.pop();const t=o.pop();if(!(t.dtype&R.RATIONAL)){return A("")}if(!(e.dtype&R.STRING)){return A("")}if(!/(?:f-?|r)\d+/.test(e.value)){return A("")}const n=e.value.charAt()==="f"?"roundFixed":"roundSignificant";const s=Number(e.value.slice(1));const a=t.dtype&R.MAP&&mn.isVector(t)?r(t.value,e=>e.map(e=>Vn.binary[n]([e,s]))):mn.isVector(t)?t.value.map(e=>Vn.binary[n]([e,s])):Qt(t)?t.value.map(e=>e.map(e=>Vn.binary[n]([e,s]))):Ar(t)?r(t.value,e=>Vn.binary[n]([e,s])):Vn.binary[n]([t.value,s]);if(a.dtype&&a.dtype===R.ERROR){return a}o.push({value:a,unit:t.unit,dtype:t.dtype});break}case"max":case"min":case"sum":case"product":case"range":case"mean":case"median":case"variance":case"stddev":{const t=Number(i[e+1]);e+=1;const n=[];for(let e=0;e<t;e++){const e=o.pop();if(!(e.dtype&R.RATIONAL)){return A("")}n.unshift(e)}const r=a?Vn.functionExpos(c,n):y;if(r.dtype&&r.dtype===R.ERROR){return A("")}const[s,l]=_n("reduce",c,n);o.push({value:s,unit:r,dtype:l});break}case"random":{const e=ye.fromNumber(Math.random());o.push({value:e,unit:y,dtype:R.RATIONAL});break}case"isNaN":{const e=o.pop();o.push({value:!(e.dtype&R.RATIONAL),unit:y,dtype:R.BOOLEAN});break}case"length":{const e=o.pop();const t=e.value;const n=mn.isVector(e)?t.length:e.dtype&R.MATRIX?t.length*t[0].length:e.dtype===R.STRING?t.length-s(/[\uD800-\uD8FF\uFE00\uFE01]/g,t).length:e.dtype&R.DICT||e.dtype&R.MAP?e.keys().value.length:0;o.push({value:ye.fromNumber(n),unit:y,dtype:R.RATIONAL});break}case"format":{const e=Ce(o.pop());if(e.dtype&&e.dtype===R.ERROR){return e}o.push(Ue(o.pop(),e));break}case"lerp":{const e=new Array(3);e[2]=o.pop();e[1]=o.pop();e[0]=o.pop();const t=Vn.lerp(e,a);if(t.dtype===R.ERROR){return t}o.push(t);break}case"transpose":o.push(mn.transpose(o.pop()));break;case"trace":o.push(mn.trace(o.pop()));break;case"fetch":return A("FETCH");case"lineChart":{const t=Number(i[e+1]);e+=1;const n=new Array(t);for(let e=t-1;e>=0;e--){n[e]=o.pop()}return Rr(n)}case"function":{const r=i[e+1];const s=Number(i[e+2]);e+=2;const u=new Array(s);for(let e=s-1;e>=0;e--){u[e]=o.pop()}let c;if(Tr(i,e)==="."){const t=o.pop().value;const s=t[r];if(s.dtype===R.ERROR){return s}if(s.isPrivate){return A("PRIVATE",r)}c=Mr(s,u,n,a,t);e+=1}else if(l&&l[r]){const e=l[r];c=Mr(e,u,n,a,l)}else if(t[r]&&t[r].dtype===R.MODULE){const e=t[r]["value"];c=Mr(e,u,n,a)}else{return A("BAD_FUN_NM",r)}if(c.dtype===R.ERROR){return c}o.push(c);break}case"dictionary":{const n=Number(i[e+1]);e+=1;o.push(Yn.fromTokenStack(o,n,t));break}case"=":case"==":case"<":case">":case"<=":case"≤":case">=":case"≥":case"≠":case"!=":case"∈":case"∉":case"⋐":{const e=o.pop();const t=o.pop();if(a&&!(t.dtype===R.STRING&&e.dtype===R.STRING)&&!(c==="≟"||c==="==")){if(!rt(t.unit,e.unit)){return A("UNIT_COMP")}}const[n,r,s]=vr(t,e);const l=t.dtype&R.BOOLEANFROMCOMPARISON?u.value:undefined;const i=t.value;const p=e.value;t.value=tr.relations[n][r].relate(c,i,p,l);if(t.value.dtype&&t.value.dtype===R.ERROR){return t.value}t.dtype=tr.dtype[n][r](t.dtype,e.dtype);if(t.dtype&R.RATIONAL){t.dtype+=R.BOOLEANFROMCOMPARISON-R.RATIONAL}else if(t.dtype&R.STRING){t.dtype+=R.BOOLEANFROMCOMPARISON-R.STRING}u=e;o.push(t);break}case"and":case"or":case"∧":case"∨":case"⊻":{const t=o.pop();const n=o.pop();if(!(n.dtype&R.BOOLEAN)||!(t.dtype&R.BOOLEAN)){return A("LOGIC",i[e])}const r={and:"and",or:"or","∧":"and","∨":"or","⊻":"xor"}[c];const[s,a,l]=vr(n,t);n.value=tr.binary[s][a][r](n.value,t.value);if(n.value.dtype&&n.value.dtype===R.ERROR){return n.value}n.dtype=tr.dtype[s][a](n.dtype,t.dtype);o.push(n);break}case"not":case"¬":{const e=o.pop();if(!(e.dtype&R.BOOLEAN)){return A("LOGIC",c)}e.value=tr.unary[Nr(e)]["not"](e.value);if(e.value.dtype&&e.value.dtype===R.ERROR){return e.value}o.push(e);break}case"cases":{const r=Number(i[e+1]);e+=1;const s=new Array(r);for(let e=r-1;e>=0;e--){s[e]=o.pop()}for(let u=0;u<r;u++){if((s[u].dtype&R.BOOLEAN)===0){return A("LOGIC","if")}if(s[u].value){const r=i[e+u+1].replace(/§/g," ");const s=Or(r,t,n,a,l);if(s.dtype===R.ERROR){return s}o.push(s);break}}e+=r;break}case"applyUnit":{const n=o.pop();if(!(n.dtype&R.RATIONAL)){return A("QUANT_NUM")}const r=i[e+1];e+=1;if(!a){n.unit=n.dtype&R.MAP?pt(r,t):r}else{const e=pt(r,t);if(e.dtype&&e.dtype===R.ERROR){return A("UNIT_NAME")}if(Qt(n)){n.unit=n.unit.map((t,n)=>t+e.expos[n]);n.value=mn.convertToBaseUnits(n,e.gauge,e.factor)}else if(n.dtype&R.MAP){n.unit=pt(n.unit)}else{n.unit=n.unit.map((t,n)=>t+e.expos[n]);n.value=ye.multiply(ye.add(n.value,e.gauge),e.factor)}}o.push(n);break}case"modulo":{const e=o.pop();const t=o.pop();if(!(t.dtype&R.RATIONAL&(e.dtype&R.RATIONAL))){return A("NAN_OP")}const[n,r,s]=vr(t,e);t.value=tr.binary[n][r]["modulo"](t.value,e.value);if(t.value.dtype&&t.value.dtype===R.ERROR){return t.value}t.dtype=tr.dtype[n][r](t.dtype,e.dtype);o.push(t);break}case"⎾⏋":case"⎿⏌":{const e=o.pop();if(!(e.dtype&R.RATIONAL)){return A("NAN_OP")}if(a){if(!rt(e.unit,y)){{return A("")}}}const t=c==="⎾⏋"?"ceil":"floor";e.value=tr.unary[Nr(e)][t](e.value);if(e.value.dtype&&e.value.dtype===R.ERROR){return e.value}o.push(e);break}case"()":{const e=[];e.unshift(o.pop());e.unshift(o.pop());if(a){if(!rt(e[0].unit,y)||!rt(e[1].unit,y)){return A("BINOM")}}const[t,n]=_n("binary","binomial",e);o.push({value:t,unit:y,dtype:n});break}case"\\blue":case"\\gray":case"\\green":case"\\orange":case"\\pink":case"\\purple":case"\\red":{const e=o.pop();if(e.dtype===R.STRING){e.unit=c}o.push(e);break}}}}const c=o.pop();if(o.length>0){return A("ERROR")}return c};const Ir=(e,t,n)=>{let r;let s=ye.increment(t);let a=0;if(e.dtype===R.RANGE){r=t;s=ye.add(t,n);a=R.RATIONAL}else if(e.dtype&R.STRING&&e.value[ye.fromNumber(t)]==="\ud835"){r=ye.fromNumber(e.value[t]+e.value[t+1]);s=ye.add(t,2);a=R.STRING}else{r=e.value[ye.fromNumber(t)];a=e.dtype&R.STRING?R.STRING:e.dtype&R.ROWVECTOR?e.dtype-R.ROWVECTOR:e.dtype&R.COLUMNVECTOR?e.dtype-R.COLUMNVECTOR:e.dtype&R.MATRIX?e.dtype-R.MATRIX:e.dtype-R.DICT}const l={value:r,unit:e.unit,dtype:a};return[l,s]};const Mr=(e,t,n,r,s)=>{if(e.dtype===R.ERROR){return e}const a=Object.create(null);for(let n=0;n<t.length;n++){a[e.parameters[n]]=t[n]}if(e.parameters.length>t.length){for(let n=t.length;n<e.parameters.length;n++){a[e.parameters[n]]={value:undefined,unit:null,dtype:0}}}let l=0;const i=[{type:"if",condition:true}];for(let t=0;t<e.statements.length;t++){const o=e.statements[t];const u=o.stype;switch(u){case"statement":{if(i[l].condition){const e=Or(o.rpn,a,n,r,s);if(e.dtype===R.ERROR){return e}if(o.name){if(Array.isArray(e)){const t=o.name.split(/, */g);for(let n=0;n<e.length;n++){a[t[n]]={value:e[n].value,unit:e[n].unit,dtype:e[n].dtype}}}else{a[o.name]=e}}}break}case"if":{if(i[l].condition){const e=Or(o.rpn,a,n,r,s);if(e.dtype===R.ERROR){return e}i.push({type:"if",condition:e.value,endOfBlock:o.endOfBlock});l+=1}else{t=o.endOfBlock}break}case"else if":{const e=Or(o.rpn,a,n,r,s);if(e.dtype===R.ERROR){return e}i[i.length-1].condition=e.value;break}case"else":i[l].condition=true;break;case"while":{if(i[l].condition){const e={type:"while",startStatement:t,rpn:o.rpn};const u=Or(o.rpn,a,n,r,s);if(u.dtype===R.ERROR){return u}e.condition=u.value;if(e.condition===true){i.push(e);l+=1}else{t=o.endOfBlock}}else{t=o.endOfBlock}break}case"for":{const e={type:"for",condition:true,startStatement:t};const u=o.rpn.split(" ");u.pop();e.dummyVariable=u.shift().slice(1);const c=Or(u.join(" "),a,n,r,s);e.index=c.dtype&R.RANGE?c.value[0]:ye.fromNumber(0);e.step=c.dtype&R.RANGE?c.value[1]:ye.fromNumber(0);e.endIndex=c.dtype&R.RANGE?c.value[2]:ye.fromNumber(c.value.length-1);const[p,f]=Ir(c,e.index,e.step);e.nextIndex=f;e.iterable=c;i.push(e);a[e.dummyVariable]=p;l+=1;break}case"end":{if(i[l].type==="if"&&t>=i[l].endOfBlock){i.pop();l-=1}else if(i[l].type==="if"&&i[l].condition){if(t<i[l].endOfBlock){t=i[l].endOfBlock}i.pop();l-=1}else if(i[l].type==="while"){const e=Or(i[l].rpn,a,n,r,s);if(e.dtype===R.ERROR){return e}i[l].condition=e.value;if(i[l].condition){t=i[l].startStatement}else{i.pop();l-=1}}else if(i[l].type==="for"){i[l].index=i[l].nextIndex;const e=ye.isRational(i[l].index)?ye.lessThanOrEqualTo(i[l].index,i[l].endIndex):i[l].index<=i[l].endIndex;if(e){const[e,n]=Ir(i[l].iterable,i[l].index,i[l].step);a[i[l].dummyVariable]=e;i[l].nextIndex=n;t=i[l].startStatement}else{i.pop();l-=1}}break}case"return":if(i[l].condition){if(o.rpn){const e=Or(o.rpn,a,n,r,s);return e}else{return{value:ye.zero,unit:y,dtype:R.RATIONAL}}}break;case"echo":if(i[l].condition){if(o.rpn){const e=Or(o.rpn,a,n,r,s);if(e.dtype===R.ERROR){return e}const t=e.dtype===R.RATIONAL?ye.toNumber(e.value):e.value;console.log(t)}}break;case"raise":if(i[l].condition){return{value:o.rpn,unit:null,dtype:R.ERROR}}break}}};const xr=(e,t)=>{e.value=null;e.resultDisplay="\\color{firebrick}\\text{"+t.value+"}";e.altResultDisplay=t.value;e.error=true;if(e.resulttemplate.indexOf("!")>-1){e.tex+="= "+e.resultDisplay;e.alt+=t.value}else if(e.resulttemplate.indexOf("@")>-1){e.tex=e.resulttemplate.replace(/@@?/,e.resultDisplay);e.alt=e.altresulttemplate.replace(/@@?/,e.altResultDisplay)}else{e.tex=e.tex.replace(/[?%] *[?%]|[?%]/,e.resultDisplay);e.alt=e.alt.replace(/[?%] *[?%]|[?%]/,e.altResultDisplay)}return e};const Lr=(e,t,n="1,000,000.")=>{e.tex=e.template;e.alt=e.altTemplate;const s=/\?\?|!!|%%|@@|¡¡/.test(e.entry);const a=t.format?t.format.value:"h15";if(e.tex.indexOf("〖")>-1){const n=Rn(e.tex,t,s);if(n.dtype&&n.dtype===R.ERROR){return xr(e,n)}else{e.tex=n}}let l;if(e.rpn){l=Or(e.rpn,t,n,s);if(l.dtype!==R.ERROR&&s&&(e.expos||l.unit&&Array.isArray(l.unit))){const t=e.expos?e.expos:y;if(!rt(l.unit,t)){const t=e.expos?"UNIT_RES":"UNIT_MISS";l=A(t)}}if(l.dtype===R.ERROR){return xr(e,l)}l.value=l.dtype===R.RATIONAL?ye.normalize(l.value):l.value;e.dtype=l.dtype;const i=e.factor&&(e.factor!==1||e.gauge);if(l.dtype&R.DICT){e.unit=l.unit}else if(s&&l.dtype&R.RATIONAL){if(!i&rt(l.unit,y)){e.factor=ye.one;e.gauge=ye.zero;e.expos=y}l.value={plain:Qt(l)?mn.convertFromBaseUnits({value:l.value,dtype:l.dtype},e.gauge,e.factor):l.dtype&R.MAP?or.convertFromBaseUnits(l.value,e.gauge,e.factor):ye.subtract(ye.divide(l.value,e.factor),e.gauge),inBaseUnits:l.value};e.dtype+=R.QUANTITY;e.unit=l.unit}else if(i){l.value={plain:l.value,inBaseUnits:Qt(l)&&l.dtype&R.MAP?r(l.value,t=>{return t.map(t=>ye.multiply(ye.add(t,e.gauge),e.factor))}):Qt(l)?mn.convertToBaseUnits({value:l.value,dtype:l.dtype},e.gauge,e.factor):l.dtype&R.MAP?r(l.value,t=>{return ye.multiply(ye.add(t,e.gauge),e.factor)}):ye.multiply(ye.add(l.value,e.gauge),e.factor)};e.dtype+=R.QUANTITY;e.unit=l.unit}else if(l.dtype&R.RATIONAL){e.unit=y}e=br(e,l,a,n,s)}return e};const Cr=new RegExp(ye.numberPattern);const Ur=(e,t,n)=>{if(/^[({[].* to /.test(e)){return[0,null,R.ERROR,""]}else if(e==="true"||e==="false"){return[Boolean(e),null,R.BOOLEAN,`\\mathord{\\text{${e}}}`]}else if(/^'.+'/.test(e)){const[t,r]=Xt(e,n,true);const s=Or(r,{},n,false,{});s.dtype+=R.QUANTITY;return[s.value,s.unit,s.dtype,t]}else if(/^\x22.+\x22/.test(e)){if(t==="format"){return Ce(e.slice(1,-1).trim())}else{const t=Xt(e,n);return[e,undefined,R.STRING,t]}}else if(/^[([]/.test(e)){const[t,r]=Xt(e,n,true);const s=Or(r,{},n,false,{});return[s.value,s.dtype,s.dtype,t]}else if(/^(\{)/.test(e)){const[t,r]=Xt(e,n,true);const s=Or(r,{},n,false,{});return[s.value,s.unit,s.dtype,t]}else if(e.charAt(0)==="`"){const t=e.indexOf("`",1);e=e.slice(1,t).trim();const n=hr.dataFrameFromCSV(e,{});return[n.value,undefined,R.DATAFRAME,hr.display(n.value)]}else if(e.match(Cr)){const t=Xt(e,n);return[ye.fromString(e),y,R.RATIONAL,t]}else{return[0,null,R.ERROR,""]}};const Sr=(e,t)=>{if(e.name&&e.value&&e.dtype&R.QUANTITY){const r=e.unit===undefined?{name:"",factor:ye.one,gauge:ye.zero,log:"",expos:y}:typeof e.unit==="string"?pt(e.unit,t):e.unit;if(r.dtype&&r.dtype===R.ERROR){e.tex+=" \\color{firebrick}{\\text{"+r.value+"}}";e.alt+=r.value;return e}e.expos=r.expos;if(ye.isRational(e.value)){e.value={plain:e.value,inBaseUnits:ye.multiply(ye.add(e.value,r.gauge),r.factor)}}else if(Qt(e)){e.value={plain:e.value,inBaseUnits:mn.convertToBaseUnits(e,r.gauge,r.factor)}}else if(e.dtype&R.MAP){const t=n(e.value);const s=or.convertToBaseUnits(t,r.gauge,r.factor);e.value={plain:t,inBaseUnits:s}}else if(e.dtype&R.DICT){e.unit={};for(const n in e.value){if(!e.unit[n.unit]){e.unit[n.unit]=pt(n.unit,t)}}}}if(e.rpn&&!e.value){if(e.unit){const n=e.unit?pt(e.unit,t):{factor:1,gauge:0,expos:y};e.factor=n.factor;e.gauge=n.gauge;e.expos=n.expos}}};const wr=/^(([A-Za-zıȷ\u0391-\u03C9\u03D5\u212C\u2130\u2131\u210B\u2110\u2112\u2133\u211B\u212F\u210A\u2113\u2134]|\uD835[\uDC00-\udc33\udc9c-\udccf])([A-Za-z0-9_\u0391-\u03C9\u03D5\u212C\u2130\u2131\u210B\u2110\u2112\u2133\u211B\u212F\u210A\u2113\u2134\uD835\uDC00-\udc33\udc9c-\udccf]*|[\u0300-\u0308\u030A\u030C\u0332\u20d0\u20d1\u20d6\u20d7\u20e1]))′*\s*=/;const Dr=/^(if|else|else if|return|raise|while|for|break|echo)\b/;const Br=/^(?:private +)?function (?:[A-Za-zıȷ\u0391-\u03C9\u03D5\u210B\u210F\u2110\u2112\u2113\u211B\u212C\u2130\u2131\u2133]|(?:\uD835[\uDC00-\udc33\udc9c-\udcb5]))[A-Za-z0-9_\u0391-\u03C9\u03D5\u0300-\u0308\u030A\u030C\u0332\u20d0\u20d1\u20d6\u20d7\u20e1]*′*\(/;const kr=/"[^"]*"|`[^`]*`|'[^']*'|#|[^"`'#]+/g;const Vr=e=>{const t=s(kr,e);for(let n=0;n<t.length;n++){if(t[n].value==="#"){e=e.slice(0,t[n].index);break}}return e.trim()};const _r=(e,t)=>{const n={};let r=e.split(/\r?\n/g);let s=0;while(s<r.length){let e=0;let t=r[s].indexOf('"');while(t>-1){e+=1;t=r[s].indexOf('"',t+1)}if(e%2!==0){r[s]=r[s]+r[s+1];r=r.slice(0,s+1).concat(r.slice(s+2,r.length))}else{s+=1}}for(s=0;s<r.length;s++){const e=Vr(r[s]);if(e.length===0){continue}if(Br.test(e)){const[e,a]=Gr(r,t,s);n[e.name]=e;s=a}else if(wr.test(e)){const a=e.indexOf("=");const l=e.slice(0,a).trim();const i=/^`/.test(e.slice(a+1).trim());let[o,u]=qr(r,s,i);o=o.slice(a+1).trim();const[c,p,f,d]=Ur(o,l,t);const m={name:l,value:c,unit:p,dtype:f};Sr(m,{});n[l]={value:m.value,unit:m.unit,expos:m.expos,dtype:m.dtype};s=u}}return{value:n,unit:null,dtype:R.MODULE}};const qr=(e,t,n)=>{let r="";for(let s=t;s<e.length;s++){const t=Vr(e[s]);if(t.length===0){continue}r+=t;if(n&&t.slice(-1)==="`"){return[r,s]}if(n||/[{([,;]$/.test(t)){continue}if(e.length>s+1&&/^\s*[+\-)\]}]/.test(e[s+1])){continue}return[r,s]}};const Fr=(e,t,n)=>{for(let r=n+1;r<t.length;r++){const n=t[r].trim();if(n.length===0){continue}e+="\n"+n;if(n.slice(-1)==="`"){return[e,r]}}};const Gr=(e,t,n)=>{const r=Vr(e[n]);const s=r.indexOf("function");const a=r.indexOf("(");const l=r.slice(s+8,a).trim();const i=/^private /.test(r);const o=r.slice(a+1,-1).trim();const u=o.length===0?[]:o.split(/, */g);const c={name:l,isPrivate:i,parameters:u,statements:[]};let p=1;let f=/^ */.exec(e[n])[0].length;const d=[];d.push(f);let m=true;const h=[];let g="";let y=false;let R="";let b=0;let N="";let v=false;for(let r=n+1;r<e.length;r++){let n=Vr(e[r]);if(n.length===0){continue}if(y){n=R.slice(-1)===";"&&"})]".indexOf(n.charAt(0))>-1?R.slice(0,-1).trim()+n:R+n}else{f=/^ */.exec(e[r])[0].length}if(/[{([,;]$/.test(n)){y=true;R=n;continue}else if(e.length>r+1&&/^\s*[+\-)\]}]/.test(e[r+1])){y=true;R=n;continue}if(f<b){while(f<d[p]){c.statements.push({name:"",rpn:"",stype:"end"});d.pop();p-=1;if(h.length>0){const e=h[h.length-1];if(f<e.indent||(f===e.indent&&e.type==="while"||e.type==="for"||e.type==="if"&&!/^\s*else\b/.test(n))){c.statements[e.statementNum].endOfBlock=c.statements.length-1;h.pop()}}}if(p===0){return[c,r-1]}}if(m){d.push(f);m=false}const s=Dr.exec(n);if(s){N=s[0];g=n.slice(N.length).trim();if(g.charAt(0)==="`"){[g,r]=Fr(g,e,r)}if("ifwhileforelse if".indexOf(N)>-1){p+=1;m=true}}else{if(wr.test(n)){const t=n.indexOf("=");N=n.slice(0,t-1).trim();g=n.slice(t+1).trim();if(g.charAt(0)==="`"){[g,r]=Fr(g,e,r)}v=true}else{return[A("FUNC_LINE",l+", line "+(r+1)),r]}}let a="";if(g){[,a]=Xt(g,t,true)}const i=v?"statement":N;c.statements.push({name:N,rpn:a,stype:i});if(i==="if"||i==="while"||i==="for"){h.push({indent:f,type:i,statementNum:c.statements.length-1})}v=false;y=false;R="";b=f;N="";g=""}while(d.length>0){c.statements.push({name:"",rpn:"",stype:"end"});f=d.pop();if(h.length>0){const e=h[h.length-1];if(f<e.indent){c.statements[e.statementNum].endOfBlock=c.statements.length-1;h.pop()}}}return[c,e.length]};const Pr=/[+\-×·*∘⌧/^%‰&√!¡|‖&=<>≟≠≤≥∈∉⋐∧∨⊻¬]|\xa0(modulo|\\atop|root|\?{}|%|⎾⏋|⎿⏌|\[\]|\(\))\xa0/;const zr=/^(!{1,2}|[$$£¥\u20A0-\u20CF]?(\?{1,2}|@{1,2}|%{1,2})[^=!(?@%!{})]*)$/;const Yr=/^[$£¥\u20A0-\u20CF]/;const Wr=/^(?:[A-Za-zıȷ\u0391-\u03C9\u03D5\u210B\u210F\u2110\u2112\u2113\u211B\u212C\u2130\u2131\u2133]|(?:\uD835[\uDC00-\udc33\udc9c-\udcb5]))[A-Za-z0-9_\u0391-\u03C9\u03D5\u0300-\u0308\u030A\u030C\u0332\u20d0\u20d1\u20d6\u20d7\u20e1]*′*$/;const Hr=/^(π|true|false|root|if|else|and|or|otherwise|modulo|for|while|break|return|raise)$/;const $r=(e,t)=>{const n=Xt(e,t);return{entry:e,tex:n,alt:e}};const jr=(e,t="1,000,000.")=>{let n="";let r="";let s="";let a=false;let l=false;let i=false;let o=false;let u=0;let c="";let p="";let f="";let d="";let m="";let h=false;let g;let y;let b;let A="";if(Br.test(e)){const n=e.indexOf("function");const r=e.indexOf("(");m=e.slice(n+8,r).trim();const s={entry:e,name:m,value:_r(e,t).value[m],dtype:R.MODULE,error:false};return s}A=e;const N=A.lastIndexOf("=")+1;if(N>1){r=A.substring(0,N-1).trim();s=A.substring(N).trim();if(zr.test(s)){a=true;l=s.indexOf("!")>-1;i=s.indexOf("@")>-1;o=s.indexOf("%")>-1;u=r.indexOf("=")+1;if(u){n=r.slice(0,u-1).trim();c=r.substring(u).trim();if(n.indexOf(",")>-1){const e=n.split(",");for(let n=0;n<e.length;n++){const r=e[n].trim();if(Hr.test(r)||!Wr.test(r)){return $r(A,t)}}m=e.map(e=>e.trim())}else{if(Wr.test(n)&&!Hr.test(n)){m=n}else{c=r}}}else{c=r}}else if(Wr.test(r)&&!Hr.test(r)){m=r;if(s===""){const e=Xt(A,t);return{entry:A,tex:e,alt:A}}}else{return $r(A,t)}}else{return $r(A,t)}if(c.length>0){if(/^\s*fetch\(/.test(c)){a=false;p=""}else{[p,f]=Xt(c,t,true);if(l||i||p.indexOf("〖")===-1||/\u00a0for\u00a0/.test(f)){p=""}else if(o){p=""}else{if(Pr.test(" "+f+" ")){p="{\\color{blue}"+p+"}"}else{p=""}}}}if(Yr.test(s)){h=true;y=s.charAt(0)}if(l){d="!"}else if(a){g=null;if(!h){y=s.replace(/[?@%']/g,"").trim()}if(y){d=Xt("'"+s.replace(/'/g,"").trim()+"'",t)}else{d=Xt(s,t).replace(/\\%/g,"%")}d=d.replace(/\\text\{(\?\??|%%?)\}/,"$1")}else{[g,y,b,d]=Ur(s,m,t);if(b===R.ERROR){return $r(A,t)}}let v="";let T="";if(!i){v=Xt(r,t);T=r;if(p.length>0&&!o){v+=" = "+p}if(!l){v+=" = "+d;T+=" = "+s}}const E={entry:A,template:v,altTemplate:T,resultdisplay:d,dtype:b,error:false};if(m){E.name=m}if(a){E.resulttemplate=d;E.altresulttemplate=s}else{E.tex=v;E.alt=T}if(f){E.rpn=f}if(g){E.value=g}if(y){E.unit=y}return E};const Kr=/^(?:[A-Za-zıȷ\u0391-\u03C9\u03D5\u210B\u210F\u2110\u2112\u2113\u211B\u212C\u2130\u2131\u2133]|(?:\uD835[\uDC00-\udc33\udc9c-\udcb5]))[A-Za-z0-9_\u0391-\u03C9\u03D5\u0300-\u0308\u030A\u030C\u0332\u20d0\u20d1\u20d6\u20d7\u20e1]*′* *= *`/;const Zr=/^(?:[A-Za-zıȷ\u0391-\u03C9\u03D5\u210B\u210F\u2110\u2112\u2113\u211B\u212C\u2130\u2131\u2133]|(?:\uD835[\uDC00-\udc33\udc9c-\udcb5]))[A-Za-z0-9_\u0391-\u03C9\u03D5\u0300-\u0308\u030A\u030C\u0332\u20d0\u20d1\u20d6\u20d7\u20e1]*′* *= *fetch\(/;const Xr=/^Error while reading file. Status Code: \d*$/;const Qr=(e,t)=>{if(!e){return false}const n=t[e];return n&&(n.dtype===R.MODULE||n.dtype===R.DATAFRAME)};const Jr=e=>{const t=e.dtype===R.MODULE?"IMMUT_UDF":"IMMUT_DF";const n=A(t,e.name).value;e.dtype=R.ERROR;e.tex+=` = \\red{\\text{${n}}}`;e.alt=" = "+n;e.value=null;return e};function es(e,t){if(!Array.isArray(t.name)){e[t.name]=t}else if(t.value===null){for(let n=0;n<t.name.length;n++){e[t.name[n]]={value:null}}}else if(t.dtype===R.DICT){if(t.name.length!==t.value.size);else{let r=0;for(const s of t.value.values()){const a=n(s);if(typeof a.unit==="string"){const e=a.value;const n=t.unit[a.unit];const r=ye.multiply(ye.add(e,n.gauge),n.factor);a.value={plain:e,inBaseUnits:r};a.expos=n.expos;a.resultdisplay=Xt("'"+Ue(e)+" "+a.unit+"'")}else if(ye.isRational(a.value)){a.expos=a.unit;a.resultdisplay=Xt(Ue(a.value))}else{a.resultdisplay=a.value}e[t.name[r]]=a;r+=1}}}}const ts=(e,t,r,s,a,l,i,o)=>{const u=e.state.doc;const c=u.attrs.decimalFormat;u.nodesBetween(0,u.content.size,function(e,s){if(e.type.name==="calculation"){const u=e.attrs.entry;const p=r?Br.test(u)||Kr.test(u):s===a?false:e.attrs.name&&e.attrs.dtype&&(e.attrs.dtype===R.MODULE||e.attrs.dtype===R.DATAFRAME);if(p){const a=r?jr(u,c):n(e.attrs);if(r&&Qr(a.name,l)){if(s in o);else{e.attrs=Jr(a);i.replaceWith(s,s+1,t.createAndFill(a))}}else{if(r){i.replaceWith(s,s+1,t.createAndFill(a))}es(l,a);o.push(s)}}}});if(!r&&(s.name||s.rpn)){u.nodesBetween(0,a,function(e){if(e.type.name==="calculation"){const t=e.attrs;if(t.name&&!t.isFetch&&!(t.dtype===R.MODULE||t.dtype===R.DATAFRAME)){es(l,t)}}});if(!Zr.test(s.entry)){let e=n(s);Sr(e,l);if(e.rpn){e=Lr(e,l,c)}if(e.name){es(l,e)}i.replaceWith(a,a+1,t.createAndFill(e))}}const p=r?0:a+1;u.nodesBetween(p,u.content.size,function(e,s){if(e.type.name==="calculation"){const a=e.attrs.dtype;if(!(e.attrs.isFetch||a===R.MODULE||a===R.DATAFRAME)){const a=e.attrs.entry;let o=r?jr(a,c):n(e.attrs);if(!Qr(o.name,l)){if(r){Sr(o,l)}if(o.rpn){o=Lr(o,l,c)}if(o.name){es(l,o)}if(r||o.rpn){i.replaceWith(s,s+1,t.createAndFill(o))}}}}});if(!r){i.setSelection(e.state.selection.constructor.near(i.doc.resolve(a+1)))}e.dispatch(i);e.focus()};const ns=e=>{const t=e.replace(/^[^()]+\("?/,"");return t.replace(/"?\).*$/,"").trim()};const rs=(e,t,n,r)=>{const s=Object.create(null);s.entry=e;s.name=e.replace(/=.+$/,"").trim();s.tex=Xt(e.replace(/s*=\s*(!{1,2}|¡{1,2})\s*$/,""),r);s.alt=e;if(t==="File not found."||Xr.test(t)){s.dtype=R.ERROR;s.tex+=` = \\red{\\text{${t}}}`;s.alt=" = "+t;s.value=null;return s}const a=/\.csv/i.test(e)?hr.dataFrameFromCSV(t,n):s.name==="currencies"?{value:JSON.parse(t).rates,unit:y,dtype:R.MAP}:_r(t,r);s.value=a.value;s.dtype=a.dtype;s.unit=a.unit;s.isFetch=true;return s};const ss=(e,t,n,r,s,a,l,i)=>{const o=e.state.doc;const u=o.attrs.inDraftMode;const c=o.attrs.decimalFormat;Promise.all(l.map(e=>fetch(e,{method:"GET",headers:{"Content-Type":"text/plain;charset=UTF-8"},mode:"cors"}))).then(e=>{return Promise.all(e.map(e=>{if(e.status!==200&&e.status!==0){return e.status===404?"File not found.":"Error while reading file. Status Code: "+e.status}return e.text()}))}).then(l=>{const p=e.state.tr;const f=[];for(let e=0;e<l.length;e++){const s=i[e];const d=n?o.nodeAt(s).attrs.entry:r.entry;const m=rs(d,l[e],a,c);m.inDraftMode=u;p.replaceWith(s,s+1,t.createAndFill(m));if(m.name){es(a,m);if(m.dtype===R.MODULE||m.dtype===R.DATAFRAME){f.push(s)}}}ts(e,t,n,r,s,a,p,f)})};function as(e,t,n=false,r,s){const a=e.state.doc;const l=Object.create(null);l.format={value:"h15"};const i=[];const o=[];if(!n){const e=r.entry;if(Zr.test(e)){i.push(ns(e));o.push(s)}}else{a.nodesBetween(0,a.content.size,function(e,t){if(e.type.name==="calculation"&&!e.attrs.value){const n=e.attrs.entry;if(Zr.test(n)){i.push(ns(n));o.push(t)}}else if(e.attrs.isFetch){es(l,e.attrs)}})}if(i.length>0){ss(e,t,n,r,s,l,i,o)}else{const a=e.state.tr;ts(e,t,n,r,s,l,a,[])}}const ls=(e,t={},r=false,s="1,000,000.")=>{let a=jr(e,s);Sr(a,t);if(a.rpn){a=Lr(n(a),t,s)}if(a.name){es(t,a)}return r?a.alt:a.tex};function is(e,t,n,r){const s=document.createElement("input");s.type="file";s.accept=".hurmet";s.onchange=(e=>{const t=s.files[0];const a=new FileReader;a.onload=function(e){const t=JSON.parse(e.target.result.substring(3));n.dispatch(n.state.tr.replaceWith(0,n.state.doc.content.size,r.nodeFromJSON(t)));as(n,r.nodes.calculation,true)};a.readAsText(t)});s.click()}e.autoCorrect=g;e.calculate=ls;e.evaluate=Lr;e.parse=Xt;e.prepareResult=Sr;e.prepareStatement=jr;e.readHurmetFile=is;e.updateCalculations=as;Object.defineProperty(e,"__esModule",{value:true})});