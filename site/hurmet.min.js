(function(e,t){typeof exports==="object"&&typeof module!=="undefined"?module.exports=t():typeof define==="function"&&define.amd?define(t):(e=e||self,e.hurmet=t())})(this,(function(){"use strict";const t=/([!?:<>\-~/_]=| \.|~~|\+-|-\+|<-->|<->|<>|<--|<-|-->|->|=>|-:|\^\^|\|\||\/\/\/|\b(bar|hat|vec|tilde|dot|ddot|ul)|\b(bb|bbb|cc|ff|ss) [A-Za-z]|\\?[A-Za-z]{2,}|\\c|\\ |\\o|root [234]|<<|>>|\^-?[0-9]+|\|\|\||\/_|''|""|00)\s$/;const n={acute:"́",bar:"̅",breve:"̆",check:"̌",dot:"̇",ddot:"̈",grave:"̀",hat:"̂",harpoon:"⃑",leftharpoon:"⃐",leftrightvec:"⃡",leftvec:"⃖",ring:"̊",tilde:"̃",vec:"⃗",ul:"̲"};const r={alpha:"α",beta:"β",chi:"χ",delta:"δ",Delta:"Δ",epsilon:"ε",varepsilon:"ɛ",eta:"η",gamma:"γ",Gamma:"Γ",iota:"ι",kappa:"κ",lambda:"λ",Lambda:"Λ",mu:"μ",nu:"ν",omega:"ω",Omega:"Ω",phi:"ϕ",varphi:"φ",Phi:"Φ",pi:"π",Pi:"Π",psi:"ψ",Psi:"Ψ",rho:"ρ",sigma:"σ",Sigma:"Σ",tau:"τ",theta:"θ",vartheta:"ϑ",Theta:"Θ",upsilon:"υ",xi:"ξ",Xi:"Ξ",zeta:"ζ",prime:"ʹ",ee:"ε",ll:"λ",sqrt:"√","root 2":"√","root 3":"∛","root 4":"∜",AA:"∀",CC:"ℂ",EE:"∃",HH:"ℍ",NN:"ℕ",QQ:"ℚ",RR:"ℝ",ZZ:"ℤ",OO:"𝒪",ii:"√(-1)",oo:"∞",ooo:"°",not:"¬","-:":"÷","\\ ":"˽","\\c":"¢","\\cdots":"⋯","\\vdots":"⋮","\\ddots":"⋱","\\floor":"⎿⏌","\\ceil":"⎾⏋",xx:"×","\\int":"∫","\\iint":"∬","\\oint":"∮","\\sum":"∑",nn:"∩",nnn:"⋂",uu:"∪",uuu:"⋃","\\del":"∂","\\grad":"∇","\\hbar":"ℏ","\\ell":"ℓ","\\nabla":"∇","\\alef":"ℵ","\\subset":"⊂","\\supset":"⊃","\\Subset":"⋐","\\forall":"∀","\\therefore":"∴","\\mapsto":"↦","\\checkmark":"✓",bar:"ˉ",dot:"˙",ddot:"¨",hat:"ˆ",tilde:"˜",vec:" ⃗","\\land":"∧","\\lor":"∨","\\not":"¬","\\notin":"∉","\\euro":"€","\\pound":"£","\\yen":"¥","\\o":"ø","^^":"∧",vv:"∨",vvv:"⋁","\\xor":"⊻","\\in":"∈","!=":"≠","<>":"≠",":=":"≔","?=":"≟","<=":"≤",">=":"≥","-=":"≡","~=":"≅","_=":"≡","~~":"≈","+-":"±","-+":"∓","<<":"⟨",">>":"⟩","///":"∕","<->":"↔","<-":"←","<--":"⟵","--\x3e":"⟶","->":"→","=>":"⇒","<--\x3e":"\\xrightleftarrows","\\circ":"∘","\\otimes":"⊗","|||":"¦","||":"‖","/_":"∠"," .":"·","''":"′",'""':"″"};const s={"^":"","-":"⁻",2:"²",3:"³",1:"¹",0:"⁰",4:"⁴",5:"⁵",6:"⁶",7:"⁷",8:"⁸",9:"⁹","(":"",")":""};const a=e=>{let t="";for(const n of e){t+=s[n]}return t};const l={bb:[56255,56249],bbb:[56567,56561],cc:[56411,56405],ff:[56671,56665]};const i=[56634,56639,56645,56647,56648,56649,56657,56477,56480,56481,56483,56484,56487,56488,56493,56506,56508,56513,56516];const o={C:"ℂ",H:"ℍ",N:"ℕ",P:"ℙ",Q:"ℚ",R:"ℝ",Z:"ℤ"};const u={B:"ℬ",E:"ℰ",F:"ℱ",H:"ℋ",I:"ℐ",L:"ℒ",M:"ℳ",R:"ℛ",e:"ℯ",g:"ℊ",l:"ℓ",o:"ℴ"};const c=e=>{const t=e.indexOf(" ");const n=e.substring(t+1);const r=e.substring(0,t);switch(r){case"bb":case"bbb":case"cc":case"ff":{const e=n.charCodeAt(0);let t="";if(e<65||e>122){return null}const s=e<91?0:1;if(r==="cc"&&s&&e!==108){return null}if(e>90&&r==="bbb"){return null}const a=e+l[r][s];if(i.includes(a)){t=r==="bbb"?o[n]:u[n]}else{t="\ud835"+String.fromCharCode(a)}return t}default:return null}};const p=(e,s,l)=>{if(s.length>0&&s.slice(-1)===" "){const i=t.exec(s);if(i){const t=i[0].slice(0,-1);let o;const u=n[t];if(u){const t=s.slice(0,-(i[0].length+1))+u;e.updateCode(t+l);const n=t.length;e.restore({start:n,end:n,dir:undefined})}else{o=r[t];if(!o){if(t.charAt(0)==="^"){o=a(t)}else{if(t.indexOf(" ")>0){o=c(t)}}}}if(o){const t=s.slice(0,-i[0].length)+o;e.updateCode(t+l);const n=t.length;e.restore({start:n,end:n,dir:undefined})}}}};const f=Object.freeze([0,0,0,0,0,0,0,0]);const d=Object.freeze({NULL:0,RATIONAL:1,COMPLEX:2,BOOLEAN:4,FROMCOMPARISON:8,BOOLEANFROMCOMPARISON:12,STRING:16,QUANTITY:32,DATE:64,RANGE:128,TUPLE:256,MAP:512,ROWVECTOR:1024,COLUMNVECTOR:2048,MATRIX:4096,DATAFRAME:8192,MODULE:16384,ERROR:32768,UNIT:65536,DRAWING:131072,RICHTEXT:262144});const m=(e,t)=>{if(t.length===0){return false}let n=0;let r=0;let s=t.length-1;while(r<s){n=Math.floor((r+s)/2);if(e>t[n]){r=n+1}else{s=n}}return e===t[r]};const h=e=>{if(null==e||"object"!=typeof e){return e}if(e instanceof Date){return(new Date).setTime(e.valueOf())}if(Array.isArray(e)){const t=[];for(let n=0,r=e.length;n<r;n++){t[n]=h(e[n])}return t}if(e instanceof Map){const t=new Map;for(const[n,r]of e.entries()){t.set(n,h(r))}return t}if(typeof e==="object"){const t=Object.create(null);Object.entries(e).forEach((([e,n])=>{t[e]=h(n)}));return t}throw new Error("Unable to clone obj! Its type isn't supported.")};const g=(e,t)=>{const n=new Map;for(const[r,s]of e.entries()){n.set(r,t(s))}return n};const y=(e,t)=>{if(e.constructor!==RegExp){throw new Error("not RegExp")}const n=[];let r=null;if(e.global){while(r=e.exec(t)){n.push({value:r[0],index:r.index,length:r[0].length})}}else if(r=e.exec(t)){n.push({value:r[0],index:r.index,length:r[0].length})}return n};const b={"̀":"`","́":"'","̂":"^","̃":"~","̄":"=","̅":"=","̆":"u","̇":".","̈":'"',"̊":"r","̌":"v"};const R=/[#$&%_~^]/g;const v=/[\u0300-\u0308\u030A\u030c]/g;const A=e=>{if(e.length>1){let t=y(R,e);let n=t.length;if(n>0){for(let r=n-1;r>=0;r--){const n=t[r];const s=n.index;if(n.value==="~"){e=e.slice(0,s)+"\\textasciitilde "+e.slice(s+1)}else if(n.value==="^"){e=e.slice(0,s)+"\\textasciicircum "+e.slice(s+1)}else if(s===0){e="\\"+e}else{const t=e.substr(s-1,1);if(t!=="\\"){e=e.slice(0,s)+"\\"+e.slice(s)}}}}t=y(v,e);n=t.length;if(n>0){for(let r=n-1;r>=0;r--){const n=t[r];const s=n.index;if(s>0){e=e.slice(0,s-1)+"\\"+b[n.value]+e.slice(s-1,s)+e.slice(s+1)}}}}return e};const N=e=>{switch(e){case"²":return"2";case"³":return"3";case"⁻":return"-";case"¹":return"1";case"⁰":return"0";default:return String.fromCharCode(e.charCodeAt(0)-8256)}};const O=/^[ \r\n\f]+/;const E=/[ \r\n\f]+$/;const x=e=>e.replace(O,"").replace(E,"");const T=/^(\*|·|\.|-[A-Za-z])/;const I=/[⁰¹²³\u2074-\u2079⁻]/;const M=e=>{let t=" {\\text{";let n=false;for(let r=0;r<e.length;r++){let s=e.charAt(r);if(I.test(s)){s=N(s)}if(T.test(e.slice(r))){t+="}\\mkern1mu{\\cdot}\\mkern1mu\\text{"}else if(/[0-9-]/.test(s)){s=s==="-"?"\\text{-}":s;if(n){t+=s}else{t+="}^{"+s;n=true}}else if(s==="^"){t+="}^{";n=true}else if(n){t+="}\\text{"+s;n=false}else if(s==="$"){t+="\\$"}else{t+=s}}return t+"}}"};const L=Object.freeze({EN:{ERROR:"Error. Hurmet does not understand the expression.",ERR_FUNC:"@",BAD_FUN_NM:'Error. Unrecognized function name "@".',DIV:"Error. Divide by zero.",NAN:"Error. Value of $@$ is not a numeric.",NANARG:"Error. Argument to function $@$ must be numeric.",NULL:"Error. Missing value for $@$.",V_NAME:"Error. Variable $@$ not found.",F_NAME:"Error. Function @ not found.",NAN_OP:"Error. Arithmetic operation on a non-numeric value.",UNIT_ADD:"Error. Adding incompatible units.",UNIT_COMP:"Error. Comparing incompatible units.",UNIT_APEND:"Error. Apppending incompatible units.",UNIT_RES:"Error. Calculated units are not compatible with the desired result unit:",UNIT_MISS:"Error. No units specified for the result.",UNIT_IN:"Error. Incorrect unit for input to function @.",UNIT_ARG:"Error. Unit mis-match between arguments to function @.",UNIT_COL:"Error. Data frame column @ has no units. Do not make a unit-aware call to it.",UNIT_AWARE:"Error. Calculation must be unit-aware in order to apply unit @",DATE:"Error. Date required.",LOGIC:"Error. Logic operation “@” on a non-boolean value.",FACT:"Error. Factorial may be applied only to a unit-less non-negative integer.",PER:"Error. Percentage may be applied only to a unit-less number.",BINOM:"Error. Binomial may be applied only to unit-less numbers.",LOGF:"Error. Argument to log!() must be a non-negative integer.","Γ0":"Error. Γ(0) is infinite.","ΓPOLE":"Error. Γ() of a negative integer is infinite.","LOGΓ":"Error. Argument to Hurmet logΓ() must be a positive number.",TAN90:"Error. tan($@$) is infinite.",ATRIG:"Error. Input to @ must be between -1 and 1.",COT:"Error. Input to @ must not be zero.",ASEC:"Error. Absolute value of input to @ must be ≥ 1",STRING:"Error. Text operand required.",NUMARGS:"Error. Wrong number of arguments passed to function @.",NONSQUARE:"Error. Only a square matrix can be inverted.",SINGULAR:"Error. Matrix is singular and cannot be inverted.",BAD_ROW_NAME:"Error. Data frame does not have a row named @.",BAD_COLUMN_NAME:"Error. Data frame does not have a column named @.",SINGLE_ARG:"Error. A call to a data frame must have two arguments in the brackets.",BAD_TYPE:"Error. Unrecognized data type for $@$.",CONCAT:'Error. Cannot add strings. Use "&" if concatenation is desired.',MATRIX_DIV:"Error. Cannot divide one matrix by another.",MATRIX_MOD:"Error. Cannot take the modulo of one matrix by another.",BAD_INDEX:"Error. Index to a matrix must be numeric.",FUNC_LINE:"Error in function @.",BAD_BREAK:"Error in function @. break called outside of a loop",FETCH:"Error. A fetch() function must be the only item in its expression.",STR_INDEX:"Error. The index to text may be only a real number or a range.",UNIT_NAME:"Error. Unrecognized unit name: @",INT_NUM:'Error. Number display type "@" must be an integer.',TWO_MAPS:"Error. Both operands are maps. Hurmet accepts only one.",BAD_FORMAT:"Error. Invalid format @.",BAD_PREC:"Error. Significant digit specification must be between 1 and 15.",ZERO_ROOT:"Error. Zeroth root.",BAD_ROOT:"Error while taking root.",UNREAL:'Error. Argument to function "@" must be a real number.',BIGINDEX:"Error. Index too large.",MIS_ELNUM:"Error. Mis-matched number of elements",CROSS:"Error. Cross product can be performed only on three-vectors. Use * if you want element-wise multiplication.",QUANT_NUM:"Error. A Quantity must include a numeric magnitude.",CURRENCY:"Error. Currency exchange rates must be defined before using a monetary unit.",DF_UNIT:'Invalid unit "&" in data frame.',FORM_FRAC:"Error. Hurmet can do binary or hexadecimal format only on integers.",PRIVATE:"Error. Function @ is not private.",GCD:"Error. The gcd function can take only integers as arguments.",BAD_KEY:'Error. Data structure does not contain key "@".',NUM_KEY:"Error. A key must be a string, not a number.",IMMUT_UDF:`Error. Variable @ already contains a user-defined function.\n                Hurmet cannot assign a different value to @.`,NO_PROP:`Error. Cannot call a property from variable "@" because it has no properties.`,NOT_ARRAY:`Error. Cannot check if an element is in the second operand because\n the second operand is not an array.`,MULT_MIS:"Error. Mismatch in number of multiple assignment.",COUNT:"Error. The count() function works only on strings.",NOT_VECTOR:"Error. Arguments to dataframe() must be vectors.",BAD_DISPLAY:"Error. Result may not be suppressed. Use '?' display selector.",NA_COMPL_OP:'Error. "@" cannot be performed on a complex number.',NA_REAL:'Error. "@" can be performed only a complex number.',ORIGIN:'Error. Function "@" is undefined at the origin.',LOG_ZERO:"Error. Logarithm of zero is negative infinity.",END_MISS:"Error. Too few END statments in function @.",BAD_CONCAT:"Error. Unmatched dimensions.",BAD_KEYSTR:"Error. The key in a key:value pair must be a string.",BAD_APPEND:"Error. Can not append a @",MAP_APPEND:"Error. Can not append. Wrong data type.",BAD_J:"Error. Do not use j for a loop index. In Hurmet, j = √(-1)"}});const C=(e,t)=>{if(e===""){return{value:"Error",unit:null,dtype:d.ERROR}}let n=L["EN"][e];if(n===undefined){return{value:"Error",unit:null,dtype:d.ERROR}}if(t){t=A(t);n=n.replace(/@/g,t)}else{n=n.replace(/@ ?/,"")}return{value:n,unit:null,dtype:d.ERROR}};const w=BigInt(0);const S=BigInt(1);const k=BigInt(2);const U=[w,S];const D=[S,S];const _=[k,S];const B=[BigInt(3141592653589793e34),BigInt(1e49)];const P=[BigInt(2718281828459045e42),BigInt(1e57)];const z=[BigInt(1054571817),BigInt(1e43)];const j=e=>e>=w?e:BigInt(-1)*e;const G="^(-?)(?:(0x[0-9A-Fa-f]+)|([0-9]+)(?: ([0-9]+)\\/([0-9]+)|(?:\\.([0-9]+))?(?:e([+-]?[0-9]+)|(%))?))";const F=new RegExp(G);const V=e=>{if(Number.isInteger(e)){return[BigInt(e),S]}else{const t=e.toExponential().match(F);const n=t[6]||"";const r=BigInt(t[7])-BigInt(n.length);if(r<0){return[BigInt(t[1]+t[3]+n),BigInt(10)**-r]}else if(t[5]){const e=BigInt(t[5]);return Y([BigInt(t[1]+t[3])*e+BigInt(t[4])])}else{return Y([BigInt(t[1]+t[3]+n)*BigInt(10)**r,S])}}};const q=e=>{const t=e.match(F);let n;if(t[5]){const e=BigInt(t[5]);const r=BigInt(t[1]+t[3])*e+BigInt(t[4]);n=Y([r,e])}else if(t[2]){n=[BigInt(t[2]),S]}else{const e=t[6]||"";const r=BigInt(t[3]+e);const s=t[7]?BigInt(t[7])-BigInt(e.length):t[8]?BigInt(-2)-BigInt(e.length):BigInt(0)-BigInt(e.length);n=s<0?[r,BigInt(10)**-s]:Y([r*BigInt(10)**s,S])}if(t[1]){n=J(n)}return n};const W=(e,t)=>{e=j(e);t=j(t);while(t!==w){const n=e%t;e=t;t=n}return e};const $=(e,t)=>{if(!Ue.isInteger(e)||!Ue.isInteger(t)){return C("GCD")}return[W(e[0]/e[1],t[0]/t[1]),S]};const Y=e=>{const[t,n]=e;if(n===S){return e}const r=W(t,n);return r===S?e:[t/r,n/r]};const H=e=>Array.isArray(e)&&e.length===2&&typeof e[0]==="bigint"&&typeof e[1]==="bigint";const X=e=>e[1]===S||e[0]%e[1]===w;const Z=e=>e[0]===w;const K=e=>e[0]<w;const Q=e=>e[0]>w;const J=e=>[BigInt(-1)*e[0],e[1]];const ee=e=>{const t=e[0]<w?BigInt(-1)*e[0]:e[0];return[t,e[1]]};const te=e=>[e[0]+e[1],e[1]];const ne=e=>[e[0]-e[1],e[1]];const re=e=>{if(e[0]%e[1]===w){return[e[0]/e[1],S]}return e[0]>=w?[e[0]/e[1],S]:[e[0]/e[1]-S,S]};const se=e=>{if(e[0]%e[1]===w){return[e[0]/e[1],S]}return e[0]>=w?[e[0]/e[1]+S,S]:[e[0]/e[1],S]};const ae=(e,t)=>e[1]===t[1]?[e[0]+t[0],e[1]]:Y([e[0]*t[1]+t[0]*e[1],e[1]*t[1]]);const le=(e,t)=>e[1]===t[1]?[e[0]-t[0],e[1]]:Y([e[0]*t[1]-t[0]*e[1],e[1]*t[1]]);const ie=(e,t)=>[e[0]*t[0],e[1]*t[1]];const oe=(e,t)=>{let n=e[0]*t[1];let r=e[1]*t[0];if(r<0){n*=BigInt(-1);r*=BigInt(-1)}return[n,r]};const ue=(e,t)=>{if(t[0]===w){return[S,S]}else{t=Y(t);let n;try{n=X(t)&&K(t)?[e[1]**(BigInt(-1)*t[0]),e[0]**(BigInt(-1)*t[0])]:X(t)?[e[0]**t[0],e[1]**t[0]]:Q(e)||ye(t,D)||ge(t,J(D))?V(Me(e)**Me(t)):he(me(t,_),D)?V(-1*(-1*Me(e))**Me(t)):C("BAD_ROOT")}catch(r){n=V(Me(e)**Me(t))}return n}};const ce=e=>V(Math.sqrt(Me(e)));const pe=e=>V(Math.exp(Me(e)));const fe=e=>{let t=e[1];let n=e[0];if(n<0){t*=BigInt(-1);n*=BigInt(-1)}return[t,n]};const de=(e,t)=>{const n=ee(e);const r=ee(t);const s=ve(n,r);const a=Ae(n,r);const l=Ue.divide(a,s);return Ue.multiply(s,ce(Ue.increment(Ue.multiply(l,l))))};const me=(e,t)=>{const n=oe(Y(e),Y(t));return[j(n[0]%n[1]),S]};const he=(e,t)=>e[1]===t[1]?e[0]===t[0]:e[0]*t[1]===e[1]*t[0];const ge=(e,t)=>K(e)!==K(t)?K(e):K(le(e,t));const ye=(e,t)=>Q(e)!==Q(t)?Q(e):Q(le(e,t));const be=(e,t)=>ge(e,t)||he(e,t);const Re=(e,t)=>ye(e,t)||he(e,t);const ve=(e,t)=>ye(e,t)?[e[0],e[1]]:[t[0],t[1]];const Ae=(e,t)=>ge(e,t)?[e[0],e[1]]:[t[0],t[1]];const Ne=e=>he(e,oe(B,_))?U:V(Math.cos(Me(e)));const Oe=e=>V(Math.sin(Me(e)));const Ee=e=>{if(he(e,oe(B,_))){return C("TAN90","π/2")}return V(Math.tan(Me(e)))};const xe=e=>{const t=Me(e);return V((Math.exp(t)+Math.exp(-t))/2)};const Te=e=>{const t=Me(e);return V((Math.exp(t)-Math.exp(-t))/2)};const Ie=e=>{const t=Me(e);return V((Math.exp(t)-Math.exp(-t))/(Math.exp(t)+Math.exp(-t)))};const Me=e=>{const t=Number(e[0])/Number(e[1]);if(!isNaN(t)&&t!==Infinity){return t}const n=Le(e,20);return Number(n)};const Le=(e,t)=>{if(Z(e)){return"0"}else{const n=j(e[0]/e[1]);if(n>0){return Ce(e,t-String(n).length)}else{const n=String(j(e[1]/e[0])).length;return Ce(e,n+t-1)}}};const Ce=(e,t)=>{if(Z(e)){return"0"}else if(t<0){const n=-t;const r=Ce(oe(e,[BigInt(10)**BigInt(n),S]),0);return r+"0".repeat(n)}else{const[n,r]=Y(e);const s=n/r;let a=n%r;let l=String(s);if(a===w&&t>0){l+="."+"0".repeat(t)}else if(a!==w){a=j(a);const e=a*BigInt(10)**BigInt(t);let n=e/r;const i=e%r;if(t===0){return j(k*i)>=j(r)?String(s+S):l}if(j(k*i)>=j(r)){n=n+S}l+="."+String(n).padStart(t,"0")}return l}};const we=["1","1","2","6","24","120","720","5040","40320","362880","3628800","39916800","479001600","6227020800","87178291200","1307674368000","20922789888000","355687428096000","6402373705728000","121645100408832000","2432902008176640000","51090942171709440000","1124000727777607680000","25852016738884976640000","620448401733239439360000","15511210043330985984000000","403291461126605635584000000","10888869450418352160768000000","304888344611713860501504000000","8841761993739701954543616000000","265252859812191058636308480000000","8222838654177922817725562880000000","263130836933693530167218012160000000","8683317618811886495518194401280000000","295232799039604140847618609643520000000","10333147966386144929666651337523200000000","371993326789901217467999448150835200000000","13763753091226345046315979581580902400000000","523022617466601111760007224100074291200000000","20397882081197443358640281739902897356800000000","815915283247897734345611269596115894272000000000","33452526613163807108170062053440751665152000000000","1405006117752879898543142606244511569936384000000000","60415263063373835637355132068513997507264512000000000","2658271574788448768043625811014615890319638528000000000","119622220865480194561963161495657715064383733760000000000","5502622159812088949850305428800254892961651752960000000000","258623241511168180642964355153611979969197632389120000000000","12413915592536072670862289047373375038521486354677760000000000","608281864034267560872252163321295376887552831379210240000000000","30414093201713378043612608166064768844377641568960512000000000000","1551118753287382280224243016469303211063259720016986112000000000000","80658175170943878571660636856403766975289505440883277824000000000000","4274883284060025564298013753389399649690343788366813724672000000000000","230843697339241380472092742683027581083278564571807941132288000000000000","12696403353658275925965100847566516959580321051449436762275840000000000000","710998587804863451854045647463724949736497978881168458687447040000000000000","40526919504877216755680601905432322134980384796226602145184481280000000000000","2350561331282878571829474910515074683828862318181142924420699914240000000000000","138683118545689835737939019720389406345902876772687432540821294940160000000000000","8320987112741390144276341183223364380754172606361245952449277696409600000000000000","507580213877224798800856812176625227226004528988036003099405939480985600000000000000","31469973260387937525653122354950764088012280797258232192163168247821107200000000000000","1982608315404440064116146708361898137544773690227268628106279599612729753600000000000000","126886932185884164103433389335161480802865516174545192198801894375214704230400000000000000","8247650592082470666723170306785496252186258551345437492922123134388955774976000000000000000","544344939077443064003729240247842752644293064388798874532860126869671081148416000000000000000","36471110918188685288249859096605464427167635314049524593701628500267962436943872000000000000000","2480035542436830599600990418569171581047399201355367672371710738018221445712183296000000000000000","171122452428141311372468338881272839092270544893520369393648040923257279754140647424000000000000000","11978571669969891796072783721689098736458938142546425857555362864628009582789845319680000000000000000","850478588567862317521167644239926010288584608120796235886430763388588680378079017697280000000000000000","61234458376886086861524070385274672740778091784697328983823014963978384987221689274204160000000000000000","4470115461512684340891257138125051110076800700282905015819080092370422104067183317016903680000000000000000","330788544151938641225953028221253782145683251820934971170611926835411235700971565459250872320000000000000000","24809140811395398091946477116594033660926243886570122837795894512655842677572867409443815424000000000000000000","1885494701666050254987932260861146558230394535379329335672487982961844043495537923117729972224000000000000000000","145183092028285869634070784086308284983740379224208358846781574688061991349156420080065207861248000000000000000000","11324281178206297831457521158732046228731749579488251990048962825668835325234200766245086213177344000000000000000000","894618213078297528685144171539831652069808216779571907213868063227837990693501860533361810841010176000000000000000000","71569457046263802294811533723186532165584657342365752577109445058227039255480148842668944867280814080000000000000000000","5797126020747367985879734231578109105412357244731625958745865049716390179693892056256184534249745940480000000000000000000","475364333701284174842138206989404946643813294067993328617160934076743994734899148613007131808479167119360000000000000000000","39455239697206586511897471180120610571436503407643446275224357528369751562996629334879591940103770870906880000000000000000000","3314240134565353266999387579130131288000666286242049487118846032383059131291716864129885722968716753156177920000000000000000000","281710411438055027694947944226061159480056634330574206405101912752560026159795933451040286452340924018275123200000000000000000000","24227095383672732381765523203441259715284870552429381750838764496720162249742450276789464634901319465571660595200000000000000000000","2107757298379527717213600518699389595229783738061356212322972511214654115727593174080683423236414793504734471782400000000000000000000","185482642257398439114796845645546284380220968949399346684421580986889562184028199319100141244804501828416633516851200000000000000000000","16507955160908461081216919262453619309839666236496541854913520707833171034378509739399912570787600662729080382999756800000000000000000000","1485715964481761497309522733620825737885569961284688766942216863704985393094065876545992131370884059645617234469978112000000000000000000000","135200152767840296255166568759495142147586866476906677791741734597153670771559994765685283954750449427751168336768008192000000000000000000000","12438414054641307255475324325873553077577991715875414356840239582938137710983519518443046123837041347353107486982656753664000000000000000000000","1156772507081641574759205162306240436214753229576413535186142281213246807121467315215203289516844845303838996289387078090752000000000000000000000","108736615665674308027365285256786601004186803580182872307497374434045199869417927630229109214583415458560865651202385340530688000000000000000000000","10329978488239059262599702099394727095397746340117372869212250571234293987594703124871765375385424468563282236864226607350415360000000000000000000000","991677934870949689209571401541893801158183648651267795444376054838492222809091499987689476037000748982075094738965754305639874560000000000000000000000","96192759682482119853328425949563698712343813919172976158104477319333745612481875498805879175589072651261284189679678167647067832320000000000000000000000","9426890448883247745626185743057242473809693764078951663494238777294707070023223798882976159207729119823605850588608460429412647567360000000000000000000000","933262154439441526816992388562667004907159682643816214685929638952175999932299156089414639761565182862536979208272237582511852109168640000000000000000000000","93326215443944152681699238856266700490715968264381621468592963895217599993229915608941463976156518286253697920827223758251185210916864000000000000000000000000"];const Se=e=>{if(ge(e,[BigInt(101),S])){return q(we[Me(e)])}else{return ke(te(e))}};const ke=e=>{const t=le(e,D);const n=ie(_,ce(oe(P,B)));const r=ue(oe(ae(t,V(11.400511)),P),ae(t,[S,k]));const s=["2.48574089138753565546e-5","1.05142378581721974210","-3.45687097222016235469","4.51227709466894823700","-2.98285225323576655721","1.05639711577126713077","-0.195428773191645869583","0.0170970543404441224307","-0.000571926117404305781283","0.00000463399473359905636708","-0.00000000271994908488607703910"];let a=q(s[0]);for(let e=1;e<=10;e++){a=ae(a,oe(q(s[e]),ae(t,V(e))))}return ie(ie(n,r),a)};const Ue=Object.freeze({fromNumber:V,fromString:q,normalize:Y,isRational:H,isInteger:X,isZero:Z,isNegative:K,isPositive:Q,negate:J,abs:ee,increment:te,decrement:ne,exp:pe,floor:re,ceil:se,add:ae,subtract:le,multiply:ie,divide:oe,reciprocal:fe,gcd:$,hbar:z,modulo:me,hypot:de,one:D,pi:B,power:ue,sqrt:ce,two:_,cos:Ne,sin:Oe,tan:Ee,cosh:xe,sinh:Te,tanh:Ie,areEqual:he,lessThan:ge,greaterThan:ye,lessThanOrEqualTo:be,greaterThanOrEqualTo:Re,factorial:Se,lanczos:ke,max:ve,min:Ae,numberPattern:G,toNumber:Me,toString:Ce,toStringSignificant:Le,zero:U});const De=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"];const _e=/\B(?=(\d{3})+$)/g;const Be=/\B(?=(\d{4})+$)/g;const Pe=/(\d)(?=(\d\d)+\d$)/g;const ze=/^([beEfhkmprsStx%])?(-?[\d]+)?([j∠°])?$/;const je=e=>{let t="";for(let n=0;n<e.length;n++){const r=e.charCodeAt(n);t+=r===49?"¹":r===50?"²":r===51?"³":String.fromCharCode(r+8256)}return t};const Ge=e=>{let t="";for(let n=0;n<e.length;n++){t+=String.fromCharCode(e.charCodeAt(n)+8272)}return t};const Fe=e=>(e[1]?"-":"")+e[3]+"\\,\\class{special-fraction}{\\text{"+je(e[4])+"⁄"+Ge(e[5])+"}}";const Ve=e=>e>=BigInt(0)?e:BigInt(-1)*e;const qe=(e,t)=>{const n=t.numDigits;switch(t.ftype){case"h":{const t=String(Ue.toString(e,0));if(t.replace("-","").length>=n){return t}if(n<1||n>15){return C("BAD_PREC")}return Ue.toNumber(e).toPrecision(n)}case"f":case"%":return Ue.toString(e,n);case"r":case"p":{if(n<1||n>15){return C("BAD_PREC")}const t=Ue.toNumber(e).toPrecision(n);return t.indexOf("e")>-1?Number(t).toPrecision():t}case"s":case"S":case"e":case"E":case"n":case"N":case"k":if(n<1||n>15){return C("BAD_PREC")}return Ue.toNumber(e).toExponential(n-1).replace("+","");default:{e=Ue.normalize(e);const n=Ue.isNegative(e)?"-":"";const r=Ve(e[0]);const s=e[1];switch(t.ftype){case"m":{const e=String(r/s);const t=r%s;return n+e+" "+je(t)+"⁄"+Ge(s)}case"t":return n+String(r/s);case"b":case"x":case"X":if(s!==BigInt(1)){return C("INT_NUM",t.ftype)}if(r<=Number.MAX_SAFE_INTEGER){return t.ftype==="b"?n+"0b"+Number(r).toString(2):t.ftype==="x"?n+"0x"+Number(r).toString(16):n+"0x"+Number(r).toString(16).toUpperCase()}else{return""}}}}};const We=(e,t)=>{const n=t.charAt(1);if(n==="0"){return e}else if(t==="1,00,000."){return e.replace(Pe,"$1{,}")}else if(t==="1,0000,0000."){return e.replace(Be,"$1{,}")}else{return e.replace(_e,n===","?"{,}":n===" "?"\\:":n==="’"?"’":".")}};const $e=(e,t,n)=>{const r=e.indexOf(".");if(r===-1){return We(e,t)}else{const s=e.slice(0,r);const a=t.slice(-1);let l=(a==="."?".":"{,}")+e.slice(r+1);if(n){l=l.replace(/(\.|{,})?0+$/,"")}return We(s,t)+l}};const Ye=e=>{const t=ze.exec(e);if(!t){const t=C("BAD_FORMAT",e).value;return[e,undefined,d.ERROR,"\\text{"+t+"}"]}let n=t[1]||"h";let r=Number(t[2]||"15");const s=t[3]||"";switch(n){case"b":case"x":case"X":return[e,undefined,d.STRING,"\\text{"+n+s+"}"];case"t":r=0;break;case"f":case"%":break;default:if(r<1||r>15){const t="\\text{"+C("BAD_PREC").value+"}";return[e,undefined,d.ERROR,t]}}if(n==="%"){n="\\%"}return[e,undefined,d.STRING,"\\text{"+n+String(r)+s+"}"]};const He=(e,t="h3",n="1,000,000.")=>{if(Ue.isZero(e)){return"0"}const r={ftype:t.charAt(0)};if(/[j∠°]$/.test(t)){t=t.slice(0,-1)}if(t.length>1){r.numDigits=Number(t.slice(1))}if(r.ftype==="%"||r.ftype==="p"){e[0]=e[0]*BigInt(100)}if((r.ftype==="b"||r.ftype==="x")&&!Ue.isInteger(e)){return C("FORM_FRAC")}const s=qe(e,r);switch(r.ftype){case"f":case"r":case"h":return $e(s,n,r.ftype==="h");case"t":return We(s,n);case"%":case"p":return $e(s,n)+"\\%";case"m":case"b":case"x":case"X":return s;default:{const e=s.indexOf("e");let t=s.slice(0,e);if(n.slice(-1)===","){t=t.replace(".","{,}")}switch(r.ftype){case"e":case"E":{const n=t+"\\text{"+r.ftype;if(s.charAt(e+1)==="-"){return n+"-}"+s.slice(e+2)}else{return n+"}"+s.slice(e+1)}}case"s":case"S":case"n":case"N":{const n=r.ftype==="S"?"×":"\\mkern2mu{\\cdot}\\mkern1mu";return t+n+"10^{"+s.slice(e+1)+"}"}case"k":{const n=Number(s.slice(e+1));const r=n/3;const a=r>=0?Math.floor(r):Math.ceil(r);const l=n%3;if(l!==0){t=String(Number(t)*Math.pow(10,l))}return t+De[8+a]}}}}};const Xe=(e,t)=>{if(e==null&&t==null){return true}if(e==null||t==null){return false}if(!Array.isArray(e)||!Array.isArray(t)){return false}if(e.length!==t.length){return false}for(let n=0;n<e.length;++n){if(e[n]!==t[n]){return false}}return true};const Ze=JSON.parse('{"Y":1e24,"yotta":1e24,"Z":1e21,"zetta":1e21,"E":1e18,"exa":1e18,"P":1e15,"peta":1e15,"T":1e12,"tera":1e12,"G":1e9,"giga":1e9,"M":1e6,"mega":1e6,"k":1000,"kilo":1000,"h":100,"hecto":100,"deka":10,"d":0.1,"deci":0.1,"c":0.01,"centi":0.01,"m":0.001,"milli":0.001,"µ":1e-6,"µ":1e-6,"micro":1e-6,"n":1e-9,"nano":1e-9,"p":1e-12,"pico":1e-12,"f":1e-15,"femto":1e-15,"a":1e-18,"atto":1e-18,"z":1e-21,"zepto":1e-21,"y":1e-24,"yocto":1e-24,"Ki":1024,"kibi":1024,"Mi":1048576,"mebi":1048576,"Gi":1073741824,"gibi":1073741824,"Ti":1099511627776,"tebi":1099511627776}');const Ke=Object.freeze(JSON.parse(`{\n"#":["0.45359237", "1","0","0",[0,1,0,0,0,0,0,0]],\n"$":["1","1","0","USD",[0,0,0,0,0,0,0,1]],\n"£":["1","1","0","GBP",[0,0,0,0,0,0,0,1]],\n"'":["0.3048","1","0","0",[1,0,0,0,0,0,0,0]],\n"A":["1","1","0","siSymbol",[0,0,0,1,0,0,0,0]],\n"AUD":["1.5553","1","0","AUD",[0,0,0,0,0,0,0,1]],\n"Adobe point":["0.0254","72","0","0",[1,0,0,0,0,0,0,0]],\n"At":["1","1","0","siSymbol",[0,0,0,0,1,0,1,0]],\n"Australian dollar":["1","1","0","AUD",[0,0,0,0,0,0,0,1]],\n"BRL":["5.5457","1","0","BRL",[0,0,0,0,0,0,0,1]],\n"BTU":["1055.056","1","0","0",[2,1,-2,0,0,0,0,0]],\n"BThU":["1055.056","1","0","0",[2,1,-2,0,0,0,0,0]],\n"Bq":["1","1","0","siSymbol",[0,0,-1,0,0,0,0,0]],\n"Brazilian Real":["1","1","0","BRL",[0,0,0,0,0,0,0,1]],\n"British Pound":["1","1","0","GBP",[0,0,0,0,0,0,0,1]],\n"Btu":["1055.056","1","0","0",[2,1,-2,0,0,0,0,0]],\n"C":["1","1","0","siSymbol",[0,0,1,1,0,0,0,0]],\n"C$":["1","1","0","CAD",[0,0,0,0,0,0,0,1]],\n"CAD":["1.4380","1","0","CAD",[0,0,0,0,0,0,0,1]],\n"CCF":["1","1","0","0",[3,0,0,0,0,0,0,0]],\n"CHF":["0.9856","1","0","CHF",[0,0,0,0,0,0,0,1]],\n"CNY":["7.3475","1","0","CNY",[0,0,0,0,0,0,0,1]],\n"CY":["0.764554857984","1","0","0",[3,0,0,0,0,0,0,0]],\n"Calorie":["4186.8","1","0","0",[2,1,-2,0,0,0,0,0]],\n"Canadian dollar":["1","1","0","CAD",[0,0,0,0,0,0,0,1]],\n"Celsius":["1","1","273.15","0",[0,0,0,0,1,0,0,0]],\n"Chinese Yuan":["1","1","0","CNY",[0,0,0,0,0,0,0,1]],\n"Ci":["37000000000","1","0","siSymbol",[0,0,-1,0,0,0,0,0]],\n"Ckm":["100000","1","0","siSymbol",[1,0,0,0,0,0,0,0]],\n"Da":["1.66053872e-24","1","0","siSymbol",[0,1,0,0,0,0,0,0]],\n"Dalton":["1.66053872e-24","1","0","0",[0,1,0,0,0,0,0,0]],\n"Didot point":["15.625","41559","0","0",[1,0,0,0,0,0,0,0]],\n"EB":["9223372036854770000","1","0","0",[0,0,0,0,0,1,0,0]],\n"EMU":["0.01","360000","0","0",[1,0,0,0,0,0,0,0]],\n"EUR":["1","1","0","EUR",[0,0,0,0,0,0,0,1]],\n"EiB":["9223372036854770000","1","0","0",[0,0,0,0,0,1,0,0]],\n"Euro":["1","1","0","EUR",[0,0,0,0,0,0,0,1]],\n"F":["1","1","0","siSymbol",[-2,-1,4,2,0,0,0,0]],\n"Fahrenheit":["5","9","459","0",[0,0,0,0,1,0,0,0]],\n"G":["0.0001","1","0","siSymbol",[-2,-2,-2,-1,0,0,0,0]],\n"GB":["8589934592","1","0","0",[0,0,0,0,0,1,0,0]],\n"GBP":["0.85950","1","0","GBP",[0,0,0,0,0,0,0,1]],\n"Gal":["0.01","1","0","siSymbol",[1,0,-2,0,0,0,0,0]],\n"Gi":["10","12.5663706143592","0","siWord",[0,0,0,0,1,0,1,0]],\n"GiB":["8589934592","1","0","0",[0,0,0,0,0,1,0,0]],\n"Gregorian year":["31556952","1","0","0",[0,0,1,0,0,0,0,0]],\n"Gy":["1","1","0","siSymbol",[2,0,-2,0,0,0,0,0]],\n"H":["1","1","0","siSymbol",[2,1,-2,-2,0,0,0,0]],\n"HK$":["1","1","0","HKD",[0,0,0,0,0,0,0,1]],\n"HKD":["8.2169","1","0","HKD",[0,0,0,0,0,0,0,1]],\n"HP":["745.69987158227","1","0","0",[2,1,-3,0,0,0,0,0]],\n"Hong Kong dollar":["1","1","0","HKD",[0,0,0,0,0,0,0,1]],\n"Hz":["1","1","0","siSymbol",[0,0,-1,0,0,0,0,0]],\n"ILS":["3.6128","1","0","ILS",[0,0,0,0,0,0,0,1]],\n"INR":["86.9535","1","0","INR",[0,0,0,0,0,0,0,1]],\n"Indian Rupee":["1","1","0","INR",[0,0,0,0,0,0,0,1]],\n"Israeli New Shekel":["1","1","0","ILS",[0,0,0,0,0,0,0,1]],\n"J":["1","1","0","siSymbol",[2,1,-2,0,0,0,0,0]],\n"JPY":["143.30","1","0","JPY",[0,0,0,0,0,0,0,1]],\n"Japanese Yen":["1","1","0","JPY",[0,0,0,0,0,0,0,1]],\n"Joule":["1","1","0","0",[2,1,-2,0,0,0,0,0]],\n"Julian year":["31557600","1","0","0",[0,0,1,0,0,0,0,0]],\n"Jy":["1e-26","1","0","siSymbol",[0,1,-2,0,0,0,0,0]],\n"K":["1","1","0","0",[0,0,0,0,1,0,0,0]],\n"KiB":["8192","1","0","0",[0,0,0,0,0,1,0,0]],\n"KRW":["1373.94","1","0","KRW",[0,0,0,0,0,0,0,1]],\n"L":["0.001","1","0","siSymbol",[3,0,0,0,0,0,0,0]],\n"Lego stud":["0.008","1","0","siSymbol",[1,0,0,0,0,0,0,0]],\n"MB":["8388608","1","0","0",[0,0,0,0,0,1,0,0]],\n"MCM":["5.06707479097497e-07","1","0","0",[2,0,0,0,0,0,0,0]],\n"MMBtu":["1055056000","1","0","0",[2,1,-2,0,0,0,0,0]],\n"MMbbl":["158987.294928","1","0","0",[3,0,0,0,0,0,0,0]],\n"MMbblpd":["158987.294928","86400","0","0",[3,0,-1,0,0,0,0,0]],\n"MMscf":["28316.846592","1","0","0",[3,0,0,0,0,0,0,0]],\n"MMscfd":["0.32774128","1","0","0",[3,0,0,0,0,0,0,0]],\n"MT":["1000","1","0","0",[0,1,0,0,0,0,0,0]],\n"MXN":["20.8490","1","0","MXN",[0,0,0,0,0,0,0,1]],\n"Mach":["331.6","1","0","0",[1,0,-1,0,0,0,0,0]],\n"Mbbl":["158.987294928","1","0","0",[3,0,0,0,0,0,0,0]],\n"Mexican Peso":["1","1","0","MXN",[0,0,0,0,0,0,0,1]],\n"MiB":["8388608","1","0","0",[0,0,0,0,0,1,0,0]],\n"Mscfd":["0.00032774128","1","0","0",[3,0,0,0,0,0,0,0]],\n"Mscfh":["0.00786579072","1","0","0",[3,0,0,0,0,0,0,0]],\n"N":["1","1","0","siSymbol",[1,1,-2,0,0,0,0,0]],\n"NM":["1852","1","0","0",[1,0,0,0,0,0,0,0]],\n"PB":["9007199254740990","1","0","0",[0,0,0,0,0,1,0,0]],\n"PS":["735.49875","1","0","0",[2,1,-3,0,0,0,0,0]],\n"Pa":["1","1","0","siSymbol",[-1,1,-2,0,0,0,0,0]],\n"Pascal":["1","1","0","siWord",[-1,1,-2,0,0,0,0,0]],\n"Pferdestärke":["735.49875","1","0","0",[2,1,-3,0,0,0,0,0]],\n"PiB":["9007199254740990","1","0","0",[0,0,0,0,0,1,0,0]],\n"R":["0.000258","1","0","siSymbol",[0,-1,1,1,0,0,0,0]],\n"R$":["1","1","0","BRL",[0,0,0,0,0,0,0,1]],\n"RT":["3516.8532","1","0","0",[2,1,-3,0,0,0,0,0]],\n"RUB":["1","1","0","RUB",[0,0,0,0,0,0,0,1]],\n"S":["1","1","0","siSymbol",[-2,-1,3,2,0,0,0,0]],\n"SF":["0.09290304","1","0","0",[2,0,0,0,0,0,0,0]],\n"SY":["0.83612736","1","0","0",[2,0,0,0,0,0,0,0]],\n"Sv":["1","1","0","siSymbol",[2,0,-2,0,0,0,0,0]],\n"Swiss Franc":["1","1","0","CHF",[0,0,0,0,0,0,0,1]],\n"T":["1","1","0","siSymbol",[-2,-2,-2,-1,0,0,0,0]],\n"TB":["8796093022208","1","0","0",[0,0,0,0,0,1,0,0]],\n"TWD":["1","1","0","TWD",[0,0,0,0,0,0,0,1]],\n"TeX point":["0.0003515","1","0","0",[1,0,0,0,0,0,0,0]],\n"TiB":["8796093022208","1","0","0",[0,0,0,0,0,1,0,0]],\n"US$":["1","1","0","USD",[0,0,0,0,0,0,0,1]],\n"USD":["1.0559","1","0","USD",[0,0,0,0,0,0,0,1]],\n"V":["1","1","0","siSymbol",[2,1,-3,-1,0,0,0,0]],\n"VA":["1","1","0","siSymbol",[2,1,-3,0,0,0,0,0]],\n"W":["1","1","0","siSymbol",[2,1,-3,0,0,0,0,0]],\n"Wb":["1","1","0","siSymbol",[2,1,-2,-1,0,0,0,0]],\n"Wh":["3600","1","0","siSymbol",[2,1,-2,0,0,0,0,0]],\n"Won":["1","1","0","KRW",[0,0,0,0,0,0,0,1]],\n"Yen":["1","1","0","JPY",[0,0,0,0,0,0,0,1]],\n"a":["31556925.9747","1","0","siSymbol",[0,0,1,0,0,0,0,0]],\n"ac":["4046.8564224","1","0","0",[2,0,0,0,0,0,0,0]],\n"acre":["4046.8564224","1","0","0",[2,0,0,0,0,0,0,0]],\n"admiralty mile":["1853.188","1","0","0",[1,0,0,0,0,0,0,0]],\n"af":["1233.48183754752","1","0","0",[3,0,0,0,0,0,0,0]],\n"amp":["1","1","0","0",[0,0,0,1,0,0,0,0]],\n"ampere":["1","1","0","siWord",[0,0,0,1,0,0,0,0]],\n"ampere turn":["1","1","0","siWord",[0,0,0,0,1,0,1,0]],\n"amu":["1.66053872e-24","1","0","0",[0,1,0,0,0,0,0,0]],\n"angstrom":["0.0000000001","1","0","0",[1,0,0,0,0,0,0,0]],\n"angstrom star":["0.00000000010000015","1","0","0",[1,0,0,0,0,0,0,0]],\n"apostilb":["1","3.14159265358979","0","0",[-2,0,0,0,0,0,1,0]],\n"arcminute":["3.14159265358979","10800","0","0",[0,0,0,0,0,0,0,0]],\n"arcsecond":["3.14159265358979","648000","0","0",[0,0,0,0,0,0,0,0]],\n"are":["100","1","0","0",[2,0,0,0,0,0,0,0]],\n"as":["4.3.14159265358979","648000","0","0",[0,0,0,0,0,0,0,0]],\n"asb":["1","3.14159265358979","0","0",[-2,0,0,0,0,0,1,0]],\n"assay ton":["0.0875","3","0","0",[0,1,0,0,0,0,0,0]],\n"astronomical unit":["149597870691","1","0","0",[1,0,0,0,0,0,0,0]],\n"atmosphere":["101325","1","0","siSymbol",[-1,1,-2,0,0,0,0,0]],\n"au":["149597870691","1","0","0",[1,0,0,0,0,0,0,0]],\n"bar":["100000","1","0","siWord",[-1,1,-2,0,0,0,0,0]],\n"barg":["100000","1","0","0",[-1,1,-2,0,0,0,0,0]],\n"barleycorn":["0.0254","3","0","0",[1,0,0,0,0,0,0,0]],\n"barrel":["0.158987294928","1","0","0",[3,0,0,0,0,0,0,0]],\n"barrel bulk":["0.14158423296","1","0","0",[3,0,0,0,0,0,0,0]],\n"basis point":["0.0001","1","0","0",[0,0,0,0,0,0,0,0]],\n"baud":["1","1","0","siSymbol",[0,0,-1,0,0,1,0,0]],\n"bbl":["0.158987294928","1","0","0",[3,0,0,0,0,0,0,0]],\n"becquerel":["1","1","0","siWord",[0,0,-1,0,0,0,0,0]],\n"beer barrel":["0.119240471196","1","0","0",[3,0,0,0,0,0,0,0]],\n"bit":["1","1","0","0",[0,0,0,0,0,1,0,0]],\n"blink":["0.864","1","0","0",[0,0,1,0,0,0,0,0]],\n"bo":["0.158987294928","1","0","0",[3,0,0,0,0,0,0,0]],\n"boe":["6119000000","1","0","0",[2,1,-2,0,0,0,0,0]],\n"boiler horsepower":["9812.5","1","0","0",[2,1,-3,0,0,0,0,0]],\n"bpd":["0.158987294928","86400","0","0",[3,0,-1,0,0,0,0,0]],\n"bph":["0.158987294928","3600","0","0",[3,0,-1,0,0,0,0,0]],\n"breadth":["0.2286","1","0","0",[1,0,0,0,0,0,0,0]],\n"bushel":["0.03523907016688","1","0","0",[3,0,0,0,0,0,0,0]],\n"byte":["8","1","0","0",[0,0,0,0,0,1,0,0]],\n"caballo de vapor":["735.49875","1","0","0",[2,1,-3,0,0,0,0,0]],\n"cal":["4.1868","1","0","0",[2,1,-2,0,0,0,0,0]],\n"calorie":["4.1868","1","0","siWord",[2,1,-2,0,0,0,0,0]],\n"candela":["1","1","0","siWord",[0,0,0,0,0,0,1,0]],\n"candlepower":["1","1","0","siWord",[0,0,0,0,0,0,1,0]],\n"carat":["0.00002","1","0","0",[0,1,0,0,0,0,0,0]],\n"cc":["0.000001","1","0","0",[3,0,0,0,0,0,0,0]],\n"cd":["1","1","0","siSymbol",[0,0,0,0,0,0,1,0]],\n"centipoise":["0.001","1","0","0",[-1,1,-1,0,0,0,0,0]],\n"centistoke":["0.000001","1","0","0",[2,0,-1,0,0,0,0,0]],\n"cfm":["0.0004719474432","1","0","0",[3,0,-1,0,0,0,0,0]],\n"cfs":["0.028316846592","1","0","0",[3,0,-1,0,0,0,0,0]],\n"ch":["735.49875","1","0","0",[2,1,-3,0,0,0,0,0]],\n"chain":["20.116","1","0","0",[1,0,0,0,0,0,0,0]],\n"cheval vapeur":["735.49875","1","0","0",[2,1,-3,0,0,0,0,0]],\n"cmil":["5.06707479097497e-10","1","0","0",[2,0,0,0,0,0,0,0]],\n"cmm":["0.00001","1","0","0",[1,0,0,0,0,0,0,0]],\n"constant":["1","1","0","0",[0,0,0,0,0,0,0,0]],\n"coulomb":["1","1","0","siWord",[0,0,1,1,0,0,0,0]],\n"cp":["1","1","0","siWord",[0,0,0,0,0,0,1,0]],\n"cps":["1","1","0","0",[0,0,-1,0,0,0,0,0]],\n"cu ft":["0.028316846592","1","0","0",[3,0,0,0,0,0,0,0]],\n"cu in":["0.000016387064","1","0","0",[3,0,0,0,0,0,0,0]],\n"cu yd":["0.764554857984","1","0","0",[3,0,0,0,0,0,0,0]],\n"cubic meter":["1","1","0","0",[3,0,0,0,0,0,0,0]],\n"cubic metre":["1","1","0","0",[3,0,0,0,0,0,0,0]],\n"cup":["0.0002365882365","1","0","0",[3,0,0,0,0,0,0,0]],\n"curie":["37000000000","1","0","siWord",[0,0,-1,0,0,0,0,0]],\n"cv":["735.49875","1","0","0",[2,1,-3,0,0,0,0,0]],\n"cy":["0.764554857984","1","0","0",[3,0,0,0,0,0,0,0]],\n"d":["86400","1","0","0",[0,0,1,0,0,0,0,0]],\n"daN":["10","1","0","0",[1,1,-2,0,0,0,0,0]],\n"darcy":["0.0000000000009869233","1","0","0",[2,0,0,0,0,0,0,0]],\n"day":["86400","1","0","0",[0,0,1,0,0,0,0,0]],\n"deg":["3.14159265358979","180","0","0",[0,0,0,0,0,0,0,0]],\n"degree":["3.14159265358979","180","0","0",[0,0,0,0,0,0,0,0]],\n"dekan":["31.4159265358979","180","0","0",[0,0,0,0,0,0,0,0]],\n"diopter":["1","1","0","0",[-1,0,0,0,0,0,0,0]],\n"dioptre":["1","1","0","0",[-1,0,0,0,0,0,0,0]],\n"dollar":["1","1","0","USD",[0,0,0,0,0,0,0,1]],\n"drum":["0.20819764812","1","0","0",[3,0,0,0,0,0,0,0]],\n"dscf":["0.028316846592","1","0","0",[3,0,0,0,0,0,0,0]],\n"dyn":["0.00001","1","0","0",[1,1,-2,0,0,0,0,0]],\n"dyne":["0.00001","1","0","0",[1,1,-2,0,0,0,0,0]],\n"eV":["1.602176462e-19","1","0","0",[2,1,-2,0,0,0,0,0]],\n"electric horsepower":["746","1","0","0",[2,1,-3,0,0,0,0,0]],\n"electrical horsepower":["746","1","0","0",[2,1,-3,0,0,0,0,0]],\n"electron volt":["1.602176462e-19","1","0","0",[2,1,-2,0,0,0,0,0]],\n"erg":["0.0000001","1","0","0",[2,1,-2,0,0,0,0,0]],\n"euro":["1","1","0","EUR",[0,0,0,0,0,0,0,1]],\n"exabyte":["9223372036854770000","1","0","0",[0,0,0,0,0,1,0,0]],\n"exbibyte":["9223372036854770000","1","0","0",[0,0,0,0,0,1,0,0]],\n"farad":["1","1","0","siWord",[-2,-1,4,2,0,0,0,0]],\n"faraday":["96485.339924","1","0","0",[0,0,1,1,0,0,0,0]],\n"fathom":["1.8288","1","0","0",[1,0,0,0,0,0,0,0]],\n"fc":["10.7639104167097","1","0","0",[-2,0,0,0,0,0,1,0]],\n"feet":["0.3048","1","0","0",[1,0,0,0,0,0,0,0]],\n"fermi":["0.000000000000001","1","0","siWord",[1,0,0,0,0,0,0,0]],\n"fl oz":["0.003785411784","128","0","0",[3,0,0,0,0,0,0,0]],\n"flop":["1","1","0","0",[0,0,-1,0,0,0,0,0]],\n"fluid ounce":["0.003785411784","128","0","0",[3,0,0,0,0,0,0,0]],\n"food calorie":["4186.8","1","0","0",[2,1,-2,0,0,0,0,0]],\n"foot":["0.3048","1","0","0",[1,0,0,0,0,0,0,0]],\n"footcandle":["10.7639104167097","1","0","0",[-2,0,0,0,0,0,1,0]],\n"footlambert":["1","3.14159265358979","0","0",[-2,0,0,0,0,0,1,0]],\n"fortnight":["1209600","1","0","0",[0,0,1,0,0,0,0,0]],\n"fps":["0.3048","1","0","0",[1,0,-1,0,0,0,0,0]],\n"franklin":["0.00000000033356","1","0","siWord",[0,0,1,1,0,0,0,0]],\n"ft":["0.3048","1","0","0",[1,0,0,0,0,0,0,0]],\n"ft water":["2988.874","1","0","0",[-1,1,-2,0,0,0,0,0]],\n"ftc":["10.7639104167097","1","0","0",[-2,0,0,0,0,0,1,0]],\n"ftl":["3.426259","1","0","0",[-2,0,0,0,0,0,1,0]],\n"furlong":["201.168","1","0","0",[1,0,0,0,0,0,0,0]],\n"g":["0.001","1","0","siSymbol",[0,1,0,0,0,0,0,0]],\n"gal":["0.003785411784","1","0","0",[3,0,0,0,0,0,0,0]],\n"galileo":["0.01","1","0","siWord",[1,0,-2,0,0,0,0,0]],\n"gallon":["0.003785411784","1","0","0",[3,0,0,0,0,0,0,0]],\n"gauss":["0.0001","1","0","siSymbol",[-2,-2,-2,-1,0,0,0,0]],\n"gigabyte":["8589934592","1","0","0",[0,0,0,0,0,1,0,0]],\n"gilbert":["10","12.5663706143592","0","siWord",[0,0,0,0,1,0,1,0]],\n"gill":["0.003785411784","32","0","0",[3,0,0,0,0,0,0,0]],\n"gon":["3.14159265358979","200","0","0",[0,0,0,0,0,0,0,0]],\n"gongjin":["1","1","0","siSymbol",[0,1,0,0,0,0,0,0]],\n"gongli":["1000","1","0","siSymbol",[1,0,0,0,0,0,0,0]],\n"gpd":["0.003785411784","86400","0","0",[3,0,-1,0,0,0,0,0]],\n"gph":["0.003785411784","3600","0","0",[3,0,-1,0,0,0,0,0]],\n"gpm":["0.003785411784","60","0","0",[3,0,-1,0,0,0,0,0]],\n"gps":["0.003785411784","1","0","0",[3,0,-1,0,0,0,0,0]],\n"gr":["0.00006479891","1","0","0",[0,1,0,0,0,0,0,0]],\n"grad":["3.14159265358979","200","0","0",[0,0,0,0,0,0,0,0]],\n"grain":["0.00006479891","1","0","0",[0,1,0,0,0,0,0,0]],\n"gram":["0.001","1","0","0",[0,1,0,0,0,0,0,0]],\n"gramme":["0.001","1","0","0",[0,1,0,0,0,0,0,0]],\n"gray":["1","1","0","0",[2,0,-2,0,0,0,0,0]],\n"great year":["814000000000","1","0","0",[0,0,1,0,0,0,0,0]],\n"gsm":["0.001","1","0","0",[-2,1,0,0,0,0,0,0]],\n"gutenberg":["0.0254","7200","0","0",[1,0,0,0,0,0,0,0]],\n"gōngjin":["1","1","0","siSymbol",[0,1,0,0,0,0,0,0]],\n"gōngli":["1000","1","0","siSymbol",[1,0,0,0,0,0,0,0]],\n"h":["3600","1","0","0",[0,0,1,0,0,0,0,0]],\n"ha":["10000","1","0","siSymbol",[2,0,0,0,0,0,0,0]],\n"hand":["0.1016","1","0","0",[1,0,0,0,0,0,0,0]],\n"hectare":["10000","1","0","siWord",[2,0,0,0,0,0,0,0]],\n"helek":["10","3","0","0",[0,0,1,0,0,0,0,0]],\n"hemisphere":["6.28318530717959","1","0","0",[0,0,0,0,0,0,0,0]],\n"henrie":["1","1","0","siWord",[2,1,-2,-2,0,0,0,0]],\n"henry":["1","1","0","siWord",[2,1,-2,-2,0,0,0,0]],\n"hertz":["1","1","0","siWord",[0,0,-1,0,0,0,0,0]],\n"hk":["735.49875","1","0","0",[2,1,-3,0,0,0,0,0]],\n"horsepower":["745.69987158227","1","0","0",[2,1,-3,0,0,0,0,0]],\n"hour":["3600","1","0","0",[0,0,1,0,0,0,0,0]],\n"hp":["745.69987158227","1","0","0",[2,1,-3,0,0,0,0,0]],\n"hpE":["746","1","0","0",[2,1,-3,0,0,0,0,0]],\n"hpI":["745.69987158227","1","0","0",[2,1,-3,0,0,0,0,0]],\n"hpM":["735.49875","1","0","0",[2,1,-3,0,0,0,0,0]],\n"hpS":["9812.5","1","0","0",[2,1,-3,0,0,0,0,0]],\n"hr":["3600","1","0","0",[0,0,1,0,0,0,0,0]],\n"in":["0.0254","1","0","0",[1,0,0,0,0,0,0,0]],\n"in Hg":["3863.8","1","0","0",[-1,1,-2,0,0,0,0,0]],\n"inch":["0.0254","1","0","0",[1,0,0,0,0,0,0,0]],\n"inche":["0.0254","1","0","0",[1,0,0,0,0,0,0,0]],\n"jansky":["1e-26","1","0","0",[0,1,-2,0,0,0,0,0]],\n"jar":["1","900000000","0","0",[-2,-1,4,2,0,0,0,0]],\n"joule":["1","1","0","0",[2,1,-2,0,0,0,0,0]],\n"k":["4448.2216152605","1","0","0",[1,1,-2,0,0,0,0,0]],\n"kB":["8192","1","0","0",[0,0,0,0,0,1,0,0]],\n"kB":["8192","1","0","0",[0,0,0,0,0,1,0,0]],\n"kairi":["1852","1","0","0",[1,0,0,0,0,0,0,0]],\n"kanal":["505.8570528","1","0","0",[2,0,0,0,0,0,0,0]],\n"katal":["6.02214179e+23","1","0","siWord",[0,0,-1,0,0,1,0,0]],\n"kcal":["4186.8","1","0","0",[2,1,-2,0,0,0,0,0]],\n"kcmil":["5.06707479097497e-07","1","0","0",[2,0,0,0,0,0,0,0]],\n"keg":["0.058673882652","1","0","0",[3,0,0,0,0,0,0,0]],\n"kelvin":["1","1","0","0",[0,0,0,0,1,0,0,0]],\n"kgf":["9.80665","1","0","0",[1,1,-2,0,0,0,0,0]],\n"kilo":["1","1","0","0",[0,1,0,0,0,0,0,0]],\n"kilobyte":["8192","1","0","0",[0,0,0,0,0,1,0,0]],\n"kilogram":["1","1","0","0",[0,1,0,0,0,0,0,0]],\n"kilogramme":["1","1","0","0",[0,1,0,0,0,0,0,0]],\n"kilopond":["9.80665","1","0","0",[1,1,-2,0,0,0,0,0]],\n"kip":["4448.2216152605","1","0","0",[1,1,-2,0,0,0,0,0]],\n"klf":["4448.2216152605","0.3048","0","0",[0,1,-2,0,0,0,0,0]],\n"kn":["1852","3600","0","0",[1,0,-1,0,0,0,0,0]],\n"knot":["1852","3600","0","0",[1,0,-1,0,0,0,0,0]],\n"kp":["9.80665","1","0","0",[1,1,-2,0,0,0,0,0]],\n"kpf":["4448.2216152605","0.3048","0","0",[0,1,-2,0,0,0,0,0]],\n"kph":["1000/3600","1","0","0",[1,0,-1,0,0,0,0,0]],\n"kpph":["1000/3600","1","0","0",[-1,1,-3,0,0,0,0,0]],\n"ks":["735.49875","1","0","0",[2,1,-3,0,0,0,0,0]],\n"ksf":["47880.2589803358","1","0","0",[-1,1,-2,0,0,0,0,0]],\n"ksi":["6894757.29316836","1","0","0",[-1,1,-2,0,0,0,0,0]],\n"kwh":["3600000","1","0","0",[2,1,-2,0,0,0,0,0]],\n"l":["0.001","1","0","siSymbol",[3,0,0,0,0,0,0,0]],\n"lambert":["10000","3.14159265358979","0","0",[-2,0,0,0,0,0,1,0]],\n"lb":["0.45359237","1","0","0",[0,1,0,0,0,0,0,0]],\n"lbf":["4.4482216152605","1","0","0",[1,1,-2,0,0,0,0,0]],\n"lbm":["0.45359237","1","0","0",[0,1,0,0,0,0,0,0]],\n"league":["5556","1","0","0",[1,0,0,0,0,0,0,0]],\n"lf":["0.3048","1","0","0",[1,0,0,0,0,0,0,0]],\n"li":["500","1","0","0",[1,0,0,0,0,0,0,0]],\n"light year":["9460730472580800","1","0","0",[1,0,0,0,0,0,0,0]],\n"link":["0.201168","1","0","0",[1,0,0,0,0,0,0,0]],\n"liter":["0.001","1","0","siWord",[3,0,0,0,0,0,0,0]],\n"litre":["0.001","1","0","siWord",[3,0,0,0,0,0,0,0]],\n"lm":["1","1","0","siSymbol",[0,0,0,0,0,0,1,0]],\n"long ton":["1016.0469088","1","0","0",[0,1,0,0,0,0,0,0]],\n"lt":["1016.0469088","1","0","0",[0,1,0,0,0,0,0,0]],\n"ltpd":["0.0117598021851852","1","0","0",[0,1,-1,0,0,0,0,0]],\n"lumen":["1","1","0","siWord",[0,0,0,0,0,0,1,0]],\n"lunar day":["89416.32","1","0","0",[0,0,1,0,0,0,0,0]],\n"lunar month":["2551442.976","1","0","0",[0,0,1,0,0,0,0,0]],\n"lux":["1","1","0","siWord",[-2,0,0,0,0,0,1,0]],\n"lx":["1","1","0","siSymbol",[-2,0,0,0,0,0,1,0]],\n"m":["1","1","0","siSymbol",[1,0,0,0,0,0,0,0]],\n"mD":["9.869233e-16","1","0","0",[2,0,0,0,0,0,0,0]],\n"marathon":["42195","1","0","0",[1,0,0,0,0,0,0,0]],\n"marla":["25.29285264","1","0","0",[2,0,0,0,0,0,0,0]],\n"mas":["3.14159265358979","648000000","0","0",[0,0,0,0,0,0,0,0]],\n"maxwell":["0.00000001","1","0","siSymbol",[2,1,-2,-1,0,0,0,0]],\n"mb":["100","1","0","0",[-1,1,-2,0,0,0,0,0]],\n"megabyte":["8388608","1","0","0",[0,0,0,0,0,1,0,0]],\n"megaton TNT":["4184000000000000","1","0","0",[2,1,-2,0,0,0,0,0]],\n"megatons TNT":["4184000000000000","1","0","0",[2,1,-2,0,0,0,0,0]],\n"megohm":["1000000","1","0","0",[2,1,-3,-2,0,0,0,0]],\n"meter":["1","1","0","siWord",[1,0,0,0,0,0,0,0]],\n"metre":["1","1","0","siWord",[1,0,0,0,0,0,0,0]],\n"metric horsepower":["735.49875","1","0","0",[2,1,-3,0,0,0,0,0]],\n"metric ton":["1000","1","0","0",[0,1,0,0,0,0,0,0]],\n"mgd":["3785.411784","86400","0","0",[3,0,-1,0,0,0,0,0]],\n"mho":["1","1","0","0",[-2,-1,3,2,0,0,0,0]],\n"mi":["1609.344","1","0","0",[1,0,0,0,0,0,0,0]],\n"mil":["0.0000254","1","0","0",[1,0,0,0,0,0,0,0]],\n"mile":["1609.344","1","0","0",[1,0,0,0,0,0,0,0]],\n"min":["60","1","0","0",[0,0,1,0,0,0,0,0]],\n"minute":["60","1","0","0",[0,0,1,0,0,0,0,0]],\n"moa":["3.14159265358979","10800","0","0",[0,0,0,0,0,0,0,0]],\n"mol":["6.02214179e+23","1","0","0",[0,0,0,0,0,1,0,0]],\n"mole":["6.02214179e+23","1","0","0",[0,0,0,0,0,1,0,0]],\n"mpg":["1609.344","0.003785411784","0","0",[-2,0,0,0,0,0,0,0]],\n"mph":["0.44704","1","0","0",[1,0,-1,0,0,0,0,0]],\n"mt":["1000","1","0","0",[0,1,0,0,0,0,0,0]],\n"nautical mile":["1852","1","0","0",[1,0,0,0,0,0,0,0]],\n"newton":["1","1","0","0",[1,1,-2,0,0,0,0,0]],\n"nit":["1","1","0","0",[-2,0,0,0,0,0,1,0]],\n"ohm":["1","1","0","siWord",[2,1,-3,-2,0,0,0,0]],\n"ounce":["0.45359237","16","0","0",[0,1,0,0,0,0,0,0]],\n"oz":["0.45359237","16","0","0",[0,1,0,0,0,0,0,0]],\n"oz t":["0.0311034768","1","0","0",[0,1,0,0,0,0,0,0]],\n"parsec":["30856780000000000","1","0","0",[1,0,0,0,0,0,0,0]],\n"pc":["0.0254","6","0","0",[1,0,0,0,0,0,0,0]],\n"pcf":["4.4482216152605","0.028316846592","0","0",[-2,1,-2,0,0,0,0,0]],\n"pci":["4.4482216152605","0.000016387064","0","0",[-2,1,-2,0,0,0,0,0]],\n"pebibyte":["9007199254740990","1","0","0",[0,0,0,0,0,1,0,0]],\n"peck":["0.00880976754172","1","0","0",[3,0,0,0,0,0,0,0]],\n"perfect ream":["516","1","0","0",[0,0,0,0,0,1,0,0]],\n"person":["1","1","0","0",[0,0,0,0,0,1,0,0]],\n"petabyte":["9007199254740990","1","0","0",[0,0,0,0,0,1,0,0]],\n"pfd":["0.5","1","0","0",[0,1,0,0,0,0,0,0]],\n"pferdestärke":["735.49875","1","0","0",[2,1,-3,0,0,0,0,0]],\n"pfund":["0.5","1","0","0",[0,1,0,0,0,0,0,0]],\n"phot":["10000","1","0","0",[-2,0,0,0,0,0,1,0]],\n"pica":["0.0254","6","0","0",[1,0,0,0,0,0,0,0]],\n"pied du roi":["9000","27706","0","0",[1,0,0,0,0,0,0,0]],\n"pieze":["1000","1","0","0",[-1,1,-2,0,0,0,0,0]],\n"pint":["0.000473176473","1","0","0",[3,0,0,0,0,0,0,0]],\n"pk":["735.49875","1","0","0",[2,1,-3,0,0,0,0,0]],\n"platonic year":["814000000000","1","0","0",[0,0,1,0,0,0,0,0]],\n"plf":["4.4482216152605","0.3048","0","0",[0,1,-2,0,0,0,0,0]],\n"point":["0.0254","72","0","0",[1,0,0,0,0,0,0,0]],\n"poise":["0.1","1","0","siWord",[-1,1,-1,0,0,0,0,0]],\n"pound":["0.45359237","1","0","0",[0,1,0,0,0,0,0,0]],\n"poundal":["4.4482216152605","32.174","0","0",[1,1,-2,0,0,0,0,0]],\n"ppm":["0.000001","1","0","0",[0,0,0,0,0,0,0,0]],\n"ppmdv":["0.000001","1","0","0",[0,0,0,0,0,0,0,0]],\n"ppmv":["0.000001","1","0","0",[0,0,0,0,0,0,0,0]],\n"ppmw":["0.000001","1","0","0",[0,0,0,0,0,0,0,0]],\n"printer's point":["0.0003515","1","0","0",[1,0,0,0,0,0,0,0]],\n"printer's ream":["516","1","0","0",[0,0,0,0,0,1,0,0]],\n"ps":["735.49875","1","0","0",[2,1,-3,0,0,0,0,0]],\n"psf":["4.4482216152605","0.09290304","0","0",[-1,1,-2,0,0,0,0,0]],\n"psi":["4.4482216152605","0.00064516","0","0",[-1,1,-2,0,0,0,0,0]],\n"psia":["6894.75729316836","1","0","0",[-1,1,-2,0,0,0,0,0]],\n"psig":["6894.75729316836","1","14.6959","0",[-1,1,-2,0,0,0,0,0]],\n"px":["0.0254","96","0","0",[1,0,0,0,0,0,0,0]],\n"pz":["1000","1","0","0",[-1,1,-2,0,0,0,0,0]],\n"quart":["0.003785411784","4","0","0",[3,0,0,0,0,0,0,0]],\n"quire":["25","1","0","0",[0,0,0,0,0,1,0,0]],\n"rad":["1","1","0","0",[0,0,0,0,0,0,0,0]],\n"radian":["1","1","0","0",[0,0,0,0,0,0,0,0]],\n"rankin":["5","9","0","0",[0,0,0,0,1,0,0,0]],\n"rd":["0.01","1","0","siSymbol",[2,0,-2,0,0,0,0,0]],\n"real":["1","1","0","BRL",[0,0,0,0,0,0,0,1]],\n"ream":["500","1","0","0",[0,0,0,0,0,1,0,0]],\n"rem":["0.01","1","0","siSymbol",[2,0,-2,0,0,0,0,0]],\n"rev":["6.28318530717959","1","0","0",[0,0,0,0,0,0,0,0]],\n"rod":["5.0292","1","0","0",[1,0,0,0,0,0,0,0]],\n"roentgen":["0.000258","1","0","siWord",[0,-1,1,1,0,0,0,0]],\n"rpm":["6.28318530717959","3600","0","0",[0,0,-1,0,0,0,0,0]],\n"ruble":["1","1","0","RUB",[0,0,0,0,0,0,0,1]],\n"röntgen":["0.000258","1","0","siWord",[0,-1,1,1,0,0,0,0]],\n"s":["1","1","0","siSymbol",[0,0,1,0,0,0,0,0]],\n"saltspoon":["0.003785411784","3072","0","0",[3,0,0,0,0,0,0,0]],\n"scf":["0.028316846592","1","0","0",[3,0,0,0,0,0,0,0]],\n"scfd":["0.028316846592","86400","0","0",[3,0,-1,0,0,0,0,0]],\n"scfh":["0.028316846592","3600","0","0",[3,0,-1,0,0,0,0,0]],\n"scfm":["0.028316846592","60","0","0",[3,0,-1,0,0,0,0,0]],\n"sea mile":["1852","1","0","0",[1,0,0,0,0,0,0,0]],\n"sec":["1","1","0","0",[0,0,1,0,0,0,0,0]],\n"second":["1","1","0","0",[0,0,1,0,0,0,0,0]],\n"section":["2589988.110336","1","0","0",[2,0,0,0,0,0,0,0]],\n"sennight":["604800","1","0","0",[0,0,1,0,0,0,0,0]],\n"sheet":["1","1","0","0",[0,0,0,0,0,1,0,0]],\n"short ream":["480","1","0","0",[0,0,0,0,0,1,0,0]],\n"short ton":["907.18474","1","0","0",[0,1,0,0,0,0,0,0]],\n"siemen":["1","1","0","siWord",[-2,-1,3,2,0,0,0,0]],\n"sievert":["1","1","0","siWord",[2,0,-2,0,0,0,0,0]],\n"slinch":["175.126835246477","1","0","0",[0,1,0,0,0,0,0,0]],\n"slug":["14.5939029372064","1","0","0",[0,1,0,0,0,0,0,0]],\n"smoot":["1.7018","1","0","0",[0,1,0,0,0,0,0,0]],\n"span":["0.2286","1","0","0",[1,0,0,0,0,0,0,0]],\n"sphere":["12.5663706143592","1","0","0",[0,0,0,0,0,0,0,0]],\n"sq ft":["0.09290304","1","0","0",[2,0,0,0,0,0,0,0]],\n"sq in":["0.00064516","1","0","0",[2,0,0,0,0,0,0,0]],\n"sq km":["1000000","1","0","0",[2,0,0,0,0,0,0,0]],\n"sq mi":["2589988.110336","1","0","0",[2,0,0,0,0,0,0,0]],\n"sq yd":["0.83612736","1","0","0",[2,0,0,0,0,0,0,0]],\n"square degree":["0.000304617419786709","1","0","0",[0,0,0,0,0,0,0,0]],\n"square meter":["1","1","0","0",[2,0,0,0,0,0,0,0]],\n"square metre":["1","1","0","0",[2,0,0,0,0,0,0,0]],\n"square mi":["2589988.110336","1","0","0",[2,0,0,0,0,0,0,0]],\n"sr":["1","1","0","siSymbol",[0,0,0,0,0,0,0,0]],\n"ssp":["0.003785411784","3072","0","0",[3,0,0,0,0,0,0,0]],\n"standard volume":["22.414","1","0","0",[3,0,0,0,0,0,0,0]],\n"statampere":["0.00000000033356","1","0","0",[0,0,0,1,0,0,0,0]],\n"statcoulomb":["0.00000000033356","1","0","0",[0,0,1,1,0,0,0,0]],\n"statfarad":["0.0000000000011126","1","0","0",[-2,-1,4,2,0,0,0,0]],\n"stathenrie":["898760000000","1","0","0",[2,1,-2,-2,0,0,0,0]],\n"stathenry":["898760000000","1","0","0",[2,1,-2,-2,0,0,0,0]],\n"statohm":["898760000000","1","0","0",[2,1,-3,-2,0,0,0,0]],\n"statvolt":["299.79","1","0","0",[2,1,-3,-1,0,0,0,0]],\n"statwatt":["0.0000001","1","0","0",[2,1,-3,0,0,0,0,0]],\n"steam horsepower":["9812.5","1","0","0",[2,1,-3,0,0,0,0,0]],\n"steradian":["1","1","0","0",[0,0,0,0,0,0,0,0]],\n"stere":["1","1","0","0",[3,0,0,0,0,0,0,0]],\n"stoke":["0.0001","1","0","0",[2,0,-1,0,0,0,0,0]],\n"stone":["6.35029318","1","0","0",[0,1,0,0,0,0,0,0]],\n"stpd":["0.0104998233796296","1","0","0",[0,1,-1,0,0,0,0,0]],\n"stunde":["3600","1","0","0",[0,0,1,0,0,0,0,0]],\n"survey feet":["1200","3937","0","0",[1,0,0,0,0,0,0,0]],\n"survey foot":["1200","3937","0","0",[1,0,0,0,0,0,0,0]],\n"Sv":["1","1","0","siSymbol",[2,0,-2,0,0,0,0,0]],\n"sverdrup":["1000000","1","0","0",[3,0,-1,0,0,0,0,0]],\n"sym":["1","1","0","siSymbol",[0,0,0,0,0,1,0,0]],\n"tablespoon":["0.003785411784","256","0","0",[3,0,0,0,0,0,0,0]],\n"tbsp":["0.003785411784","256","0","0",[3,0,0,0,0,0,0,0]],\n"teaspoon":["0.003785411784","768","0","0",[3,0,0,0,0,0,0,0]],\n"tebibyte":["8796093022208","1","0","0",[0,0,0,0,0,1,0,0]],\n"terabyte":["8796093022208","1","0","0",[0,0,0,0,0,1,0,0]],\n"tesla":["1","1","0","siSymbol",[-2,-2,-2,-1,0,0,0,0]],\n"therm":["105480400","1","0","0",[2,1,-2,0,0,0,0,0]],\n"tidal day":["89416.32","1","0","0",[0,0,1,0,0,0,0,0]],\n"ton":["907.18474","1","0","0",[0,1,0,0,0,0,0,0]],\n"tonf":["8896.443230521","1","0","0",[1,1,-2,0,0,0,0,0]],\n"ton TNT":["4184000000","1","0","0",[2,1,-2,0,0,0,0,0]],\n"ton refrigeration":["3516.8532","1","0","0",[2,1,-3,0,0,0,0,0]],\n"tonne":["1000","1","0","0",[0,1,0,0,0,0,0,0]],\n"tons TNT":["4184000000","1","0","0",[2,1,-2,0,0,0,0,0]],\n"tons refrigeration":["3516.8532","1","0","0",[2,1,-3,0,0,0,0,0]],\n"township":["93239571.972096","1","0","0",[2,0,0,0,0,0,0,0]],\n"toz":["0.0311034768","1","0","0",[0,1,0,0,0,0,0,0]],\n"tpy":["0.0000287475400032297","1","0","0",[0,1,-1,0,0,0,0,0]],\n"tropical year":["31556925.9747","1","0","0",[0,0,1,0,0,0,0,0]],\n"troy ounce":["0.0311034768","1","0","0",[0,1,0,0,0,0,0,0]],\n"tsp":["0.003785411784","768","0","0",[3,0,0,0,0,0,0,0]],\n"turn":["6.28318530717958","1","0","0",[0,0,0,0,0,0,0,0]],\n"twip":["0.0254","1440","0","0",[1,0,0,0,0,0,0,0]],\n"unit":["1","1","0","0",[0,0,0,0,0,1,0,0]],\n"vapeur":["735.49875","1","0","0",[2,1,-3,0,0,0,0,0]],\n"var":["1","1","0","siSymbol",[2,1,-3,0,0,0,0,0]],\n"varistor":["1","1","0","siWord",[2,1,-3,0,0,0,0,0]],\n"volt":["1","1","0","siWord",[2,1,-3,-1,0,0,0,0]],\n"watt":["1","1","0","siWord",[2,1,-3,0,0,0,0,0]],\n"weber":["1","1","0","siSymbol",[2,1,-2,-1,0,0,0,0]],\n"week":["604800","1","0","0",[0,0,1,0,0,0,0,0]],\n"won":["1","1","0","KRW",[0,0,0,0,0,0,0,1]],\n"wppm":["0.000001","1","0","0",[0,0,0,0,0,0,0,0]],\n"yard":["0.9144","1","0","0",[1,0,0,0,0,0,0,0]],\n"yd":["0.9144","1","0","0",[1,0,0,0,0,0,0,0]],\n"year":["31556952","1","0","0",[0,0,1,0,0,0,0,0]],\n"yen":["1","1","0","JPY",[0,0,0,0,0,0,0,1]],\n"£":["1","1","0","GBP",[0,0,0,0,0,0,0,1]],\n"¥":["1","1","0","JPY",[0,0,0,0,0,0,0,1]],\n"°":["3.14159265358979","180","0","0",[0,0,0,0,0,0,0,0]],\n"°C":["1","1","273.15","0",[0,0,0,0,1,0,0,0]],\n"°F":["5","9","459","0",[0,0,0,0,1,0,0,0]],\n"°K":["1","1","0","0",[0,0,0,0,1,0,0,0]],\n"°R":["5","9","0","0",[0,0,0,0,1,0,0,0]],\n"°R":["5","9","0","0",[0,0,0,0,1,0,0,0]],\n"Å":["0.0000000001","1","0","0",[1,0,0,0,0,0,0,0]],\n"Ω":["1","1","0","siSymbol",[2,1,-3,-2,0,0,0,0]],\n"”":["0.0254","1","0","0",[1,0,0,0,0,0,0,0]],\n"₨":["1","1","0","INR",[0,0,0,0,0,0,0,1]],\n"₪":["1","1","0","ILS",[0,0,0,0,0,0,0,1]],\n"€":["1","1","0","EUR",[0,0,0,0,0,0,0,1]],\n"℃":["1","1","273.15","0",[0,0,0,0,1,0,0,0]],\n"℉":["5","9","459","0",[0,0,0,0,1,0,0,0]],\n"Ω":["1","1","0","siSymbol",[2,1,-3,-2,0,0,0,0]],\n"K":["1","1","0","0",[0,0,0,0,1,0,0,0]],\n"Å":["0.0000000001","1","0","0",[1,0,0,0,0,0,0,0,0]]\n}`));const Qe=Object.freeze({$:"USD",US$:"USD",dollar:"USD",A$:"AUD","Australian dollar":"AUD","Brazilian Real":"BRL",real:"BRL",R$:"BRL","British Pound":"GBP","£":"GBP",C$:"CAD","Canadian dollar":"CAD","Chinese Yuan":"CNY","€":"EUR",Euro:"EUR",euro:"EUR",HK$:"HKD","Hong Kong dollar":"HKD","Indian Rupee":"IDR","₨":"IDR","Israeli New Shekel":"ILS","₪":"ILS","Mexican Peso":"MXN","Swiss Franc":"CHF",Won:"KRW",won:"KRW",yen:"JPY",Yen:"JPY","Japanese Yen":"JPY","¥":"JPY"});const Je=(e,t,n)=>{const r=e.trim();const s=r.length;const a={name:r,factor:Ue.one,gauge:Ue.zero,log:"",expos:[0,0,0,0,0,0,0,0]};if(e===""){return a}let l="";let i;let o=false;let u="";let c=false;let p=false;for(let e=1;e<3;e++){if(e===1){o=true;l=r;if(s>2){if(l.charAt(l.length-1)==="s"){if(!(l==="cfs"||s===3&l.charAt(1)==="p")){l=l.slice(0,-1)}}}let e="";if(s>3){const t=/^(yotta|zetta|exa|peta|tera|giga|mega|kilo|hecto|deka|deci|centi|milli|micro|nano|pico|femto|atto|zepto|yocto)/.exec(l);if(t){e=t[0].value;o=true;l=l.slice(e.length)}}}else{o=false;u=l.charAt(0);if("YZEPTGMkhdcmnpfazyµμ".indexOf(u)>-1){o=true;l=l.substring(1)}}if(n&&Object.hasOwnProperty.call(n.value.columnMap,l)){const e=n.value.columnMap[l];const t=n.unit[n.value.units[e]];a.factor=Ue.multiply(Ue.fromString(n.value.data[e][0]),t.factor);a.expos=t.expos;return a}if(o){i=Ke[l];if(i){p=true}if(e===1&&p&&u===""){break}else if(p){if(e===1){p=i[3]==="siWord";c=true;break}else{p=i[3]==="siSymbol";c=true}}}}if(p){a.gauge=Ue.fromString(i[2]);a.expos=Object.freeze(i[4]);if(a.expos[7]===1){const e=Qe[l]?Qe[l]:l;if(t&&t.value.has(e)){a.factor=Ue.reciprocal(t.value.get(e))}else{i=Ke[e];if(i[0]==="0"){return C("CURRENCY")}else{a.factor=Ue.reciprocal(Ue.fromString(i[0]))}}}else{a.factor=Ue.divide(Ue.fromString(i[0]),Ue.fromString(i[1]))}if(c){a.factor=Ue.multiply(a.factor,Ue.fromNumber(Ze[u]))}}else{return C("UNIT_NAME",r)}return Object.freeze(a)};const et=/[0-9·\-⁰¹²³\u2074-\u2079⁻/^()]/;const tt=/[0-9-]/;const nt=(e,t)=>{if(!e){return{name:null,factor:null,gauge:null,log:"",expos:null}}const n=t.currencies;const r=t.units?t.units:null;let s=e.trim();s=s.replace(/[*.•×\-−](?![0-9.])/g,"·");const a={name:s,factor:Ue.one,gauge:Ue.zero,log:"",expos:f};if(s===""){return a}else if(s==="°"||s==="°ʹ"||s==="degMinSec"){a.factor=Ue.fromString("0.0174532925199433");return a}else if(s==="feetInch"){a.unitExpos=[1,0,0,0,0,0,0,0];a.factor=Ue.fromString("0.3048");return a}else if(s==="″"||s==="ʹʹ"){a.unitExpos=[1,0,0,0,0,0,0,0];a.factor=Ue.fromString("0.0254");return a}const l=";";let i=false;let o="";let u="";let c="";let p="";const m=[];let h=0;const g=[{symbol:"",prec:-1}];let y="";for(let e=0;e<s.length;e++){o=s.charAt(e);if(tt.test(o)){if(!i){c+=l;p+=l;g.push({symbol:"^",prec:3});i=true}c+=o;p+=o}else if(I.test(o)){if(!i){c+=l;p+=l;g.push({symbol:"^",prec:3});i=true}const e=N(o);c+=e;p+=e}else if(o==="^"){c+=l;p+=l;g.push({symbol:"^",prec:3});i=true}else if(o==="·"||o==="/"){i=false;c+=l;p+=l;while(g[g.length-1].prec>=1){const e=g.pop().symbol;c+=e+l;p+=e+l}g.push({symbol:o,prec:1})}else if(o==="("){g.push({symbol:"(",prec:0})}else if(o===")"){while(g[g.length-1].prec>0){const e=g.pop().symbol;c+=e+l;p+=e+l}g.pop();i=false}else if(o==="-"){i=true;g.push({symbol:"^",prec:3});g.push({symbol:"-",prec:2});c+=l;p+=l}else{i=false;let t;for(t=e+1;t<s.length;t++){if(et.test(s.charAt(t))){break}}u=s.substring(e,t);y=Je(u,n,r);if(y.dtype&&y.dtype===d.ERROR){return y}if(y.factor===0){a.name="";return a}c+=String(y.factor[0])+","+String(y.factor[1]);p+="¿"+h;m.push(y.expos);h+=1;e=t-1}}if(u===a.name){return Object.freeze(y)}while(g.length>1){const e=g.pop().symbol;c+=l+e;p+=l+e}const b=[];const R=[];const v=c.split(l);const A=p.split(l);let O=1;let E;h=0;for(let e=0;e<v.length;e++){if(/[·/\-^]/.test(v[e])){O=b.pop();E=R.pop()}switch(v[e]){case"·":b[b.length-1]=Ue.multiply(b[b.length-1],O);R[R.length-1]=R[R.length-1].map(((e,t)=>e+E[t]));break;case"/":if(Ue.isZero(O)){return C("DIV")}b[b.length-1]=Ue.divide(b[b.length-1],O);R[R.length-1]=R[R.length-1].map(((e,t)=>e-E[t]));break;case"^":b[b.length-1]=Ue.power(b[b.length-1],O);R[R.length-1]=R[R.length-1].map((e=>e*E));break;case"-":b[b.length-1]=Ue.negate(b[b.length-1]);break;default:if(v[e].indexOf(",")>-1){const t=v[e].split(",");b.push([BigInt(t[0]),BigInt(t[1])])}else{b.push([BigInt(v[e]),BigInt(1)])}if(A[e].charAt(0)==="¿"){R.push(m[h]);h+=1}else{R.push(A[e])}}}a.factor=Object.freeze(b.pop());a.expos=Object.freeze(R.pop());return Object.freeze(a)};const rt=[Ue.zero,Ue.one];const st=e=>Array.isArray(e)&&e.length===2&&Ue.isRational(e[0])&&Ue.isRational(e[1]);const at=e=>e[0];const lt=e=>e[1];const it=e=>Ue.hypot(e[0],e[1]);const ot=e=>[Ue.negate(e[0]),Ue.negate(e[1])];const ut=e=>[e[0],Ue.negate(e[1])];const ct=e=>{if(Ue.isZero(e[0])&&Ue.isZero(e[1])){return C("ORIGIN","argument")}else if(Ue.isZero(e[1])){return Ue.isPositive(e[0])?Ue.zero:Ue.pi}else if(Ue.isZero(e[0])){return Ue.isPositive(e[1])?Ue.divide(Ue.pi,Ue.two):Ue.negate(Ue.divide(Ue.pi,Ue.two))}else{return Ue.fromNumber(Math.atan2(Ue.toNumber(e[1]),Ue.toNumber(e[0])))}};const pt=(e,t)=>[Ue.add(e[0],t[0]),Ue.add(e[1],t[1])];const ft=(e,t)=>[Ue.subtract(e[0],t[0]),Ue.subtract(e[1],t[1])];const dt=(e,t)=>[Ue.subtract(Ue.multiply(e[0],t[0]),Ue.multiply(e[1],t[1])),Ue.add(Ue.multiply(e[0],t[1]),Ue.multiply(e[1],t[0]))];const mt=(e,t)=>{if(!Ue.isZero(e[1])&&!Ue.isZero(t[1])){if(Ue.lessThan(Ue.abs(t[1]),Ue.abs(t[0]))){const n=Ue.divide(t[1],t[0]);const r=Ue.add(t[0],Ue.multiply(t[1],n));return[Ue.divide(Ue.add(e[0],Ue.multiply(e[1],n)),r),Ue.divide(Ue.subtract(e[1],Ue.multiply(e[0],n)),r)]}else{const n=Ue.divide(t[0],t[1]);const r=Ue.add(t[1],Ue.multiply(t[0],n));return[Ue.divide(Ue.add(e[1],Ue.multiply(e[0],n)),r),Ue.divide(Ue.add(Ue.negate(e[0]),Ue.multiply(e[1],n)),r)]}}else if(Ue.isZero(e[1])){if(Ue.lessThan(Ue.abs(t[1]),Ue.abs(t[0]))){const n=Ue.divide(t[1],t[0]);const r=Ue.add(t[0],Ue.multiply(t[1],n));return[Ue.divide(e[0],r),Ue.negate(Ue.multiply(e[0],Ue.divide(n,r)))]}else{const n=Ue.divide(t[0],t[1]);const r=Ue.add(t[1],Ue.multiply(t[0],n));return[Ue.divide(Ue.multiply(e[0],n),r),Ue.negate(Ue.divide(e[0],r))]}}else if(Ue.isZero(t[1])){if(Ue.isZero(t[0]));else{return[Ue.divide(e[0],t[0]),Ue.divide(e[1],t[0])]}}else{if(Ue.isZero(t[0])){return C("DIV")}else{return[Ue.divide(e[0],t[0]),Ue.zero]}}};const ht=e=>[Ue.increment(e[0]),e[1]];const gt=e=>[Ue.decrement(e[0]),e[1]];const yt=e=>{if(Ue.isZero(e[1])){if(Ue.isZero(e[0])){return C("DIV")}return[Ue.inverse(e[0]),0]}else{return mt([Ue.one,Ue.zero],e)}};const bt=e=>{const t=Ue.multiply(Ue.cos(e[0]),Ue.cosh(e[1]));const n=Ue.multiply(Ue.negate(Ue.sin(e[0])),Ue.sinh(e[1]));return[t,n]};const Rt=e=>{const t=Ue.multiply(Ue.sin(e[0]),Ue.cosh(e[1]));const n=Ue.multiply(Ue.cos(e[0]),Ue.sinh(e[1]));return[t,n]};const vt=e=>{let t=[Ue.zero,Ue.zero];if(Ue.isZero(e[0])&&Ue.isZero(e[1])){return C("ORIGIN","log")}else{t[0]=Ue.fromNumber(Math.log(Ue.toNumber(Ue.hypot(e[0],e[1]))));t[1]=ct(e)}return t};const At=e=>Ue.lessThan(Ue.abs(e),[BigInt(1),BigInt(1e14)]);const Nt=e=>{let t=[Ue.zero,Ue.zero];if(At(e[1])){t[1]=Ue.zero;t[0]=Ue.exp(e[0])}else{if(Ue.isZero(e[0])){t[0]=Ue.cos(e[1]);if(At(t[0])){t[0]=Ue.zero}t[1]=Ue.sin(e[1]);if(At(t[1])){t[1]=Ue.zero}}else{const n=Ue.exp(e[0]);t[0]=Ue.multiply(n,Ue.cos(e[1]));t[1]=Ue.multiply(n,Ue.sin(e[1]))}}return t};const Ot=(e,t)=>{let n=[Ue.zero,Ue.zero];if(!st(t)){n=vt(e);n[0]=Ue.multiply(n[0],t);n[1]=Ue.multiply(n[1],t)}else if(Ue.isZero(t[1])){n=vt(e);n[0]=Ue.multiply(n[0],t[0]);n[1]=Ue.multiply(n[1],t[0])}else if(Ue.isZero(e[1])&&!Ue.isNegative(e[0])){e[0]=Ue.fromNumber(Math.log(Ue.toNumber(e[0])));n[0]=Ue.multiply(e[0],t[0]);n[1]=Ue.multiply(e[0],t[1])}else{e=vt(e);n[0]=Ue.subtract(Ue.multiply(e[0],t[0]),Ue.multiply(e[1],t[1]));n[1]=Ue.add(Ue.multiply(e[1],t[0]),Ue.multiply(e[0],t[1]))}n=Nt(n);if(At(n[1])){n[1]=Ue.zero}if(At(n[0])){n[0]=Ue.zero}return n};const Et=e=>vt(pt(e,dt(Lt(gt(e)),Lt(ht(e)))));const xt=e=>{const t=Lt(pt(dt(e,e),[Ue.one,Ue.zero]));return vt(pt(e,t))};const Tt=e=>mt(ft(vt(ht(e)),vt(ft([Ue.one,Ue.zero],e))),[Ue.two,Ue.zero]);const It=e=>mt(xt(dt(rt,e)),rt);const Mt=e=>{const t=vt(ht(dt(rt,e)));const n=vt(ft([Ue.one,Ue.zero],dt(rt,e)));return mt(ft(t,n),[Ue.zero,Ue.two])};const Lt=e=>{const t=vt(e);t[0]=Ue.divide(t[0],Ue.two);t[1]=Ue.divide(t[1],Ue.two);return Nt(t)};const Ct=t=>{const n=ft(t,[Ue.one,Ue.zero]);const r=Ue.sqrt(Ue.divide(e,pi));const s=dt([Ue.two,Ue.zero],[r,Ue.zero]);const a=Ue.fromNumber(11.400511);const l=[[BigInt(1),BigInt(2)],Ue.zero];const i=Ot(mt(pt(n,[a,Ue.zero]),[e,Ue.zero]),pt(n,l));const o=["2.48574089138753565546e-5","1.05142378581721974210","-3.45687097222016235469","4.51227709466894823700","-2.98285225323576655721","1.05639711577126713077","-0.195428773191645869583","0.0170970543404441224307","-0.000571926117404305781283","0.00000463399473359905636708","-0.00000000271994908488607703910"];let u=[Ue.fromString(o[0]),Ue.zero];for(let e=1;e<=10;e++){const t=[Ue.fromString(t[e]),Ue.zero];const r=[Ue.fromNumber(e),Ue.zero];u=pt(u,mt(t,pt(n,r)))}return dt(dt(s,i),u)};const wt=(e,t,n)=>{const r=/[j∠°]/.test(t)?t.slice(-1):"j";let s="";let a="";if(r==="j"){const r=He(e[0],t,n);let l=He(e[1],t,n);if(l.charAt(0)==="-"){l="("+l+")"}s=r+" + j"+l;a=r+" + j"+l}else{const l=Ue.hypot(e[0],e[1]);let i=St.argument(result.value);if(r==="°"){i=Ue.divide(Ue.multiply(i,Ue.fromNumber(180)),Ue.pi)}s=He(l,t,n)+"∠"+He(i,t,n)+(r==="°"?"°":"");a=s}return[s,a]};const St=Object.freeze({j:rt,re:at,im:lt,abs:it,conjugate:ut,argument:ct,inverse:yt,increment:ht,decrement:gt,isComplex:st,add:pt,subtract:ft,divide:mt,multiply:dt,negate:ot,power:Ot,exp:Nt,log:vt,sqrt:Lt,sin:Rt,cos:bt,asin:It,atan:Mt,acosh:Et,asinh:xt,atanh:Tt,lanczos:Ct,display:wt});const kt=e=>e.dtype&d.ROWVECTOR||e.dtype&d.COLUMNVECTOR||e.dtype&d.MATRIX;const Ut=e=>(e.dtype&d.ROWVECTOR||e.dtype&d.COLUMNVECTOR)>0;const Dt=(e,t,n)=>{let r=Ut(e)?e.value.map((e=>Ue.divide(e,n))):e.value.map((e=>e.map((e=>Ue.divide(e,n)))));if(!Ue.isZero(t)){r=Ut(e)?e.value.map((e=>Ue.subtract(e,t))):e.value.map((e=>e.map((e=>Ue.subtract(e,t)))))}return Object.freeze(r)};const _t=(e,t,n)=>{let r=h(e.value);if(!Ue.isZero(t)){r=Ut(e)?e.value.map((e=>Ue.add(e,t))):e.value.map((e=>e.map((e=>Ue.add(e,t)))))}r=Ut(e)?r.map((e=>Ue.multiply(e,n))):r.map((e=>e.map((e=>Ue.multiply(e,n)))));return Object.freeze(r)};const Bt=(e,t,n)=>{let r="\\begin";if(e.dtype&d.MATRIX){r+="{pmatrix}";const s=e.value.length;const a=e.value[1].length;for(let l=0;l<s;l++){for(let s=0;s<a;s++){r+=He(e.value[l][s],t,n)+" &"}r=r.slice(0,-1)+" \\\\ "}r=r.slice(0,-3).trim();r+="\\end{pmatrix}"}else{r+="{bmatrix}";const s=e.dtype&d.ROWVECTOR?" & ":" \\\\ ";if(e.value.plain){const a=e.value.plain.length;for(let l=0;l<a;l++){r+=He(e.value.plain[l],t,n)+(l<a-1?s:"")}}else{const a=e.value.length;for(let l=0;l<a;l++){const i=e.value[l]===undefined?"":e.dtype&d.RATIONAL?He(e.value[l],t,n):e.dtype&d.COMPLEX?St.display(e.value[l],t,n)[0]:e.dtype&d.BOOLEAN||e.dtype&d.STRING?"\\text{"+e.value[l]+"}":e.value[l];r+=i+(l<a-1?s:"")}}r+="\\end{bmatrix}"}return r};const Pt=(e,t,n)=>{let r="";if(e.dtype&d.MATRIX){r+="(";const s=e.value.length;const a=e.value[1].length;for(let l=0;l<s;l++){for(let s=0;s<a;s++){r+=He(e.value[l][s],t,n).replace(/{,}/g,",")+", "}r=r.slice(0,-2)+"; "}r=r.slice(0,-2).trim();r+=")"}else{r+="[";const s=e.dtype&d.ROWVECTOR?", ":"; ";if(e.value.plain){const a=e.value.plain.length;for(let l=0;l<a;l++){r+=He(e.value.plain[l],t,n).replace(/{,}/g,",")+(l<a-1?s:"")}}else{const a=e.value.length;for(let l=0;l<a;l++){const i=e.value[l]===undefined?"":e.dtype&d.RATIONAL?He(e.value[l],t,n).replace(/{,}/g,","):e.dtype&d.COMPLEX?St.display(e.value[l],t,n)[1].replace(/{,}/g,","):e.value[l];r+=i+(l<a-1?s:"")}}r+="]"}return r};const zt=(e,t,n)=>{let r="\\begin{Bmatrix}";Object.keys(e).forEach((s=>{const a=e[s];r+="\\text{"+s+"}: \\begin{bmatrix}";const l=a.plain.length;if(a.plain){for(let e=0;e<l;e++){r+=He(a.plain[e],t,n)+(e<l-1?", ":"")}}else{for(let e=0;e<l;e++){const s=Ue.isRational(a[e])?He(a[e],t,n):typeof a[e]==="boolean"||typeof a[e]==="string"?"\\text{"+a[e]+"}":a[e];r+=s+(e<l-1?" & ":"")}}r+="\\end{bmatrix} \\\\"}));r=r.slice(0,-2)+"\\end{Bmatrix}";return r};const jt=(e,t,n)=>{let r="{";Object.keys(e).forEach((s=>{const a=e[s];r+=s+": [";const l=a.plain.length;if(a.plain){for(let e=0;e<l;e++){r+=He(a.plain[e],t,n)+(e<l-1?", ":"").replace(/{,}/g,",")+" "}}else{for(let e=0;e<l;e++){const s=Ue.isRational(a[e])?He(a[e],t,n).replace(/{,}/g,",")+" ":String(a[e])+"}";r+=s+(e<l-1?" ":"")}}r+="];"}));return r.slice(0,-1)+"}"};const Gt=(e,t)=>{const n=Ue.isRational(e)?Ue.toNumber(e):e;if(n===1){return[Ue.one]}else{const e=[];for(let t=0;t<n;t++){e.push(new Array(n).fill(Ue.zero));e[t][t]=Ue.one}return t?e:Object.freeze(e)}};const Ft=(e,t)=>{if(e.length!==e[0].length){return C("NONSQUARE")}const n=e.length;let r=0;let s=0;let a=0;let l=Ue.zero;let i=Ue.one;const o=h(e);const u=Gt(n,true);for(r=0;r<n;r+=1){l=o[r][r];if(Ue.isZero(l)){for(s=r+1;s<n;s++){if(!Ue.isZero(o[s][r])){for(a=0;a<n;a++){l=o[r][a];o[r][a]=o[s][a];o[s][a]=l;l=u[r][a];u[r][a]=u[s][a];u[s][a]=l}break}}l=o[r][r];if(Ue.isZero(l)){return C("SINGULAR")}}if(t){i=Ue.divide(i,l);if(r===n-1){return i}}for(a=0;a<n;a++){o[r][a]=Ue.divide(o[r][a],l);u[r][a]=Ue.divide(u[r][a],l)}for(s=0;s<n;s++){if(s===r){continue}l=o[s][r];for(a=0;a<n;a++){o[s][a]=Ue.subtract(o[s][a],Ue.multiply(l,o[r][a]));u[s][a]=Ue.subtract(u[s][a],Ue.multiply(l,u[r][a]))}}}return Object.freeze(u)};const Vt=(e,t,n)=>{if(!(t.dtype&d.RATIONAL||t.dtype&d.RANGE)){return C("BAD_INDEX")}let r=[];let s=e.dtype;let a=0;let l=1;let i=0;if(t.dtype&d.RANGE){a=Ue.toNumber(t.value[0]);l=Ue.toNumber(t.value[1]);i=t.value[2]==="∞"?e.value.length:Ue.toNumber(t.value[2])}else if(Ue.areEqual(t.value,Ue.zero)){a=1;i=e.value.length}else{a=Ue.toNumber(t.value);i=a}if(Ut(e)){if(a===i){r=e.value[a-1];s=e.dtype-(e.dtype&d.ROWVECTOR)-(e.dtype&d.COLUMNVECTOR)}else if(l===1){r=e.value.slice(a-1,i)}else{for(let t=a-1;t<i;t+=l){r.push(e.value[t])}}Object.freeze(r);return Object.freeze({value:r,unit:e.unit,dtype:s})}let o=0;let u=1;let c=0;if(n){if(n.dtype&d.RANGE){o=Ue.toNumber(n.value[0]);u=Ue.toNumber(n.value[1]);c=n.value[2]==="∞"?e.value[0].length:Ue.toNumber(n.value[2])}else if(Ue.areEqual(n.value,Ue.zero)){o=1;c=e.value[0].length}else{o=Ue.toNumber(n.value);c=o}}if(a===i&&o===c){r=e.value[a-1][o-1];s-=d.MATRIX}else if(a===i){if(u===1){r=e.value[a-1].slice(o-1,c)}else{for(let t=o-1;t<c;t+=u){r.push(e.value[a-1][t])}}s=s-d.MATRIX+d.ROWVECTOR}else if(o===c){for(let t=a-1;t<i;t+=l){r.push(e.value[t][o-1])}s=s-d.MATRIX+d.COLUMNVECTOR}else if(u===1){for(let t=a-1;t<i;t+=l){r.push([]);r[r.length-1]=e.value[t].slice(o-1,c)}}else{for(let t=a-1;t<i;t+=l){r.push([]);for(let n=o-1;n<c;n+=u){r[r.length-1].push(e[t][n])}}}Object.freeze(r);return Object.freeze({value:r,unit:e.unit,dtype:s})};const qt=(e,t)=>{if(e.dtype&d.ROWVECTOR&&t.dtype&d.COLUMNVECTOR){return d.RATIONAL}else if(e.dtype&d.MATRIX&&t.dtype&d.COLUMNVECTOR){return t.dtype}else if(e.dtype&d.ROWVECTOR&&t.dtype&d.MATRIX){return e.dtype}else{return d.MATRIX+d.RATIONAL}};const Wt=e=>{const t=[];if(Ue.greaterThan(e[2],e[0])){for(let n=e[0];Ue.lessThan(n,e[2]);n=Ue.add(n,e[1])){t.push(n)}}else{for(let n=e[0];Ue.greaterThanOrEqualTo(n,e[2]);n=Ue.add(n,e[1])){t.push(n)}}if(!Ue.areEqual(t[t.length-1],e[2])){t.push(e[2])}Object.freeze(t);return Object.freeze({value:t,unit:{expos:f},dtype:d.RATIONAL+d.ROWVECTOR})};const $t=(e,t,n)=>{if(t===0&&n===0){return Object.freeze({value:new Array(0),unit:null,dtype:d.ROWVECTOR})}else if(t===1&&n===1){return e.pop()}else if(t===1||n===1){const r=Math.max(t,n);let s;let a=e[e.length-1].dtype;if(t===1&&a&d.COLUMNVECTOR){a=a-d.COLUMNVECTOR+d.MATRIX;s=new Array(e[0].value.length);for(let t=0;t<e[0].value.length;t++){s[t]=[];for(let n=0;n<r;n++){s[t][n]=e[n].value[t]}}for(let t=0;t<r;t++){e.pop()}}else{s=new Array(r);a+=t===1?d.ROWVECTOR:d.COLUMNVECTOR;for(let t=r-1;t>=0;t--){s[t]=e.pop().value}}Object.freeze(s);return Object.freeze({value:s,unit:a&d.RATIONAL?{expos:f}:null,dtype:a})}else{const r=new Array(t);const s=e[e.length-1].dtype+d.MATRIX;for(let e=0;e<t;e++){r[e]=new Array(n)}for(let s=t-1;s>=0;s--){for(let t=n-1;t>=0;t--){r[s][t]=e.pop().value}}Object.freeze(r);return Object.freeze({value:r,unit:s&d.RATIONAL?{expos:f}:null,dtype:s})}};const Yt=(e,t)=>{if(e===1){return{value:new Array(t).fill(Ue.zero),unit:f,dtype:d.RATIONAL+d.ROWVECTOR}}else if(t===1){return{value:new Array(e).fill(Ue.zero),unit:f,dtype:d.RATIONAL+d.COLUMNVECTOR}}else{const n=[];for(let r=0;r<e;r++){n.push(new Array(t).fill(Ue.zero))}Object.freeze(n);return Object.freeze({value:n,unit:{expos:f},dtype:d.RATIONAL+d.MATRIX})}};const Ht=Object.freeze({convertFromBaseUnits:Dt,convertToBaseUnits:_t,display:Bt,displayAlt:Pt,displayMapOfVectors:zt,displayAltMapOfVectors:jt,identity:Gt,invert:Ft,isVector:Ut,multResultType:qt,operandFromRange:Wt,operandFromTokenStack:$t,submatrix:Vt,zeros:Yt});const Xt=(e,t)=>{const n=[];for(let r=e;r<=t;r++){n.push(r)}return n};const Zt=e=>e==="true"?true:e==="false"?false:Jt.test(e)?Ue.fromString(e):e===""?undefined:e;const Kt=(e,t)=>e===true?"true":e===false?"false":e=t===d.RATIONAL?"0 "+String(e[0])+"/"+String(e[1]):e;const Qt=(e,t,n,r)=>{let s;let a;const l=[];let i=[];let o=Object.create(null);if(e.value.data[0].length===1){s=0;a=0;for(let n=0;n<t.length;n++){if(t[n].dtype===d.STRING){i.push(e.value.columnMap[t[n].value])}else if(t[n].dtype===d.RATIONAL){i.push(Ue.toNumber(t[n].value))}else if(t[n].dtype===d.RANGE){const e=Ue.toNumber(t[n].value[0]);const r=Ue.toNumber(t[n].value[1]);for(let t=e;t<=r;t++){i.push(t)}}}}else if(t.length===1&&t[0].dtype===d.RATIONAL){s=Ue.toNumber(t[0].value)-1;a=s;i=Xt(0,e.value.data.length-1)}else if(t.length===1&&t[0].dtype===d.RANGE){s=Ue.toNumber(t[0].value[0])-1;a=Ue.toNumber(t[0].value[1])-1;i=Xt(0,e.value.data.length-1)}else if(t.length===1&&t[0].dtype===d.STRING){if(e.value.rowMap&&t[0].value in e.value.rowMap){s=e.value.rowMap[t[0].value];a=s;i=Xt(0,e.value.data.length-1)}else if(e.value.columnMap&&t[0].value in e.value.columnMap){s=0;a=e.value.data[0].length-1;i.push(e.value.columnMap[t[0].value])}else{return C("BAD_ROW_NAME",t[0].value)}}else if(t.length===1&&t[0].dtype===d.STRING+d.COLUMNVECTOR){for(const e of t[0].value){l.push(e)}i=Xt(0,e.value.data.length-1)}else if(t.length===1&&t[0].dtype===d.STRING+d.ROWVECTOR){s=0;a=e.value.data[0].length;for(const n of t[0].value){i.push(e.columnIndicator[n])}}else if(t.length===2&&t[0].dtype===d.STRING&&e.value.rowMap&&t[0].value in e.value.rowMap&&t[1].dtype===d.STRING&&e.value.columnMap&&t[0].value in e.value.columnMap){s=e.value.rowMap[t[0].value];a=s;i.push(e.value.columnMap[t[0].value])}if(l.length===0&&s===a&&i.length===1){let t=e.value.dtype[i[0]];if(t&d.QUANTITY){t-=d.QUANTITY}const a=i[0];let l=Zt(e.value.data[a][s]);o.expos=t&d.RATIONAL?f:null;if(r&&e.value.units[a]){const t=e.value.units[a]?e.value.units[a]:undefined;const r=nt(t,n);l=Ue.multiply(Ue.add(l,r.gauge),r.factor);o.expos=r.expos}return{value:l,unit:o,dtype:t}}else if(i.length===1){const t=i[0];const n=e.value.units[t]?e.value.units[t]:{};o=e.unit&&e.unit[n]?e.unit[n]:{expos:null};const l=e.value.data[t].slice(s,a+1).map((e=>Zt(e)));const u=e.value.dtype[t]+d.COLUMNVECTOR;const c={value:l,name:e.value.headings[t],unit:o,dtype:u};if(r&&o.gauge){return{value:Ht.convertToBaseUnits(c,o.gauge,o.factor),name:e.value.headings[t],unit:{expos:h(o.expos)},dtype:d.RATIONAL+d.COLUMNVECTOR}}else{return c}}else{const t=[];const n=[];const r=[];const o=[];const u=Object.create(null);const c=Object.create(null);const p=l.length===0?false:Object.create(null);for(let f=0;f<i.length;f++){t.push(e.value.headings[i[f]]);const d=e.value.units[i[f]];n.push(d);if(d&&!c[d]){c[d]=e.unit[d]}r.push(e.value.dtype[i[f]]);u[e.value.headings[f]]=f;if(l.length>0){const t=[];for(let n=0;n<l.length;n++){const r=l[n];t.push(e.value.data[i[f]][e.value.rowMap[r]]);p[r]=n}o.push(t)}else{o.push(e.value.data[i[f]].slice(s,a+1))}}return{value:{data:o,headings:t,columnMap:u,rowMap:false,units:n,dtype:r},unit:h(c),dtype:d.DATAFRAME}}};const Jt=new RegExp("^(?:=|"+Ue.numberPattern.slice(1)+"$)");const en=/^-?(?:[0-9]+(?: [0-9]+\/[0-9]+))$/;const tn=(e,t)=>{const n=[];const r=[];const s=Object.create(null);let a=false;const l=[];const i=[];const o=Object.create(null);let u=false;const c=e.indexOf("\t")>-1?"\t":"|";if(e.charAt(0)==="`"){e=e.slice(1)}let p=0;let m=0;const h=e=>{let r=false;for(let e=0;e<n.length;e++){if(Jt.test(n[e][0])){r=true;break}}if(!r){for(let e=0;e<n.length;e++){if(Jt.test(n[e][1])){u=true;break}}}if(u){for(let e=0;e<n.length;e++){const r=n[e].shift();l.push(r);if(r.length>0){if(!o[r]){const e=nt(r,t);if(e){o[r]=e}else{return C("DF_UNIT",r)}}}}if(a){Object.entries(a).forEach((([e,t])=>{a[e]=t-1}))}}};const g=/^(?:[Nn]ame|[Ii]tem|[Ll]able)$/;const y=e=>{e=e.trim();if(p===3&&m===0){h()}if(p===0){r.push(e);s[e]=m;if(m===0&&(e.length===0||g.test(e))){a=Object.create(null)}}else{if(p===1){n.push([])}if(e==="sumAbove()"){let t=Ue.zero;for(const e of n[m]){if(!isNaN(e)){t=Ue.add(t,Ue.fromString(e))}}e=String(Ue.toNumber(t))}n[m].push(e);if(a&&m===0){a[e]=p-1-(u?1:0)}}};if(e.indexOf('"')===-1){const t=e.split(/\r?\n/g);for(const e of t){if(e.length>0){m=0;const t=e.split(c);for(const e of t){y(e.trim());m++}p+=1}}if(p===3){h()}}else{let t="";let n=false;for(let r=0;r<e.length;r++){const s=e[r];const a=e[r+1];if(s==='"'&&n&&a==='"'){t+=s;++r;continue}if(s==='"'){n=!n;continue}if(s===c&&!n){y(t);t="";++m;continue}if(s==="\r"&&a==="\n"&&!n){y(t);t="";++p;m=0;++r;continue}if(s==="\n"&&!n){y(t);t="";++p;m=0;++r;continue}if(s==="\r"&&!n){y(t);t="";++p;m=0;++r;continue}t+=s}if(t.length>0){y(t)}if(p===2){h()}}for(let e=0;e<n.length;e++){for(let t=0;t<n[0].length;t++){const r=n[e][t];if(r===""){continue}i.push(Jt.test(r)?d.RATIONAL+(l.length>0&&l[e].length>0?d.QUANTITY:0):r==="true"||r==="false"?d.BOOLEAN:d.STRING);break}}let b=false;if(n[0].length===1&&Object.keys(o).length===0){b=true;for(let e=1;e<i.length;e++){if(i[e]!==i[0]){b=false;break}}}if(b){const e=new Map;const t=Object.keys(s);for(let r=0;r<t.length;r++){e.set(t[r],Zt(n[r][0]))}return{value:e,unit:i[0]===d.RATIONAL?f:null,dtype:d.MAP+i[0]}}else{return{value:{data:n,headings:r,columnMap:s,rowMap:a,units:l,dtype:i},unit:o,dtype:d.DATAFRAME}}};const nn=(e,t)=>{const n=[];const r=[];const s=Object.create(null);const a=[];const l=[];const i=Object.create(null);const o=e[0].name&&e[0].name==="name"?Object.create(null):false;for(let u=0;u<e.length;u++){const c=e[u];const p=c.dtype&d.ROWVECTOR?d.ROWVECTOR:c.dtype&d.COLUMNVECTOR?d.COLUMNVECTOR:d.ERROR;if(p===d.ERROR){return C("NOT_VECTOR")}r.push(c.name);s[c.name]=u;const f=c.dtype-p;n.push(c.value.map((e=>Kt(e,f))));l.push(f);if(c.unit.name){a.push(c.unit.name);if(!i[c.unit.name]){const e=nt(c.unit.name,t);i[c.unit.name]=e}}else{a.push(null)}if(o){const t=e[0].value;for(let e=0;e<t.length;e++){o[t[e]]=e}}}return{value:{data:n,headings:r,columnMap:s,rowMap:o,units:a,dtype:l},unit:i,dtype:d.DATAFRAME}};const rn=(e,t,n,r)=>{const s=[];for(let t=0;t<=e.value[0].length;t++){s.push([])}const a=n.value;a.unshift("");const l=Object.create(null);for(let e=1;e<n.value[0].length;e++){l[a[e]]=e}const i=d.RATIONAL+(e.unit?d.QUANTITY:0);const o=Array(e.value[0].length).fill(i);o.unshift(null);let u=[];const c=Object.create(null);if(e.unit.name){u=Array(e.value[0].length).fill(e.unit.name);u.unshift("");c[e.unit.name]=nt(e.unit.name,r)}const p=Object.create(null);s[0]=t.value;const f=r.format?r.format.value:"h15";for(let e=0;e<t.value.length;e++){p[s[0][e]]=e}for(let t=0;t<e.value.length;t++){for(let n=0;n<e.value[0].length;n++){const r=e.value[t][n];s[n+1].push(He(r,f,"1000000."))}}return{value:{data:s,headings:a,columnMap:l,rowMap:p,units:u,dtype:o},unit:c,dtype:d.DATAFRAME}};const sn=(e,t,n,r)=>{const s=h(e);const a=e.value.data[0].length;if(a!==t.value.length){return C("BAD_CONCAT")}s.value.headings.push(t.name);s.value.columnMap[t.name]=e.value.headings.length-1;const l=t.dtype&d.COLUMNVECTOR?t.dtype-d.COLUMNVECTOR:t.dtype-d.ROWVECTOR;if(t.unit.name&&t.unit.name.length>0){s.value.units.push(t.unit.name);const e=nt(t.unit.name,n);if(!s.unit[t.unit.name]){s.unit[t.unit.name]=e}if(r){const n=Ht.convertFromBaseUnits(t,e.gauge,e.factor);s.value.data.push(n.map((e=>Kt(e,l))))}else{s.value.data.push(t.value.map((e=>Kt(e,l))))}}else{s.value.units.push(null)}s.value.dtype.push(l);return s};const an=e=>{if(e===""){return""}e=A(e.trim());const t=e.indexOf("\t")>-1?/ *\t */g:/ *\| */g;const n=e.split(/\r?\n/g);let r="";if(n.length<3){r="\\begin{matrix}\\text{";for(let e=0;e<n.length;e++){r+=x(n[e]).replace(t,"} & \\text{")+"} \\\\ \\text{"}r=r.slice(0,-10)+"\\end{matrix}"}else{r="\\begin{array}{l|cccccccccccccccccccccccc}\\text{";const e=new Array(n.length);for(let r=0;r<n.length;r++){e[r]=x(n[r]).split(t)}let s=false;let a=false;for(let t=0;t<e[1].length;t++){if(Jt.test(e[1][t])){a=true;break}}if(!a){for(let t=0;t<e[2].length;t++){if(Jt.test(e[2][t])){s=true;break}}}for(let e=0;e<n.length;e++){r+=x(n[e]).replace(t,"} & \\text{");r+=s&&e===1||!s&&e===0?"} \\\\ \\hline \\text{":"} \\\\ \\text{"}r=r.slice(0,-10)+"\\end{array}"}r=r.replace(/·/g,"$·$");return r};const ln=/^(?:[A-Za-zıȷ\u0391-\u03C9\u03D5\u210B\u210F\u2110\u2112\u2113\u211B\u212C\u2130\u2131\u2133]|(?:\uD835[\uDC00-\udc33\udc9c-\udcb5]))[A-Za-z0-9_\u0391-\u03C9\u03D5\u0300-\u0308\u030A\u030C\u0332\u20d0\u20d1\u20d6\u20d7\u20e1]*′*$/;const on=/^([^\u0300-\u0308\u030A\u030C\u0332\u20d0\u20d1\u20d6\u20d7\u20e1]+)([\u0300-\u0308\u030A\u030C\u0332\u20d0\u20d1\u20d6\u20d7\u20e1])(.+)?/;const un=/([^_]+)(_[^']+)?(.*)?/;const cn=Object.freeze({"̀":"\\grave","́":"\\acute","̂":"\\hat","̃":"\\tilde","̄":"\\bar","̅":"\\bar","̇":"\\dot","̈":"\\ddot","̊":"\\mathring","̌":"\\check","̲":"\\underline","⃐":"\\overleftharpoon","⃑":"\\overrightharpoon","⃖":"\\overleftarrow","⃗":"\\vec","⃡":"\\overleftrightarrow"});const pn=e=>{if(!ln.test(e)){return"\\text{"+A(e)+"}"}else{e=e.replace(/′/g,"'");let t=e.match(on);if(t){e=cn[t[2]]+"{"+t[1]+"}";return e+(t[3]?t[3]:"")}else{t=e.match(un);let n=t[1].length>1?`\\text{${t[1]}}`:t[1];if(t[2]){n+="_"+`\\text{${t[2].slice(1)}}`}return n+(t[3]?t[3]:"")}}};const fn=e=>{for(let t=0;t<e.length;t++){if(e[t]!==""&&e[t]!==null){return true}}return false};const dn=e=>{const t=e.data.length;const n=new Array(t);const r=new Array(t);for(let s=0;s<t;s++){if(e.dtype[s]&d.RATIONAL){n[s]={hasAlignChar:false,maxLenAfterAlignChar:0};r[s]=[];for(let t=0;t<e.data[0].length;t++){const a=e.data[s][t];const l=a.indexOf(".");const i=l>-1;const o=i?a.length-l-1:0;r[s].push({hasAlignChar:i,lenAfterAlignChar:o});if(i){n[s].hasAlignChar=true;if(o>n[s].maxLenAfterAlignChar){n[s].maxLenAfterAlignChar=o}}}}}return[n,r]};const mn=(e,t,n,r)=>{let s=$e(e,r);const a=t.maxLenAfterAlignChar-n.lenAfterAlignChar;if(t.hasAlignChar&&(a>0||!n.hasAlignChar)){s+="\\phantom{";if(t.hasAlignChar&&!n.hasAlignChar){s+=r.slice(-1)==="."?".":"{,}"}if(a>0){s+="0".repeat(a)}s+="}"}return s};const hn=/^(?:total|sum)/i;const gn=(e,t="h3",n="1,000,000.",r=false)=>{if(e.data.length===0){return""}const s=e.data[0].length;const a=e.data.length;const l=s>5&&!e.rowMap;const i=a+(l?1:0);let o="\\begin{array}{";o+=e.rowMap?"l|":l?"r|":"";for(let t=1;t<i;t++){o+=e.dtype[t]&d.RATIONAL?"r ":"l "}o=o.slice(0,-1)+"}";if(!r){if(l){o+="&"}for(let t=0;t<a;t++){o+="{"+pn(e.headings[t])+"}&"}o=o.slice(0,-1)+" \\\\ "}if(fn(e.units)){if(l){o+="&"}for(let t=0;t<a;t++){let n="";if(e.units[t]&&e.units[t].length>0){const r=M(e.units[t]);n=r.replace("\\;\\, ","")}else{n=""}o+=n+"&"}o=o.slice(0,-1)+" \\\\ "}o+="\\hline ";const[u,c]=dn(e);for(let r=0;r<s;r++){if(r===s-1&&hn.test(e.data[0][r])){o+="\\hline "}if(l){o+=String(r+1)+" & "}for(let s=0;s<a;s++){const a=e.data[s][r];o+=en.test(a)?He(Ue.fromString(a),t,n)+"&":Jt.test(a)?mn(a,u[s],c[s][r],n)+"&":a===""?"&":"\\text{"+A(a)+"}&"}o=o.slice(0,-1)+" \\\\ "}o=o.slice(0,-3).trim();o+="\\end{array}";return o};const yn=(e,t="h3",n=false)=>{if(e.data.length===0){return""}const r=e.data[0].length;const s=e.data.length;const a=r>5&&!e.rowMap;let l="``";if(!n){if(a){l+="|"}l+=(e.headings[0]==="name"||e.headings[0]==="item"?"":e.headings[0])+"|";for(let t=1;t<s;t++){l+=e.headings[t]+"|"}l=l.slice(0,-1)+"\n"}if(fn(e.units)){if(a){l+="|"}for(let t=0;t<s;t++){l+=e.units[t]+"|"}l=l.slice(0,-1)+"\n"}for(let n=0;n<r;n++){if(a){l+=String(n+1)+"|"}for(let r=0;r<s;r++){const s=e.data[r][n];if(en.test(s)){l+=He(Ue.fromString(s),t,"100000.")+"|"}else{l+=s+"|"}}l=l.slice(0,-1)+"\n"}l=l.slice(0,-1).trim();l+="``";return l};const bn=Object.freeze({append:sn,dataFrameFromCSV:tn,dataFrameFromVectors:nn,matrix2table:rn,display:gn,displayAlt:yn,quickDisplay:an,range:Qt});const Rn=(e,t)=>{let n;let r;if(e.expos&&t.expos){n=e.expos;r=t.expos}else{n=e;r=t}if(Array.isArray(n)){if(Array.isArray(r)){if(n.length!==r.length){return false}n.forEach(((e,t)=>{if(e!==r[t]){return false}}));return true}else{return false}}else{return n===r}};const vn=(e,t,n,r)=>{let s;let a;if(e.dtype&d.MAP){if(r!=="scalar"){return C("BAD_APPEND",r)}s=e;a=t}else{if(n!=="scalar"){return C("BAD_APPEND",n)}s=t;a=e}if(!(s.dtype&a.dtype)){C("MAP_APPEND")}if(!Rn(s.unit,a.unit)){C("UNIT_APEND")}s.value.set(a.name,a.value);return s};const An=(e,t,n)=>{e=g(e,(e=>Ue.divide(e,n)));if(!Ue.isZero(t)){e=g(e,(e=>Ue.subtract(e,t)))}return e};const Nn=(e,t,n)=>{if(!Ue.isZero(t)){e=g(e,(e=>Ue.add(e,t)))}return g(e,(e=>Ue.multiply(e,n)))};const On=(e,t,n,r=false)=>{const s=e.value.plain?e.value.plain:e.value;let a="";let l="";for(const[e,r]of s.entries()){a+=pn(e)+" & ";l+=He(r,t,n)+" & "}a=a.slice(0,-3);l=l.slice(0,-3);let i="\\begin{array}{c}";if(!r){i+=a+" \\\\ \\hline "}i+=l+"\\end{array}";if(e.unit&&e.unit.name){i+="\\;"+M(e.unit.name)}return i};const En=(e,t,n,r=false)=>{const s=e.value.plain?e.value.plain:e.value;let a="";let l="";for(const[e,r]of s.entries()){a+=e+" | ";l+=He(r,t,n)+" | "}a=a.slice(0,-3);l=l.slice(0,-3);let i="``";if(!r){i+=a+"\n"}i+=l+"``";if(e.unit&&e.unit.name){i=`${i} '${e.unit.name}'`}return i};const xn=(e,t,n,r)=>{if(!e.value.has(t)){return C("BAD_KEY",t)}const s=h(e.value.get(t));if(!n){return{value:s,unit:e.unit,dtype:e.dtype-d.MAP}}else if(r){return{value:s,unit:{expos:e.unit.expos},dtype:e.dtype-d.MAP}}else{return{value:s,unit:f,dtype:e.dtype-d.MAP}}};const Tn=(e,t,n)=>{for(let e=0;e<t.length;e++){if(t[e].dtype===d.RATIONAL){return C("NUM_KEY")}t[e]=t[e].value}if(t.length===1){const r=e.dtype&d.RATIONAL;const s=t.length>1||n;return xn(e,t[0],r,s)}else{const n=new Map;for(let r=0;r<t.length;r++){n.set(t[r],e.value.get(t[r]))}return{value:n,unit:e.unit,dtype:e.dtype}}};const In=Object.freeze({append:vn,convertFromBaseUnits:An,convertToBaseUnits:Nn,display:On,displayAlt:En,valueFromMap:Tn});const Mn=Object.freeze({UNARY:0,BINARY:1,SUB:2,SUP:3,ACCENT:4,UNARYMINUS:5,DIV:6,PRIME:7,CURRENCY:8,ORD:9,VAR:10,NUM:11,SPACE:12,LONGVAR:13,LEFTBRACKET:14,RIGHTBRACKET:15,UNDEROVER:16,LEFTRIGHT:17,STRING:18,UNIT:19,BIN:20,ADD:21,MULT:22,REL:23,LOGIC:24,SEP:25,FUNCTION:26,ACCESSOR:28,ENVIRONMENT:29,FACTORIAL:30,SUPCHAR:31,ANGLE:32,ELLIPSIS:33,KEYWORD:34,PROPERTY:36,COMMENT:37,RETURN:38,TO:39,DATAFRAME:40,RICHTEXT:41});const Ln=/^-(?![-=<>:])/;const Cn=new RegExp(Ue.numberPattern);const wn=/^(?:'[^']+'|[°ΩÅK])/;const Sn=(e,t)=>{let n="";if(e[2]){n="\\mathrm{"+e[2]+"}"}else if(e[5]){return Fe(e)}else{n=e[3];if(e[6]){n+="."+e[6]}n=$e(n,t);if(e[8]){n+="\\%"}else if(e[7]){if(e[7].charAt(0)==="-"){n+="\\text{e-}"+e[7].slice(1)}else{n+="\\text{e}"+e[7]}}}if(e[1]){n="\\text{-}"+n}return n};const kn=e=>{switch(e.ttype){case Mn.NUM:case Mn.ORD:case Mn.VAR:case Mn.RIGHTBRACKET:case Mn.LONGVAR:case Mn.CURRENCY:case Mn.SUPCHAR:case Mn.PRIME:case Mn.FACTORIAL:return false;default:return true}};const Un=/^(?:(?:[A-Za-zıȷ\u0391-\u03C9\u03D5\u212C\u2130\u2131\u210B\u2110\u2112\u2133\u211B\u212F\u210A\u2113\u2134]|(?:\uD835[\uDC00-\udc33\udc9c-\udccf\udd38-\udd50]))[A-Za-z0-9_\u0391-\u03C9\u03D5\u0300-\u0308\u030A\u030C\u0332\u20d0\u20d1\u20d6\u20d7\u20e1]*|!in|-->|->|left\.|right\.|log10|log2)/;const Dn=Object.freeze({true:["true","\\mathord{\\text{true}}",Mn.ORD,""],false:["false","\\mathord{\\text{false}}",Mn.ORD,""],j:["j","j",Mn.ORD,""],cos:["cos","\\cos",Mn.FUNCTION,""],cosd:["cosd","\\operatorname{\\cos_d}",Mn.FUNCTION,""],if:["if","\\mathrel{\\mathrm{if}}",Mn.LOGIC,""],else:["else","\\mathrel{\\mathrm{else}}",Mn.LOGIC,""],and:["and","\\mathrel{\\mathrm{and}}",Mn.LOGIC,""],or:["or","\\mathrel{\\mathrm{or}}",Mn.LOGIC,""],for:["for","\\mathrel{\\mathrm{for}}",Mn.KEYWORD,""],while:["while","\\mathrel{\\mathrm{while}}",Mn.KEYWORD,""],in:["in","\\mathrel{\\mathrm{in}}",Mn.KEYWORD,""],break:["break","\\mathrel{\\mathrm{break}}",Mn.KEYWORD,""],to:["to","\\mathbin{\\mathrm{to}}",Mn.TO,""],raise:["raise","\\mathrel{\\mathrm{raise}}",Mn.UNARY,""],echo:["echo","\\mathrel{\\mathrm{echo}}",Mn.UNARY,""],return:["return","\\mathrel{\\mathrm{return}}",Mn.RETURN,""],sqrt:["sqrt","\\sqrt",Mn.UNARY,""],otherwise:["otherwise","\\mathrel{\\mathrm{otherwise}}",Mn.LOGIC,""],root:["root","\\sqrt",Mn.BINARY,""],sin:["sin","\\sin",Mn.FUNCTION,""],sind:["sind","\\operatorname{\\sin_d}",Mn.FUNCTION,""],tan:["tan","\\tan",Mn.FUNCTION,""],tand:["tand","\\operatorname{\\tan_d}",Mn.FUNCTION,""],cotd:["cotd","\\operatorname{\\cot_d}",Mn.FUNCTION,""],secd:["secd","\\operatorname{\\sec_d}",Mn.FUNCTION,""],cscd:["cscd","\\operatorname{\\csc_d}",Mn.FUNCTION,""],log:["log","\\log",Mn.FUNCTION,""],ln:["ln","\\ln",Mn.FUNCTION,""],log10:["log10","\\log_{10}",Mn.FUNCTION,""],log2:["log2","\\log_{2}",Mn.FUNCTION,""],"log!":["log!","\\operatorname{log!}",Mn.FUNCTION,""],"π":["π","π",Mn.ORD,""],"ℓ":["ℓ","ℓ",Mn.VAR,""],modulo:["modulo","\\operatorname{modulo}",Mn.MULT,""],"->":["->","→",Mn.REL,""],"--\x3e":["--\x3e","\\xrightarrow",Mn.UNARY,""],"<--\x3e":["<--\x3e","\\xrightleftarrows",Mn.UNARY,""]});const _n=/^([/÷\u2215_:,;^+\\\-–−*×∘⊗⦼⊙√∛∜·.%∘|╏‖¦><=≈≟≠≡≤≥≅∈∉⋐!¡‼¬∧∨⊻~#?⇒⟶⟵→←&@′″∀∃∫∬∮∑([{⟨⌊⎿⌈⎾〖〗⏋⌉⏌⌋⟩}\])˽∣ℂℕℚℝℤℓℏ∠¨ˆˉ˙˜▪✓\u00A0\u20D7$£¥€₨₩₪]+)/;const Bn=Object.freeze({"#":["#","#",Mn.COMMENT,""],"/":["/","\\dfrac{",Mn.DIV,""],"//":["//","\\tfrac{",Mn.DIV,""],"///":["///","/",Mn.MULT,""],"∕":["∕","∕",Mn.MULT,""],"÷":["÷","÷",Mn.MULT,""],_:["_","_",Mn.SUB,""],"^":["^","^",Mn.SUP,""],"+":["+","+",Mn.ADD,""],"-":["-","-",Mn.ADD,""],"–":["-","-",Mn.ADD,""],"−":["-","-",Mn.ADD,""],"*":["*","*",Mn.MULT,""],"×":["×","×",Mn.MULT,""],"∘":["∘","\\circ",Mn.MULT,""],"⊗":["⊗","⊗",Mn.MULT,""],"√":["√","\\sqrt",Mn.UNARY,""],"∛":["∛","\\sqrt[3]",Mn.UNARY,""],"∜":["∜","\\sqrt[4]",Mn.UNARY,""],"+-":["+-","±",Mn.BIN,""],"**":["**","\\star",Mn.BIN,""],"·":["·","⋅",Mn.MULT,""],"...":["...","\\dots",Mn.ORD,""],"%":["%","\\%",Mn.FACTORIAL,""],"^*":["^*","^*",Mn.FACTORIAL,""],"-:":["-:","÷",Mn.MULT,""],"=":["=","=",Mn.REL,""],"≈":["≈","≈",Mn.REL,""],"==":["==","==",Mn.REL,""],"≡":["≡","≡",Mn.REL,""],">":[">","\\gt",Mn.REL,""],"<":["<","\\lt",Mn.REL,""],"?=":["?=","≟",Mn.REL,""],"≟":["≟","≟",Mn.REL,""],"≠":["≠","≠",Mn.REL,""],"!=":["!=","≠",Mn.REL,""],"<>":["<>","≠",Mn.REL,""],":=":[":=","≔",Mn.REL,""],"<=":["<=","≤",Mn.REL,""],"≤":["≤","≤",Mn.REL,""],">=":[">=","≥",Mn.REL,""],"≥":["≥","≥",Mn.REL,""],"-=":["-=","≡",Mn.REL,""],"~=":["~=","≅",Mn.REL,""],"≅":["≅","≅",Mn.REL,""],"~~":["~~","≈",Mn.REL,""],"~":["~","\\sim",Mn.REL,""],"=>":["=>","⇒",Mn.REL,""],"⟶":["⟶","\\xrightarrow",Mn.UNARY,""],"⟵":["⟵","\\xleftarrow",Mn.UNARY,""],"⇒":["⇒","⇒",Mn.REL,""],"<=>":["<=>","⇔",Mn.REL,""],"-<":["-<","≺",Mn.REL,""],">-":[">-","≻",Mn.REL,""],"-<=":["-<=","⪯",Mn.REL,""],">-=":[">-=","⪰",Mn.REL,""],"_|_":["_|_","\\bot",Mn.REL,""],"|--":["|--","⊢",Mn.REL,""],"|==":["|==","\\models",Mn.REL,""],"∈":["∈","∈",Mn.REL,""],"∉":["∉","∉",Mn.REL,""],"⋐":["⋐","⋐",Mn.REL,""],"▪":["▪","\\mathrel{▪}",Mn.REL,""],"!":["!","!",Mn.FACTORIAL,""],"‼":["‼","!!",Mn.FACTORIAL,""],"!!":["!!","!!",Mn.FACTORIAL,""],"¡":["¡","¡",Mn.FACTORIAL,""],"&":["&","\\mathbin{\\&}",Mn.ADD,""],"&_":["&_","\\mathbin{\\underline{\\&}}",Mn.ADD,""],"′":["′","'",Mn.PRIME,""],"″":["″","''",Mn.PRIME,""],"′′":["′′","''",Mn.PRIME,""],"′′′":["′′′","'''",Mn.PRIME,""],"∀":["∀","∀",Mn.LOGIC,""],"∃":["∃","∃",Mn.LOGIC,""],"∧":["∧","∧",Mn.LOGIC,""],"∨":["∨","∨",Mn.LOGIC,""],"⊻":["⊻","⊻",Mn.LOGIC,""],"¬":["¬","¬",Mn.UNARY,""],":":[":",":",Mn.LOGIC,""],"∫":["∫","∫",Mn.UNDEROVER,""],"∬":["∬","∬",Mn.UNDEROVER,""],"∮":["∮","∮",Mn.UNDEROVER,""],"∑":["∑","∑",Mn.UNDEROVER,""],"(":["(","(",Mn.LEFTBRACKET,")"],"[":["[","[",Mn.LEFTBRACKET,"]"],"{":["{","\\{",Mn.LEFTBRACKET,"\\}"],"{:":["{:","{",Mn.LEFTBRACKET,"}"],"⟨":["⟨","⟨",Mn.LEFTBRACKET,"⟩"],")":[")",")",Mn.RIGHTBRACKET,""],"]":["]","]",Mn.RIGHTBRACKET,""],"}":["}","\\}",Mn.RIGHTBRACKET,""],"⟩":["⟩","⟩",Mn.RIGHTBRACKET,""],":}":[":}","}",Mn.RIGHTBRACKET,""],"|":["|","|",Mn.LEFTRIGHT,""],"||":["||","\\Vert ",Mn.LEFTRIGHT,""],"‖":["‖","\\Vert ",Mn.LEFTRIGHT,""],"<<":["<<","⟨",Mn.LEFTBRACKET,"⟩"],">>":[">>","⟩",Mn.RIGHTBRACKET,""],"⎿":["⎿","\\lfloor ",Mn.LEFTBRACKET,"\\rfloor "],"⌋":["⌋","\\rfloor ",Mn.RIGHTBRACKET,""],"⏌":["⏌","\\rfloor ",Mn.RIGHTBRACKET,""],"⌈":["⌈","\\lceil ",Mn.LEFTBRACKET,"\\rceil "],"⎾":["⎾","\\lceil ",Mn.LEFTBRACKET,"\\rceil "],"⌉":["⌉","\\rceil ",Mn.RIGHTBRACKET,""],"⏋":["⏋","\\rceil ",Mn.RIGHTBRACKET,""],"〖":["〖","{",Mn.LEFTBRACKET,"}"],"〗":["〗","}",Mn.RIGHTBRACKET,""],"¦":["¦","\\mid ",Mn.REL,""],"ℂ":["ℂ","ℂ",Mn.ORD,""],"ℕ":["ℕ","ℕ",Mn.ORD,""],"ℚ":["ℚ","ℚ",Mn.ORD,""],"ℝ":["ℝ","ℝ",Mn.ORD,""],"ℤ":["ℤ","ℤ",Mn.ORD,""],"ℏ":["ℏ","ℏ",Mn.ORD,""],"→":["→","→",Mn.REL,""],"←":["←","←",Mn.REL,""],">->":[">->","↣",Mn.REL,""],"->>":["->>","↠",Mn.REL,""],"|->":["|->","↦",Mn.REL,""],"<--":["<--","\\xleftarrow",Mn.UNARY,""],"==>":["==>","\\xRightarrow",Mn.UNARY,""],"<==":["<==","\\xLeftarrow",Mn.UNARY,""],"<--\x3e":["<--\x3e","\\xleftrightarrow",Mn.UNARY,""],"<==>":["<==>","\\xLeftrightarrow",Mn.UNARY,""],"∠":["∠","∠",Mn.ANGLE,""],"✓":["✓","✓",Mn.ORD,""],"˽":["˽","~",Mn.SPACE,""],"\\,":["\\,",",\\:",Mn.SEP,""],"\\;":["\\;",";\\:",Mn.SEP,""],"…":["…","…",Mn.ORD,""],"..":["..","..",Mn.RANGE,""],",":[",",",\\:",Mn.SEP,""],";":[";",";\\:",Mn.SEP,""],$:["$","\\$",Mn.CURRENCY,""],"£":["£","£",Mn.CURRENCY,""],"¥":["¥","¥",Mn.CURRENCY,""],"€":["€","€",Mn.CURRENCY,""],"₨":["₨","₨",Mn.CURRENCY,""],"₩":["₩","₩",Mn.CURRENCY,""],"₪":["₪","₪",Mn.CURRENCY,""]});const Pn=/^(\\[A-Za-z]+\.?|\\([:.!\u0020]|'+))/;const zn=Object.freeze({"\\aleph":["\\aleph","ℵ",Mn.VAR,""],"\\beth":["\\beth","ℶ",Mn.VAR,""],"\\gimel":["gimel","ℷ",Mn.VAR,""],"\\daleth":["daleth","ℸ",Mn.VAR,""],"\\atop":["\\atop","\\atop{",Mn.DIV,""],"\\cdots":["\\cdots","⋯",Mn.BIN,""],"\\vdots":["\\vdots","⋮",Mn.BIN,""],"\\ddots":["\\ddots","⋱",Mn.BIN,""],"\\iff":["\\iff","\\iff",Mn.LOGIC,""],"\\land":["\\land","\\land",Mn.BIN,""],"\\lor":["\\lor","\\lor",Mn.BIN,""],"\\in":["\\in","∈",Mn.REL,""],"\\notin":["\\notin","∉",Mn.REL,""],"\\Subset":["\\Subset","⋐",Mn.REL,""],"\\left.":["\\left.","\\left.",Mn.LEFTBRACKET,"\\right."],"\\right.":["\\right.","\\right.",Mn.RIGHTBRACKET,""],"\\mod":["\\mod","\\mod",Mn.BIN,""],"\\diamond":["\\diamond","\\diamond",Mn.ORD,""],"\\square":["\\square","\\square",Mn.ORD,""],"\\int":["\\int","\\int",Mn.UNDEROVER,""],"\\iint":["\\iint","\\iint",Mn.UNDEROVER,""],"\\iiint":["\\iiint","\\iiint",Mn.UNDEROVER,""],"\\oint":["\\oint","\\oint",Mn.UNDEROVER,""],"\\oiint":["\\oiint","\\oiint",Mn.UNDEROVER,""],"\\oiiint":["\\oiiint","\\oiiint",Mn.UNDEROVER,""],"\\over":["\\over","\\dfrac{",Mn.DIV],"\\sum":["\\sum","\\sum",Mn.UNDEROVER,""],"\\prod":["\\prod","\\prod",Mn.UNDEROVER,""],"\\quad":["\\quad","\\quad",Mn.SPACE,""],"\\qquad":["\\qquad","\\qquad",Mn.SPACE,""]});const jn=Object.freeze(["Bbb","Overrightarrow","acute","bar","bm","bold","boldsymbol","breve","check","ddot","dot","frak","grave","hat","mathbb","mathbf","mathcal","mathfrak","mathit","mathnormal","mathring","mathrm","mathscr","mathsf","mathtt","overbrace","overgroup","overleftarrow","overleftharpoon","overleftrightarrow","overline","overrightarrow","overrightharpoon","tilde","underbrace","undergroup","underleftarrow","underleftrightarrow","underline","underrightarrow","utilde","vec","widecheck","widehat","widetilde"]);const Gn=Object.freeze(["arccos","arcsin","arctan","arctg","arcctg","cos","cosec","cosh","cot","cotg","coth","csc","ctg","cth","det","dim","exp","gcd","lg","lim","ln","log","max","min","sec","sin","sinh","sh","sqrt","sup","tan","tanh","tg","th"]);const Fn=Object.freeze(["blue","gray","green","orange","pink","purple","red"]);const Vn=Object.freeze(["bcancel","boxed","cancel","clap","color","llap","mathclap","not","operatorname","phantom","pu","rlap","sout","sqrt","tag","textbf","textit","textmd","textnormal","textrm","textsc","textsf","texttt","textup","xLeftarrow","xLeftrightarrow","xRightarrow","xcancel","xleftarrow","xleftrightarrow","xleftharpoondown","xleftharpoons","xleftharpoonup","xlongequal","xmapsto","xrightarrow","xrightharpoondown","xrightharpoonup","xrightleftarrows","xrightleftharpoons","xtofrom","xtwoheadleftarrow","xtwoheadrightarrow"]);const qn=Object.freeze(["dfrac","frac","lower","overset","raisebox","stackrel","tag","tfrac","underset"]);const Wn=Object.freeze(["Bumpeq","Colonapprox","Coloneq","Coloneqq","Colonsim","Darr","Doteq","Downarrow","Eqcolon","Eqqcolon","Harr","Larr","Leftarrow","Leftrightarrow","Lleftarrow","Longleftarrow","Longleftrightarrow","Longrightarrow","Lrarr","Lsh","Rarr","Rightarrow","Rrightarrow","Rsh","Supset","Subset","Uarr","Uparrow","Updownarrow","Vdash","Vvdash","approx","approxeq","asymp","backepsilon","backsim","backsimeq","between","bowtie","bumpeq","circeq","circlearrowleft","circlearrowright","colonapprox","coloneq","coloneqq","colonsim","cong","curlyeqprec","curlyeqsucc","curvearrowleft","curvearrowright","dArr","darr","dashleftarrow","dashrightarrow","dashv","dblcolon","doteq","doteqdot","downarrow","downdownarrows","downharpoonleft","downharpoonright","eqcirc","eqcolon","eqqcolon","eqsim","eqslantgtr","eqslantless","equiv","fallingdotseq","frown","ge","geq","geqq","geqslant","gets","gg","ggg","gggtr","gnapprox","gneq","gneqq","gnsim","gt","gtrapprox","gtreqless","gtreqqless","gtrless","gtrsim","gvertneqq","hArr","harr","hookleftarrow","hookrightarrow","iff","impliedby","implies","in","isin","Join","gets","impliedby","implies","in","isin","lArr","larr","le","leadsto","leftarrow","leftarrowtail","leftharpoondown","leftharpoonup","leftleftarrows","leftrightarrow","leftrightarrows","leftrightharpoons","leftrightsquigarrow","leq","leqq","leqslant","lessapprox","lesseqgtr","lesseqqgtr","lessgtr","lesssim","ll","lll","llless","lnapprox","lneq","lneqq","lnsim","longleftarrow","longleftrightarrow","longmapsto","longrightarrow","looparrowleft","looparrowright","lrArr","lrarr","lt","lvertneqq","mapsto","mid","models","multimap","nLeftarrow","nLeftrightarrow","nRightarrow","nVDash","nVdash","ncong","ne","nearrow","neq","nexists","ngeq","ngeqq","ngeqslant","ngtr","ni","nleftarrow","nleftrightarrow","nleq","nleqq","nleqslant","nless","nmid","notin","notni","nparallel","nprec","npreceq","nrightarrow","nshortmid","nshortparallel","nsim","nsubseteq","nsubseteqq","nsucc","nsucceq","nsupseteq","nsupseteqq","ntriangleleft","ntrianglelefteq","ntriangleright","ntrianglerighteq","nvDash","nvdash","nwarrow","owns","parallel","perp","pitchfork","prec","precapprox","preccurlyeq","preceq","precnapprox","precneqq","precnsim","precsim","propto","rArr","rarr","restriction","rightarrow","rightarrowtail","rightharpoondown","rightharpoonup","rightleftarrows","rightleftharpoons","rightrightarrows","rightsquigarrow","risingdotseq","searrow","shortmid","shortparallel","sim","simeq","smallfrown","smallsmile","smile","sqsubset","sqsubseteq","sqsupset","sqsupseteq","sub","sube","subset","subseteq","subseteqq","subsetneq","subsetneqq","succ","succapprox","succcurlyeq","succeq","succnapprox","succneqq","succnsim","succsim","supe","supset","supseteq","supseteqq","supsetneq","supsetneqq","swarrow","thickapprox","thicksim","to","trianglelefteq","triangleq","trianglerighteq","twoheadleftarrow","twoheadrightarrow","uArr","uarr","uparrow","updownarrow","upharpoonleft","upharpoonright","upuparrows","varpropto","varsubsetneq","varsubsetneqq","varsupsetneq","varsupsetneqq","vartriangle","vartriangleleft","vartriangleright","vcentcolon","vdash","vDash"]);const $n=/^⁻?[²³¹⁰⁴⁵⁶⁷⁸⁹]+/;const Yn=e=>[e[0],e[1],e[2],e[3]];const Hn=Object.freeze({"̀":"\\grave","́":"\\acute","̂":"\\hat","̃":"\\tilde","̄":"\\bar","̅":"\\bar","̇":"\\dot","̈":"\\ddot","̊":"\\mathring","̌":"\\check","̲":"\\underline","⃐":"\\overleftharpoon","⃑":"\\overrightharpoon","⃖":"\\overleftarrow","⃗":"\\vec","⃡":"\\overleftrightarrow"});const Xn=Object.freeze({"̀":"\\grave","́":"\\acute","̂":"\\widehat","̃":"\\widetilde","̄":"\\overline","̅":"\\overline","̇":"\\dot","̈":"\\ddot","̊":"\\mathring","̌":"\\check","̲":"\\underline","⃐":"\\overleftharpoon","⃑":"\\overrightharpoon","⃖":"\\overleftarrow","⃗":"\\overrightarrow","⃡":"\\overleftrightarrow"});const Zn=e=>{const t=e.indexOf("_");return t===-1?e:e.slice(0,t+1)+"{"+e.slice(t+1)+"}"};const Kn=e=>{const t=e.slice(-1);if(/[\u0300-\u0308\u030A\u030C\u0332\u20d0\u20d1\u20d6\u20d7\u20e1]/.test(t)){e=e.slice(0,-1);return e==="i"?Hn[t]+"{ı}":e==="j"?Hn[t]+"{ȷ}":e.length===1?Hn[t]+"{"+e+"}":Xn[t]+"{"+e+"}"}else{return e}};const Qn=(e,t)=>{const n=Un.exec(e);if(n){let r=n[0].replace(/_*$/,"");const s=e.charAt(r.length);const a=Dn[r];if(a&&s!=="′"){return a}else if(/^\(/.test(s)){return t.ttype===Mn.ACCENT?[r,r+"}{",Mn.FUNCTION,""]:r==="sqrt"?[r,"\\sqrt",Mn.UNARY,""]:r==="f"?[r,r,Mn.FUNCTION,""]:m(r,Gn)?[r,"\\"+r,Mn.FUNCTION,""]:[r,"\\operatorname{"+Zn(r)+"}",Mn.FUNCTION,""]}else if(t.ttype===Mn.ACCESSOR){return[r,r,Mn.PROPERTY,""]}else if(/[_\u0300-\u0308\u030A\u030C\u0332\u20d0\u20d1\u20d6\u20d7\u20e1]/.test(r)){let t="";if(r.indexOf("_")===-1){t=Kn(r);return[r,t,r.length>2?Mn.LONGVAR:Mn.VAR,""]}else{const n=r.split("_");for(let e=n.length-1;e>=0;e--){n[e]=Kn(n[e]);if(e>0){n[e]="_\\text{"+n[e]+"}"}}t=n.join("");const s=/^′*/.exec(e.slice(r.length));if(s){r+=s[0];t+="'".repeat(s[0].length)}const a=t.indexOf("_");if(a>-1){t=t.slice(0,a)+"{"+t.slice(a)+"}"}return[r,t,n[0].length>1?Mn.LONGVAR:Mn.VAR,""]}}else if(r.length===2&r.charAt(0)==="\ud835"){return[r,r,Mn.VAR,""]}else if(r.length>1){return[r,r,Mn.LONGVAR,""]}else{if(r.charAt(0)==="\ud835"){return[r.substring(0,2),r.substring(0,2),Mn.VAR,""]}else{return[r.charAt(0),r.charAt(0),Mn.VAR,""]}}}};const Jn=(e,t,n,r=false)=>{let s=0;let a="";let l;if(e.charAt(0)==='"'){s=e.indexOf('"',1);if(s>0){a=e.substring(1,s).replace(/\r?\n.*/,"");return['"'+a+'"',a,Mn.STRING,""]}else{return[e,e.replace(/\r?\n.*/,""),Mn.STRING,""]}}if(/^#/.test(e)){a=e.slice(2);s=a.indexOf("\n");if(s>-1){const e=a.indexOf("\n");if(e>-1&&e<s){s=e}}if(s>-1){a=a.slice(0,s)}return[`#${a}`,`\\text{\\texttt{ \\#${a}}}`,Mn.COMMENT,""]}if(/^``/.test(e)){s=e.indexOf("`",e.charAt(2)==="`"?3:2);const n=s>0?e.slice(2,s):e.slice(2);const a=x(n);let l="";if(r){l=bn.quickDisplay(a)}else{const e=bn.dataFrameFromCSV(a,{});if(e.dtype===d.DATAFRAME){l=bn.display(e.value,"h3",t)}else{l=In.display(e,"h3",t)}}return["``"+n+"``",l,Mn.DATAFRAME,""]}if(e.charAt(0)==="`"){s=e.indexOf("`",1);if(s>0){a=e.substring(1,s).replace(/\r?\n.*/,"");return["`"+a+"`",a,Mn.RICHTEXT,""]}else{return[e,e.replace(/\r?\n.*/,""),Mn.RICHTEXT,""]}}if(wn.test(e)){s=e.indexOf("'",1);if(s>0){a=e.substring(1,s);return["'"+a+"'",M(a),Mn.UNIT,""]}else{return[e.charAt(0),e.charAt(0),Mn.UNIT,""]}}l=Pn.exec(e);if(l){const e=l[0];a=e.substring(1);if(m(a,jn)){return[e,e,Mn.ACCENT,""]}if(m(a,Vn)){return[e,e,Mn.UNARY,""]}if(m(a,Fn)){return[e,"\\textcolor{"+a+"}",Mn.UNARY,""]}if(m(a,qn)){return[e,e,Mn.BINARY,""]}if(m(a,Wn)){return[e,e,Mn.REL,""]}const t=zn[e];if(t){return Yn(t)}return[e,e,Mn.ORD,""]}if(Ln.test(e)){if(kn(n)){const n=e.match(Cn);if(n){a=Sn(n,t);return[n[0],a,Mn.NUM,""]}}return["-","-",Mn.ADD,""]}const i=e.match(Cn);if(i){a=Sn(i,t);return[i[0],a,Mn.NUM,""]}if(/^_[([{]/.test(e)){return["_","_",Mn.SUB,""]}const o=Qn(e,n);if(o){return Yn(o)}const u=$n.exec(e);if(u){return[u[0],u[0],Mn.SUPCHAR,""]}l=_n.exec(e);if(l){const e=l[0];for(let t=e.length;t>=1;t--){a=e.substr(0,t);if(Bn[a]){return Yn(Bn[a])}}}const c=e.charAt(0);if(c==="."&&(n.ttype===Mn.VAR||n.ttype===Mn.LONGVAR||n.ttype===Mn.STRING||n.input==="]"||n.ttype===Mn.PROPERTY)){return[".","{.}",Mn.ACCESSOR,""]}return[c,A(c),Mn.VAR,""]};const er=["Gamma","Im","Re","abs","acos","acosd","acosh","acot","acotd","acoth","acsc","acscd","acsch","argument","asec","asecd","asech","asin","asind","asinh","atan","atan2","atand","atanh","binomial","chr","cos","cosd","cosh","cosh","cot","cotd","coth","coth","count","csc","cscd","csch","csch","exp","fetch","format","gcd","hypot","isNaN","length","lerp","ln","log","log10","log2","logFactorial","logGamma","logn","logΓ","matrix2table","random","rms","round","roundSig","roundn","sec","secd","sech","sech","sign","sin","sind","sinh","startSvg","string","tan","tand","tanh","tanh","trace","transpose","zeros","Γ"];const tr=["accumulate","dataframe","max","mean","median","min","product","range","stddev","sum","variance"];const nr=["cos","cosd","cot","cotd","csc","cscd","sec","secd","sin","sind","tand","tan"];const rr=e=>{const t=Ue.fromString(e);return"®"+String(t[0])+"/"+String(t[1])};const sr=/^(:?\uD835[\uDC9C-\uDCCF]|[\udc9d\udca0\udca1\udca3\udca4\udca7\udca8\udcad\udcba\udcbc\udcc1\udcc4])/;const ar={"ℬ":"B","ℰ":"E","ℱ":"F","ℋ":"H","ℐ":"I","ℒ":"L","ℳ":"M","ℛ":"R","ℯ":"e","ℊ":"g","ℓ":"l","ℴ":"o"};const lr=e=>{const t=sr.exec(e);if(!t){return e}let n="";if(e.charAt(0)==="\ud835"){const t=e.charCodeAt(1);n=String.fromCharCode(t-(t<=56501?56411:56405))}else{n=ar[e.charAt(0)]}return`\\mathcal{${n}}`+e.slice(t[0].length)};const ir=(e,t)=>{switch(t.ttype){case Mn.NUM:case Mn.ORD:case Mn.VAR:case Mn.RIGHTBRACKET:case Mn.LONGVAR:case Mn.PROPERTY:case Mn.UNIT:case Mn.SUPCHAR:case Mn.PRIME:case Mn.FACTORIAL:return e}if(e.output==="-"){return{input:"~",output:"\\text{-}",ttype:Mn.UNARYMINUS}}else{return{input:"+",output:"~+",ttype:Mn.UNARYMINUS}}};const or={"⁻":"-","²":"2","³":"3","¹":"1","⁰":"0","⁴":"4","⁵":"5","⁶":"6","⁷":"7","⁸":"8","⁹":"9"};const ur=e=>{let t="";for(const n of e){t+=or[n]}return t};const cr=/^(#([a-f0-9]{6}|[a-f0-9]{3})|[a-z]+|\([^)]+\))/i;const pr=/^[A-Za-zıȷ\u0391-\u03C9\u03D5\u210B\u210F\u2110\u2112\u2113\u211B\u212C\u2130\u2131\u2133\uD835[({√∛∜]/;const fr=(e,t,n,r)=>{const s=e.replace(/^.*\xa0/,"").replace(/§$/," ");n.push(s);e=e.length===s.length?"":e.slice(0,e.length-s.length);r.numArgs+=1;if(t==="otherwise"){e+="true"}return e};const dr=/^[\^⁻⁰¹²³\u2074-\u2079]/;const mr=/^ *\(/;const hr=(e,t,n)=>{let r="";if(e.charAt(0)!=="^"){r=/^[⁰¹²³\u2074-\u2079⁻]+/.exec(e)[0];r=N(r)}else if(!mr.test(e.slice(1))){r=Jn(e.slice(1),t,{input:"",output:"",ttype:50})[0]}else{r="(";let t=1;for(let n=2;n<e.length;n++){const s=e.charAt(n);r+=s;if("\"'`".indexOf(s)>-1){const t=e.indexOf(s,n+1);r+=e.slice(n+1,t+1);n=t}else if("([{⟨⌈⎿⎾〖".indexOf(s)>-1){t+=1}else if(")]}⟩⌉⌋⏌〗".indexOf(s)>-1){t-=1}if(t===0){break}}}const s=r.charAt(0)==="("?r.slice(1,-1).trim():r;if(n){const e=kr(s,t,true);return[r,"{"+e[0]+"}",e[1]]}else{const e=kr(s,t,false);return[r,"{"+e+"}",""]}};const gr=(e,t,n)=>{if(t.length>0){const e=t[t.length-1].ttype;if(e===Mn.UNARY||e===Mn.BINARY){return false}if(e===Mn.SUB||e===Mn.SUP){if(t[t.length-1].isOnFunction){return false}}}let r=false;if(e.output){const t=e.output.charAt(e.length-1);if(")]}".indexOf(t)>-1){if((t===")"||t==="]")&&/^[([]/.test(n)){return false}else{r=true}}else{switch(e.ttype){case Mn.ORD:case Mn.NUM:case Mn.VAR:case Mn.LONGVAR:case Mn.PRIME:case Mn.SUP:case Mn.SUPCHAR:case Mn.SUB:case Mn.PROPERTY:case Mn.UNIT:case Mn.RIGHTBRACKET:case Mn.FACTORIAL:r=true;break;default:r=false}}}if(r&&yr(n,e.ttype)){return true}return false};const yr=(e,t)=>{const n=e.replace(vr,"");const r=n.charAt(0);let s=false;if(n.length>0){if(r==="|"||r==="‖");else if(/^[({[√∛∜0-9]/.test(n)&&m(t,[Mn.ORD,Mn.VAR,Mn.NUM,Mn.LONGVAR,Mn.RIGHTBRACKET,Mn.CURRENCY,Mn.SUPCHAR])){return true}else{if(pr.test(r)){s=!/^(if|and|atop|or|else|modulo|otherwise|not|for|in|while|end)\b/.test(n)}}}return s};const br=e=>({input:e.input,output:e.output,ttype:e.ttype,closeDelim:e.closeDelim});const Rr=/^[ \f\r\t\v\u1680\u2000-\u200a\u2028\u2029\u202f\u205f\u3000\ufeff]+/;const vr=/^(˽|\\quad|\\qquad)+/;const Ar=[12,12,15,13,16,10,7,10,12,-1,-1,-1,1,-1,0,0,-1,0,-1,14,0,6,7,5,4,1,-1,16,15,-1,14,13,9,3,2,10,-1,-1,4,3,-1,-1];const Nr=[12,12,15,13,16,10,2,10,12,2,2,2,1,2,2,0,1,1,2,14,1,2,2,1,1,1,2,-1,15,2,14,13,9,-1,1,-1,15,-1,1,-1,2,2];const Or=0;const Er=1;const xr=2;const Tr=3;const Ir=4;const Mr=5;const Lr=7;const Cr=8;const wr=9;const Sr=10;const kr=(e,t="1,000,000.",n=false,r=false)=>{let s="";let a="";let l={};let i={input:"",output:"",ttype:50};let o=true;let u=false;let c=0;let p=false;let f=false;let d=false;let h=false;let g=false;let y;const b=[];const R=[];const v=[{delimType:Or,isTall:false}];let N=true;let O="";let E="";let x=" ";let T=-1;const I=[];const M=e=>{if(n&&e>=0){while(R.length>0){const t=R[R.length-1].prec;if(t<e||t===13&&e===13){break}a+=R.pop().symbol+x}}};const L=(t,r,o)=>{if(!r){return}if(b.length===0){if(i.ttype!==Mn.RIGHTBRACKET&&i.ttype!==Mn.LEFTRIGHT){y={pos:c,ttype:i.ttype,closeDelim:""}}return}const u=b[b.length-1];if((t===2||t===12||t===14||t===15)&&(i.ttype!==Mn.RIGHTBRACKET&&i.ttype!==Mn.LEFTRIGHT)&&u.prec<t){y={pos:c,ttype:i.ttype,closeDelim:""};return}let p={};while(b[b.length-1].prec>=t&&!(b[b.length-1].prec===13&&t===13)){y=b.pop();if(y.prec===0){p=v[v.length-1];if((y.ttype===Mn.LEFTBRACKET||y.ttype===Mn.LEFTRIGHT)&&y.closeDelim.length>0){if(b.length>0){if(y.ttype===Mn.LEFTRIGHT&&l.output===")"&&b[b.length-1].closeDelim===")"){if(p.isTall){s=s.substring(0,y.pos)+"\\middle"+s.substring(y.pos);v[v.length-1].isTall=true}y=b.pop();v.pop();p=v[v.length-1]}}if(p.delimType===Ir){const e=s.slice(y.pos,y.pos+1)==="\\"?2:1;s=s.slice(0,y.pos)+p.open+s.slice(y.pos+e);y.closeDelim=p.close}else if(p.delimType===Lr){s=s.slice(0,y.pos)+p.open+s.slice(y.pos+2);y.closeDelim=p.close}else if(p.delimType===Er&&p.name==="("&&/^(\/|\\atop\s)/.test(e)){s=s.substring(0,y.pos)+s.substring(y.pos+1);y.closeDelim=""}else if(p.isPrecededByDiv&&p.delimType===Er&&p.name==="("&&(/^[^^_!%°⁻²³¹⁰⁴⁵⁶⁷⁸⁹]/.test(e)||e.length===0)){s=s.substring(0,y.pos)+s.substring(y.pos+1);y.closeDelim=""}else if(p.isTall){if(/^\\left/.test(s.substring(y.pos))===false){s=s.substring(0,y.pos)+"\\left"+s.substring(y.pos)}if(/\\right/.test(y.closeDelim)===false){y.closeDelim="\\right"+l.output}}}}s=s.replace(/\\, *$/,"");s+=y.closeDelim;if(y.closeDelim.slice(-1)==="{"){if(y.ttype===Mn.BINARY){b.push({prec:12,pos:y.pos,ttype:Mn.UNARY,closeDelim:"}"});if(n){a+=x;if(R[R.length-1].symbol==="\\sqrt"){R[R.length-1].symbol="root"}}}y.ttype=Mn.UNARY;i={input:"",output:"",ttype:Mn.UNARY};return}if(b.length===0||y.prec===0){return}}};e=e.replace(Rr,"");e=e.replace(/\s+$/,"");while(e.length>0){if(e.charAt(0)==="\n"){e=e.slice(1);const t=i?i.input.slice(-1):"0";if(i.ttype===Mn.COMMENT||"{[(,;+-".indexOf(t)===-1&&!/^ *[)}\]]/.test(e)){L(0,true);s+="\\\\ ";const t=/^ +/.exec(e);e=e.replace(/^ */,"");if(e.length>0&&e.charAt(0)==="="&s.indexOf("=")>-1){u=true;s+="&"}else if(t){s+="\\quad ".repeat(t[0].length-1)}}e=e.trim()}o=true;h=p&&N&&gr(i,b,e);if(h){const e=i.ttype;l={input:"⌧",output:[Mn.LONGVAR,Mn.NUM,Mn.UNIT].includes(e)?"\\,":"",ttype:Mn.MULT};f=false;d=false;o=false}if(o){const n=Jn(e,t,i,r);l={input:n[0],output:n[1],ttype:n[2],closeDelim:n[3]};e=e.substring(l.input.length);f=Rr.test(e)||/^(˽|\\quad|\\qquad)+/.test(e);d=/^[ \n]/.test(e);e=e.replace(Rr,"");g=yr(e,l.ttype)}switch(l.ttype){case Mn.SPACE:case Mn.BIN:case Mn.ADD:case Mn.MULT:case Mn.REL:case Mn.UNDEROVER:{if(l.output.length>0&&"- +".indexOf(l.output)>-1){l=ir(l,i)}if(n&&l.ttype!==Mn.SPACE){if(l.output!=="\\text{-}"){a+=x}T=Ar[l.ttype];M(T)}const e=Nr[l.ttype];L(e,N);s+=l.output+" ";c=s.length;if(l.ttype===Mn.UNDEROVER&&v.length>1){v[v.length-1].isTall=true}else if(n){R.push({prec:T,symbol:l.input})}N=true;break}case Mn.ACCESSOR:case Mn.ANGLE:l=ir(l,i);if(n){a+=x;T=Ar[l.ttype];M(T);R.push({prec:T,symbol:l.input})}L(Nr[l.ttype],N);s+=n?l.input:l.output+" ";N=true;break;case Mn.NUM:case Mn.ORD:L(2,N);if(n){M(-1);a+=l.ttype===Mn.NUM?rr(l.input):l.input}if(p){c=s.length}if(n&&(i.ttype===Mn.MULT||g&&i.ttype!==Mn.DIV)){l.output="("+l.output+")"}s+=l.output+" ";N=true;if(!f&&g){L(2,N);if(n){a+=x;M(7);R.push({prec:Ar[Mn.MULT],symbol:"⌧"})}}break;case Mn.STRING:{L(2,N);const e=l.input.charAt(0);if(n){a+=e+l.output+e}if(p){c=s.length}l.output=A(l.output);l.output=l.output.replace(/ +$/,"\\,");s+="\\text{"+l.output+"}";N=true;break}case Mn.RICHTEXT:{L(2,N);const e=l.input.charAt(0);if(n){a+=e+l.output+e}if(p){c=s.length}l.output=l.output==="`"?"`":kr(l.output,t,false);s+="{"+l.output+"}";N=true;break}case Mn.DATAFRAME:L(2,N);c=s.length;s+=l.output;N=true;break;case Mn.VAR:case Mn.LONGVAR:{if(l.ttype===Mn.LONGVAR&&i.input==="⌧"){s+="\\,"}L(7,N);if(p){c=s.length}l.output=lr(l.output);if(!n){if(l.ttype===Mn.LONGVAR){l.output="\\mathrm{"+l.output+"}"}}else if(i.input==="for"){a+='"'+l.input+'"'}else{if(/^(\.[^.]|\[)/.test(e)){l.output=l.ttype===Mn.LONGVAR?"\\mathrm{"+l.output+"}":l.output}else{l.output=l.input;l.output="〖"+l.output}a+="¿"+l.input}s+=l.output+(e.charAt(0)==="."?"":" ");if(n){v[v.length-1].isTall=true}N=true;break}case Mn.UNIT:{L(14,true);b.push({prec:14,pos:y.pos,ttype:Mn.UNIT,closeDelim:""});if(n){M(14);a+=x+"applyUnit"+x+l.input.replace(/'/g,"")}if(!/^'?°'?$/.test(l.input)){s+="\\;"}s+=l.output;N=true;break}case Mn.PROPERTY:{L(15,N);const t=l.input.indexOf("_");if(n){a+='"'+l.output+'"';s+=`\\mathrm{${l.output}}`;if(e.charAt(0)!=="."){s+=" "}}else if(t>-1){s+=l.input.substring(0,t)+"_\\mathrm{"+l.input.substring(t+1)+"}"}else{l.output=A(l.output);l.output=l.output.replace(/ +$/,"\\,");s+="\\text{"+l.output+"}"}N=true;break}case Mn.TO:{v[v.length-1].delimType=Sr;L(1,N);c=s.length;s+=l.output;if(n){a+=x;M(3);const e=v[v.length-1].symbol;const t=e==="("?"normal":e==="["?"uniform":"lognormal";R.push({prec:3,symbol:t})}break}case Mn.RANGE:{L(1,N);c=s.length;if(n){a+=x;M(3);R.push({prec:3,symbol:".."});if(e.charAt(0)==="]"||e.length===0){a+='"∞"'}}s+=l.output;break}case Mn.DIV:if(n){a+=x}L(2,true);M(7);if(l.input==="//"){b.push({prec:2,pos:y.pos,ttype:Mn.DIV,closeDelim:"}"});s=s.substring(0,y.pos)+"\\tfrac{"+s.substring(y.pos)+"}{"}else if(l.input==="/"||l.input==="\\over"){b.push({prec:2,pos:y.pos,ttype:Mn.DIV,closeDelim:"}"});s=s.substring(0,y.pos)+"\\dfrac{"+s.substring(y.pos)+"}{"}else{b.push({prec:2,pos:y.pos,ttype:Mn.DIV,closeDelim:"}}"});s=s.substring(0,y.pos)+"{{"+s.substring(y.pos)+"}\\atop{";if(v[v.length-1].name==="("){v[v.length-1].delimType=Cr}}if(n){if(l.input==="\\atop"){if(v[v.length-1].delimType===Cr){R.push({prec:7,symbol:"()"})}}else{R.push({prec:7,symbol:l.input})}}v[v.length-1].isTall=true;c=s.length;N=false;break;case Mn.SUB:{L(15,true);const e=i.ttype===Mn.FUNCTION?"}{":"}";b.push({prec:15,pos:y.pos,ttype:Mn.SUB,closeDelim:e});s+="_{";if(n){a+="_"}N=false;break}case Mn.SUP:if(n){if(/¿e$/.test(a)){a=a.slice(0,-2)+"®27182818284590452353602874713527/10000000000000000000000000000000"}a+=x;M(13)}L(13,true);if(i.ttype===Mn.RIGHTBRACKET){b.push({prec:13,pos:y.pos,ttype:Mn.SUP,closeDelim:"}"})}else{b.push({prec:13,pos:c,ttype:Mn.SUP,closeDelim:"}"})}if(n){R.push({prec:13,symbol:"^"})}s+="^{";N=false;break;case Mn.SUPCHAR:{if(n){if(/¿e$/.test(a)){a=a.slice(0,-2)+"®27182818284590452353602874713527/10000000000000000000000000000000"}a+=x;M(13)}L(13,true);const e=ur(l.output);if(i.ttype===Mn.RIGHTBRACKET){b.push({prec:13,pos:y.pos,ttype:Mn.SUP,closeDelim:"}"})}else{b.push({prec:13,pos:c,ttype:Mn.SUP,closeDelim:"}"})}s+="^{"+e;if(n){R.push({prec:13,symbol:"^"});a+=rr(e)}N=true;break}case Mn.FUNCTION:{L(2,N);c=s.length;if(dr.test(e)){const[r,s,a]=hr(e,t,n);if(n&&a===`®1/1${x}~`&&m(l.input,nr)){l.input="a"+l.input;l.output="\\a"+l.output.slice(1)}else{if(n){l.input+=x+a+x+"^"}l.output+="^"+s}const i=r.length+(e.charAt(0)==="^"?1:0);e=e.slice(i).trim()}if(n){R.push({prec:12,symbol:l.input});if(i.input==="⌧"){s+="×"}}O=e.charAt(0);b.push({prec:12,pos:s.length,ttype:Mn.FUNCTION,closeDelim:O==="("?"":"}"});s+=l.output;s+=O==="("?"":"{";E=l.input;N=false;break}case Mn.ACCENT:if(n){a+=x;M(16)}L(1,N);if(n){b.push({prec:16,pos:s.length,ttype:Mn.ACCENT,closeDelim:"〗"});s+="〖"+l.input;a+="¿"+l.input}else{b.push({prec:16,pos:s.length,ttype:Mn.ACCENT,closeDelim:"}"});s+=l.output+"{"}v[v.length-1].isTall=true;N=false;break;case Mn.PRIME:L(15,true);if(n){a+=l.input}s=s.trim()+l.output+" ";N=true;break;case Mn.BINARY:{L(1,N);c=s.length;const e=l.input==="root"?"]{":"}{";b.push({prec:12,pos:s.length,ttype:Mn.BINARY,closeDelim:e});if(n){R.push({prec:12,symbol:l.output})}s+=l.output+(l.input==="root"?"[":"{");v[v.length-1].isTall=true;N=false;break}case Mn.CURRENCY:{L(1,N);c=s.length;b.push({prec:12,pos:s.length,ttype:Mn.CURRENCY,closeDelim:""});if(n){R.push({prec:12,symbol:"applyUnit"+x+l.input});if(i.input==="⌧"){s+="×"}}s+=l.output;N=false;break}case Mn.UNARY:L(1,N);c=s.length;b.push({prec:12,pos:s.length,ttype:Mn.UNARY,closeDelim:"}"});if(n){R.push({prec:12,symbol:l.input});if(i.input==="⌧"){s+="×"}}s+=l.output;if(/det|inf/.test(l.input)&&e.charAt(0)==="_"){b.push({prec:15,pos:s.length,ttype:Mn.SUB,closeDelim:"}"});l={input:"_",output:"_",ttype:Mn.SUB};s+="_{";e=e.substring(1);e=e.replace(/^\s+/,"")}else if(l.input==="\\color"){const t=cr.exec(e);if(t){s+="{"+t[0].replace(/[()]/g,"")+"}";b.pop();e=e.slice(t[0].length).trim()}else{s+="{"}}else{s+="{"}v[v.length-1].isTall=true;N=false;break;case Mn.FACTORIAL:L(14,true);b.push({prec:14,pos:y.pos,ttype:Mn.FACTORIAL,closeDelim:""});if(n){M(14);a+=x+l.output}s+=l.output;N=true;break;case Mn.RETURN:L(1,N);c=s.length;if(n){M(4);R.push({prec:4,symbol:"return"})}s+=l.output+" ";break;case Mn.KEYWORD:L(1,true);c=s.length;if(n){M(2);if(l.input==="in"){a+=x;R.push({prec:T,symbol:"for"})}}s+=l.output+" ";break;case Mn.LOGIC:{L(1,N);if(n){a+=x}M(4);const e=v[v.length-1];if(l.input==="if"||l.input==="otherwise"){if(e.delimType===Er&&e.name==="{"){e.delimType=Lr;e.close="\\end{cases}";e.open="\\begin{cases}";if(n&&x===" "&&l.input==="if"){a=a.slice(0,e.rpnPos)+a.slice(e.rpnPos).replace(/\xa0/g,"§")}}}if(e.delimType===Lr&&m(l.input,["if","otherwise"])){s+="&"}if(l.input===":"&&e.delimType===Er&&e.symbol==="{"){l.output="\\colon"}s+=l.output;if(n){if(e.delimType===Lr&&(l.input==="if"||l.input==="otherwise")){a=fr(a,l.input,I,e);x=" "}else{R.push({prec:4,symbol:l.input})}}c=s.length;N=true;break}case Mn.LEFTBRACKET:{L(2,N);const t=i.ttype===Mn.DIV;let r=false;const o={prec:0,pos:s.length,ttype:Mn.LEFTBRACKET,closeDelim:l.closeDelim};if((l.input==="("||l.input==="[")&&i.ttype<5){o.closeDelim=""}else if(l.input==="("&&y.ttype===Mn.BINARY){o.closeDelim=""}else{o.closeDelim=l.closeDelim;r=(l.input==="("||l.input==="[")&&i.ttype===Mn.FUNCTION;s+=l.output}b.push(o);if(n){while(R.length>0&&R[R.length-1].symbol==="."){a+=x+R.pop().symbol}R.push({prec:0,symbol:l.output.trim()})}const u=/^\s*[)}\]]/.test(e)?0:1;const p={name:l.input,isTall:false,open:l.output,close:o.closeDelim,numArgs:u,numRows:u,rpnPos:a.length,isPrecededByDiv:t,isFuncParen:r,isControlWordParen:i.ttype<5};if(r){p.delimType=xr;p.name=E}else if(i.ttype===Mn.SUB){p.delimType=wr;p.name="("}else if(l.input==="{"){p.delimType=Er;p.rpnLength=a.length}else if(l.input==="["&&(m(i.ttype,[Mn.VAR,Mn.LONGVAR,Mn.STRING,Mn.PROPERTY])||i.input==="]")){a+=x;p.delimType=Tr}else{p.delimType=Er;p.name=l.input}v.push(p);E="";c=s.length;N=false;break}case Mn.SEP:{L(1,N);c=s.length;if(l.input==="\\,"||l.input==="\\;"){s+=l.output+" "}else{const t=v[v.length-1];if(t.delimType===Er&&d){t.delimType=Ir;const e=t.name==="["?"b":t.name==="("?"p":t.name==="{:"?"":"B";t.open=`\\begin{${e}matrix}`;t.close=`\\end{${e}matrix}`;t.isTall=true;l.output=l.input===","?"&":"\\\\"}else if(t.delimType===Ir&&l.input===","){l.output="&"}else if(t.delimType>3&&l.input===";"){l.output="\\\\"}if(n){if(i.ttype===Mn.LEFTBRACKET&&t.delimType===Tr){a+="®0/1"}a+=x;M(1)}s+=l.output+" ";if(n){if(v.length===1){a+=l.output}else{if(l.input===";"){t.numRows+=1;if(v.length>0&&t.delimType===Lr){x="§"}}if(t.numRows===1){if(l.input===","||l.input===" "&&t.delimType===Ir){if(e.charAt(0)==="]"){a+="®0/1"}else if(l.input===","&&t.delimType===xr&&t.numArgs===2&&t.name==="plot"){a=a.slice(0,t.rpnPos+5)+'"'+a.slice(t.rpnPos+5,-1).replace(/\u00a0/g,"§")+'"'+x}}}t.numArgs+=1}}}N=true;break}case Mn.RIGHTBRACKET:{L(0,true,l.output);const t=v.pop();if(t.delimType===Er&&!t.isControlWordParen&&t.close!==l.output){s=s.slice(0,-1*t.close.length)+l.output}if(t.isTall&&v.length>1){v[v.length-1].isTall=true}if(n){while(R.length>0&&R[R.length-1].prec>0){a+=x+R.pop().symbol}if(t.delimType===Lr&&i.input!=="otherwise"){a=fr(a,"otherwise",I,t);x=" "}const n=R.pop();const r=t.numArgs;const s=t.numRows;const o=t.numArgs/t.numRows;const u=r===0?"":x;switch(t.delimType){case xr:{let e=R.pop().symbol;const t=new RegExp(x+"!$");if(r===2){if(e==="log"){e="logn"}if(e==="round"){e="roundn"}if(e==="atan"){e="atan2"}if(e==="plot"){a=a.slice(0,6)+'"'+a.slice(6).replace(/\u00a0/g,"§")+'"'}}else if(e==="log"&&t.test(a)){a=a.slice(0,a.length-1)+"logFactorial";break}a+=e.slice(-1)==="^"?u+e:m(e,er)?u+e:m(e,tr)?u+e+x+r:u+"function"+x+e+x+r;break}case Tr:a+=u+"[]"+x+r;break;case Ir:a+=u+"matrix"+x+s+x+o;break;case Lr:x=" ";a+=x+"cases"+x+s+x;while(I.length>0){a+=I.shift()}a=a.slice(0,-1);break;case Mr:a+=x+"matrix"+x+"1"+x+"1";break;case Sr:break;default:if(r===0&&t.open==="["){a+="matrix"+x+0+x+0}else if(r===1&&t.open==="["){a+=x+"matrix"+x+1+x+1}if(n.symbol==="\\lfloor"){a+=x+"⎿⏌"}if(n.symbol==="\\lceil"){a+=x+"⎾⏋"}}if(l.input===")"&&yr(e,Mn.RIGHTBRACKET)||l.input==="]"&&/^\(/.test(e)){a+=x;M(Ar[Mn.MULT]);R.push({prec:Ar[Mn.MULT],symbol:"⌧"});f=false}}c=s.length;N=y.ttype!==Mn.BINARY;break}case Mn.LEFTRIGHT:{L(1,N);const e=v[v.length-1];let t=false;if(b.length>0){t=b[b.length-1].ttype===Mn.LEFTRIGHT||b[b.length-1].closeDelim==="⟩"||b[b.length-1].closeDelim==="\\right."||b[b.length-1].closeDelim==="\\end{vmatrix}"}if(t){e.close=l.input==="|"?"\\vert ":"\\Vert ";b[b.length-1].closeDelim=e.close;L(0,N);v.pop();if(n){while(R.length>0&&R[R.length-1].prec>0){a+=x+R.pop().symbol}a+=x+R.pop().symbol}N=y.ttype!==Mn.BINARY}else if(e.delimType===Er&&e.name==="{"){s+="\\mid ";c=s.length;N=true}else{b.push({prec:0,pos:s.length,ttype:Mn.LEFTRIGHT,closeDelim:l.input==="|"?"\\vert ":"\\Vert "});v.push({delimType:Er,name:l.input,isTall:false,open:l.input==="|"?"\\vert ":"\\Vert ",close:l.input==="|"?"\\vert ":"\\Vert ",numArgs:1,numRows:1,rpnPos:a.length,isPrecededByDiv:i.ttype===Mn.DIV});if(n){R.push({prec:0,symbol:l.output})}s+=l.input==="|"?"\\vert ":"\\Vert ";c=s.length;N=false}break}case Mn.COMMENT:L(0,true);s+=l.output+" ";break;default:if(n){a+=x;M(12)}L(1,N);b.push({prec:1,pos:s.length,ttype:Mn.ORD,closeDelim:""});if(n){R.push({prec:12,symbol:l.output})}s+=l.output+" ";c=s.length;N=true}i=br(l);p=f||l.input==="⌧"}L(0,true);if(n){while(R.length>0){a+=x+R.pop().symbol}const e=/〖[^ ().]+/g;let t;while((t=e.exec(s))!==null){if("¨ˆˉ˙˜".indexOf(t[0][1])===-1){const e=t.index+t[0].length;if(s.length>e&&s.charAt(e)==="("){s=s.slice(0,t.index)+s.slice(t.index+1)}else{s=s.substring(0,e)+"〗"+s.substring(e)}}}}s=s.replace(/ {2,}/g," ");s=s.replace(/\s+(?=[_^'!)}\]〗])/g,"");s=s.replace(/\s+$/,"");if(u){const e=s.indexOf("=");s="\\begin{aligned}"+s.slice(0,e)+"&"+s.slice(e)+"\\end{aligned}"}return n?[s,a]:s};const Ur=(e,t)=>{if(e.value===null){const t=e.name?e.name:"?";return C("NULL",t)}const n=Object.create(null);n.dtype=e.dtype;n.name=e.name;const r=e.dtype;if(r===d.STRING||r===d.BOOLEAN||r===d.DRAWING||r===d.MODULE||r===d.NULL){n.unit=null}else if(r===d.DATAFRAME||r&d.MAP){n.unit=Object.freeze(h(e.unit))}else if(e.unit&&e.unit.expos){n.unit=h(e.unit)}else if(e.unit){n.unit=Object.create(null);if(e.unit){n.unit.name=e.unit}if(e.expos){n.unit.expos=h(e.expos)}}else if(e.expos&&Array.isArray(e.expos)){n.unit={expos:h(e.expos)}}else{n.unit=null}if(e.dtype&d.QUANTITY){n.value=Object.freeze(t?h(e.value.inBaseUnits):h(e.value.plain));n.dtype=e.dtype-d.QUANTITY}else if(e.dtype===d.STRING){const t=e.value;const r=t.charAt(0);const s=t.charAt(t.length-1);n.value=r==='"'&&s==='"'?t.slice(1,-1).trim():t.trim()}else if(e.dtype===d.DATAFRAME){n.value=e.value}else{n.value=h(e.value)}return Object.freeze(n)};function Dr(e,t,n,r){const s=Object.create(null);if(e.dtype&d.MAP){return In.valueFromMap(e,[t],r)}else if(e.dtype&d.DATAFRAME){return bn.range(e,[t],n,r)}else if((e.dtype===d.STRING||e.dtype&d.ARRAY)&&t.dtype===d.RATIONAL){const n=Ue.toNumber(t.value);s.value=e.value.slice(n-1,n);s.unit=e.unit;s.dtype=e.dtype;return s}else if((e.dtype===d.STRING||e.dtype&d.ARRAY)&&t.dtype===d.RANGE){const n=t.value[0]-1;const r=t.value[1];const a=t.value[2]==="∞"?e.value.length:t.value[2];s.unit=e.unit;s.dtype=e.dtype;if(r===1){s.value=e.value.slice(n,a)}else{s.value=[];for(let t=n;t<a;t+=r){s.value.push(e.value[t])}}return s}else if(e.dtype===d.MODULE){return Ur(e.value[t.value],r)}else{return C("NO_PROP",e.name)}}const _r=(e,t="h3",n="1,000,000.")=>{if(e.size===0){return""}let r="\\begin{array}{c}";let s=false;for(const t of e.values()){if(t.unit&&t.unit.name){s=true;break}}if(s){let t="";for(const n of e.values()){if(n.unit&&n.unit.name){t+=M(n.unit.name).replace("\\;\\, ","")}t+="&"}r+=t.slice(0,-1)+" \\\\ ";r+="\\hline "}let a="";for(const r of e.values()){a+=He(r.value,t,n)+" & "}r+=a.slice(0,-1);r+="\\end{array}";return r};const Br=(e,t="h3")=>{if(e.size===0){return""}let n="``";let r=false;for(const t of e.values()){if(t.unit&&t.unit.name){r=true;break}}if(r){let t="";for(const n of e.values()){if(n.unit&&n.unit.name){t+=n.unit.name}t+=" | "}n+=t.slice(0,-3)+"\n"}let s="";for(const n of e.values()){s+=He(n.value,t,"100000.")+" | "}n=s.slice(0,-3);return n+"``"};const Pr=Object.freeze({display:_r,displayAlt:Br});const zr=e=>{const t="Error. Mismatch in number of multiple assignment.";return[`\\color{firebrick}\\text{${t}}`,t]};const jr=(e,t,n,r,s)=>{if(!t){return e}if(t.dtype===d.DRAWING){e.resultdisplay=t.value;delete e.resultdisplay.temp;return e}const a=!e.name?0:!Array.isArray(e.name)?1:e.name.length;if(e.resulttemplate.indexOf("?")>-1||e.resulttemplate.indexOf("!")>-1||e.resulttemplate.indexOf("@")>-1||e.resulttemplate.indexOf("%")>-1){e.value=t.value;let l="";let i="";if(e.resulttemplate.indexOf("!")>-1){l="";i="";return e}else if(kt(t)&&t.dtype&d.MAP){l=Ht.displayMapOfVectors(t.value,n,r);i=Ht.displayAltMapOfVectors(t.value,n,r)}else if(kt(t)){l=Ht.display(s?{value:t.value.plain,dtype:t.dtype}:t,n,r);i=Ht.displayAlt(s?{value:t.value.plain,dtype:t.dtype}:t,n,r)}else if(t.dtype===d.DATAFRAME){if(a>1&&a!==t.value.data.length){[l,i]=zr()}else{const s=e.name&&Array.isArray(e.name)&&e.name.length>1;l=bn.display(t.value,n,r,s);i=bn.displayAlt(t.value,n,s)}}else if(t.dtype&d.MAP){const s=e.dtype&d.QUANTITY?t.value.plain.size:t.value.size;if(a>1&&a!==s){[l,i]=zr()}else{const s=e.name&&Array.isArray(e.name)&&e.name.length>1;l=In.display(t,n,r,s);i=In.displayAlt(t,n,r,s)}}else if(t.dtype===d.TUPLE){if(a>1&&a!==t.length){[l,i]=zr()}else{l=Pr.display(t.value,n,r);i=Pr.displayAlt(t.value,n)}}else if(t.dtype&d.STRING){l="\\text{"+A(t.value)+"}";if(t.unit){l=`\\textcolor{${t.unit}}{${l}}`}i=t.value}else if(t.dtype&d.RICHTEXT){l=kr(t.value,r,false);i=t.value}else if(t.dtype&d.BOOLEAN){l="\\text{"+t.value+"}";i=String(t.value)}else if(t.dtype===d.COMPLEX){const e=t.value;[l,i]=St.display(e,n,r)}else if(t.value.plain){l=He(t.value.plain,n,r);if(l.dtype&&l.dtype===d.ERROR){l="\\color{firebrick}\\text{"+l.value+"}";i=l.value}else{i=l.replace(/{,}/g,",").replace("\\","")}}else if(Ue.isRational(t.value)){l=He(t.value,n,r);if(l.dtype&&l.dtype===d.ERROR){l="\\color{firebrick}\\text{"+l.value+"}";i=l.value}else{i=l.replace(/{,}/g,",").replace("\\","")}}else if(t.dtype===d.IMAGE){return e}else{l=t.value;i=l}e.resultdisplay=e.resulttemplate.replace(/(\? *\??|@ *@?|%%?)/,l);if(e.resulttemplate.indexOf("@")>-1){e.tex=e.resultdisplay;e.alt=e.altresulttemplate.replace(/@@?/,i)}else if(e.resulttemplate.indexOf("?")>-1){let t=e.tex.lastIndexOf("?");e.tex=e.tex.slice(0,t).replace(/\? *$/,"")+l+e.tex.slice(t+1);t=e.alt.lastIndexOf("?");e.alt=e.alt.slice(0,t).replace(/\? *$/,"")+i+e.alt.slice(t+1)}else if(e.resulttemplate.indexOf("%")>-1){let t=e.tex.lastIndexOf("%");e.tex=e.tex.slice(0,t).replace(/% *$/,"")+l+e.tex.slice(t+1);t=e.alt.lastIndexOf("%");e.alt=e.alt.slice(0,t).replace(/% *$/,"")+i+e.alt.slice(t+1)}}return e};const Gr=/〖[^〗]*〗/;const Fr=/([([{|‖]|[^\\][,;:])$/;const Vr=(e,t,n,r,s)=>{let a;while((a=Gr.exec(e))!==null){const l=a[0].replace(/[〖〗()]/g,"").trim().replace(/'/g,"′");const i=a[0].length;const o=a.index;let u;let c="";if(l.indexOf(".")>-1){const a=l.split(".");const p=a[0];if(!t[p]){return C("V_NAME",p)}u=t[p];if(u.dtype===d.DATAFRAME&&a.length===2){c="\\mathrm{"+t[a[0]].name+"{.}\\mathrm{"+a[1]+"}";return e.substring(0,o)+c+e.substring(o+i)}else{for(let e=1;e<a.length;e++){const l=a[e].replace("}","").replace("\\mathrm{","").trim();const i={value:l,unit:null,dtype:d.STRING};u=Dr(u,i,t,n);if(!u){return C("V_NAME",l)}const o={resulttemplate:"@",altresulttemplate:"@"};u.resultdisplay=jr(o,u,r,s).resultdisplay}}}else if(!t[l]&&l==="T"){u={dtype:d.RATIONAL,resultdisplay:"\\text{T}"}}else if(l==="e"&&/^\^/.test(e.slice(o+3).trim())){e=e.substring(0,o)+"e"+e.substring(o+i);continue}else if(!t[l]){return C("V_NAME",l)}else{u={dtype:t[l].dtype,resultdisplay:t[l].resultdisplay}}if(!u||!u.resultdisplay){const e=l?l:"?";return C("NULL",e)}else if(u.error){return C("NULL",l)}let p=true;if(kt(u)||u.dtype&d.DATAFRAME){p=false}if(n&&u.dtype&d.QUANTITY){p=true}let f=false;if(o>0){const t=e.slice(0,o).trim();if(Fr.test(t)){const t=e.slice(o+l.length+2).trim();f=t.length>0&&/^([)|‖\]},;:]|\\right)/.test(t)}else if(/^\\begin{[bp]matrix}/.test(u.resultdisplay)){f=/\\end{[bp]matrix}$/.test(u.resultdisplay)}}p=p&&!f;if(u.dtype===d.DATAFRAME||u.dtype&d.MAP){c="\\mathrm{"+t[l].name+"}"}else if(n){c=p?"\\left("+u.resultdisplay+"\\right)":u.resultdisplay}else{let e=u.resultdisplay;const t=u.resultdisplay.lastIndexOf("{\\text{");if(t>-1){e=u.resultdisplay.slice(0,t).trim();e=e.replace(/\\; *$/,"").trim()}c=p?"\\left("+e+"\\right)":e}e=e.substring(0,o)+c+e.substring(o+i)}return e};const qr=Object.freeze(Ue.negate(Ue.one));const Wr=[BigInt(1),BigInt(2)];const $r=[BigInt(30),BigInt(1)];const Yr=[BigInt(45),BigInt(1)];const Hr=[BigInt(60),BigInt(1)];const Xr=[BigInt(90),BigInt(1)];const Zr=Object.freeze(Ue.divide(Ue.pi,Ue.two));const Kr=(e,t)=>{const n=t.length;const r=n===1?t[0].unit.expos:null;switch(e){case"abs":case"round":case"roundn":case"sign":case"trace":case"fetch":return r;case"cos":case"sin":case"tan":case"sec":case"csc":case"cot":case"acos":case"arccos":case"asin":case"arcsin":case"atan":case"arctan":case"asec":case"arcsec":case"acsc":case"arccsc":case"acot":case"arccot":case"cosd":case"sind":case"tand":case"secd":case"cscd":case"cotd":case"acosd":case"asind":case"atand":case"asecd":case"acscd":case"acotd":case"gud":if(!Xe(r,f)){return C("UNIT_IN",e)}return f;case"exp":case"log":case"ln":case"log10":case"log2":case"logn":case"cosh":case"sinh":case"tanh":case"sech":case"csch":case"coth":case"acosh":case"asinh":case"atanh":case"asech":case"acsch":case"acoth":case"binomial":case"gamma":case"Γ":case"logΓ":case"logFactorial":if(!Xe(r,f)){return C("UNIT_IN",e)}return f;case"sqrt":return r.map((e=>e/2));case"gcd":case"mht":if(!Xe(r,f)){return C("UNIT_IN",e)}return e==="hmt"?[1,0,0,0,0,0,0,0]:f;case"atan2":case"hypot":case"rms":case"sum":case"mean":case"median":case"min":case"max":case"range":case"stddev":case"variance":{const n=t[0].unit.expos;for(let r=1;r<t.length;r++){const s=t[r].unit.expos;if(n.length!==s.length){return C("UNIT_ARG",e)}for(let t=0;t<n.length;t++){if(n[t]!==s[t]){return C("UNIT_ARG",e)}}}return e==="atan2"?f:n}case"Re":case"Im":case"argument":return f;case"product":{const e=h(t[0].unit.expos);for(let n=1;n<t.length;n++){const r=t[n].unit.expos;e.map(((e,t)=>e+r[t]))}return e}default:return C("F_NAME",e)}};const Qr=e=>{if(Ue.isZero(e)){return C("Γ0")}else if(Ue.isPositive(e)&&Ue.isInteger(e)&&Ue.lessThan(e,Ue.fromNumber(101))){return Ue.factorial(Ue.subtract(e,Ue.one))}else if(Ue.isNegative(e)&&Ue.isInteger(e)){return C("ΓPOLE")}else if(Ue.lessThan(e,Wr)){return Ue.fromNumber(Math.PI/Math.sin(Math.PI*Ue.toNumber(e))*Ue.toNumber(Qr(Ue.subtract(Ue.one,e))))}else{return Ue.lanczos(e)}};const Jr=e=>{if(Ue.isZero(e)){return C("Γ0")}if(Ue.isNegative(e)){return C("LOGΓ")}if(Ue.areEqual(e,Ue.one)||Ue.areEqual(e,Ue.two)){return Ue.zero}if(Ue.lessThanOrEqualTo(e,Ue.fromNumber(14))){return Ue.fromNumber(Math.log(Ue.toNumber(Qr(e))))}else{const t=Ue.toNumber(e);const n=(t-.5)*Math.log(t)-t+.5*Math.log(2*Math.PI)+1/(12*t)-1/(360*t**3)+1/(1260*t**5)-1/(1680*t**7)+5/(540*t**9);return Ue.fromNumber(n)}};const es=(e,t)=>{if(Ue.areEqual(e,t)){return Ue.one}if(Ue.isZero(e)){return Ue.zero}if(Ue.isNegative(t)){return Ue.zero}if(Ue.lessThan(e,t)){return Ue.zero}if(Ue.isInteger(e)&&Ue.isInteger(t)&&Ue.isPositive(e)&&Ue.isPositive(t)){return Ue.divide(Ue.factorial(e),Ue.multiply(Ue.factorial(t),Ue.factorial(Ue.subtract(e,t))))}else if(Ue.isInteger(e)&&Ue.isInteger(t)&&Ue.isPositive(t)){return Ue.multiply(Ue.power(qr,t),ts(Ue.negate(e),t))}else{return Ue.divide(Qr(Ue.increment(e)),Ue.multiply(Qr(Ue.increment(t)),Qr(Ue.increment(Ue.subtract(e,t)))))}};const ts=(e,t)=>es(Ue.add(e,Ue.decrement(t)),t);const ns=Ue.divide(Ue.pi,[BigInt(180),BigInt(1)]);const rs={scalar:{abs(e){return Ue.abs(e)},argument(e){return C("NA_REAL","argument")},Re(e){return C("NA_REAL","Re")},Im(e){return C("NA_REAL","Im")},cos(e){return Ue.cos(e)},sin(e){return Ue.sin(e)},tan(e){return Ue.tan(e)},cosh(e){return Ue.cosh(e)},sinh(e){return Ue.sinh(e)},tanh(e){return Ue.tanh(e)},acos(e){if(Ue.greaterThan(Ue.abs(e),Ue.one)){return C("ATRIG","acos")}return Ue.fromNumber(Math.acos(Ue.toNumber(e)))},asin(e){if(Ue.greaterThan(Ue.abs(e),Ue.one)){return C("ATRIG","asin")}return Ue.fromNumber(Math.asin(Ue.toNumber(e)))},atan(e){return Ue.fromNumber(Math.atan(Ue.toNumber(e)))},sec(e){return Ue.fromNumber(1/Math.cos(Ue.toNumber(e)))},csc(e){return Ue.fromNumber(1/Math.sin(Ue.toNumber(e)))},cot(e){if(Ue.isZero(e)){return C("COT","cotangent")}return Ue.fromNumber(1/Math.tan(Ue.toNumber(e)))},asec(e){if(Ue.greaterThanOrEqualTo(Ue.abs(e),Ue.one)){return C("ASEC","arcecant")}const t=Math.atn(Math.sqrt(Ue.toNumber(Ue.decrement(Ue.multiply(e,e)))));return Ue.isPositive(e)?Ue.fromNumber(t):Ue.fromNumber(t-Math.PI)},acot(e){if(Ue.greaterThanOrEqualTo(Ue.abs(e),Ue.one)){return C("ASEC","acot")}const t=Math.atn(1/Math.sqrt(Ue.toNumber(Ue.decrement(Ue.multiply(e,e)))));return Ue.isPositive(e)?Ue.fromNumber(t):Ue.fromNumber(t-Math.PI)},acsc(e){return Ue.fromNumber(Math.atn(-Ue.toNumber(e))+Math.PI)},exp(e){return Ue.exp(e)},log(e){return Ue.isZero(e)?C("LOG_ZERO"):Ue.fromNumber(Math.log(Ue.toNumber(e)))},ln(e){return Ue.isZero(e)?C("LOG_ZERO"):Ue.fromNumber(Math.log(Ue.toNumber(e)))},log10(e){return Ue.isZero(e)?C("LOG_ZERO"):Ue.fromNumber(Math.log10(Ue.toNumber(e)))},log2(e){return Ue.isZero(e)?C("LOG_ZERO"):Ue.fromNumber(Math.log2(Ue.toNumber(e)))},sech(e){const t=Ue.toNumber(e);return Ue.fromNumber(2/(Math.exp(t)+Math.exp(-t)))},csch(e){const t=Ue.toNumber(e);return Ue.fromNumber(2/(Math.exp(t)-Math.exp(-t)))},coth(e){const t=Ue.toNumber(e);return Ue.fromNumber((Math.exp(t)+Math.exp(-t))/(Math.exp(t)-Math.exp(-t)))},acosh(e){const t=Ue.toNumber(e);return Ue.fromNumber(Math.log(t+Math.sqrt(t-1)*Math.sqrt(t+1)))},asinh(e){const t=Ue.toNumber(e);return Ue.fromNumber(Math.log(t+Math.sqrt(Math.pow(t,2)+1)))},atanh(e){const t=Ue.toNumber(e);return Ue.fromNumber((Math.log(1+t)-Math.log(1-t))/2)},asech(e){if(Ue.isZero(e)){return C("DIV")}const t=Ue.toNumber(e);return Ue.fromNumber(Math.log((Math.sqrt(-t*t+1)+1)/t))},ascsh(e){if(Ue.isZero(e)){return C("DIV")}const t=Ue.toNumber(e);return Ue.fromNumber(Math.log(Math.sqrt(1+1/Math.pow(t,2))+1/t))},acoth(e){if(Ue.isZero(e)){return C("DIV")}const t=Ue.toNumber(e);return Ue.fromNumber((Math.log(1+1/t)-Math.log(1-1/t))/2)},Gamma(e){return Qr(e)},"Γ"(e){return Qr(e)},"logΓ"(e){if(Ue.isNegative(e)||Ue.isZero(e)){return C("LOGΓ")}return Jr(e)},logFactorial(e){if(Ue.isNegative(e)||!Ue.isInteger(e)){return C("FACT")}return Jr(Ue.add(e,Ue.one))},sign(e){return Ue.isPositive(e)?Ue.one:Ue.isZero(e)?Ue.zero:qr},cosd(e){if(Ue.areEqual(e,Xr)){return Ue.zero}if(Ue.areEqual(e,Hr)){return Wr}return this.cos(Ue.multiply(e,ns))},sind(e){if(Ue.areEqual(e,$r)){return Wr}return this.sin(Ue.multiply(e,ns))},tand(e){if(Ue.areEqual(e,Yr)){return Ue.one}if(Ue.areEqual(e,Xr)){return C("TAN90","90°")}return this.tan(Ue.multiply(e,ns))},cotd(e){return this.cot(Ue.multiply(e,ns))},cscd(e){return this.csc(Ue.multiply(e,ns))},secd(e){return this.sec(Ue.multiply(e,ns))},acosd(e){const t=this.acos(e);return t.dtype?t:Ue.divide(t,ns)},asind(e){const t=this.asin(e);return t.dtype?t:Ue.divide(t,ns)},atand(e){return Ue.divide(this.atan(e),ns)},acotd(e){const t=this.acot(e);return t.dtype?t:Ue.divide(t,ns)},acscd(e){const t=this.acsc(e);return t.dtype?t:Ue.divide(t,ns)},asecd(e){const t=this.asec(e);return t.dtype?t:Ue.divide(t,ns)},chr(e){return String.fromCodePoint(Number(e))},sqrt(e){const t=[BigInt(1),BigInt(2)];return St.isComplex(e)||Ue.isNegative(e)?St.power([e,Ue.zero],t):Ue.power(e,t)},round(e){return Ue.fromString(Ue.toString(e,0))}},complex:{abs(e){return St.abs(e)},argument(e){return St.argument(e)},Re(e){return e[0]},Im(e){return e[1]},cos(e){return St.cos(e)},sin(e){return St.sin(e)},asin(e){return St.asin(e)},atan(e){return St.atan(e)},acos(e){return St.subtract([Zr,Ue.zero],St.asin(e))},tan(e){return St.divide(St.sin(e),St.cos(e))},cot(e){return St.divide(St.cos(e),St.sin(e))},sec(e){const t=St.cos(e);return t.dtype?t:St.inverse(t)},csc(e){const t=St.sin(e);return t.dtype?t:St.inverse(t)},asec(e){const t=St.inverse(e);return St.subtract([Zr,Ue.zero],St.asin(t))},acot(e){return St.atan(St.inverse(e))},acsc(e){return St.asin(St.inverse(e))},exp(e){return St.exp(e)},log(e){return St.log(e)},ln(e){return St.log(e)},log10(e){return Ue.fromNumber(Math.log10(Ue.toNumber(e)))},log2(e){return Ue.fromNumber(Math.log2(Ue.toNumber(e)))},cosh(e){return St.divide(St.add(St.exp(e),St.exp(St.negate(e))),[Ue.two,Ue.zero])},sinh(e){return St.divide(St.subtract(St.exp(e),St.exp(St.negate(e))),[Ue.two,Ue.zero])},tanh(e){const t=St.exp(e);const n=St.exp(St.negate(e));return St.divide(St.subtract(t,n),St.add(t,n))},sech(e){return St.divide([Ue.two,Ue.zero],St.add(St.exp(e),St.exp(St.negate(e))))},csch(e){return St.divide([Ue.two,Ue.zero],St.subtract(St.exp(e),St.exp(St.negate(e))))},coth(e){const t=St.exp(e);const n=St.exp(St.negate(e));return St.divide(St.add(t,n),St.subtract(t,n))},acosh(e){return St.acosh(e)},asinh(e){return St.asinh(e)},atanh(e){return St.atanh(e)},asech(e){return St.acosh(St.inverse(e))},acsch(e){return St.asinh(St.inverse(e))},acoth(e){return St.atanh(St.inverse(e))},Gamma(e){return St.gamma(e)},"Γ"(e){return St.gamma(e)},"logΓ"(e){return C("NA_COMPL_OP","logΓ")},sign(e){if(Ue.isZero(e[1])&&Ue.isPositive(e[0])){return Ue.one}else if(Ue.isZero(e[1])&&Ue.isNegative(e[0])){return Ue.negate(Ue.one)}else{return St.divide(e,[St.abs(e),Ue.zero])}},round(e){return C("NA_COMPL_OP","round")}}};const ss={logn([e,t]){return Ue.fromNumber(Math.log(Ue.toNumber(t))/Math.log(Ue.toNumber(e)))},roundFixed([e,t]){return Ue.fromString(Ue.toString(e,t))},roundSignificant([e,t]){return Ue.fromString(Ue.toStringSignificant(e,t))},stringFixed([e,t]){return Ue.toString(e,t)},stringSignificant([e,t]){return Ue.toStringSignificant(e,t)},atan2([e,t]){return Ue.fromNumber(Math.atan2(Ue.toNumber(t),Ue.toNumber(e)))},hypot([e,t]){const n=Ue.max(e,t);const r=Ue.divide(Ue.min(e,t),n);return Ue.multiply(n,Ue.sqrt(Ue.increment(Ue.multiply(r,r))))},gcd([e,t]){return Ue.gcd(e,t)},rms([e,t]){return this.hypot(e,t)},binomial([e,t]){return es(e,t)},zeros([e,t]){return Ht.zeros(Ue.toNumber(e),Ue.toNumber(t))}};const as={max(e){return e.reduce(((e,t)=>Ue.max(e,t)))},min(e){return e.reduce(((e,t)=>Ue.min(e,t)))},sum(e){return e.reduce(((e,t)=>Ue.add(e,t)))},product(e){return e.reduce(((e,t)=>Ue.multiply(e,t)))},mean(e){const t=this.sum(e);return Ue.divide(t,Ue.fromNumber(e.length))},median(e){const t=this.max(e);const n=this.min(e);return Ue.divide(Ue.add(t,n),Ue.two)},range(e){return Ue.subtract(this.max(e),this.min(e))},variance(e){const t=this.sum(e);const n=Ue.divide(t,Ue.fromNumber(e.length));const r=e.reduce(((e,t)=>Ue.add(e,Ue.pow(Ue.subtract(t,n),Ue.two))));return Ue.divide(r,Ue.subtract(Ue.fromNumber(e.length),Ue.one))},stddev(e){const t=this.variance(e);return Ue.power(t,Wr)},accumulate(e){const t=new Array(e.length).fill(0);t[0]=e[0];for(let n=1;n<e.length;n++){t[n]=Ue.add(t[n-1],e[n])}return t}};const ls=(e,t)=>{for(let t=0;t<3;t++){if(!(e[t].dtype&d.RATIONAL)){return C("")}}let n=f;if(t){if(e[0].expos!==e[1].expos){return C("")}if(e[1].expos!==e[2].expos){return C("")}n=e[0].expos}const r=Object.create(null);r.unit=Object.create(null);r.unit.expos=n;r.dtype=d.RATIONAL;const s=e[0].value;const a=e[1].value;const l=e[2].value;for(let e=0;e<s.length-1;e++){if(Ue.lessThanOrEqualTo(s[e],l)&Ue.lessThanOrEqualTo(l,s[e+1])){const t=Ue.divide(Ue.subtract(a[e+1],a[e]),Ue.subtract(s[e+1],s[e]));r.value=Ue.add(a[e],Ue.multiply(t,Ue.subtract(l,s[e])));return Object.freeze(r)}}};const is=Object.freeze({functionExpos:Kr,unary:rs,binary:ss,reduce:as,lerp:ls});const os=(e,t,n)=>{if(n.length===1){const r=Ht.isVector(n[0])?n[0].value:n.dtype&d.MATRIX?n[0].value.flat():n[0].value;const s=is[e][t](r);let a=n[0].dtype;if(e==="reduce"&&t!=="accumulate"){if(a&d.MATRIX){a-=d.MATRIX}if(a&d.ROWVECTOR){a-=d.ROWVECTOR}if(a&d.COLUMNVECTOR){a-=d.COLUMNVECTOR}}return[s,a]}else{let r=0;let s=false;let a=n[0].dtype;for(r=0;r<n.length;r++){if(Ht.isVector(n[r])){s=true;a=n[r].dtype;break}}const l=n.map((e=>e.value));if(!s){const r=is[e][t](l);return t==="zeros"?[r.value,r.dtype]:[r,n[0].dtype]}else{const n=h(l);const s=[];for(let a=0;a<l[r].length;a++){n[r]=l[r][a];s.push(is[e][t](n))}return[s,a]}}};const us=(e,t)=>{if(Ue.isRational(e)&&Ue.isRational(t)){return Ue.areEqual(e,t)}else{return e===t}};const cs=(e,t,n,r)=>{if(t===false&&r){return false}if(t===true&&r){t=r}switch(e){case"=":return us(t,n);case"≠":case"!=":case"/=":if(Ue.isRational(t)&&Ue.isRational(n)){return!Ue.areEqual(t,n)}else{return t!==n}case">":if(Ue.isRational(t)&&Ue.isRational(n)){return Ue.greaterThan(t,n)}else{return t>n}case"<":if(Ue.isRational(t)&&Ue.isRational(n)){return Ue.lessThan(t,n)}else{return t<n}case"≥":case">=":if(Ue.isRational(t)&&Ue.isRational(n)){return Ue.greaterThanOrEqualTo(t,n)}else{return t>=n}case"≤":case"<=":if(Ue.isRational(t)&&Ue.isRational(n)){return Ue.lessThanOrEqualTo(t,n)}else{return t<=n}case"∈":if(typeof t==="string"&&typeof n==="string"){return n.indexOf(t)>-1}else if(Array.isArray(n)&&!Array.isArray(t)){for(let e=0;e<n.length;e++){if(us(t,n[e])){return true}}return false}else if(n instanceof Map){return n.has(t)}else{return C("NOT_ARRAY")}case"⋐":if(typeof t==="string"&&typeof n==="string"){return n.indexOf(t)>-1}else if(Array.isArray(t)&&Array.isArray(n)){for(let e=0;e<n.length;e++){if(us(t[0],n[e])){if(e+t.length>n.length){return false}for(let r=1;r<t.length;r++){if(!us(t[r],n[e+r])){return false}}return true}}return false}else{return C("NOT_ARRAY")}case"∉":if(typeof t==="string"&&typeof n==="string"){return n.indexOf(t)===-1}else if(Array.isArray(n)){for(let e=0;e<n.length;e++){if(t===n[e]){return false}}return true}else if(n instanceof Map){return!n.has(t)}else{return C("NOT_ARRAY")}}};const ps=e=>e[0].map(((t,n)=>e.map((e=>e[n]))));const fs=(e,t)=>e.map(((e,n)=>Ue.multiply(e,t[n]))).reduce(((e,t)=>Ue.add(e,t)));const ds=e=>e.map((e=>Ue.multiply(e,e))).reduce(((e,t)=>Ue.add(e,t)));const ms=[BigInt(1),BigInt(100)];const hs={scalar:{abs(e){return Ue.abs(e)},norm(e){return Ue.abs(e)},negate(e){return Ue.negate(e)},exp(e){return Ue.exp(e)},floor(e){return Ue.floor(e)},ceil(e){return Ue.ceil(e)},percent(e){return Ue.multiply(ms,e)},factorial(e){return Ue.factorial(e)},not(e){return!e}},complex:{abs(e){return St.abs(e)},norm(e){return St.abs(e)},conjugate(e){return St.conjugate(e)},negate(e){return St.negate(e)},exp(e){return St.exp(e)},floor(e){return C("NA_COMPL_OP","floor")},ceil(e){return C("NA_COMPL_OP","ceil")},percent(e){return C("NA_COMPL_OP","percent")},factorial(e){return C("NA_COMPL_OP","factorial")},not(e){return C("NA_COMPL_OP","not")}},vector:{abs(e){return Ue.sqrt(ds(e))},norm(e){return Ue.sqrt(ds(e))},negate(e){return e.map((e=>Ue.negate(e)))},exp(e){return e.map((e=>Ue.exp(e)))},floor(e){return e.map((e=>Ue.floor(e)))},ceil(e){return e.map((e=>Ue.ceil(e)))},percent(e){return e.map((e=>Ue.multiply(ms,e)))},factorial(e){return e.map((e=>Ue.factorial(e)))},not(e){return e.map((e=>!e))}},matrix:{abs(e){return Ht.invert(e,true)},norm(e){if(e.length===e[0].length){let t=Ue.zero;for(let n=0;n<e.length;n++){t=Ue.add(t,ds(e[n]))}return t.sqrt()}},negate(e){return e.map((e=>e.map((e=>Ue.negate(e)))))},exp(e){return e.map((e=>e.map((e=>Ue.exp(e)))))},floor(e){return e.map((e=>e.map((e=>Ue.floor(e)))))},ceil(e){return e.map((e=>e.map((e=>Ue.ceil(e)))))},percent(e){return e.map((e=>e.map((e=>Ue.multiply(ms,e)))))},factorial(e){return e.map((e=>e.map((e=>Ue.factorial(e)))))},not(e){return e.map((e=>e.map((e=>!e))))}},map:{abs(e){return g(e,(e=>Ue.abs(e)))},negate(e){return g(e,(e=>Ue.negate(e)))},exp(e){return g(e,(e=>Ue.exp(e)))},floor(e){return g(e,(e=>Ue.floor(e)))},ceil(e){return g(e,(e=>Ue.ceil(e)))},percent(e){return g(e,(e=>Ue.multiply(ms,e)))},factorial(e){return g(e,(e=>Ue.factorial(e)))},not(e){return g(e,(e=>!e))}},mapWithVectorValues:{abs(e){return g(e,(e=>e.map((e=>Ue.abs(e)))))},negate(e){return g(e,(e=>e.map((e=>Ue.negate(e)))))},exp(e){return g(e,(e=>e.map((e=>Ue.exp(e)))))},floor(e){return g(e,(e=>e.map((e=>Ue.floor(e)))))},ceil(e){return g(e,(e=>e.map((e=>Ue.ceil(e)))))},percent(e){return g(e,(e=>e.map((e=>Ue.multiply(ms,e)))))},factorial(e){return g(e,(e=>e.map((e=>Ue.factorial(e)))))},not(e){return g(e,(e=>e.map((e=>!e))))}}};const gs={scalar(e){return e},vector(e){return e.reduce(((e,t)=>e&&t),true)},matrix(e){const t=new Array(e.length);for(let n=0;n<e.length;n++){t[n]=e[n].reduce(((e,t)=>e&&t),true)}return t.reduce(((e,t)=>e&&t),true)}};const ys={scalar:{scalar(e,t,n){return n==="&"||n==="&_"?e+(n==="&"?d.ROWVECTOR:d.COLUMNVECTOR):e},complex(e,t,n){return t},vector(e,t,n){return t},matrix(e,t,n){return t},dataFrame(e,t,n){return t},map(e,t,n){return t},mapWithVectorValues(e,t,n){return t}},complex:{scalar(e,t,n){return e},complex(e,t,n){return e}},vector:{scalar(e,t,n){return e},map(e,t,n){return t+(e&d.ROWVECTOR)+(e&d.COLUMNVECTOR)}},rowVector:{rowVector(e,t,n){return n==="&_"?e-d.ROWVECTOR+d.MATRIX:e},columnVector(e,t,n){return e},matrix(e,t,n){return n==="&_"?t:e}},columnVector:{rowVector(e,t,n){return n==="dot"?d.RATIONAL:n==="cross"?e:e-d.COLUMNVECTOR+d.MATRIX},columnVector(e,t,n){return n==="&"?e-d.COLUMNVECTOR+d.MATRIX:e},matrix(e,t,n){return t}},matrix:{scalar(e,t,n){return e},rowVector(e,t,n){return e},columnVector(e,t,n){return n==="&"?e:t},matrix(e,t,n){return e},map(e,t,n){return 0}},dataFrame:{scalar(e,t,n){return e}},map:{scalar(e,t,n){return e},vector(e,t,n){return e+(t&d.ROWVECTOR)+(t&d.COLUMNVECTOR)},matrix(e,t,n){return 0},map(e,t,n){return e}},mapWithVectorValues:{scalar(e,t,n){return e}}};const bs={scalar:{scalar:{add(e,t){return Ue.add(e,t)},subtract(e,t){return Ue.subtract(e,t)},multiply(e,t){return Ue.multiply(e,t)},divide(e,t){return Ue.divide(e,t)},power(e,t){return St.isComplex(e)||Ue.isNegative(e)&&Ue.isPositive(t)&&Ue.lessThan(t,Ue.one)?St.power([e,Ue.zero],t):Ue.power(e,t)},hypot(e,t){return Ue.hypot(e,t)},modulo(e,t){return Ue.modulo(e,t)},and(e,t){return e&&t},or(e,t){return e||t},xor(e,t){return e!==t},concat(e,t){return[e,t]},unshift(e,t){return[e,t]}},complex:{add(e,t){return[Ue.add(e,t[0]),t[1]]},subtract(e,t){return[Ue.subtract(e,t[0]),Ue.negate(t[1])]},multiply(e,t){return[Ue.multiply(e,t[0]),Ue.multiply(e,t[1])]},divide(e,t){return St.divide([e,Ue.zero],t)},power(e,t){return St.power([e,Ue.zero],t)},modulo(e,t){return C("NA_COMPL_OP","modulo")},and(e,t){return C("NA_COMPL_OP","and")},or(e,t){return C("NA_COMPL_OP","or")},xor(e,t){return C("NA_COMPL_OP","xor")}},vector:{add(e,t){return t.map((t=>Ue.add(e,t)))},subtract(e,t){return t.map((t=>Ue.subtract(e,t)))},multiply(e,t){return t.map((t=>Ue.multiply(e,t)))},divide(e,t){return t.map((t=>Ue.divide(e,t)))},power(e,t){return t.map((t=>Ue.power(e,t)))},modulo(e,t){return t.map((t=>Ue.modulo(e,t)))},and(e,t){return t.map((t=>e&&t))},or(e,t){return t.map((t=>e||t))},xor(e,t){return t.map((t=>e!==t))},concat(e,t){return[e,...t]}},matrix:{add(e,t){return t.map((t=>t.map((t=>Ue.add(e,t)))))},subtract(e,t){return t.map((t=>t.map((t=>Ue.subtract(e,t)))))},multiply(e,t){return t.map((t=>t.map((t=>Ue.multiply(e,t)))))},divide(e,t){return t.map((t=>t.map((t=>Ue.divide(e,t)))))},power(e,t){return t.map((t=>t.map((t=>Ue.power(e,t)))))},modulo(e,t){return t.map((t=>t.map((t=>Ue.modulo(e,t)))))},and(e,t){return t.map((t=>t.map((t=>e&&t))))},or(e,t){return t.map((t=>t.map((t=>e||t))))},xor(e,t){return t.map((t=>t.map((t=>e!==t))))},concat(e,t){return C("BAD_CONCAT")}},dataFrame:{multiply(e,t){t.data=t.data.map((t=>isNaN(t[0])?t:t.map((t=>{let n=t.length;if(t.indexOf(".")){n-=1}return Ue.toStringSignificant(Ue.multiply(e,Ue.fromString(t)),n)}))));return t},divide(e,t){t.data=t.data.map((t=>isNaN(t[0])?t:t.map((t=>{let n=t.length;if(t.indexOf(".")){n-=1}return Ue.toStringSignificant(Ue.divide(e,Ue.fromString(t)),n)}))));return t}},map:{add(e,t){return g(t,(t=>Ue.add(e,t)))},subtract(e,t){return g(t,(t=>Ue.subtract(e,t)))},multiply(e,t){return g(t,(t=>Ue.multiply(e,t)))},divide(e,t){return g(t,(t=>Ue.divide(e,t)))},power(e,t){return g(t,(t=>Ue.power(e,t)))},modulo(e,t){return g(t,(t=>Ue.modulo(e,t)))},and(e,t){return g(t,(t=>e&&t))},or(e,t){return g(t,(t=>e||t))},xor(e,t){return g(t,(t=>e!==t))}},mapWithVectorValues:{add(e,t){return g(t,(t=>t.map((t=>Ue.add(e,t)))))},subtract(e,t){return g(t,(t=>t.map((t=>Ue.subtract(e,t)))))},multiply(e,t){return g(t,(t=>t.map((t=>Ue.multiply(e,t)))))},divide(e,t){return g(t,(t=>t.map((t=>Ue.divide(e,t)))))},power(e,t){return g(t,(t=>t.map((t=>Ue.power(e,t)))))},modulo(e,t){return g(t,(t=>t.map((t=>Ue.modulo(e,t)))))},and(e,t){return g(t,(t=>t.map((t=>e&&t))))},or(e,t){return g(t,(t=>t.map((t=>e||t))))},xor(e,t){return g(t,(t=>t.map((t=>e!==t))))}}},complex:{scalar:{add(e,t){return[Ue.add(e[0],t),e[1]]},subtract(e,t){return[Ue.subtract(e[0],t),e[1]]},multiply(e,t){return[Ue.multiply(e[0],t),Ue.multiply(e[1],t)]},divide(e,t){return St.divide(e,[t,Ue.zero])},power(e,t){return St.power(e,[t,Ue.zero])},modulo(e,t){return C("NA_COMPL_OP","modulo")},and(e,t){return C("NA_COMPL_OP","and")},or(e,t){return C("NA_COMPL_OP","or")},xor(e,t){return C("NA_COMPL_OP","xor")}},complex:{add(e,t){return[Ue.add(e[0],t[0]),Ue.add(e[1],t[1])]},subtract(e,t){return[Ue.subtract(e[0],t[0]),Ue.subtract(e[1],t[1])]},multiply(e,t){return St.multiply(e,t)},divide(e,t){return St.divide(e,t)},power(e,t){return St.power(e,t)},modulo(e,t){return C("NA_COMPL_OP","modulo")},and(e,t){return C("NA_COMPL_OP","and")},or(e,t){return C("NA_COMPL_OP","or")},xor(e,t){return C("NA_COMPL_OP","xor")}}},vector:{scalar:{add(e,t){return e.map((e=>Ue.add(e,t)))},subtract(e,t){return e.map((e=>Ue.subtract(e,t)))},multiply(e,t){return e.map((e=>Ue.multiply(e,t)))},divide(e,t){return e.map((e=>Ue.divide(e,t)))},power(e,t){return e.map((e=>Ue.power(e,t)))},modulo(e,t){return e.map((e=>Ue.modulo(e,t)))},and(e,t){return e.map((e=>e&&t))},or(e,t){return e.map((e=>e||t))},xor(e,t){return e.map((e=>e!==t))},concat(e,t){return[...e,t]}},map:{add(e,t){return g(t,(t=>e.map((e=>Ue.add(t,e)))))},subtract(e,t){return g(t,(t=>e.map((e=>Ue.subtract(t,e)))))},multiply(e,t){return g(t,(t=>e.map((e=>Ue.multiply(t,e)))))},divide(e,t){return g(t,(t=>e.map((e=>Ue.divide(t,e)))))},power(e,t){return g(t,(t=>e.map((e=>Ue.power(t,e)))))},modulo(e,t){return g(t,(t=>e.map((e=>Ue.modulo(t,e)))))},and(e,t){return g(t,(t=>e.map((e=>t&&e))))},or(e,t){return g(t,(t=>e.map((e=>t||e))))},xor(e,t){return g(t,(t=>e.map((e=>t!==e))))}}},rowVector:{rowVector:{add(e,t){if(e.length!==t.length){return C("MIS_ELNUM")}return e.map(((e,n)=>Ue.add(e,t[n])))},subtract(e,t){if(e.length!==t.length){return C("MIS_ELNUM")}return e.map(((e,n)=>Ue.subtract(e,t[n])))},divide(e,t){if(e.length!==t.length){return C("MIS_ELNUM")}return e.map(((e,n)=>Ue.divide(e,t[n])))},dot(e,t){if(e.length!==t.length){return C("MIS_ELNUM")}return fs(e,t)},cross(e,t){if(e.length!==3||t.length!==3){return C("CROSS")}const n=[Ue.zero,Ue.zero,Ue.zero];n[0]=Ue.subtract(Ue.multiply(e[1],t[2]),Ue.multiply(e[2],t[1]));n[1]=Ue.subtract(Ue.multiply(e[2],t[0]),Ue.multiply(e[0],t[2]));n[2]=Ue.subtract(Ue.multiply(e[0],t[1]),Ue.multiply(e[1],t[0]));return n},multiply(e,t){if(e.length===1&&t.length===1){return[Ue.multiply(e[0],t[0])]}return C("MIS_ELNUM")},asterisk(e,t){if(e.length!==t.length){return C("MIS_ELNUM")}return e.map(((e,n)=>Ue.multiply(e,t[n])))},power(e,t){if(e.length!==t.length){return C("MIS_ELNUM")}return e.map(((e,n)=>Ue.power(e,t[n])))},modulo(e,t){if(e.length!==t.length){return C("MIS_ELNUM")}return e.map(((e,n)=>Ue.modulo(e,t[n])))},and(e,t){if(e.length!==t.length){return C("MIS_ELNUM")}return e.map(((e,n)=>e&&t[n]))},or(e,t){if(e.length!==t.length){return C("MIS_ELNUM")}return e.map(((e,n)=>e||t[n]))},xor(e,t){if(e.length!==t.length){return C("MIS_ELNUM")}return e.map(((e,n)=>e!==t[n]))},concat(e,t){return e.concat(t)},unshift(e,t){return[e,t]}},columnVector:{add(e,t){if(e.length===1&&t.length===1){return[Ue.add(e[0],t[0])]}return C("MIS_ELNUM")},subtract(e,t){if(e.length===1&&t.length===1){return[Ue.subtract(e[0],t[0])]}return C("MIS_ELNUM")},dot(e,t){if(e.length!==t.length){return C("MIS_ELNUM")}return fs(e,t)},cross(e,t){if(e.length!==3||t.length!==3){return C("CROSS")}const n=[Ue.zero,Ue.zero,Ue.zero];n[0]=Ue.subtract(Ue.multiply(e[1],t[2]),Ue.multiply(e[2],t[1]));n[1]=Ue.subtract(Ue.multiply(e[2],t[0]),Ue.multiply(e[0],t[2]));n[2]=Ue.subtract(Ue.multiply(e[0],t[1]),Ue.multiply(e[1],t[0]));return n},multiply(e,t){if(e.length!==t.length){return C("MIS_ELNUM")}return fs(e,t)},asterisk(e,t){if(e.length!==t.length){return C("MIS_ELNUM")}return e.map(((e,n)=>Ue.multiply(e,t[n])))},power(e,t){if(e.length===1&&t.length===1){return[Ue.power(e[0],t[0])]}return C("MIS_ELNUM")},modulo(e,t){if(e.length===1&&t.length===1){return[Ue.modulo(e[0],t[0])]}return C("MIS_ELNUM")},and(e,t){if(e.length===1&&t.length===1){return[e[0]&&t[0]]}return C("MIS_ELNUM")},or(e,t){if(e.length===1&&t.length===1){return[e[0]||t[0]]}return C("MIS_ELNUM")},xor(e,t){if(e.length===1&&t.length===1){return[e[0]!==t[0]]}return C("MIS_ELNUM")},concat(e,t){return"BAD_CONCAT"},unshift(e,t){return"BAD_CONCAT"}},matrix:{add(e,t){if(e.length!==t[0].length){return C("MIS_ELNUM")}return t.map((t=>t.map(((t,n)=>Ue.add(e[n],t)))))},subtract(e,t){if(e.length!==t[0].length){return C("MIS_ELNUM")}return t.map((t=>t.map(((t,n)=>Ue.subtract(e[n],t)))))},concat(e,t){if(e.length!==t[0].length){return C("BAD_CONCAT")}return t.map(((t,n)=>[e[n],...t]))},unshift(e,t){if(e.length!==t.length){return C("BAD_CONCAT")}return[e,...t]}}},columnVector:{rowVector:{add(e,t){if(e.length===1&&t.length===1){return[Ue.add(e[0],t[0])]}return C("MIS_ELNUM")},subtract(e,t){if(e.length===1&&t.length===1){return[Ue.subtract(e[0],t[0])]}return C("MIS_ELNUM")},dot(e,t){if(e.length!==t.length){return C("MIS_ELNUM")}return fs(e,t)},cross(e,t){if(e.length!==3||t.length!==3){return C("CROSS")}const n=[Ue.zero,Ue.zero,Ue.zero];n[0]=Ue.subtract(Ue.multiply(e[1],t[2]),Ue.multiply(e[2],t[1]));n[1]=Ue.subtract(Ue.multiply(e[2],t[0]),Ue.multiply(e[0],t[2]));n[2]=Ue.subtract(Ue.multiply(e[0],t[1]),Ue.multiply(e[1],t[0]));return n},multiply(e,t){if(e.length!==t.length){return C("MIS_ELNUM")}return fs(e,t)},divide(e,t){return e.map((e=>t.map((t=>Ue.divide(e,t)))))},asterisk(e,t){if(e.length!==t.length){return C("MIS_ELNUM")}return e.map(((e,n)=>Ue.multiply(e,t[n])))},power(e,t){if(e.length===1&&t.length===1){return[Ue.power(e[0],t[0])]}return C("MIS_ELNUM")},modulo(e,t){if(e.length===1&&t.length===1){return[Ue.modulo(e[0],t[0])]}return C("MIS_ELNUM")},and(e,t){if(e.length===1&&t.length===1){return[e[0]&&t[0]]}return C("MIS_ELNUM")},or(e,t){if(e.length===1&&t.length===1){return[e[0]||t[0]]}return C("MIS_ELNUM")},xor(e,t){if(e.length===1&&t.length===1){return[e[0]!==t[0]]}return C("MIS_ELNUM")},concat(e,t){return"BAD_CONCAT"},unshift(e,t){return"BAD_CONCAT"}},columnVector:{add(e,t){if(e.length!==t.length){return C("MIS_ELNUM")}return e.map(((e,n)=>Ue.add(e,t[n])))},subtract(e,t){if(e.length!==t.length){return C("MIS_ELNUM")}return e.map(((e,n)=>Ue.subtract(e,t[n])))},divide(e,t){if(e.length!==t.length){return C("MIS_ELNUM")}return e.map(((e,n)=>Ue.divide(e,t[n])))},dot(e,t){if(e.length!==t.length){return C("MIS_ELNUM")}return fs(e,t)},cross(e,t){if(e.length!==3||t.length!==3){return C("CROSS")}const n=[Ue.zero,Ue.zero,Ue.zero];n[0]=Ue.subtract(Ue.multiply(e[1],t[2]),Ue.multiply(e[2],t[1]));n[1]=Ue.subtract(Ue.multiply(e[2],t[0]),Ue.multiply(e[0],t[2]));n[2]=Ue.subtract(Ue.multiply(e[0],t[1]),Ue.multiply(e[1],t[0]));return n},multiply(e,t){if(e.length===1&&t.length===1){return[Ue.multiply(e[0],t[0])]}return C("MIS_ELNUM")},asterisk(e,t){if(e.length!==t.length){return C("MIS_ELNUM")}return e.map(((e,n)=>Ue.multiply(e,t[n])))},power(e,t){if(e.length!==t.length){return C("MIS_ELNUM")}return e.map(((e,n)=>Ue.power(e,t[n])))},modulo(e,t){if(e.length!==t.length){return C("MIS_ELNUM")}return e.map(((e,n)=>Ue.modulo(e,t[n])))},and(e,t){if(e.length!==t.length){return C("MIS_ELNUM")}return e.map(((e,n)=>e&&t[n]))},or(e,t){if(e.length!==t.length){return C("MIS_ELNUM")}return e.map(((e,n)=>e||t[n]))},xor(e,t){if(e.length!==t.length){return C("MIS_ELNUM")}return e.map(((e,n)=>e!==t[n]))},concat(e,t){if(e.length!==t.length){return C("MIS_ELNUM")}return e.map(((e,n)=>[e,t[n]]))},unshift(e,t){return e.concat(t)}},matrix:{add(e,t){const n=h(t);if(e.length!==t.length){return C("MIS_ELNUM")}for(let r=0;r<t.length;r++){for(let s=0;s<t[0].length;s++){n[r][s]=Ue.add(t[r][s],e[s])}}return n},subtract(e,t){const n=h(t);if(e.length!==t.length){return C("MIS_ELNUM")}for(let r=0;r<t.length;r++){for(let s=0;s<t[0].length;s++){n[r][s]=Ue.subtract(t[r][s],e[s])}}return n},concat(e,t){if(e.length!==t.length){return C("MIS_ELNUM")}return t.map(((t,n)=>[e[n],...t]))},unshift(e,t){return"BAD_CONCAT"}}},matrix:{scalar:{add(e,t){return e.map((e=>e.map((e=>Ue.add(e,t)))))},subtract(e,t){return e.map((e=>e.map((e=>Ue.subtract(e,t)))))},multiply(e,t){return e.map((e=>e.map((e=>Ue.multiply(e,t)))))},divide(e,t){return e.map((e=>e.map((e=>Ue.divide(e,t)))))},power(e,t){if(t==="T"){return ps(e)}if(e.length===e[0].length&&Ue.areEqual(t,[BigInt(-1),BigInt(1)])){return Ht.invert(e)}return e.map((e=>e.map((e=>Ue.power(e,t)))))},modulo(e,t){return e.map((e=>e.map((e=>Ue.modulo(e,t)))))}},rowVector:{add(e,t){return e.map((e=>e.map(((e,n)=>Ue.add(e,t[n])))))},subtract(e,t){return e.map((e=>e.map(((e,n)=>Ue.subtract(e,t[n])))))},multiply(e,t){return e.map((e=>e.map(((e,n)=>Ue.multiply(e,t[n])))))},divide(e,t){return e.map((e=>e.map(((e,n)=>Ue.divide(e,t[n])))))},power(e,t){return e.map((e=>e.map(((e,n)=>Ue.power(e,t[n])))))},unshift(e,t){if(e[0].length!==t.length){return C("MIS_ELNUM")}return[...e,t]}},columnVector:{add(e,t){return e.map((e=>e.map(((e,n)=>Ue.add(e,t[n])))))},subtract(e,t){return e.map((e=>e.map(((e,n)=>Ue.subtract(e,t[n])))))},multiply(e,t){if(e[0].length!==t.length){return C("MIS_ELNUM")}return e.map((e=>fs(e,t)))},concat(e,t){if(e.length!==t.length){return C("MIS_ELNUM")}return e.map(((e,n)=>[...e,t[n]]))}},matrix:{add(e,t){if(e.length!==t.length){return C("MIS_ELNUM")}if(e[0].length!==t[0].length){return C("MIS_ELNUM")}return e.map(((e,n)=>e.map(((e,r)=>Ue.add(e,t[n][r])))))},subtract(e,t){if(e.length!==t.length){return C("MIS_ELNUM")}if(e[0].length!==t[0].length){return C("MIS_ELNUM")}return e.map(((e,n)=>e.map(((e,r)=>Ue.subtract(e,t[n][r])))))},dot(e,t){if(e.length!==t.length){return C("MIS_ELNUM")}if(e[0].length!==t[0].length){return C("MIS_ELNUM")}return e.map(((e,n)=>fs(e,t[n]))).reduce(((e,t)=>Ue.add(e,t)))},cross(e,t){return C("CROSS")},multiply(e,t){},asterisk(e,t){if(e.length!==t.length){return C("MIS_ELNUM")}if(e[0].length!==t[0].length){return C("MIS_ELNUM")}return e.map(((e,n)=>e.map(((e,r)=>Ue.multiply(e,t[n][r])))))},divide(e,t){if(e.length!==t.length){return C("MIS_ELNUM")}if(e[0].length!==t[0].length){return C("MIS_ELNUM")}return e.map(((e,n)=>e.map(((e,r)=>Ue.divide(e,t[n][r])))))},power(e,t){if(e.length!==t.length){return C("MIS_ELNUM")}if(e[0].length!==t[0].length){return C("MIS_ELNUM")}return e.map(((e,n)=>e.map(((e,r)=>Ue.power(e,t[n][r])))))},modulo(e,t){if(e.length!==t.length){return C("MIS_ELNUM")}if(e[0].length!==t[0].length){return C("MIS_ELNUM")}return e.map(((e,n)=>e.map(((e,r)=>Ue.modulo(e,t[n][r])))))},and(e,t){if(e.length!==t.length){return C("MIS_ELNUM")}if(e[0].length!==t[0].length){return C("MIS_ELNUM")}return e.map(((e,n)=>e.map(((e,r)=>e&&t[n][r]))))},or(e,t){if(e.length!==t.length){return C("MIS_ELNUM")}if(e[0].length!==t[0].length){return C("MIS_ELNUM")}return e.map(((e,n)=>e.map(((e,r)=>e||t[n][r]))))},xor(e,t){if(e.length!==t.length){return C("MIS_ELNUM")}if(e[0].length!==t[0].length){return C("MIS_ELNUM")}return e.map(((e,n)=>e.map(((e,r)=>e!==t[n][r]))))},concat(e,t){if(e.length!==t.length){return C("MIS_ELNUM")}return e.map(((e,n)=>e.concat(t[n])))},unshift(e,t){if(e[0].length!==t[0].length){return C("MIS_ELNUM")}return e.concat(t)}},map:{}},dataFrame:{multiply(e,t){e.data=e.data.map((e=>isNaN(e[0])?e:e.map((e=>{let n=e.length;if(e.indexOf(".")){n-=1}return Ue.toStringSignificant(Ue.multiply(t,Ue.fromString(e)),n)}))));return e},divide(e,t){e.data=e.data.map((e=>isNaN(e[0])?e:e.map((e=>{let n=e.length;if(e.indexOf(".")){n-=1}return Ue.toStringSignificant(Ue.divide(t,Ue.fromString(e)),n)}))));return e}},map:{scalar:{add(e,t){return g(e,(e=>Ue.add(e,t)))},subtract(e,t){return g(e,(e=>Ue.subtract(e,t)))},multiply(e,t){return g(e,(e=>Ue.multiply(e,t)))},divide(e,t){return g(e,(e=>Ue.divide(e,t)))},power(e,t){return g(e,(e=>Ue.power(e,t)))},modulo(e,t){return g(e,(e=>Ue.modulo(e,t)))},and(e,t){return g(e,(e=>e&&t))},or(e,t){return g(e,(e=>e||t))},xor(e,t){return g(e,(e=>e!==t))}},vector:{add(e,t){return g(e,(e=>t.map((t=>Ue.add(e,t)))))},subtract(e,t){return g(e,(e=>t.map((t=>Ue.subtract(e,t)))))},multiply(e,t){return g(e,(e=>t.map((t=>Ue.multiply(e,t)))))},divide(e,t){return g(e,(e=>t.map((t=>Ue.divide(e,t)))))},power(e,t){return g(e,(e=>t.map((t=>Ue.power(e,t)))))},modulo(e,t){return g(e,(e=>t.map((t=>Ue.modulo(e,t)))))},and(e,t){return g(e,(e=>t.map((t=>e&&t))))},or(e,t){return g(e,(e=>t.map((t=>e||t))))},xor(e,t){return g(e,(e=>t.map((t=>e!==t))))}},matrix:{},map:{}},mapWithVectorValues:{scalar:{add(e,t){return g(e,(e=>e.map((e=>Ue.add(e,t)))))},subtract(e,t){return g(e,(e=>e.map((e=>Ue.subtract(e,t)))))},multiply(e,t){return g(e,(e=>e.map((e=>Ue.multiply(e,t)))))},divide(e,t){return g(e,(e=>e.map((e=>Ue.divide(e,t)))))},power(e,t){return g(e,(e=>e.map((e=>Ue.power(e,t)))))},modulo(e,t){return g(e,(e=>e.map((e=>Ue.modulo(e,t)))))},and(e,t){return g(e,(e=>e.map((e=>e&&t))))},or(e,t){return g(e,(e=>e.map((e=>e||t))))},xor(e,t){return g(e,(e=>e.map((e=>e!==t))))}},vector:{},matrix:{},map:{},mapWithVectorValues:{}}};const Rs={scalar:{scalar:{relate(e,t,n,r){return cs(e,t,n,r)}},vector:{relate(e,t,n,r){if(r===undefined){return n.map((n=>cs(e,t,n,undefined)))}else if(typeof r!=="object"){return n.map((n=>cs(e,t,n,r)))}else if(Array.isArray(r)){return n.map(((n,s)=>cs(e,t,n,r[s])))}}},matrix:{relate(e,t,n,r){if(r===undefined){return n.map((n=>n.map((n=>cs(e,t,n,undefined)))))}else if(typeof r!=="object"){return n.map((n=>n.map((n=>cs(e,t,n,r)))))}else if(Array.isArray(r)){return n.map(((n,s)=>n.map(((n,a)=>cs(e,t,n,r[s][a])))))}}},map:{relate(e,t,n,r){if(r===undefined){return g(n,(n=>cs(e,t,n,undefined)))}else if(typeof r!=="object"){return g(n,(n=>cs(e,t,n,r)))}else{const s=new Map;for(const[a,l]of n.entries()){s.set(a,cs(e,t,l,r[a]))}return s}}}},vector:{scalar:{relate(e,t,n,r){if(r===undefined){return t.map((t=>cs(e,t,n,undefined)))}else if(typeof r!=="object"){return t.map((t=>cs(e,t,n,r)))}else if(Array.isArray(r)){return t.map(((t,s)=>cs(e,t,n,r[s])))}}}},rowVector:{rowVector:{relate(e,t,n,r){if(r===undefined){return t.map(((t,r)=>cs(e,t,n[r],undefined)))}}}},columnVector:{columnVector:{relate(e,t,n,r){if(r===undefined){return t.map(((t,r)=>cs(e,t,n[r],undefined)))}}}},matrix:{scalar:{relate(e,t,n,r){if(r===undefined){return t.map((t=>t.map((t=>cs(e,t,n,undefined)))))}else if(typeof r!=="object"){return t.map((t=>t.map((t=>cs(e,t,n,r)))))}else if(Array.isArray(r)){return t.map(((t,s)=>t.map(((t,a)=>cs(e,t,n,r[s][a])))))}}}}};const vs=(e,t)=>{switch(t){case"scalar":return e[1]===BigInt(0);case"vector":for(let t=0;t<e.length;t++){if(e[t][1]===BigInt(0)){return true}}return false;case"matrix":for(let t=0;t<e.length;t++){for(let n=0;n<e[0].length;n++){if(e[t][n][1]===BigInt(0)){return true}}}return false;case"map":for(const[t,n]of Object.entries(e)){if(n[1]===BigInt(0)){return true}}return false;case"mapWithVectorValues":for(const[t,n]of Object.entries(e)){for(let e=0;e<n.length;e++){if(n[e][1]===BigInt(0)){return true}}}return false;default:return false}};const As=Object.freeze({unary:hs,binary:bs,relations:Rs,condition:gs,dtype:ys});const Ns=/[\uD800-\uDBFF][\uDC00-\uDFFF][\uFE00\uFE01]?/g;const Os=(e,t)=>{if(t.dtype!==d.RATIONAL&&t.dtype!==d.RANGE){return C("STR_INDEX")}const n=y(Ns,e);let r="";if(n.length===0){if(t.dtype===d.RATIONAL){r=e.charAt(Ue.toNumber(t.value)-1)}else if(t.dtype===d.RANGE){const n=Ue.toNumber(t.value[0]);const s=Ue.toNumber(t.value[1]);const a=t.value[2]==="∞"?e.length:Ue.toNumber(t.value[2]);if(s===1){r=e.slice(n-1,a)}else{for(let t=n-1;t<a;t+=s){r+=e.charAt(t)}}}}else{let s=0;let a=0;let l="";let i=0;let o=0;let u=0;if(t.dtype===d.RATIONAL){i=Ue.toNumber(t.value);o=1;u=i}else{i=Ue.toNumber(t.value[0]);o=Ue.toNumber(t.value[1]);u=Ue.toNumber(t.value[2])}let c=i;for(let t=0;t<n.length;t++){const i=n[t].index;l=e.slice(a,i);while(c<=u&&s+l.length>=c){r+=l[c-s-1];c+=o}if(c<=u&&s+l.length===c-1){r+=n[t].value;c+=o}if(c>u){return{value:r,unit:null,dtype:d.STRING}}s+=l.length+1;a=i+n[t].length}if(c>=s&&c<=u){l=e.slice(a);while(c<=u&&s+l.length>=c){r+=l[c-s-1];c+=o}}else{return C("BIGINDEX")}}return{value:r,unit:null,dtype:d.STRING}};function Es(e,t,n){const r=e.format?e.format.value:"h15";if(!Array.isArray(t.name)){e[t.name]=t}else if(t.value===null){for(let n=0;n<t.name.length;n++){e[t.name[n]]={value:null}}}else if(kt(t)){const n=Boolean(t.dtype&d.QUANTITY);let r=t.resultdisplay;r=r.replace(/\\(begin|end){[bp]matrix}/g,"").trim();const s=r.split(/&|\\\\/);if(t.dtype&d.MATRIX){const r=t.dtype-d.MATRIX;const a=n?t.value.plain.length:t.value.length;const l=t.name.length/a;let i=0;for(let o=0;o<a;o++){for(let a=0;a<l;a++){const l=n?{plain:t.value.plain[o][a],inBaseUnits:t.value.inBaseUnits[o][a]}:t.value[o][a];e[t.name[o]]={name:t.name[i],value:l,resultdisplay:n?kr(s[i].trim()+" '"+t.unit+"'"):s[i].trim(),expos:t.expos,unit:n?t.unit:undefined,dtype:r};i+=1}}}else{const r=Boolean(t.dtype&d.COLUMNVECTOR);const a=t.dtype-(r?d.COLUMNVECTOR:d.ROWVECTOR);for(let r=0;r<t.name.length;r++){const l=n?{plain:t.value.plain[r],inBaseUnits:t.value.inBaseUnits[r]}:t.value[r];e[t.name[r]]={name:t.name[r],value:l,resultdisplay:n?kr(s[r].trim()+" '"+t.unit+"'"):s[r].trim(),expos:t.expos,unit:n?t.unit:undefined,dtype:a}}}}else if(t.dtype&d.MAP){const s=t.value.unit;const a=s&&s.name?s.name:undefined;const l=t.dtype-d.MAP;let i=0;if(t.dtype&d.QUANTITY){for(const s of t.value.plain.values()){const o={value:{plain:s},expos:t.expos,factor:t.factor,dtype:l};o.resultdisplay=He(s,r,n);if(a){o.resultdisplay+=" "+M(a)}e[t.name[i]]=o;i+=1}i=0;for(const n of t.value.inBaseUnits.values()){e[t.name[i]].value.inBaseUnits=n;i+=1}}else{for(const s of t.value.values()){const o={value:s,expos:t.expos,factor:t.factor,dtype:l};o.resultdisplay=Ue.isRational(s)?He(s,r,n):String(s);if(a){o.resultdisplay+=" "+M(a)}e[t.name[i]]=o;i+=1}}}else if(t.dtype===d.DATAFRAME){for(let n=0;n<t.name.length;n++){const r=t.value.data[n][0];const s=t.value.dtype[n];const a=s&d.RATIONAL?Ue.fromString(r):r;const l={value:a,unit:t.unit[t.value.units[n]],dtype:s,resultdisplay:s&d.RATIONAL?kr(He(a)):kr(a)};if(t.value.units[n]){l.value={plain:l.value};const e=t.unit[t.value.units[n]];l.value.inBaseUnits=Ue.multiply(Ue.add(l.value.plain,e.gauge),e.factor);l.expos=e.expos;l.resultdisplay+=" "+M(l.unit.name)}e[t.name[n]]=l}}else if(t.dtype===d.TUPLE){let n=0;for(const r of t.value.values()){e[t.name[n]]=r;n+=1}}else if(t.dtype===d.MODULE){if(t.name.length!==t.value.length){return C("MULT_MIS")}else{let n=0;for(const r of t.value.values()){const s=h(r);e[t.name[n]]=s;n+=1}}}}const xs=/\r\n?/g;const Ts=/\t/g;const Is=/\f/g;const Ms=/(?:^| )\.([a-z-]+)(?: |$)/;const Ls=/(?:^| )width="?([\d.a-z]+"?)(?: |$)/;const Cs=/(?:^| )colWidths="([^"]*)"/;const ws=/(?:^| )#([a-z-]+)(?: |$)/;const Ss=function(e){return e.replace(xs,"\n").replace(Is,"").replace(Ts,"    ")};const ks=function(e){const t=function(t,n){return n.inline?e.exec(t):null};t.regex=e;return t};const Us=function(e){const t=function(t,n){return n.inline?null:e.exec(t)};t.regex=e;return t};const Ds=function(e){const t=function(t,n){return e.exec(t)};t.regex=e;return t};const _s=/\\([^0-9A-Za-z\s])/g;const Bs=function(e){return e.replace(_s,"$1")};const Ps=(e,t)=>{const n=e.replace(sa,"\n").match(na);const r=t.inHtml&&!/\n\n(?!$)/.test(e);const s=n.map((function(e,n){const s=ta.exec(e);const a=s?s[0].length:0;const l=new RegExp("^ {1,"+a+"}","gm");const i=e.replace(l,"").replace(ta,"");const o=t.inline;const u=t._list;t._list=true;const c=t.isTight;t.isTight=r;t.inline=r;const p=i.replace(aa,"");const f=r?{type:"list_item",content:Qs(p,t)}:{type:"list_item",content:Ks(p,t)};t.inline=o;t._list=u;t.isTight=c;return f}));return s};const zs=function(){const e=/^ *\| *| *\| *$/g;const t=/^[-=]+:$/;const n=/^:[-=]+:$/;const r=function(r){r=r.replace(e,"");const s=r.trim().split(/[|+*]/);let a="";for(let e=0;e<s.length;e++){a+=n.test(s[e])?` c${String(e+1)}c`:t.test(s[e])?` c${String(e+1)}r`:""}return a.trim()};const s=(e,t)=>{if(!e&&t===""){return["","",null]}const n=Ms.exec(e);let r=n?n[1]:"";if(t.length>0){r+=(r.length>0?" ":"")+t}const s=ws.exec(e);const a=s?s[1]:"";const l=Cs.exec(e);const i=l?l[1].split(" "):null;return[r,a,i]};const a=function(e,t,n,r,s){const a=n.inTable;n.inTable=true;const l=t(e.trim(),n);ia(l);n.inTable=a;const i={type:"table_row",content:[]};let o=-1;l.forEach((function(e,t){if(e.type==="text"){e.text=e.text.trim()}if(e.type==="tableSeparator"){if(t!==l.length-1){o+=1;i.content.push({type:s?"table_header":"table_cell",attrs:{colspan:1,rowspan:1,colwidth:r?[Number(r[o])]:null,background:null},content:n.inHtml?[]:[{type:"paragraph",content:[]}]})}}else if(n.inHtml){i.content[o].content.push(e)}else{i.content[o].content[0].content.push(e)}}));return i};const l=function(){return function(e,t){t.inline=true;const n=r(e[2]);const[l,i,o]=s(e[4],n);const u={type:"table",attrs:{},content:[]};if(i){u.attrs.id=i}if(l){u.attrs.class=l}u.content.push(a(e[1],Ks,t,o,true));const c=e[3].trim().split("\n");c.forEach((e=>{u.content.push(a(e,Ks,t,o,false))}));t.inline=false;return u}};const i=/^\+:?=/;const o=function(){return function(e,t){const n=e[2];const a=r(n.slice(1));const[l,o,u]=s(e[3],a);const c=e[1].slice(0,-1).split("\n");let p=false;let f=c.length+10;for(let e=0;e<c.length;e++){if(i.test(c[e])){p=true;f=e;break}}const d=[0];for(let e=1;e<n.length;e++){const t=n.charAt(e);if(t==="+"){d.push(e)}}const m=[0];for(let e=1;e<c.length;e++){const t=c[e].charAt(0);if(t==="+"){m.push(e)}}const h=d.length-1;const g=m.length-1;const y=[];for(let e=0;e<g;e++){const e=new Array(h);for(let t=0;t<h;t++){e[t]={rowspan:1}}y.push(e)}for(let e=0;e<g;e++){const t=y[e];for(let n=0;n<h;n++){const r=t[n];if(r.rowspan===0){continue}r.colspan=1;const s=c[m[e+1]-1];for(let e=n+1;e<d.length;e++){if(s.charAt(d[e])==="|"){break}r.colspan+=1;t[e].rowspan=0}for(let t=e+1;t<m.length;t++){const e=c[m[t]].charAt(d[n]+1);if(e==="-"||e==="="){break}r.rowspan+=1;for(let e=0;e<r.colspan;e++){y[t][n+e].rowspan=0}}const a=d[n]+2;const l=d[n+r.colspan]-1;const i=m[e]+1;const o=m[e+r.rowspan];let h="";for(let e=i;e<o;e++){h+=c[e].slice(a,l).replace(/ +$/,"")+"\n"}r.blob=h.slice(0,-1).replace(/^\n+/,"");r.inHeader=p&&i<f;if(u){let e=0;for(let t=0;t<r.colspan;t++){e+=Number(u[n+t])}r.width=e}}}const b={type:"table",attrs:{},content:[]};if(o){b.attrs.id=o}if(l){b.attrs.class=l}for(let e=0;e<g;e++){b.content.push({type:"table_row",content:[]});for(let n=0;n<h;n++){if(y[e][n].rowspan===0){continue}const r=y[e][n];t.inline=false;let s=t.inHtml&&r.blob.indexOf("```")===-1&&!/\n\n/.test(r.blob.replace(/\n+$/g,""))?Qs(r.blob,t):Ks(r.blob,t);if(s.length===1&&s[0].type==="null"){s=t.inHtml?[{type:"text",text:""}]:[{type:"paragraph",content:[]}]}b.content[e].content.push({type:r.inHeader?"table_header":"table_cell",attrs:{colspan:r.colspan,rowspan:r.rowspan,colwidth:u?[r.width]:null,background:null},content:s})}}t.inline=false;return b}};return{parsePipeTable:l(),PIPE_TABLE_REGEX:/^(\|.+)\n\|([-:]+[-| :]*)\n((?:\|.*(?:\n|$))*)(?:\{([^\n}]+)\}\n)?\n*/,parseGridTable:o(),GRID_TABLE_REGEX:/^((\+(?:[-:=]+\+)+)\n(?:[+|][^\n]+[+|]\n)+)(?:\{([^\n}]+)\}\n)?\n*/}}();const js="(?:\\[[^\\]]*\\]|[^\\[\\]]|\\](?=[^\\[]*\\]))*";const Gs="\\s*<?((?:\\([^)]*\\)|[^\\s\\\\]|\\\\.)*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*";const Fs=e=>{for(let t=0;t<e.length;t++){if(e[t].type==="link"){return t}}};const Vs=function(e,t,n){let r=e[2]?e[2]:e[1];r=r.replace(/\s+/g," ");if(t._defs&&t._defs[r]){const e=t._defs[r];if(n.type==="image"){n.attrs.src=e.target;n.attrs.width=null}else{n.attrs.href=e.target}}t._refs=t._refs||{};t._refs[r]=t._refs[r]||[];t._refs[r].push(n);return n};const qs=(e,t,n)=>{const r=Qs(e,t);if(Array.isArray(r)&&r.length===0){return r}ia(r);for(const e of r){if(e.marks){e.marks.push({type:n})}else{e.marks=[{type:n}]}}return r};const Ws=/^ *(?:<(head|h[1-6]|p|pre|script|style|table)[\s>][\s\S]*?(?:<\/\1>[^\n]*\n)|<!--[^>]+-->[^\n]*\n|<\/?(?:body|details|(div|input|label)(?: [^>]+)?|!DOCTYPE[a-z ]*|html[a-z ="]*|br|dl(?: class="[a-z-]+")?|li|main[a-z\- ="]*|nav|ol|ul(?: [^>]+)?)\/?>[^\n]*?(?:\n|$))/;const $s={C:"centered_div",H:"header",i:"indented_div"};const Ys=new Map;Ys.set("html",{isLeaf:true,match:Us(Ws),parse:function(e,t){if(!t.inHtml){return null}return{type:"html",text:e[0]}}});Ys.set("heading",{isLeaf:false,match:Us(/^ *(#{1,6})([^\n]+?)#* *(?:\n *)+\n/),parse:function(e,t){return{attrs:{level:e[1].length},content:Qs(e[2].trim(),t)}}});Ys.set("dt",{isLeaf:false,match:Us(/^(([^\n]*)\n)(?=<dd>|\n:)/),parse:function(e,t){return{content:Qs(e[2].trim(),t)}}});Ys.set("horizontal_rule",{isLeaf:true,match:Us(/^( *[-*_]){3,} *(?:\n *)+\n/),parse:function(e,t,n){return{type:"horizontal_rule"}}});Ys.set("lheading",{isLeaf:false,match:Us(/^([^\n]+)\n *(=|-){3,} *(?:\n *)+\n/),parse:function(e,t,n){return{type:"heading",level:e[2]==="="?1:2,content:Qs(t,e[1])}}});Ys.set("fence",{isLeaf:true,match:Us(/^(`{3,}) *(?:(\S+) *)?\n([\s\S]+?)\n?\1 *(?:\n *)+\n/),parse:function(e,t){return{type:"code_block",content:[{type:"text",text:e[3]}]}}});Ys.set("blockquote",{isLeaf:false,match:Us(/^( *>[^\n]+(\n[^\n]+)*\n*)+\n{2,}/),parse:function(e,t){const n=e[0].replace(/^ *> ?/gm,"");return{content:Ks(n,t)}}});Ys.set("ordered_list",{isLeaf:false,match:Us(/^( {0,3})(\d{1,9}\.) [\s\S]+?(?:\n{2,}(?! )(?!\1(?:\d{1,9}\.) )\n*|\s*$)/),parse:function(e,t){const n=Number(e[2].trim());return{attrs:{order:n},content:Ps(e[0],t,e[1])}}});Ys.set("bullet_list",{isLeaf:false,match:Us(/^( {0,3})([*+-]) [\s\S]+?(?:\n{2,}(?! )(?!\1(?:[*+-]) )\n*|\s*$)/),parse:function(e,t){return{content:Ps(e[0],t,e[1])}}});Ys.set("dd",{isLeaf:false,match:Us(/^:( +)[\s\S]+?(?:\n{2,}(?! |:)(?!\1)\n*|\s*$)/),parse:function(e,t){let n=" "+e[0].slice(1);const r=1+e[1].length;const s=new RegExp("^ {"+r+","+r+"}","gm");n=n.replace(s,"");return{content:Ks(n,t)}}});Ys.set("special_div",{isLeaf:false,match:Us(/^(C|H|i)>( {1,})[\s\S]+?(?:\n{2,}(?! {2,2}\2)\n*|\s*$)/),parse:function(e,t){const n=$s[e[1]];let r="  "+e[0].slice(2);const s=2+e[2].length;const a=new RegExp("^ {"+s+","+s+"}","gm");r=r.replace(a,"");return{type:n,content:Ks(r,t)}}});Ys.set("def",{isLeaf:true,match:Us(/^\[([^\]]+)\]: *<?([^\n>]*)>? *\n(?:\{([^\n}]*)\}\n)?/),parse:function(e,t){const n=e[1].replace(/\s+/g," ");const r=e[2];const s=e[3]||"";const a={};if(t._refs&&t._refs[n]){t._refs[n].forEach((function(e){if(e.type==="image"){e.attrs.src=r;if(s){const t=Ms.exec(s);if(t){e.attrs.class=t[1];a.class=t[1]}const n=Ls.exec(s);if(n){e.attrs.width=n[1];a.width=n[1]}const r=ws.exec(s);if(r){e.attrs.id=r[1];a.id=r[1]}}}else{e.attrs.href=r}}))}t._defs=t._defs||{};t._defs[n]={target:r,attrs:a};return{def:n,target:r,directives:s}}});Ys.set("toc",{isLeaf:true,match:Us(/^{\.toc start=(\d) end=(\d)}\n/),parse:function(e,t){return{attrs:{start:Number(e[1]),end:Number(e[2]),body:[]}}}});Ys.set("pipeTable",{isLeaf:false,match:Us(zs.PIPE_TABLE_REGEX),parse:zs.parsePipeTable});Ys.set("gridTable",{isLeaf:false,match:Us(zs.GRID_TABLE_REGEX),parse:zs.parseGridTable});Ys.set("newline",{isLeaf:true,match:Us(/^(?:\n *)*\n/),parse:function(){return{type:"null"}}});Ys.set("paragraph",{isLeaf:false,match:Us(/^((?:[^\n]|\n(?! *\n))+)(?:\n *)+\n/),parse:function(e,t){return{content:Qs(e[1],t)}}});Ys.set("escape",{isLeaf:true,match:ks(/^\\([^0-9A-Za-z\s])/),parse:function(e,t){return{type:"text",text:e[1]}}});Ys.set("tableSeparator",{isLeaf:true,match:function(e,t){if(!t.inTable){return null}return/^ *\| */.exec(e)},parse:function(){return{type:"tableSeparator"}}});Ys.set("calculation",{isLeaf:true,match:Ds(/^(?:¢((?:\\[\s\S]|[^\\])+?)¢|¢¢\n?((?:\\[\s\S]|[^\\])+?)\n?¢¢)/),parse:function(e,t){if(e[1]){let t=e[1].trim();if(!/^(?:function|draw\()/.test(t)&&t.indexOf("``")===-1){t=t.replace(/\n/g," ")}return{content:"",attrs:{entry:t}}}else{const t=e[2].trim();return{content:"",attrs:{entry:t,displayMode:true}}}}});Ys.set("tex",{isLeaf:true,match:Ds(/^(?:\$\$\n?((?:\\[\s\S]|[^\\])+?)\n?\$\$|\$((?:\\[\s\S]|[^\\])+?)\$)/),parse:function(e,t){if(e[2]){const t=e[2].trim().replace(/\n/g," ");return{content:"",attrs:{tex:t}}}else{const t=e[1].trim();return{content:"",attrs:{tex:t,displayMode:true}}}}});Ys.set("comment",{isLeaf:true,match:ks(/^©((?:\\[\s\S]|[^\\])+?)©/),parse:function(e,t){return{content:"",attrs:{comment:e[1]}}}});Ys.set("link",{isLeaf:true,match:ks(new RegExp("^\\[("+js+")\\]\\("+Gs+"\\)")),parse:function(e,t){const n=qs(e[1],t,"link")[0];const r=Fs(n.marks);n.marks[r].attrs={href:Bs(e[2])};return n}});Ys.set("image",{isLeaf:true,match:ks(new RegExp("^!\\[("+js+")\\]\\("+Gs+"\\)")),parse:function(e,t){return{attrs:{alt:e[1],src:Bs(e[2])}}}});Ys.set("reflink",{isLeaf:true,match:ks(/^\[((?:(?:\\[\s\S]|[^\\])+?)?)\]\[([^\]]*)\]/),parse:function(e,t){const n=qs(e[1],t,"link")[0];const r=Fs(n.marks);n.marks[r].attrs={href:null};if(e[2]){n.marks[r].attrs.title=e[2]}Vs(e,t,n.marks[r]);return n}});Ys.set("refimage",{isLeaf:true,match:ks(/^!\[((?:(?:\\[\s\S]|[^\\])+?)?)\]\[([^\]]*)\]/),parse:function(e,t){return Vs(e,t,{type:"image",attrs:{alt:e[1]}})}});Ys.set("code",{isLeaf:true,match:ks(/^(`+)([\s\S]*?[^`])\1(?!`)/),parse:function(e,t){const n=e[2].trim();return[{type:"text",text:n,marks:[{type:"code"}]}]}});Ys.set("em",{isLeaf:true,match:ks(/^_((?:\\[\s\S]|[^\\])+?)_/),parse:function(e,t){return qs(e[1],t,"em")}});Ys.set("strong",{isLeaf:true,match:ks(/^\*\*(?=\S)((?:\\[\s\S]|\*(?!\*)|[^\s*\\]|\s(?!\*\*))+?)\*\*/),parse:function(e,t){return qs(e[1],t,"strong")}});Ys.set("strikethru",{isLeaf:true,match:ks(/^~~(?=\S)((?:\\[\s\S]|~(?!~)|[^\s~\\]|\s(?!~~))+?)~~/),parse:function(e,t){return qs(e[1],t,"strikethru")}});Ys.set("superscript",{isLeaf:true,match:ks(/^<sup>([\s\S]*?)<\/sup>/),parse:function(e,t){return qs(e[1],t,"superscript")}});Ys.set("subscript",{isLeaf:true,match:ks(/^~((?:\\[\s\S]|[^\\])+?)~/),parse:function(e,t){return qs(e[1],t,"subscript")}});Ys.set("underline",{isLeaf:true,match:ks(/^<u>([\s\S]*?)<\/u>/),parse:function(e,t){return qs(e[1],t,"underline")}});Ys.set("highlight",{isLeaf:true,match:ks(/^<mark>([\s\S]*?)<\/mark>/),parse:function(e,t){return qs(e[1],t,"highlight")}});Ys.set("hard_break",{isLeaf:true,match:Ds(/^\\\n/),parse:function(){return{text:"\n"}}});Ys.set("inline_break",{isLeaf:true,match:Ds(/^<br>/),parse:function(){return{type:"hard_break",text:"\n"}}});Ys.set("span",{isLeaf:true,match:ks(/^<span [a-z =":]+>[^<]+<\/span>/),parse:function(e,t){return!t.inHtml?null:{type:"html",text:e[0]}}});Ys.set("text",{isLeaf:true,match:Ds(/^[\s\S]+?(?=[^0-9A-Za-z\s\u00c0-\uffff]|\n\n| {2,}\n|\w+:\S|$)/),parse:function(e,t){return{text:e[0].replace(/\n/g," ")}}});const Hs=["calculation","code","tex"];const Xs=/\\(ce|text|hbox|raisebox|fbox)\{/;const Zs=e=>{let t="$";let n=0;for(let r=1;r<e.length;r++){const s=e.charAt(r);if(s==="{"&&t!=="\\"){n+=1}if(s==="}"&&t!=="\\"){n-=1}if(s==="$"&&t!=="\\"&&n===0){return[e.slice(0,r+1),null,e.slice(1,r)]}t=s}return[e,null,e.slice(1,-1)]};const Ks=(e,t)=>{if(!t.inline){e+="\n\n"}e=Ss(e);const n=[];while(e){let r=null;let s=null;let a=null;for(const[n,l]of Ys){if(t.inCode&&Hs.includes(n)){continue}r=l.match(e,t);if(r){a=l;s=n;break}}if(s==="tex"&&r[2]&&Xs.test(r[2])){r=Zs(e)}const l=a.parse(r,t);if(Array.isArray(l)){Array.prototype.push.apply(n,l)}else{if(l.type==null){l.type=s}n.push(l)}e=e.substring(r[0].length)}return n};const Qs=function(e,t){const n=t.inline||false;t.inline=true;const r=Ks(e,t);t.inline=n;return r};const Js="(?:[*+-]|\\d+\\.)";const ea="( *)("+Js+") +";const ta=new RegExp("^"+ea);const na=new RegExp(ea+"[^\\n]*(?:\\n"+"(?!\\1"+Js+" )[^\\n]*)*(\n|$)","gm");const ra=/\n{2,}$/;const sa=ra;const aa=/ *\n+$/;const la=["def","newline","null"];const ia=e=>{if(Array.isArray(e)&&e.length>0){for(let t=e.length-1;t>0;t--){const n=e[t];const r=e[t-1];if(n.type==="text"&&r.type==="text"&&!n.marks&&!r.marks){r.text+=n.text;e.splice(t,1)}else if(la.includes(n.type)){e.splice(t,1)}else if(!Ys.has(n.type)||!Ys.get(n.type).isLeaf){ia(n.content)}}if(!Ys.has(e[0].type)||!Ys.get(e[0].type).isLeaf){ia(e[0].content)}}};const oa=e=>{let t;for(const n of e){if(n.type==="toc"){t=n;break}}if(!t){return}const n=t.attrs.start;const r=t.attrs.end;for(const s of e){if(s.type==="heading"){const e=s.attrs.level;if(n<=e&&e<=r){const n=[];let r="";for(const e of s.content){r+=e.text}n.push(r);n.push(e);n.push(0);n.push(0);t.attrs.body.push(n)}}}};const ua=(e,t=false)=>{const n=Ks(e,{inline:false,inHtml:t});if(Array.isArray(n)&&n.length>0&&n[0].type==="null"){n.shift()}ia(n);oa(n);return n};const ca=e=>({tag:"svg",children:[],attrs:{xmlns:"http://www.w3.org/2000/svg",width:250,height:250,style:"display: inline;"},temp:{width:250,height:250,xmin:0,xmax:5,ymin:0,ymax:5,xunitlength:20,yunitlength:20,origin:[0,0],stroke:"black",strokewidth:1,strokedasharray:null,fill:"none",fontstyle:"normal",fontfamily:"sans-serif",fontsize:13.33,fontweight:"normal",markerstrokewidth:1,markerstroke:"black",markerfill:"yellow",markersize:4,marker:"none",dotradius:4,axesstroke:"black",gridstroke:"grey",isDim:false}});const pa=(e,t)=>{e.attrs["stroke-width"]=t.strokewidth;e.attrs.stroke=t.stroke;e.attrs.fill=t.fill;if(t.strokedasharray!=null&&t.strokedasharray!=="none"){e.attrs["stroke-dasharray"]=t.strokedasharray}};const fa=/\.0+$/;const da=e=>{const t=e.indexOf(".");if(t===-1){return e}if(fa.test(e)){return e.replace(fa,"")}let n;for(n=e.length-1;n>t&&e.charAt(n)==="0";n--){if(n===t){n--}}return e.slice(0,n+1)};const ma=(e,t,n,r)=>{if(n==null){n=t.stroke}if(r==null){r=t.fill}const s={tag:"circle",attrs:{}};s.attrs.cx=e[0]*t.xunitlength+t.origin[0];s.attrs.cy=t.height-e[1]*t.yunitlength-t.origin[1];s.attrs.r=t.markersize;s.attrs["stroke-width"]=t.strokewidth;s.attrs.stroke=n;s.attrs.fill=r;return s};const ha=(e,t,n)=>{const r=e.temp;const s=[t[0]*r.xunitlength+r.origin[0],r.height-t[1]*r.yunitlength-r.origin[1]];const a=[n[0]*r.xunitlength+r.origin[0],r.height-n[1]*r.yunitlength-r.origin[1]];let l=[a[0]-s[0],a[1]-s[1]];const i=Math.sqrt(l[0]*l[0]+l[1]*l[1]);if(i>1e-8){l=[l[0]/i,l[1]/i];const t=r.marker==="markerdot"?3:r.isDim?0:1;const n=[-l[1],l[0]];const s={tag:"path",attrs:{}};s.attrs.d="M "+(a[0]-12.5*l[0]-3*n[0])+","+(a[1]-12.5*l[1]-3*n[1])+" L "+(a[0]-t*l[0])+","+(a[1]-t*l[1])+" L "+(a[0]-12.5*l[0]+3*n[0])+","+(a[1]-12.5*l[1]+3*n[1])+" z";if(r.isDim){s.attrs.stroke="none"}else{s.attrs["stroke-width"]=r.markerstrokewidth;s.attrs.stroke=r.stroke}s.attrs.fill=r.stroke;e.children.push(s)}};const ga={em:["font-style","italic"],strong:["font-weight","bold"],code:["font-family","monospace"],strikethru:["text-decoration","line-through"],subscript:["font-size","0.8em"]};const ya=(e,t,n,r)=>{const s=e.temp;let a="middle";let l=0;let i=s.fontsize/3;if(r!=null){if(r.slice(0,5)==="above"){i=-s.fontsize/2}if(r.slice(0,5)==="below"){i=1.25*s.fontsize}if(r.slice(0,5)==="right"||r.slice(5,10)==="right"){a="start";l=s.fontsize/2}if(r.slice(0,4)==="left"||r.slice(5,9)==="left"){a="end";l=-s.fontsize/2}}const o={tag:"text",children:[],attrs:{}};o.attrs["text"]=n;o.attrs.x=t[0]*s.xunitlength+s.origin[0]+l;o.attrs.y=s.height-t[1]*s.yunitlength-s.origin[1]+i;o.attrs["font-family"]=s.fontfamily;o.attrs["font-size"]=s.fontsize;o.attrs["text-anchor"]=a;const u=ua(n)[0].content;if(Array.isArray(u)){let e=false;for(const t of u){const n={tag:"tspan",text:t.text};let r=false;if(t.marks){n.attrs={};for(const e of t.marks){const t=ga[e.type];n.attrs[t[0]]=t[1];if(e.type==="subscript"){r=true}}}if(r){if(!e){n.attrs.dy="2"}}else if(e){if(!t.marks){n.attrs={}}n.attrs.dy="-2"}e=r;o.children.push(n)}}e.children.push(o);return e};const ba={stroke(e,t){e.value.temp.stroke=t.value;return e},strokewidth(e,t){e.value.temp.strokewidth=Ue.toNumber(t.value);return e},strokedasharray(e,t){e.value.temp.strokedasharray=t.value;return e},fill(e,t){e.value.temp.fill=t.value;return e},fontsize(e,t){e.value.temp.fontsize=Ue.toNumber(t.value);return e},fontfamily(e,t){e.value.temp.fontfamily=t.value;return e},marker(e,t){e.value.temp.marker=t.value;return e},title(e,t){e.value.children.push({tag:"title",attrs:{text:t.value}});return e},frame(e,t=250,n=250,r="inline"){const s=e.value;const a=s.temp;a.width=typeof t==="number"?t:Ue.toNumber(t.value);s.attrs.width=a.width;a.height=typeof n==="number"?n:Ue.toNumber(n.value);s.attrs.height=a.height;if(typeof r!=="string"){r=r.value}s.attrs.style=`float: ${r}`;a.xunitlength=a.width/(a.xmax-a.xmin);a.yunitlength=a.height/(a.ymax-a.ymin);a.origin=[-a.xmin*a.xunitlength,-a.ymin*a.yunitlength];return{value:s,unit:null,dtype:d.DRAWING}},view(e,t=0,n=5,r,s){const a=e.value;const l=a.temp;l.xmin=typeof t==="number"?t:Ue.toNumber(t.value);l.xmax=typeof n==="number"?n:Ue.toNumber(n.value);l.xunitlength=l.width/(l.xmax-l.xmin);l.yunitlength=l.xunitlength;if(r==null){l.origin=[-l.xmin*l.xunitlength,l.height/2];l.ymin=-l.height/(2*l.yunitlength);l.ymax=-l.ymin}else{l.ymin=Ue.toNumber(r.value);if(s!=null){l.ymax=Ue.toNumber(s.value);l.yunitlength=l.height/(l.ymax-l.ymin)}else{l.ymax=l.height/l.yunitlength+l.ymin}l.origin=[-l.xmin*l.xunitlength,-l.ymin*l.yunitlength]}return{value:a,unit:null,dtype:d.DRAWING}},grid(e,t,n,r){const s=e.value;const a=s.temp;t=t==null?a.xunitlength:Ue.toNumber(t.value)*a.xunitlength;n=n==null?t:Ue.toNumber(n.value)*a.yunitlength;const l={tag:"path",attrs:{}};let i="";for(let e=a.origin[0];e<a.width;e+=t){i+=" M"+e+",0 "+e+","+a.height}for(let e=a.origin[0]-t;e>0;e-=t){i+=" M"+e+",0 "+e+","+a.height}for(let e=a.height-a.origin[1];e<a.height;e+=n){i+=" M0,"+e+" "+a.width+","+e}for(let e=a.height-a.origin[1]-n;e>0;e-=n){i+=" M0,"+e+" "+a.width+","+e}l.attrs.d=i;l.attrs["stroke-width"]=.5;l.attrs.stroke=a.gridstroke;l.attrs.fill=a.fill;s.children.push(l);if(!r){return{value:s,unit:null,dtype:d.DRAWING}}},axes(e,t,n,r,s,a){let l=e.value;const i=l.temp;t=t==null?i.xunitlength:Ue.toNumber(t.value)*i.xunitlength;n=n==null?t:Ue.toNumber(n.value)*i.yunitlength;const o=i.fontsize;i.fontsize=Math.min(t/2,n/2,10);const u=i.fontsize/4;if(s!=null){this.grid(e,s,a,true)}const c={tag:"path",attrs:{}};let p="M0,"+(i.height-i.origin[1])+" "+i.width+","+(i.height-i.origin[1])+" M"+i.origin[0]+",0 "+i.origin[0]+","+i.height;for(let e=i.origin[0]+t;e<i.width;e+=t){p+=" M"+e+" "+(i.height-i.origin[1]+u)+" "+e+","+(i.height-i.origin[1]-u)}for(let e=i.origin[0]-t;e>0;e-=t){p+=" M"+e+","+(i.height-i.origin[1]+u)+" "+e+","+(i.height-i.origin[1]-u)}for(let e=i.height-i.origin[1]+n;e<i.height;e+=n){p+=" M"+(i.origin[0]+u)+","+e+" "+(i.origin[0]-u)+","+e}for(let e=i.height-i.origin[1]-n;e>0;e-=n){p+=" M"+(i.origin[0]+u)+","+e+" "+(i.origin[0]-u)+","+e}if(r!=null){const e=t/i.xunitlength;const r=n/i.yunitlength;const s=i.xmin>0||i.xmax<0?i.xmin:0;const a=i.ymin>0||i.ymax<0?i.ymin:0;const o=a===0?"below":"above";const u=s===0?"left":"right";const c=Math.floor(1.1-Math.log(e)/Math.log(10))+1;const p=Math.floor(1.1-Math.log(r)/Math.log(10))+1;for(let t=e;t<=i.xmax;t+=e){l=ya(l,[t,a],da(t.toFixed(c)),o)}for(let t=-e;i.xmin<=t;t-=e){l=ya(l,[t,a],da(t.toFixed(c)),o)}for(let e=r;e<=i.ymax;e+=r){l=ya(l,[s,e],da(e.toFixed(p)),u)}for(let e=-r;i.ymin<=e;e-=r){l=ya(l,[s,e],da(e.toFixed(p)),u)}}c.attrs.d=p;c.attrs["stroke-width"]=.5;c.attrs.stroke=i.axesstroke;c.attrs.fill=i.fill;l.temp.fontsize=o;l.children.push(c);return{value:l,unit:null,dtype:d.DRAWING}},line(e,t){const n=e.value;const r=n.temp;const s={tag:"path",attrs:{}};const a=[Ue.toNumber(t.value[0][0]),Ue.toNumber(t.value[0][1])];const l=[Ue.toNumber(t.value[1][0]),Ue.toNumber(t.value[1][1])];s.attrs.d="M"+(a[0]*r.xunitlength+r.origin[0])+","+(r.height-a[1]*r.yunitlength-r.origin[1])+" "+(l[0]*r.xunitlength+r.origin[0])+","+(r.height-l[1]*r.yunitlength-r.origin[1]);pa(s,r);n.children.push(s);if(r.marker==="dot"||r.marker==="arrowdot"){n.children.push(ma(a,r,r.markerstroke,r.markerfill));if(r.marker==="arrowdot"){ha(n,a,l)}n.children.push(ma(l,r,r.markerstroke,r.markerfill))}else if(r.marker==="arrow"){ha(n,a,l)}return{value:n,unit:null,dtype:d.DRAWING}},path(e,t,n){const r=e.value;const s=r.temp;const a={tag:"path",attrs:{}};let l="";let i;if(typeof t==="string"){l=t.value}else{i=t.value.map((e=>e.map((e=>Ue.toNumber(e)))));if(n==null){n=new Array(i.length).fill("L");n[0]="M"}else if(n.dtype===d.STRING){n=new Array(i.length).fill(n.value);n[0]="M"}else if(typeof n==="string"){n=new Array(i.length).fill(n);n[0]="M"}else if(n.dtype&d.ROWVECTOR||n.dtype&d.COLUMNVECTOR){n=n.value.map((e=>{if(Ue.isZero(e)){return"L"}const t=Ue.toNumber(e)*s.xunitlength;return`A${t} ${t} 0 0 0 `}));n.unshift("M")}else{n=new Array(i.length).fill("L");n[0]="M"}for(let e=0;e<i.length;e++){l+=n[e]+(i[e][0]*s.xunitlength+s.origin[0])+","+(s.height-i[e][1]*s.yunitlength-s.origin[1])+" "}}a.attrs.d=l;a.attrs["stroke-width"]=s.strokewidth;if(s.strokedasharray!=null){a.attrs["stroke-dasharray"]=s.strokedasharray}a.attrs.stroke=s.stroke;a.attrs.fill=s.fill;if(s.marker==="dot"||s.marker==="arrowdot"){for(let e=0;e<i.length;e++){if(n!=="C"&&n!=="T"||e!==1&&e!==2){r.children.push(ma(i[e],s,s.markerstroke,s.markerfill))}}}else if(s.marker==="arrow"){ha(r,i[i.length-2],i[i.length-1])}r.children.push(a);return{value:r,unit:null,dtype:d.DRAWING}},curve(e,t){return ba.path(e,t,"T")},rect(e,t,n){const r=e.value;const s=r.temp;const a={tag:"rect",attrs:{}};const l=[Ue.toNumber(t.value[0][0]),Ue.toNumber(t.value[0][1])];const i=[Ue.toNumber(t.value[1][0]),Ue.toNumber(t.value[1][1])];a.attrs.x=l[0]*s.xunitlength+s.origin[0];a.attrs.y=s.height-i[1]*s.yunitlength-s.origin[1];a.attrs.width=(i[0]-l[0])*s.xunitlength;a.attrs.height=(i[1]-l[1])*s.yunitlength;if(n!=null){const e=Ue.toNumber(n.value)*s.xunitlength;a.attrs.rx=e;a.attrs.ry=e}pa(a,s);r.children.push(a);return{value:r,unit:null,dtype:d.DRAWING}},circle(e,t,n){const r=e.value;const s=r.temp;const a={tag:"circle",attrs:{}};a.attrs.cx=Ue.toNumber(t.value[0])*s.xunitlength+s.origin[0];a.attrs.cy=s.height-Ue.toNumber(t.value[1])*s.yunitlength-s.origin[1];a.attrs.r=Ue.toNumber(n.value)*s.xunitlength;pa(a,s);r.children.push(a);return{value:r,unit:null,dtype:d.DRAWING}},ellipse(e,t,n,r){const s=e.value;const a=s.temp;const l={tag:"ellipse",attrs:{}};l.attrs.cx=Ue.toNumber(t.value[0])*a.xunitlength+a.origin[0];l.attrs.cy=a.height-Ue.toNumber(t.value[1])*a.yunitlength-a.origin[1];l.attrs.rx=Ue.toNumber(n.value)*a.xunitlength;l.attrs.ry=Ue.toNumber(r.value)*a.yunitlength;pa(l,a);s.children.push(l);return{value:s,unit:null,dtype:d.DRAWING}},arc(e,t,n){const r=e.value;const s=r.temp;const a={tag:"path",attrs:{}};const l=[Ue.toNumber(t.value[0][0]),Ue.toNumber(t.value[0][1])];const i=[Ue.toNumber(t.value[1][0]),Ue.toNumber(t.value[1][1])];if(n==null){const e=[i[0]-l[0],i[1]-l[1]];n=Math.sqrt(e[0]*e[0]+e[1]*e[1])*s.yunitlength}else if(Ut(n)){n=n.value.map((e=>Ue.toNumber(e)*s.yunitlength))}else{n=Ue.toNumber(n.value)*s.yunitlength}let o="M"+(l[0]*s.xunitlength+s.origin[0])+","+(s.height-l[1]*s.yunitlength-s.origin[1])+" A";o+=Array.isArray(n)?n[0]+","+n[1]:n+","+n;o+=" 0 0,0 "+(i[0]*s.xunitlength+s.origin[0])+","+(s.height-i[1]*s.yunitlength-s.origin[1]);a.attrs.d=o;pa(a,s);let u=0;if(s.marker==="arrow"||s.marker==="arrowdot"){const e=[(i[1]-l[1])/4,(l[0]-i[0])/4];u=[(i[0]-l[0])/2,(i[1]-l[1])/2];u=[l[0]+u[0]+e[0],l[1]+u[1]+e[1]]}else{u=[l[0],l[1]]}if(s.marker==="dot"||s.marker==="arrowdot"){r.children.push(ma(l,s,s.markerstroke,s.markerfill));if(s.marker==="arrowdot"){ha(r,u,i)}r.children.push(ma(i,s,s.markerstroke,s.markerfill))}else if(s.marker==="arrow"){ha(r,u,i)}r.children.push(a);return{value:r,unit:null,dtype:d.DRAWING}},text(e,t,n,r){const s=ya(e.value,[Ue.toNumber(t.value[0]),Ue.toNumber(t.value[1])],n.value,r==null?null:r.value);return{value:s,unit:null,dtype:d.DRAWING}},dot(e,t,n,r,s){let a=e.value;const l=a.temp;let i;const o=Ue.toNumber(t.value[0])*l.xunitlength+l.origin[0];const u=l.height-Ue.toNumber(t.value[1])*l.yunitlength-l.origin[1];if(n.value==="+"||n.value==="-"||n.value==="|"){i={tag:"path",attrs:{}};if(n.value==="+"){i.attrs.d=" M "+(o-l.ticklength)+","+u+" L "+(o+l.ticklength)+","+u+" M "+o+","+(u-l.ticklength)+" L "+o+","+(u+l.ticklength);i.attrs["stroke-width"]=.5;i.attrs.stroke=l.axesstroke}else{if(n.value==="-"){i.attrs.d=" M "+(o-l.ticklength)+","+u+" L "+(o+l.ticklength)+","+u}else{i.attrs.d=" M "+o+","+(u-l.ticklength)+" L "+o+","+(u+l.ticklength)}i.attrs["stroke-width"]=l.strokewidth;i.attrs["stroke"]=l.stroke}}else{i={tag:"circle",attrs:{}};i.attrs.cx=o;i.attrs.cy=u;i.attrs.r=l.dotradius;i.attrs["stroke-width"]=l.strokewidth;i.attrs.stroke=l.stroke;i.attrs.fill=n.value==="open"?"white":l.stroke}a.children.push(i);if(r!=null){a=ya(a,[Ue.toNumber(t.value[0]),Ue.toNumber(t.value[1])],r.value,s==null?"below":s.value)}return{value:a,unit:null,dtype:d.DRAWING}},leader(e,t,n){const r=e.value.temp.marker;e.value.temp.marker="arrow";e.value.temp.isDim=true;const s=h(t);s.value.reverse();e=this.path(e,s,"L");const a=s.value[0].map((e=>Ue.toNumber(e)));const l=s.value[1].map((e=>Ue.toNumber(e)));let i="right";if(Math.abs(a[0]-l[0])>=Math.abs(a[1]-l[1])){i=a[0]>=l[0]?"right":"left"}else{i=a[1]<l[1]?"below":"above"}const o=ya(e.value,a,n.value,i);o.temp.marker=r;o.temp.isDim=false;return{value:o,unit:null,dtype:d.DRAWING}},dimension(e,t,n){const r=h(t.value);const s=r.pop();const a=e.value.temp.strokewidth;e.value.temp.strokewidth=.5;e.value.temp.isDim=true;let l=Ue.fromNumber(6/e.value.temp.xunitlength);const i=r[r.length-1];let o;if(Ue.lessThan(r[0][1],s[1])&&Ue.lessThan(s[1],i[1])||Ue.lessThan(i[1],s[1])&&Ue.lessThan(s[1],r[0][1])){if(!Ue.lessThan(i[0],s[0])){l=Ue.negate(l)}r.forEach((t=>{e=this.line(e,{value:[[Ue.add(t[0],l),t[1]],[Ue.add(s[0],l),t[1]]]})}));e.value.temp.marker="arrow";const t=Ue.lessThanOrEqualTo(i[0],s[0])?"right":"left";for(let a=0;a<r.length-1;a++){e=this.line(e,{value:[[s[0],r[a][1]],[s[0],r[a+1][1]]],unit:null,dtype:d.MATRIX});e=this.line(e,{value:[[s[0],r[a+1][1]],[s[0],r[a][1]]],unit:null,dtype:d.MATRIX});const l=[Ue.toNumber(s[0]),(Ue.toNumber(r[a][1])+Ue.toNumber(r[a+1][1]))/2];const i=r.length===2?n.value:n.value[a];o=ya(e.value,l,i,t)}}else{if(!Ue.lessThan(i[1],s[1])){l=Ue.negate(l)}r.forEach((t=>{e=this.line(e,{value:[[t[0],Ue.add(t[1],l)],[t[0],Ue.add(s[1],l)]]})}));e.value.temp.marker="arrow";const t=Ue.lessThanOrEqualTo(i[1],s[1])?"above":"below";for(let a=0;a<r.length-1;a++){e=this.line(e,{value:[[r[a][0],s[1]],[r[a+1][0],s[1]]],unit:null,dtype:d.MATRIX});e=this.line(e,{value:[[r[a+1][0],s[1]],[r[a][0],s[1]]],unit:null,dtype:d.MATRIX});const l=[(Ue.toNumber(r[a][0])+Ue.toNumber(r[a+1][0]))/2,Ue.toNumber(s[1])];const i=r.length===2?n.value:n.value[a];o=ya(e.value,l,i,t)}}o.temp.strokewidth=a;o.temp.marker="none";o.temp.isDim=false;return{value:o,unit:null,dtype:d.DRAWING}}};const Ra=e=>{const t=document.createElementNS("http://www.w3.org/2000/svg","svg");Object.keys(e.attrs).forEach((n=>{t.setAttribute(n,e.attrs[n])}));e.children.forEach((e=>{const n=document.createElementNS("http://www.w3.org/2000/svg",e.tag);Object.keys(e.attrs).forEach((t=>{n.setAttribute(t,e.attrs[t]);if(t==="title"){n.appendChild(document.createTextNode(e.attrs["text"]))}else{n.setAttribute(t,e.attrs[t])}}));if(e.tag==="text"){e.children.forEach((e=>{const t=document.createElementNS("http://www.w3.org/2000/svg","tspan");if(e.attrs){Object.keys(e.attrs).forEach((n=>{t.setAttribute(n,e.attrs[n])}))}t.appendChild(document.createTextNode(e.text));n.appendChild(t)}))}t.appendChild(n)}));return t};const va=Object.freeze({startSvg:ca,functions:ba,renderSVG:Ra});const Aa=(...e)=>{for(let t=0;t<e.length;t++){if(e[t].dtype&d.MAP&&e[t].dtype&d.RATIONAL){return true}}return false};const Na=e=>e.dtype===d.COMPLEX?"complex":e.dtype<128?"scalar":Ht.isVector(e)?"vector":e.dtype&d.MATRIX?"matrix":e.dtype===d.DATAFRAME?"dataFrame":e.dtype&d.MAP&&(e.dtype&d.ROWVECTOR||e.dtype&d.COLUMNVECTOR)?"mapWithVectorValues":e.dtype&d.MAP?"map":"other";const Oa=(e,t)=>{let n=Na(e);let r=Na(t);let s=false;if(kt(e)&&kt(t)){s=true;if(n==="vector"){n=e.dtype&d.ROWVECTOR?"rowVector":"columnVector"}if(r==="vector"){r=t.dtype&d.ROWVECTOR?"rowVector":"columnVector"}}return[n,r,s]};const Ea=(e,t)=>{if(e.length<t+2){return undefined}return e[t+1]};const xa=["abs","argument","Im","Re","Γ"];const Ta=(e,t)=>e.dtype===d.STRING?e.value:e.dtype===d.RATIONAL?He(e.value,"h15",t):kt(e.dtype)?Ht.displayAlt(e,"h15",t):e.dtype&d.MAP?In.displayAlt(e.value,"h15",t):e.value;const Ia=(e,t,n,r,s)=>{const a=e.split(" ");const l=[];let i;for(let e=0;e<a.length;e++){const o=a[e];const u=o.charAt(0);if(u==="®"){const e=new Array(2);const t=o.indexOf("/");e[0]=BigInt(o.slice(1,t));e[1]=BigInt(o.slice(t+1));const n=Object.create(null);n.value=e;n.unit=Object.create(null);n.unit.expos=f;n.dtype=d.RATIONAL;l.push(Object.freeze(n))}else if(u==="©"){const e=o.slice(1).split(",");const t=new Array(2);t[0]=[BigInt(e[0]),BigInt(e[1])];t[1]=[BigInt(e[2]),BigInt(e[3])];const n=Object.create(null);n.value=t;n.unit=Object.create(null);n.unit.expos=f;n.dtype=d.COMPLEX;l.push(Object.freeze(n))}else if(u==="¿"){const n=o.substring(1);let s=Object.create(null);if(n==="undefined"){s.value=undefined;s.unit=null;s.dtype=0}else if(n==="T"&&Ea(a,e)==="^"&&l.length>0&&kt(l[l.length-1])){s.value="T";s.unit=null;s.dtype=d.RATIONAL}else{const e=t[n];if(!e){return C("V_NAME",n)}s=Ur(e,r);if(s.dtype===d.ERROR){return s}}l.push(Object.freeze(s))}else if(u==='"'){const e=o.charAt(o.length-1);const t=u==='"'&&e==='"'?o.slice(1,-1).trim():o.trim();l.push(Object.freeze({value:t,unit:null,dtype:d.STRING}))}else if(/^``/.test(o)){l.push(bn.dataFrameFromCSV(x(o.slice(2,-2)),{}))}else if(u==="`"){const e=o.charAt(o.length-1);const t=u==="`"&&e==="`"?o.slice(1,-1).trim():o.trim();l.push(Object.freeze({value:t,unit:null,dtype:d.RICHTEXT}))}else{switch(o){case"true":case"false":{const e=Object.create(null);e.value=o==="true";e.unit=null;e.dtype=d.BOOLEAN;l.push(Object.freeze(e));break}case"π":{const e=Object.create(null);e.value=Ue.pi;e.dtype=d.RATIONAL;e.unit=Object.create(null);e.unit.expos=f;l.push(Object.freeze(e));break}case"e":{const e=Object.create(null);e.value="e";e.dtype=d.RATIONAL;e.unit=Object.create(null);e.unit.expos=f;l.push(Object.freeze(e));break}case"j":{const e=Object.create(null);e.value=[Ue.zero,Ue.one];e.unit=Object.create(null);e.unit.expos=f;e.dtype=d.COMPLEX;l.push(Object.freeze(e));break}case"ℏ":{const e=Object.create(null);e.value=Ue.hbar;e.dtype=d.RATIONAL;e.unit=Object.create(null);e.unit.expos=Object.freeze(r?[2,1,-1,0,0,0,0,0]:f);l.push(Object.freeze(e));break}case"∠":{const e=l.pop();const t=l.pop();if(t.dtype!==d.RATIONAL||e.dtype!==d.RATIONAL){return C("NAN_OP")}const n=Ue.toNumber(e.value);const r=Object.create(null);r.value=[Ue.multiply(t.value,Ue.fromNumber(Math.cos(n))),Ue.multiply(t.value,Ue.fromNumber(Math.sin(n)))];r.unit=Object.create(null);r.unit.expos=f;r.dtype=d.COMPLEX;l.push(Object.freeze(r));break}case"+":case"-":{const e=l.pop();const t=l.pop();const n=o==="+"?"add":"subtract";if(!((t.dtype&d.RATIONAL||t.dtype&d.COMPLEX)&&(e.dtype&d.RATIONAL||e.dtype&d.COMPLEX))){return C("NAN_OP")}if(r){if(!Xe(t.unit.expos,e.unit.expos)){return C("UNIT_ADD")}}const[s,a,i]=Oa(t,e);const u=Object.create(null);u.value=As.binary[s][a][n](t.value,e.value);if(u.value.dtype&&u.value.dtype===d.ERROR){return u.value}u.unit=t.unit;u.dtype=As.dtype[s][a](t.dtype,e.dtype,o);l.push(Object.freeze(u));break}case"~":{const e=l.pop();if(!(e.dtype&d.RATIONAL||e.dtype===d.COMPLEX)){return C("NAN_OP")}const t=Object.create(null);t.value=As.unary[Na(e)]["negate"](e.value);if(t.value.dtype&&t.value.dtype===d.ERROR){return t.value}t.unit=e.unit;t.dtype=e.dtype;l.push(Object.freeze(t));break}case"×":case"·":case"*":case"⌧":{const e=l.pop();const t=e.dtype===d.DATAFRAME?h(e):e;const n=l.pop();if(!((n.dtype&d.RATIONAL||n.dtype&d.COMPLEX)&&(t.dtype&d.RATIONAL||t.dtype&d.COMPLEX||t.dtype===d.DATAFRAME))){return C("NAN_OP")}const s=Object.create(null);let a=Object.create(null);if(r){if(n.dtype===d.DATAFRAME&&t.dtype===d.RATIONAL||n.dtype===d.RATIONAL&&t.dtype===d.DATAFRAME){a=n.dtype===d.DATAFRAME?n.unit:t.unit}else{a.expos=n.unit.expos.map(((e,n)=>e+t.unit.expos[n]))}}else{a.expos=f}s.unit=t.dtype===d.DATAFRAME?h(t.unit):Object.freeze(a);const[i,u,c]=Oa(n,t);const p=c?{"×":"cross","·":"dot","*":"asterisk","⌧":"multiply"}[o]:"multiply";s.dtype=o==="*"||i==="scalar"||i==="map"||i==="complex"||u==="scalar"||u==="map"||u==="complex"?As.dtype[i][u](n.dtype,t.dtype,p):o==="·"?d.RATIONAL:o==="×"?d.COLUMNVECTOR:Ht.multResultType(n,t);s.value=As.binary[i][u][p](n.value,t.value);if(s.value.dtype&&s.value.dtype===d.ERROR){return s.value}l.push(Object.freeze(s));break}case"/":case"//":case"÷":case"///":case"∕":{const e=l.pop();const t=l.pop();if(!((t.dtype&d.RATIONAL||t.dtype===d.COMPLEX)&&(e.dtype&d.RATIONAL||e.dtype===d.COMPLEX))){return C("NAN_OP")}const n=Object.create(null);const s=Object.create(null);s.expos=r?t.unit.expos.map(((t,n)=>t-e.unit.expos[n])):f;n.unit=Object.freeze(s);const[a,i,o]=Oa(t,e);n.value=As.binary[a][i]["divide"](t.value,e.value);n.dtype=As.dtype[a][i](t.dtype,e.dtype,"divide");if(vs(n.value,Na(n))){return C("DIV")}l.push(Object.freeze(n));break}case"^":{const e=l.pop();const t=l.pop();if(Ht.isVector(t)&&e.value==="T"){const e=h(t);e.dtype=t.dtype+(t.dtype&d.ROWVECTOR?d.COLUMNVECTOR-d.ROWVECTOR:d.ROWVECTOR-d.COLUMNVECTOR);l.push(Object.freeze(e));break}if(!((t.dtype&d.RATIONAL||t.dtype===d.COMPLEX)&&(e.dtype&d.RATIONAL||e.dtype===d.COMPLEX)||kt(t)&&e.value==="T")){return C("NAN_OP")}const n=Object.create(null);const s=Object.create(null);s.expos=f;if(r){const n=typeof e.unit==="number"?e.unit:Ue.toNumber(e.value);s.expos=t.unit.expos.map((e=>e*n))}n.unit=Object.freeze(s);const[a,i,u]=Oa(t,e);n.value=As.binary[a][i]["power"](t.value,e.value);if(n.value.dtype){return n.value}n.dtype=St.isComplex(n.value)?d.COMPLEX:As.dtype[a][i](t.dtype,e.dtype,o);l.push(Object.freeze(n));break}case"^*":{const e=l.pop();if(!(e.dtype&d.COMPLEX)){return C("NA_REAL"),"conjugate"}const t={value:St.conjugate(e.value),unit:e.unit,dtype:e.dtype};l.push(Object.freeze(t));break}case"&":case"&_":{const e=l.pop();const s=l.pop();const a=o==="&"?"concat":"unshift";const[i,u,c]=Oa(s,e);let p=Object.create(null);if(s.dtype===d.STRING&&s.dtype===d.STRING){const t=Ta(s,n);const r=Ta(e,n);p.value=t+r;p.unit=null;p.dtype=d.STRING}else if(s.dtype&d.DATAFRAME&&Ht.isVector(e)&&o==="&"){p=bn.append(s,e,t,r);if(p.dtype===d.ERROR){return p}}else if(s.dtype&d.MAP||e.dtype&d.MAP){p=In.append(s,e,i,u,t);if(p.dtype===d.ERROR){return p}}else{if(r){if(!Xe(s.unit.expos,e.unit.expos)){return C("UNIT_ADD")}}p.value=As.binary[i][u][a](s.value,e.value);if(p.value.dtype){return p.value}p.dtype=As.dtype[i][u](s.dtype,e.dtype,o);p.unit=s.unit}l.push(Object.freeze(p));break}case"√":case"∛":case"∜":{const e=o.charCodeAt(0)-8728;const t=[BigInt(1),BigInt(e)];const n=l.pop();if(!(n.dtype&d.RATIONAL||n.dtype&d.COMPLEX)){return C("NAN_OP")}const s=Object.create(null);const a=Object.create(null);a.expos=f;if(r){a.expos=n.unit.expos.map((t=>t/e))}s.unit=Object.freeze(a);const i=Na(n);s.value=As.binary[i]["scalar"]["power"](n.value,t);if(s.value.dtype&&s.value.dtype===d.ERROR){return s.value}s.dtype=St.isComplex(s.value)?d.COMPLEX:As.dtype[i]["scalar"](n.dtype,d.RATIONAL,o);l.push(Object.freeze(s));break}case"root":{const e=l.pop();const t=l.pop();if(!(t.dtype&d.RATIONAL&(e.dtype&d.RATIONAL))){return C("NAN_OP")}const n=Object.create(null);const s=Object.create(null);s.expos=f;if(r){s.expos=e.unit.expos.map((e=>e/Number(t.value[0])))}n.unit=Object.freeze(s);const a=Ue.reciprocal(t.value);const i=Na(t);n.value=As.binary[i]["scalar"]["power"](e.value,a);if(n.value.dtype&&n.value.dtype===d.ERROR){return n.value}n.dtype=As.dtype[i]["scalar"](t.dtype,d.RATIONAL,o);l.push(Object.freeze(n));break}case".":{const e=l.pop();const n=l.pop();const s=Dr(n,e,t,r);if(s.dtype===d.ERROR){return s}l.push(Object.freeze(s));break}case"[]":{const n=Number(a[e+1]);e+=1;const s=[];for(let e=0;e<n;e++){s.unshift(l.pop())}const i=l.pop();let o;if(i.dtype&d.DATAFRAME){o=bn.range(i,s,t,r)}else if(i.dtype&d.MAP){o=In.valueFromMap(i,s,r)}else if(i.dtype===d.STRING){o=Os(i.value,s[0])}else if(i.dtype===d.MODULE){if(n===1){o=Ur(i.value[s[0].value],r)}else{o={value:new Map,unit:null,dtype:d.TUPLE};for(let e=0;e<s.length;e++){const t=s[e].value;o.value.set(t,Ur(i.value[t],r))}}}else{const e=s[0];const a=n===2?s[1]:Ut(i)?null:{value:Ue.zero,unit:f,dtype:d.RATIONAL};o=i.dtype&d.DATAFRAME?bn.range(i,e,a,t,r):Ht.submatrix(i,e,a)}if(o.dtype===d.ERROR){return o}l.push(Object.freeze(o));break}case"..":{const e=l.pop();const t=l.pop();if(!(t.dtype===d.RATIONAL||t.dtype===d.RANGE)){return C("NAN_OP")}const n=Object.create(null);n.unit=null;n.dtype=d.RANGE;const r=t.dtype!==d.RATIONAL?t.value[2]:e.value==="∞"||Ue.lessThan(t.value,e.value)?Ue.one:Ue.negate(Ue.one);n.value=t.dtype===d.RATIONAL?[t.value,r,e.value]:[t.value[0],t.value[2],e.value];l.push(Object.freeze(n));break}case":":{const e=l.pop();const t=l.pop();if(t.dtype!==d.STRING){return C("BAD_KEYSTR")}l.push(Object.freeze({name:t.value,value:e.value,unit:e.unit,dtype:e.dtype}));break}case"normal":case"uniform":case"lognormal":{const e=l.pop();const t=l.pop();break}case"!":{const e=l.pop();if(!(e.dtype&d.RATIONAL)){return C("NAN_OP")}if(r){if(!Xe(e.unit.expos,f)){return C("FACT")}}const t=e.value;if(!Ue.isInteger(t)||Ue.isNegative(t)){return C("FACT")}const n=Object.create(null);n.unit=f;n.dtype=d.RATIONAL;n.value=As.unary[Na(e)]["factorial"](t);if(n.value.dtype){return n.value}l.push(Object.freeze(n));break}case"%":{const e=l.pop();if(!(e.dtype&d.RATIONAL)){return C("NAN_OP")}const t=Object.create(null);t.unit=e.unit;t.dtype=e.dtype;t.value=As.unary[Na(e)]["percent"](e.value);if(t.value){return t.value}l.push(Object.freeze(t));break}case"|":case"‖":{const e=l.pop();if(!(e.dtype&d.RATIONAL||e.dtype===d.COMPLEX)){return C("NAN_OP")}const t=o==="|"?"abs":"norm";const n=Object.create(null);n.unit=e.unit;n.dtype=d.RATIONAL;n.value=As.unary[Na(e)][t](e.value);if(n.value.dtype&&n.value.dtype===d.ERROR){return n.value}l.push(Object.freeze(n));break}case"matrix":{const t=Number(a[e+1]);const n=Number(a[e+2]);e+=2;if(l[l.length-1].dtype===d.RANGE){l.push(Ht.operandFromRange(l.pop().value))}else{l.push(Ht.operandFromTokenStack(l,t,n))}break}case"startSvg":l.push({value:va.startSvg(),unit:null,dtype:d.DRAWING});break;case"abs":case"cos":case"sin":case"tan":case"acos":case"asin":case"atan":case"sec":case"csc":case"cot":case"asec":case"acsc":case"acot":case"exp":case"log":case"ln":case"log10":case"log2":case"cosh":case"sinh":case"tanh":case"sech":case"csch":case"coth":case"acosh":case"asinh":case"atanh":case"asech":case"acsch":case"acoth":case"Gamma":case"Γ":case"logGamma":case"logΓ":case"logFactorial":case"cosd":case"sind":case"tand":case"acosd":case"asind":case"atand":case"secd":case"cscd":case"cotd":case"asecd":case"acscd":case"acotd":case"Re":case"Im":case"argument":case"chr":case"round":case"sqrt":case"sign":{const e=l.pop();if(!(e.dtype&d.RATIONAL||e.dtype&d.COMPLEX)){return C("UNREAL",o)}const t=Object.create(null);const n=Object.create(null);n.expos=r?is.functionExpos(o,[e]):f;if(n.expos.dtype&&n.expos.dtype===d.ERROR){return n.expos}t.unit=Object.freeze(n);const s=e.dtype&d.RATIONAL?"scalar":"complex";const a=e.dtype&d.MAP&&Ht.isVector(e)?g(e.value,(e=>e.map((e=>is.unary[s][o](e))))):Ht.isVector(e)?e.value.map((e=>is.unary[s][o](e))):kt(e)?e.value.map((e=>e.map((e=>is.unary[s][o](e))))):Aa(e)?g(e.value,(e=>is.unary[s][o](e))):is.unary[s][o](e.value);if(a.dtype&&a.dtype===d.ERROR){return a}t.value=Object.freeze(a);t.dtype=o==="chr"?e.dtype-d.RATIONAL+d.STRING:e.dtype&d.COMPLEX&&xa.includes(o)?e.dtype-d.COMPLEX+d.RATIONAL:e.dtype;l.push(Object.freeze(t));break}case"logn":case"atan2":case"hypot":case"gcd":case"rms":case"binomial":case"zeros":{const e=[];e.push(l.pop());e.unshift(l.pop());if(!(e[0].dtype&d.RATIONAL)){return C("")}const t=Object.create(null);const n=Object.create(null);n.expos=r?is.functionExpos(o,e):f;if(n.dtype&&n.dtype===d.ERROR){return n}t.unit=Object.freeze(n);const[s,a]=os("binary",o,e);t.value=Object.freeze(s);t.dtype=a;l.push(Object.freeze(t));break}case"roundn":case"string":{const e=l.pop();const t=l.pop();if(!(t.dtype&d.RATIONAL)){return C("")}if(!(e.dtype&d.STRING)){return C("")}if(!/(?:f-?|r)\d+/.test(e.value)){return C("")}let n="";const r=Object.create(null);if(o==="string"){n=e.value.charAt()==="f"?"stringFixed":"stringSignificant";r.unit=null;r.dtype=t.dtype-d.RATIONAL+d.STRING}else{n=e.value.charAt()==="f"?"roundFixed":"roundSignificant";r.unit=t.unit;r.dtype=t.dtype}const s=Number(e.value.slice(1));const a=t.dtype&d.MAP&&Ht.isVector(t)?g(t.value,(e=>e.map((e=>is.binary[n]([e,s]))))):Ht.isVector(t)?t.value.map((e=>is.binary[n]([e,s]))):kt(t)?t.value.map((e=>e.map((e=>is.binary[n]([e,s]))))):Aa(t)?g(t.value,(e=>is.binary[n]([e,s]))):is.binary[n]([t.value,s]);if(a.dtype&&a.dtype===d.ERROR){return a}r.value=Object.freeze(a);if(t.name){r.name=t.name}l.push(Object.freeze(r));break}case"dataframe":case"max":case"min":case"sum":case"product":case"range":case"mean":case"median":case"variance":case"stddev":case"accumulate":{const n=Number(a[e+1]);e+=1;const s=[];for(let e=0;e<n;e++){const e=l.pop();if(o!=="dataframe"&&!(e.dtype&d.RATIONAL)){return C("NANARG",o)}s.unshift(e)}if(o==="dataframe"){const e=bn.dataFrameFromVectors(s,t);if(e.dtype&&e.dtype===d.ERROR){return e}l.push(e);break}const i=Object.create(null);const u=Object.create(null);u.expos=r?is.functionExpos(o,s):f;if(u.dtype&&u.dtype===d.ERROR){return C("")}i.unit=Object.freeze(u);const[c,p]=os("reduce",o,s);i.value=Object.freeze(c);i.dtype=p;l.push(Object.freeze(i));break}case"random":{const e=Object.create(null);e.value=Ue.fromNumber(Math.random());e.unit=Object.create(null);e.unit.expos=f;e.dtype=d.RATIONAL;l.push(Object.freeze(e));break}case"isNaN":{const e=l.pop();const t=Object.create(null);t.value=!(e.dtype&d.RATIONAL);t.unit=null;t.dtype=d.BOOLEAN;l.push(Object.freeze(t));break}case"length":{const e=l.pop();const t=e.value;const n=Ht.isVector(e)?t.length:e.dtype&d.MATRIX?t.length*t[0].length:e.dtype===d.STRING?t.length-y(/[\uD800-\uD8FF\uFE00\uFE01]/g,t).length:e.dtype&d.MAP?e.keys().value.length:0;const r=Object.create(null);r.value=Object.freeze(Ue.fromNumber(n));r.unit=Object.create(null);r.unit.expos=f;r.dtype=d.RATIONAL;l.push(Object.freeze(r));break}case"count":{const e=l.pop();const t=l.pop();if(e.dtype!==d.STRING||t.dtype!==d.STRING){return C("COUNT")}const n=Object.create(null);n.value=Object.freeze(Ue.fromNumber(t.value.split(e.value).length-1));n.unit=Object.create(null);n.unit.expos=f;n.dtype=d.RATIONAL;l.push(Object.freeze(n));break}case"format":{const e=l.pop().value;const t=He(l.pop().value,e);l.push({value:t,unit:null,dtype:d.STRING});break}case"lerp":{const e=new Array(3);e[2]=l.pop();e[1]=l.pop();e[0]=l.pop();const t=is.lerp(e,r);if(t.dtype===d.ERROR){return t}l.push(t);break}case"matrix2table":{const e=l.pop();const n=l.pop();const r=l.pop();const s=bn.matrix2table(r,n,e,t);if(s.dtype===d.ERROR){return s}l.push(s);break}case"transpose":l.push(Ht.transpose(l.pop()));break;case"trace":l.push(Ht.trace(l.pop()));break;case"fetch":return C("FETCH");case"function":{const i=a[e+1];const o=Number(a[e+2]);e+=2;const u=new Array(o);for(let e=o-1;e>=0;e--){u[e]=l.pop()}let c;if(t.svg&&(i==="plot"||va.functions[i])){if(i==="plot"){u.splice(1,0,n);c=Ma(...u)}else{c=va.functions[i](...u)}}else if(Ea(a,e)==="."){let t=l.pop().value;if(t.value){t=t.value}const s=t[i];if(s===undefined){return C("F_NAME",i)}if(s.dtype===d.ERROR){return s}if(s.isPrivate){return C("PRIVATE",i)}c=wa(s,u,n,r,t);e+=1}else if(s&&s[i]){const e=s[i];c=wa(e,u,n,r,s)}else if(t[i]&&t[i].dtype===d.MODULE){const e=t[i]["value"];c=wa(e,u,n,r)}else{return C("BAD_FUN_NM",i)}if(c.dtype===d.ERROR){return c}l.push(c);break}case"=":case"==":case"<":case">":case"<=":case"≤":case">=":case"≥":case"≠":case"!=":case"∈":case"∉":case"⋐":{const e=l.pop();const t=l.pop();if(r&&!(t.dtype&d.STRING||e.dtype&d.STRING||t.dtype===d.NULL||e.dtype===d.NULL)){if(!Xe(t.unit.expos,e.unit.expos)){return C("UNIT_COMP")}}const n=Object.create(null);n.unit=null;const s=t.dtype&d.BOOLEANFROMCOMPARISON?i.value:undefined;if(m(o,["∈","∉","⋐"])){n.value=cs(o,t.value,e.value,s)}else{const[r,a,l]=Oa(t,e);n.value=As.relations[r][a].relate(o,t.value,e.value,s)}if(n.value.dtype&&n.value.dtype===d.ERROR){return n.value}n.dtype=t.dtype+d.BOOLEANFROMCOMPARISON;if(n.dtype&d.RATIONAL){n.dtype-=d.RATIONAL}if(n.dtype&d.COMPLEX){n.dtype-=d.COMPLEX}if(n.dtype&d.STRING){n.dtype-=d.STRING}i=e;l.push(Object.freeze(n));break}case"and":case"or":case"∧":case"∨":case"⊻":{const t=l.pop();const n=l.pop();if(!(n.dtype&d.BOOLEAN)||!(t.dtype&d.BOOLEAN)){return C("LOGIC",a[e])}const r={and:"and",or:"or","∧":"and","∨":"or","⊻":"xor"}[o];const[s,i,u]=Oa(n,t);const c=Object.create(null);c.unit=null;c.value=As.binary[s][i][r](n.value,t.value);if(c.value.dtype&&c.value.dtype===d.ERROR){return c.value}c.dtype=As.dtype[s][i](n.dtype,t.dtype,o);l.push(Object.freeze(c));break}case"not":case"¬":{const e=l.pop();if(!(e.dtype&d.BOOLEAN)){return C("LOGIC",o)}const t=Object.create(null);t.unit=null;t.value=As.unary[Na(e)]["not"](e.value);if(t.value.dtype&&t.value.dtype===d.ERROR){return t.value}t.dtype=d.BOOLEAN;l.push(Object.freeze(t));break}case"cases":{const i=Number(a[e+1]);e+=1;const o=new Array(i);for(let e=i-1;e>=0;e--){o[e]=l.pop()}for(let u=0;u<i;u++){if((o[u].dtype&d.BOOLEAN)===0){return C("LOGIC","if")}const i=As.condition[Na(o[u])](o[u].value);if(i){const i=a[e+u+1].replace(/§/g," ");const o=Ia(i,t,n,r,s);if(o.dtype===d.ERROR){return o}l.push(o);break}}e+=i;break}case"applyUnit":{if(!r){return C("UNIT_AWARE",a[e+1])}const n=l.pop();if(!(n.dtype&d.RATIONAL)){return C("QUANT_NUM")}const s=a[e+1];e+=1;const i=Object.create(null);i.unit=Object.create(null);i.dtype=n.dtype;if(!r){i.value=n.value;if(n.dtype&d.MAP){i.unit=nt(s,t)}else{i.unit.name=s}}else{const e=nt(s,t);if(e.dtype&&e.dtype===d.ERROR){return e}if(kt(n)){i.unit.expos=n.unit.expos.map(((t,n)=>t+e.expos[n]));i.value=Ht.convertToBaseUnits(n,e.gauge,e.factor)}else if(n.dtype&d.MAP){i.unit=nt(n.unit);i.value=n.value}else{i.unit.expos=n.unit.expos.map(((t,n)=>t+e.expos[n]));i.value=Ue.multiply(Ue.add(n.value,e.gauge),e.factor)}}l.push(Object.freeze(i));break}case"modulo":{const e=l.pop();const t=l.pop();if(!(t.dtype&d.RATIONAL&(e.dtype&d.RATIONAL))){return C("NAN_OP")}const[n,r,s]=Oa(t,e);const a=Object.create(null);a.unit=Object.create(null);a.unit.expos=f;a.value=As.binary[n][r]["modulo"](t.value,e.value);if(a.value.dtype&&a.value.dtype===d.ERROR){return a.value}a.dtype=As.dtype[n][r](t.dtype,e.dtype,o);l.push(Object.freeze(a));break}case"⎾⏋":case"⎿⏌":{const e=l.pop();if(!(e.dtype&d.RATIONAL)){return C("NAN_OP")}if(r){if(!Xe(e.unit.expos,f)){{return C("")}}}const t=o==="⎾⏋"?"ceil":"floor";const n=Object.create(null);n.value=As.unary[Na(e)][t](e.value);if(n.value.dtype&&n.value.dtype===d.ERROR){return n.value}n.unit=e.unit;n.dtype=e.dtype;l.push(Object.freeze(n));break}case"()":{const e=[];e.unshift(l.pop());e.unshift(l.pop());if(r){if(!Xe(e[0].unit.expos,f)||!Xe(e[1].unit.expos,f)){return C("BINOM")}}const t=Object.create(null);t.unit=Object.create(null);t.unit.expos=f;const[n,s]=os("binary","binomial",e);t.value=n;t.dtype=s;l.push(Object.freeze(t));break}case"raise":return{value:l.pop().value,unit:null,dtype:d.ERROR};case"\\blue":case"\\gray":case"\\green":case"\\orange":case"\\pink":case"\\purple":case"\\red":{const e=h(l.pop());if(e.dtype===d.STRING){e.unit=o.slice(1)}l.push(e);break}}}}const o=l.pop();if(l.length>0){return C("ERROR")}return o};const Ma=(e,t,n,r,s,a)=>{const l=e.value.temp;r=r==null?Ue.fromNumber(250):r.value;const i=s==null?Ue.fromNumber(l.xmin):s.value;const o=a==null?Ue.fromNumber(l.xmax):a.value;const u=Ue.divide(Ue.subtract(o,i),r);const c=Ht.operandFromRange([i,u,o]);const p={value:c.value,unit:null,dtype:d.COLUMNVECTOR+d.RATIONAL};let f;let m;if(n.value.dtype&&n.value.dtype===d.MODULE){f=wa(n.value,[p],t,false);m=p.value.map(((e,t)=>[e,f.value[t]]))}else if(n.dtype===d.STRING){if(/§matrix§1§2$/.test(n.value)){p.name="t";m=Ia(n.value.replace(/§/g," "),{t:p},t,false).value}else{p.name="x";f=Ia(n.value.replace(/§/g," "),{x:p},t,false);m=p.value.map(((e,t)=>[e,f.value[t]]))}}const h={value:m,unit:null,dtype:d.MATRIX+d.RATIONAL};return va.functions.path(e,h,"L")};const La=(e,t,n)=>{let r;let s=Ue.increment(t);let a=0;if(e.dtype===d.RANGE){r=t;s=Ue.add(t,n);a=d.RATIONAL}else if(e.dtype===d.STRING&&e.value[Ue.fromNumber(t)]==="\ud835"){r=Ue.fromNumber(e.value[t]+e.value[t+1]);s=Ue.add(t,2);a=d.STRING}else{r=e.value[Ue.toNumber(t)];a=e.dtype&d.STRING?d.STRING:e.dtype&d.ROWVECTOR?e.dtype-d.ROWVECTOR:e.dtype&d.COLUMNVECTOR?e.dtype-d.COLUMNVECTOR:e.dtype-d.MATRIX}const l={value:r,unit:e.unit,dtype:a};return[l,s]};const Ca=["while","for"];const wa=(e,t,n,r,s)=>{if(e.dtype===d.ERROR){return e}if(t.length>e.parameters.length){return C("NUMARGS",e.name)}const a=Object.create(null);for(let n=0;n<t.length;n++){a[e.parameters[n]]=t[n]}if(e.parameters.length>t.length){for(let n=t.length;n<e.parameters.length;n++){a[e.parameters[n]]={value:undefined,unit:null,dtype:0}}}if(e.dtype===d.DRAWING){a["svg"]={value:va.startSvg(),unit:null,dtype:d.DRAWING}}const l=[{type:"if",condition:true,endOfBlock:e.statements.length-1}];for(let t=0;t<e.statements.length;t++){const i=e.statements[t];const o=i.stype;const u=l.length-1;switch(o){case"statement":{if(l[u].condition){const e=Ia(i.rpn,a,n,r,s);if(e.dtype===d.ERROR){return e}if(i.name){i.resultdisplay=r?"!!":"!";const[t,s]=ka(i,e,r);Es(a,t,n)}}break}case"if":{if(l[u].condition){const e=Ia(i.rpn,a,n,r,s);if(e.dtype===d.ERROR){return e}const t=As.condition[Na(e)](e.value);l.push({type:"if",condition:t,endOfBlock:i.endOfBlock})}else{t=i.endOfBlock}break}case"else if":{if(l[u].type==="if"&&l[u].condition){t=l[u].endOfBlock;l.pop()}else{const e=Ia(i.rpn,a,n,r,s);if(e.dtype===d.ERROR){return e}const t=As.condition[Na(e)](e.value);l[l.length-1].condition=t}break}case"else":if(l[u].type==="if"&&l[u].condition){t=l[u].endOfBlock;l.pop()}else{l[u].condition=true}break;case"while":{if(l[u].condition){const e={type:"while",startStatement:t,rpn:i.rpn,endOfBlock:i.endOfBlock};const o=Ia(i.rpn,a,n,r,s);if(o.dtype===d.ERROR){return o}const u=As.condition[Na(o)](o.value);e.condition=u;if(e.condition===true){l.push(e)}else{t=i.endOfBlock}}else{t=i.endOfBlock}break}case"for":{const e={type:"for",condition:true,startStatement:t,endOfBlock:i.endOfBlock};const o=i.rpn.split(" ");o.pop();e.dummyVariable=o.shift().slice(1);const u=Ia(o.join(" "),a,n,r,s);e.index=u.dtype&d.RANGE?u.value[0]:Ue.fromNumber(0);e.step=u.dtype&d.RANGE?u.value[1]:Ue.fromNumber(0);e.endIndex=u.dtype&d.RANGE?u.value[2]:Ue.fromNumber(u.value.length-1);const[c,p]=La(u,e.index,e.step);e.nextIndex=p;e.iterable=u;l.push(e);a[e.dummyVariable]=c;break}case"break":{if(l[u].condition){for(let e=l.length-1;e>0;e--){if(Ca.includes(l[e].type)||e===0){t=l[e].endOfBlock;l.pop();break}else{l.pop()}}}break}case"end":{if(l[u].type==="if"&&t>=l[u].endOfBlock){l.pop()}else if(l[u].type==="if"&&l[u].condition){if(t<l[u].endOfBlock){t=l[u].endOfBlock}l.pop()}else if(l[u].type==="while"){const e=Ia(l[u].rpn,a,n,r,s);if(e.dtype===d.ERROR){return e}l[u].condition=e.value;if(l[u].condition){t=l[u].startStatement}else{l.pop()}}else if(l[u].type==="for"){l[u].index=l[u].nextIndex;const e=Ue.isRational(l[u].index)&&Ue.isPositive(l[u].step)?Ue.lessThanOrEqualTo(l[u].index,l[u].endIndex):Ue.isRational(l[u].index)?Ue.greaterThanOrEqualTo(l[u].index,l[u].endIndex):l[u].index<=l[u].endIndex;if(e){const[e,n]=La(l[u].iterable,l[u].index,l[u].step);a[l[u].dummyVariable]=e;l[u].nextIndex=n;t=l[u].startStatement}else{l.pop()}}break}case"return":if(l[u].condition){if(i.rpn){const e=Ia(i.rpn,a,n,r,s);return e}else{return{value:Ue.zero,unit:f,dtype:d.RATIONAL}}}break;case"echo":if(l[u].condition){if(i.rpn){const e=Ia(i.rpn,a,n,r,s);if(e.dtype===d.ERROR){return e}const t=e.dtype===d.RATIONAL?Ue.toNumber(e.value):e.dtype===d.STRING?e.value:Ut(e)&&e.dtype&d.RATIONAL?e.value.map((e=>Ue.toNumber(e))):e.dtype===d.MATRIX+d.RATIONAL?e.value.map((e=>e.map((e=>Ue.toNumber(e))))):e.value;console.log(t)}}break;case"raise":if(l[u].condition){if(i.rpn){const e=Ia(i.rpn,a,n,r,s);return{value:e.value,unit:null,dtype:d.ERROR}}else{return{value:i.rpn,unit:null,dtype:d.ERROR}}}break}}};const Sa=(e,t)=>{e.value=null;e.resultDisplay="\\color{firebrick}\\text{"+t.value+"}";e.altResultDisplay=t.value;e.error=true;if(e.resulttemplate.indexOf("!")>-1){e.tex+="= "+e.resultDisplay;e.alt+=t.value}else if(e.resulttemplate.indexOf("@")>-1){e.tex=e.resulttemplate.replace(/@@?/,e.resultDisplay);e.alt=e.altresulttemplate.replace(/@@?/,e.altResultDisplay)}else{e.tex=e.tex.replace(/[?%] *[?%]|[?%]/,e.resultDisplay);e.alt=e.alt.replace(/[?%] *[?%]|[?%]/,e.altResultDisplay)}return[e,t]};const ka=(e,t,n)=>{let r=Object.create(null);r.value=h(t.value);r.unit=h(t.unit);r.dtype=t.dtype;if(r.dtype===d.COMPLEX&&Ue.isZero(St.im(r.value))){r.value=St.re(r.value);r.dtype=1}if(r.dtype!==d.ERROR&&n&&e.resultdisplay.indexOf("!")===-1&&(e.expos||r.unit&&r.unit.expos&&Array.isArray(r.unit.expos))){const t=e.expos?e.expos:f;if(!Xe(r.unit.expos,t)){const t=e.expos?"UNIT_RES":"UNIT_MISS";r=C(t)}}if(r.dtype===d.ERROR){return Sa(e,r)}if(e.resulttemplate&&e.resulttemplate.indexOf("!")>-1&&!(r.dtype===d.DATAFRAME||r.dtype&d.MAP||kt(r)||r.dtype&d.TUPLE)){return Sa(e,C("BAD_DISPLAY"))}if(r.dtype&d.RATIONAL){r.value=Ut(r)?r.value.map((e=>Ue.normalize(e))):kt(r)?r.value.map((e=>e.map((e=>Ue.normalize(e))))):r.dtype===d.RATIONAL?Ue.normalize(r.value):r.value}else if(r.dtype===d.COMPLEX){r.value=[Ue.normalize(r.value[0]),Ue.normalize(r.value[1])]}e.dtype=r.dtype;const s=e.factor&&(e.factor!==1||e.gauge);if(r.dtype&d.DATAFRAME||typeof e.resultdisplay==="string"&&e.resultdisplay.indexOf("!")>-1){e.unit=r.unit}else if(n&&r.dtype&d.RATIONAL){if(!s&Xe(r.unit.expos,f)){e.factor=Ue.one;e.gauge=Ue.zero;e.expos=f}r.value={plain:kt(r)?Ht.convertFromBaseUnits({value:r.value,dtype:r.dtype},e.gauge,e.factor):r.dtype&d.MAP?In.convertFromBaseUnits(r.value,e.gauge,e.factor):Ue.subtract(Ue.divide(r.value,e.factor),e.gauge),inBaseUnits:r.value};e.dtype+=d.QUANTITY;e.expos=r.unit.expos}else if(s){r.value={plain:r.value,inBaseUnits:kt(r)&&r.dtype&d.MAP?g(r.value,(t=>t.map((t=>Ue.multiply(Ue.add(t,e.gauge),e.factor))))):kt(r)?Ht.convertToBaseUnits({value:r.value,dtype:r.dtype},e.gauge,e.factor):r.dtype&d.MAP?g(r.value,(t=>Ue.multiply(Ue.add(t,e.gauge),e.factor))):Ue.multiply(Ue.add(r.value,e.gauge),e.factor)};e.dtype+=d.QUANTITY}else if(r.dtype&d.RATIONAL||r.dtype&d.COMPLEX){e.expos=f}if(r.value){e.value=r.value}return[e,r]};const Ua=(e,t,n="1,000,000.")=>{const r=e.value;const s=[];for(let e=0;e<r.parameters.length;e++){const a=r.parameters[e];s.push(Ia("¿"+a,t,n,false,{}))}const a=wa(r,s,n,false,{});if(a.dtype===d.ERROR){e.error=true;e.tex="\\color{firebrick}\\text{"+a.value+"}";e.value=null;e.dtype=d.ERROR}else{e.resultdisplay=a.value;delete e.resultdisplay.temp}return e};const Da=(e,t,n="1,000,000.")=>{e.tex=e.template;e.alt=e.altTemplate;const r=/\?\?|!!|%%|@@|¡¡/.test(e.resulttemplate);const s=t.format?t.format.value:"h15";if(e.tex.indexOf("〖")>-1){const a=Vr(e.tex,t,r,s,n);if(a.dtype&&a.dtype===d.ERROR){const[t,n]=Sa(e,a);return t}else{e.tex=a}}if(e.rpn){let a=Ia(e.rpn,t,n,r);if(a.dtype===d.ERROR){[e,a]=Sa(e,a);return e}let l;[e,l]=ka(e,a,r);if(e.error){return e}e=jr(e,l,s,n,r)}return e};const _a=new RegExp(Ue.numberPattern);const Ba=/('[^']+'|[°ΩÅK])$/;const Pa="(-?(?:0x[0-9A-Fa-f]+|[0-9]+(?: [0-9]+\\/[0-9]+|(?:\\.[0-9]+)?(?:e[+-]?[0-9]+|%)?)))";const za="(0x[0-9A-Fa-f]+|[0-9]+(?: [0-9]+\\/[0-9]+|(?:\\.[0-9]+)?(?:e[+-]?[0-9]+|%)?))";const ja=new RegExp("^"+Pa+"(?: *([+-]) *j +"+za+"|∠"+Pa+"(°)?)");const Ga=(e,t,n)=>{let r="";let s="";const a=Ba.exec(e);if(a){r=a[0].replace(/'/g,"").trim();e=e.slice(0,-a[0].length).trim();s=M(r)}if(/^[({[].* to /.test(e)){return[0,null,d.ERROR,""]}else if(e==="true"||e==="false"){return[Boolean(e),null,d.BOOLEAN,`\\mathord{\\text{${e}}}`]}else if(/^\x22.+\x22/.test(e)){if(t==="format"){return Ye(e.slice(1,-1).trim())}else{const t=kr(e,n);return[e,undefined,d.STRING,t]}}else if(/^[([]/.test(e)){const[t,a]=kr(e,n,true);const l=Ia(a,{},n,false,{});let i=l.dtype&d.RATIONAL?f:null;let o=l.dtype;if(r){i=r;o+=d.QUANTITY;return[l.value,i,o,t+"\\,"+s]}else{return[l.value,i,o,t]}}else if(/^``/.test(e)){e=x(e.slice(2,-2));const t=bn.dataFrameFromCSV(e,{});if(t.dtype===d.DATAFRAME){return[t.value,t.unit,d.DATAFRAME,bn.display(t.value,"h3",n)]}else{if(r){t.unit=r;t.dtype=d.MAP+d.RATIONAL+d.QUANTITY}return[t.value,t.unit,t.dtype,In.display(t,"h3",n)+"\\;"+s]}}else if(ja.test(e)){const t=kr(e,n);const r=e.match(ja);let s;let a;if(r[3]){s=Ue.fromString(r[1]);a=Ue.fromString(r[3]);if(r[2]==="-"){a=Ue.negate(a)}}else{const e=Ue.fromString(r[1]);let t=Ue.fromString(r[4]);if(r[5]){t=Ue.divide(Ue.multiply(t,Ue.pi),Ue.fromNumber(180))}s=Ue.multiply(e,Ue.fromNumber(Math.cos(Ue.toNumber(t))));a=Ue.multiply(e,Ue.fromNumber(Math.sin(Ue.toNumber(t))))}return[[s,a],f,d.COMPLEX,t]}else if(e.match(_a)){const t=kr(e,n);if(r){return[Ue.fromString(e),r,d.RATIONAL+d.QUANTITY,t+"\\;"+s]}else{return[Ue.fromString(e),f,d.RATIONAL,t]}}else{return[0,null,d.ERROR,""]}};const Fa=(e,t)=>{if(e.name&&e.value&&e.dtype&d.QUANTITY){const n=e.unit===undefined?{name:"",factor:Ue.one,gauge:Ue.zero,log:"",expos:f}:typeof e.unit==="string"?nt(e.unit,t):e.unit;if(n.dtype&&n.dtype===d.ERROR){e.tex+=" \\color{firebrick}{\\text{"+n.value+"}}";e.alt+=n.value;return e}e.expos=n.expos;if(Ue.isRational(e.value)){e.value={plain:e.value,inBaseUnits:Ue.multiply(Ue.add(e.value,n.gauge),n.factor)}}else if(kt(e)){e.value={plain:e.value,inBaseUnits:Ht.convertToBaseUnits(e,n.gauge,n.factor)}}else if(e.dtype&d.MAP){const t=h(e.value);const r=In.convertToBaseUnits(t,n.gauge,n.factor);e.value={plain:t,inBaseUnits:r};e.unit={expos:n.expos}}}if(e.rpn&&!e.value){if(e.unit){const n=e.unit?nt(e.unit,t):{factor:1,gauge:0,expos:f};e.factor=n.factor;e.gauge=n.gauge;e.expos=n.expos}}};const Va=/^(?:[A-Za-zıȷ\u0391-\u03C9\u03D5\u210B\u210F\u2110\u2112\u2113\u211B\u212C\u2130\u2131\u2133]|(?:\uD835[\uDC00-\udc33\udc9c-\udcb5]))[A-Za-z0-9_\u0391-\u03C9\u03D5\u0300-\u0308\u030A\u030C\u0332\u20d0\u20d1\u20d6\u20d7\u20e1]*′*$/;const qa=/^(if|else if|else|return|raise|while|for|break|echo|end)\b/;const Wa=/^(title|frame|view|axes|grid|stroke|strokewidth|strokedasharray|fill|fontsize|fontweight|fontstyle|fontfamily|marker|line|path|plot|curve|rect|circle|ellipse|arc|text|dot|leader|dimension)\b/;const $a=/^(?:private +)?function (?:[A-Za-zıȷ\u0391-\u03C9\u03D5\u210B\u210F\u2110\u2112\u2113\u211B\u212C\u2130\u2131\u2133]|(?:\uD835[\uDC00-\udc33\udc9c-\udcb5]))[A-Za-z0-9_\u0391-\u03C9\u03D5\u0300-\u0308\u030A\u030C\u0332\u20d0\u20d1\u20d6\u20d7\u20e1]*′*\(/;const Ya=/^draw\(/;const Ha=/^startSvg\(\)/;const Xa=/"[^"]*"|``.*|`[^`]*`|'[^']*'|#|[^"`'#]+/g;const Za=e=>{const t=e.indexOf("=");if(t===-1){return false}const n=e.slice(0,t).trim();if(Va.test(n)){return true}if(n.indexOf(",")===-1){return false}let r=true;const s=n.split(",");s.forEach((e=>{if(!Va.test(e.trim())){r=false}}));return r};const Ka=e=>{const t=y(Xa,e);for(let n=0;n<t.length;n++){if(t[n].value==="#"){e=e.slice(0,t[n].index);break}}return e.trim()};const Qa=(e,t)=>{const n=Object.create(null);const r=e.split(/\r?\n/g);for(let e=0;e<r.length;e++){const s=Ka(r[e]);if(s.length===0){continue}if($a.test(s)||Ya.test(s)){const[s,a]=el(r,t,e);if(s.dtype&&s.dtype===d.ERROR){return s}n[s.name]=s;e=a}else if(Za(s)){const[s,a]=tl(r,t,e);n[s.name]=s;e=a}}return{value:n,unit:null,dtype:d.MODULE}};const Ja=(e,t,n)=>{for(let r=n+1;r<t.length;r++){const n=t[r].trim();if(n.length===0){continue}e+="\n"+n;if(n.slice(-2)==="``"){return[e,r]}}};const el=(e,t,n)=>{const r=Ka(e[n]);let s=r.charAt(0)==="d";const a=r.indexOf("(");let l="";if(s){l="draw"}else{const e=r.indexOf("function");l=r.slice(e+8,a).trim()}const i=/^private /.test(r);const o=r.slice(a+1,-1).trim();const u=o.length===0?[]:o.split(/, */g);const c={name:l,dtype:s?d.DRAWING:d.MODULE,isPrivate:i,parameters:u,statements:[]};const p=[];let f="";let m=false;let h="";let g="";let y=false;for(let r=n+1;r<e.length;r++){let n=Ka(e[r]);if(n.length===0){continue}if(m){const e=h.slice(-1);n=e===";"&&"})]".indexOf(n.charAt(0))>-1?h.slice(0,-1).trim()+n:e===";"||e===","?h+" "+n:h+n}if(/[{([,;]$/.test(n)){m=true;h=n;continue}else if(e.length>r+1&&/^\s*[+\-)\]}]/.test(e[r+1])){m=true;h=n;continue}const a=qa.exec(n);if(a){g=a[0];f=n.slice(g.length).trim();if(f.length>0&&/^``/.test(f)){[f,r]=Ja(f,e,r)}}else if(s&&Wa.test(n)){g="svg";f=n.indexOf(" ")===-1?n+"(svg)":n.replace(" ","(svg, ")+")";y=true}else{if(Za(n)){const t=n.indexOf("=");g=n.slice(0,t-1).trim();f=n.slice(t+1).trim();if(/^``/.test(f)){[f,r]=Ja(f,e,r)}if(Ha.test(f)){s=true}y=true}else{return[C("FUNC_LINE",l+", line "+(r+1)),r]}}let i="";if(f){[,i]=kr(f,t,true)}const o=y?"statement":g;if(y&&/[,;]/.test(g)){g=g.split(/[,;]/).map((e=>e.trim()))}c.statements.push({name:g,rpn:i,stype:o});if(o==="if"||o==="while"||o==="for"){p.push({type:o,statementNum:c.statements.length-1});if(o==="for"&&i.indexOf("j ")===0){return[C("BAD_J")]}}else if(o==="end"){if(p.length===0){if(s){c.statements.splice(-1,0,{name:"return",rpn:"¿svg",stype:"return"})}return[c,r]}const e=p[p.length-1];c.statements[e.statementNum].endOfBlock=c.statements.length-1;p.pop()}y=false;m=false;h="";g="";f=""}return[C("END_MISS",l),0]};const tl=(e,t,n)=>{let r=false;let s="";let a=n;for(let t=n;t<e.length;t++){const n=Ka(e[t]);if(n.length===0){continue}if(r){s=s.slice(-1)===";"&&"})]".indexOf(n.charAt(0))>-1?s.slice(0,-1).trim()+n:s+n}else{s=n}if(/[{([,;]$/.test(s)){r=true}else if(e.length>t+1&&/^\s*[+\-)\]}]/.test(e[t+1])){r=true}else{a=t;break}}const l=s.indexOf("=");let i=s.slice(0,l).trim();if(/[,;]/.test(i)){i=i.split(/[,;]/).map((e=>e.trim()))}const o=s.slice(l+1).trim();const[u,c,p,f]=Ga(o,i,t);const d={name:i,value:u,unit:c,dtype:p,resultDisplay:f};Fa(d,{});return[d,a]};const nl=/[+\-×·*∘⌧/^%‰&√!¡|‖&=<>≟≠≤≥∈∉⋐∧∨⊻¬]|\xa0(function|modulo|\\atop|root|sum|abs|cos|sin|tan|acos|asin|atan|sec|csc|cot|asec|acsc|acot|exp|log|ln|log10|log2|cosh|sinh|tanh|sech|csch|coth|acosh|asinh|atanh|asech|acsch|acoth|Gamma|Γ|logGamma|logΓ|logFactorial|cosd|sind|tand|acosd|asind|atand|secd|cscd|cotd|asecd|acscd|acotd|Re|Im|argument|chr|round|sqrt|sign|\?{}|%|⎾⏋|⎿⏌|\[\]|\(\))\xa0/;const rl=/^(``.+``|[$$£¥\u20A0-\u20CF]?(\?{1,2}|@{1,2}|%{1,2}|!{1,2})[^=!(?@%!{})]*)$/;const sl=/^[^=]+=\s*``/;const al=/^[$£¥\u20A0-\u20CF]/;const ll=/^(?:[A-Za-zıȷ\u0391-\u03C9\u03D5\u210B\u210F\u2110\u2112\u2113\u211B\u212C\u2130\u2131\u2133]|(?:\uD835[\uDC00-\udc33\udc9c-\udcb5]))[A-Za-z0-9_\u0391-\u03C9\u03D5\u0300-\u0308\u030A\u030C\u0332\u20d0\u20d1\u20d6\u20d7\u20e1]*′*$/;const il=/^[([](?:[A-Za-zıȷ\u0391-\u03C9\u03D5\u210B\u210F\u2110\u2112\u2113\u211B\u212C\u2130\u2131\u2133]|(?:\uD835[\uDC00-\udc33\udc9c-\udcb5]))[A-Za-z0-9_\u0391-\u03C9\u03D5\u0300-\u0308\u030A\u030C\u0332\u20d0\u20d1\u20d6\u20d7\u20e1]*′*[,;].+[)\]]$/;const ol=/^(π|true|false|root|if|else|and|or|otherwise|modulo|for|while|break|return|raise)$/;const ul=(e,t)=>{const n=kr(e,t);return{entry:e,tex:n,alt:e}};const cl=(e,t="1,000,000.")=>{let n="";let r="";let s="";let a=false;let l=false;let i=false;let o=false;let u=false;let c=0;let p="";let f="";let m="";let h="";let g="";let y=false;let b;let R;let v;let A="";const N=Ya.test(e);if($a.test(e)||N){let n="";if(N){n="draw"}else{const t=e.indexOf("function");const r=e.indexOf("(");n=e.slice(t+8,r).trim()}const r=Qa(e,t);const s=r.dtype&&r.dtype===d.ERROR;if(s){window.alert(r.value)}const a={entry:e,name:n,value:s?r.value:r.value[n],dtype:s?d.ERROR:n==="draw"?d.DRAWING:d.MODULE,error:s};return a}A=e;const O=sl.test(A);const E=O?A.indexOf("=")+1:A.lastIndexOf("=")+1;if(E>1){r=A.substring(0,E-1).replace(/ +$/,"");if(r.length>0&&/;\s*$/.test(r)){u=true;r=r.replace(/;\s*$/,"")}r=r.trim();s=A.substring(E).trim();if(rl.test(s)){a=true;l=s.indexOf("!")>-1;i=s.indexOf("@")>-1;o=s.indexOf("%")>-1;c=r.indexOf("=")+1;if(c){n=r.slice(0,c-1).trim();p=r.substring(c).trim();if(il.test(n)){n=n.slice(1,-1).trim()}if(/[,;]/.test(n)){const e=n.split(/[,;]/);for(let n=0;n<e.length;n++){const r=e[n].trim();if(ol.test(r)||!ll.test(r)){return ul(A,t)}}g=e.map((e=>e.trim()))}else{if(ll.test(n)&&!ol.test(n)){g=n}else{p=r}}}else{p=r}}else if(O){g=r;p=s}else if(ll.test(r)&&!ol.test(r)){g=r;if(s===""){const e=kr(A,t);return{entry:A,tex:e,alt:A}}}else{return ul(A,t)}}else{return ul(A,t)}if(p.length>0){if(/^\s*fetch\(/.test(p)){f=""}else{[f,m]=kr(p,t,true);if(l||i||f.indexOf("〖")===-1||/\u00a0for\u00a0/.test(m)){f=""}else if(o){f=""}else{if(nl.test(" "+m+" ")){f="{\\color{#0000ff}"+f+"}"}else{f=""}}}}if(al.test(s)){y=true;R=s.charAt(0)}if(a){b=null;if(!y){R=s.replace(/[?@%!']/g,"").trim()}if(l){h=s}else{if(R){h=s.trim().replace(/([^ ?!@%]+)$/,"'"+"$1"+"'");h=kr(h,t).replace(/\\%/g,"%").replace("@ @","@@")}else{h=kr(s,t).replace(/\\%/g,"%").replace("@ @","@@")}h=h.replace(/\\text\{(\?\??|%%?)\}/,"$1");h=h.replace(/([?%]) ([?%])/,"$1"+"$2")}}else{[b,R,v,h]=Ga(s,g,t);if(v===d.ERROR){return ul(A,t)}m=""}let x="";let T="";if(!i){x=kr(r,t);if(u){x="\\begin{aligned}"+x;const e=x.indexOf("=");x=x.slice(0,e)+"&"+x.slice(e)}const e=u?"\\\\ &":"";T=r;if(f.length>0&&!o){x+=` ${e}= `+f}if(!l){x+=" "+(u?"\\\\&":"")+"= "+h;T+=" = "+s}if(u){x+="\\end{aligned}"}}const I={entry:A,template:x,altTemplate:T,resultdisplay:h,dtype:v,error:false};if(g){I.name=g}if(a){I.resulttemplate=h;I.altresulttemplate=s}else{I.tex=x;I.alt=T}if(m){I.rpn=m}if(b){I.value=b}if(R){if(Array.isArray(R)){I.expos=R}else{I.unit=R}}return I};const pl=/^(?:[A-Za-zıȷ\u0391-\u03C9\u03D5\u210B\u210F\u2110\u2112\u2113\u211B\u212C\u2130\u2131\u2133]|(?:\uD835[\uDC00-\udc33\udc9c-\udcb5]))[A-Za-z0-9_\u0391-\u03C9\u03D5\u0300-\u0308\u030A\u030C\u0332\u20d0\u20d1\u20d6\u20d7\u20e1]*′* *= *(?:fetch|import)\(/;const fl=/^[^=]+= *import/;const dl=/^Error while reading file. Status Code: \d*$/;const ml=/\\text{[^}]+}/;const hl=e=>{const t=e.replace(/^[^()]+\("?/,"");return t.replace(/"?\).*$/,"").trim()};const gl=(e,t,n,r)=>{const s=Object.create(null);s.entry=e;s.name=e.replace(/=.+$/,"").trim();let a=kr(e.replace(/\s*=\s*[$$£¥\u20A0-\u20CF]?(?:!{1,2}).*$/,""),r);const l=hl(e);if(/\.(?:csv|txt)$/.test(l)){const e=l.replace(/.+\//,"");const t=ml.exec(a);a=a.slice(0,t.index)+"\\text{"+A(e)+"})"}s.tex=a;s.alt=e;if(t==="File not found."||dl.test(t)){s.dtype=d.ERROR;s.tex+=` = \\red{\\text{${t}}}`;s.alt=" = "+t;s.value=null;return s}const i=fl.test(e)?Qa(t,r):bn.dataFrameFromCSV(t,n);s.value=i.value;s.dtype=i.dtype;s.unit=i.unit;s.isFetch=true;if(i.dtype===d.MODULE&&/^importedParameters *=/.test(e)){let e="\\begin{matrix}";let t=0;Object.entries(i.value).forEach((([r,s])=>{n[r]=s;e+=kr(s.name)+" & ";t+=1;if(t===5){e=e.slice(0,-1)+"\\\\ ";t=0}}));e=e.slice(0,t===0?-2:-1)+"\\end{matrix}";s.tex=s.tex.replace("\\mathrm{importedParameters}",e)}return s};const yl=(e,t,n,r,s,a,l,i)=>{const o=e.state.doc;const u=o.attrs.inDraftMode;const c=o.attrs.decimalFormat;Promise.all(l.map((e=>fetch(e,{method:"GET",headers:{"Content-Type":"text/plain;charset=UTF-8"},mode:"cors"})))).then((e=>Promise.all(e.map((e=>{if(e.status!==200&&e.status!==0){return e.status===404?"File not found.":"Error while reading file. Status Code: "+e.status}return e.text()}))))).then((l=>{const p=e.state;if(p.selection.to===s+1){p.selection=p.selection.constructor.near(p.doc.resolve(s+1))}const f=p.tr;for(let e=0;e<l.length;e++){const s=i[e];const p=n?o.nodeAt(s).attrs.entry:r.entry;const d=gl(p,l[e],a,c);d.inDraftMode=u;f.replaceWith(s,s+1,t.createAndFill(d));if(d.name){Es(a,d,c)}}try{bl(e,t,n,r,s,a,f)}catch(n){console.log(n);const a=r.template.indexOf(r.resultdisplay);r.tex=r.template.slice(0,a)+"\\text{"+n+"}";f.replaceWith(s,s+1,t.createAndFill(r));f.setSelection(e.state.selection.constructor.near(f.doc.resolve(s+1)));e.dispatch(f);e.focus()}}))};const bl=(e,t,n,r,s,a,l)=>{const i=e.state.doc;const o=i.attrs.decimalFormat;if(!n&&(r.name||r.rpn||r.dtype&&r.dtype===d.DRAWING)){i.nodesBetween(0,s,(function(e){if(e.type.name==="calculation"){const t=e.attrs;if(t.name){if(t.name==="importedParameters"){Object.entries(t.value).forEach((([e,t])=>{a[e]=t}))}else{Es(a,t,o)}}}}));i.nodesBetween(s+1,i.content.size,(function(e,t){if(e.type.name==="calculation"&&e.attrs.dtype===d.MODULE){Es(a,e.attrs,o)}}));if(!pl.test(r.entry)){let e=h(r);Fa(e,a);if(e.rpn||r.dtype&&r.dtype===d.DRAWING){e=e.dtype&&e.dtype===d.DRAWING?Ua(e,a,o):Da(e,a,o)}if(e.name){Es(a,e,o)}e.displayMode=r.displayMode;l.replaceWith(s,s+1,t.createAndFill(e))}}const u=n?0:s+1;i.nodesBetween(u,i.content.size,(function(e,r){if(e.type.name==="calculation"){const s=n?!pl.test(e.attrs.entry):!e.attrs.isFetch;if(s){const s=e.attrs.entry;let i=n?cl(s,o):h(e.attrs);i.displayMode=e.attrs.displayMode;const u=i.dtype&&i.dtype===d.DRAWING&&(i.rpn||(i.value.parameters.length>0||n));if(n||i.rpn||u||i.name&&!(a[i.name]&&a[i.name].isFetch)){if(n){Fa(i,a)}if(i.rpn||u){i=i.rpn?Da(i,a,o):Ua(i,a,o)}if(i.name){Es(a,i,o)}if(n||i.rpn||u){l.replaceWith(r,r+1,t.createAndFill(i))}}}else if(e.attrs.name&&!(n&&e.attrs.isFetch)){if(e.attrs.name){if(e.attrs.name==="importedParameters"){Object.entries(e.attrs.value).forEach((([e,t])=>{a[e]=t}))}else{Es(a,e.attrs,o)}}}}}));if(!n){l.setSelection(e.state.selection.constructor.near(l.doc.resolve(s+1)))}e.dispatch(l);e.focus()};function Rl(e,t,n=false,r,s){const a=e.state.doc;if(!(n||r.name||r.rpn||r.dtype&&r.dtype===d.DRAWING)){const n=e.state;if(n.selection.to===s+1){n.selection=n.selection.constructor.near(n.doc.resolve(s+1))}const a=n.tr;try{a.replaceWith(s,s+1,t.createAndFill(r))}catch(e){}finally{e.dispatch(a);e.focus()}return}const l=Object.create(null);l.format={value:"h15"};const i=[];const o=[];if(!n){const e=r.entry;if(pl.test(e)){i.push(hl(e));o.push(s)}}else{a.nodesBetween(0,a.content.size,(function(e,t){if(e.type.name==="calculation"&&!e.attrs.value){const n=e.attrs.entry;if(pl.test(n)){i.push(hl(n));o.push(t)}else if(/^function /.test(n)){e.attrs=cl(n,a.attrs.decimalFormat);Es(l,e.attrs,a.attrs.decimalFormat)}}else if(e.attrs.isFetch||e.attrs.dtype&&e.attrs.dtype===d.MODULE){Es(l,e.attrs,a.attrs.decimalFormat)}}))}if(i.length>0){yl(e,t,n,r,s,l,i,o)}else{const a=e.state;if(a.selection.to===s+1){a.selection=a.selection.constructor.near(a.doc.resolve(s+1))}const i=a.tr;try{bl(e,t,n,r,s,l,i)}catch(n){console.log(n);const a=r.template.indexOf(r.resultdisplay);r.tex=r.template.slice(0,a)+"\\text{"+n+"}";i.replaceWith(s,s+1,t.createAndFill(r));i.setSelection(e.state.selection.constructor.near(i.doc.resolve(s+1)));e.dispatch(i);e.focus()}}}const vl=(e,t={},n=false,r="1,000,000.")=>{let s=cl(e,r);Fa(s,t);if(s.rpn){s=Da(h(s),t,r)}else if(s.dtype&&s.dtype===d.DRAWING){s=Ua(s,t,r)}if(s.name){Es(t,s)}return s.dtype&&s.dtype===d.DRAWING?s:n?s.alt:s.tex};var Al={dt:d,parse:kr,calculate:vl,autoCorrect:p,prepareStatement:cl,improveQuantities:Fa,draw:va,evaluate:Da,md2ast:ua,scanModule:Qa,updateCalculations:Rl};return Al}));