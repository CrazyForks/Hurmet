const codeJar=(e,t)=>{const r={tab:"   ",indentOn:/{$/,catchTab:true,preserveIdent:true,addClosing:true};const n=window.document;const a=[];let o;e.setAttribute("contenteditable","plaintext-only");e.setAttribute("spellcheck","false");e.style.outline="none";e.style.overflowWrap="break-word";e.style.overflowY="auto";e.style.whiteSpace="pre-wrap";let i=false;if(e.contentEditable!=="plaintext-only")i=true;if(i)e.setAttribute("contenteditable","true");const l=(t,r)=>{a.push([t,r]);e.addEventListener(t,r)};l("keydown",(n=>{if(t&&n.keyCode===13&&!n.shiftKey)return;if(n.keyCode===65&&n.ctrlKey){window.getSelection().selectAllChildren(e);n.preventDefault()}if(n.defaultPrevented)return;if(r.preserveIdent)d(n);else p(n);if(r.catchTab)f(n);if(r.addClosing)h(n);if(i)m(s())}));l("keyup",(e=>{if(e.defaultPrevented)return;if(e.isComposing)return;if(o)o($())}));l("paste",(e=>{b(e);if(o)o($())}));function s(){const t=S();const r={start:0,end:0,dir:undefined};let{anchorNode:a,anchorOffset:o,focusNode:i,focusOffset:l}=t;if(!a||!i)throw"error1";if(a.nodeType===Node.ELEMENT_NODE){const e=n.createTextNode("");a.insertBefore(e,a.childNodes[o]);a=e;o=0}if(i.nodeType===Node.ELEMENT_NODE){const e=n.createTextNode("");i.insertBefore(e,i.childNodes[l]);i=e;l=0}g(e,(e=>{if(e===a&&e===i){r.start+=o;r.end+=l;r.dir=o<=l?"->":"<-";return"stop"}if(e===a){r.start+=o;if(!r.dir){r.dir="->"}else{return"stop"}}else if(e===i){r.end+=l;if(!r.dir){r.dir="<-"}else{return"stop"}}if(e.nodeType===Node.TEXT_NODE){if(r.dir!="->")r.start+=e.nodeValue.length;if(r.dir!="<-")r.end+=e.nodeValue.length}}));e.normalize();return r}function m(t){const r=S();let n,a=0;let o,i=0;if(!t.dir)t.dir="->";if(t.start<0)t.start=0;if(t.end<0)t.end=0;if(t.dir=="<-"){const{start:e,end:r}=t;t.start=r;t.end=e}let l=0;g(e,(e=>{if(e.nodeType!==Node.TEXT_NODE)return;const r=(e.nodeValue||"").length;if(l+r>t.start){if(!n){n=e;a=t.start-l}if(l+r>t.end){o=e;i=t.end-l;return"stop"}}l+=r}));if(!n)n=e,a=e.childNodes.length;if(!o)o=e,i=e.childNodes.length;if(t.dir=="<-"){[n,a,o,i]=[o,i,n,a]}r.setBaseAndExtent(n,a,o,i)}function u(){const t=S();const r=t.getRangeAt(0);const a=n.createRange();a.selectNodeContents(e);a.setEnd(r.startContainer,r.startOffset);return a.toString()}function c(){const t=S();const r=t.getRangeAt(0);const a=n.createRange();a.selectNodeContents(e);a.setStart(r.endContainer,r.endOffset);return a.toString()}function d(e){if(e.key==="Enter"){const t=u();const n=c();let[a]=x(t);let o=a;if(r.indentOn.test(t)){o+=r.tab}if(o.length>0){v(e);e.stopPropagation();y("\n"+o)}else{p(e)}if(o!==a&&n[0]==="}"){const e=s();y("\n"+a);m(e)}}}function p(e){if(i&&e.key==="Enter"){v(e);e.stopPropagation();if(c()==""){y("\n ");const e=s();e.start=--e.end;m(e)}else{y("\n")}}}function h(e){const t=`([{'"`;const r=`)]}'"`;const n=c();const a=u();const o=a.substr(a.length-1)==="\\";const i=n.substr(0,1);if(r.includes(e.key)&&!o&&i===e.key){const t=s();v(e);t.start=++t.end;m(t)}else if(t.includes(e.key)&&!o&&(`"'`.includes(e.key)||[""," ","\n"].includes(i))){v(e);const n=s();const a=n.start==n.end?"":S().toString();const o=e.key+a+r[t.indexOf(e.key)];y(o);n.start++;n.end++;m(n)}}function f(e){if(e.key==="Tab"){v(e);if(e.shiftKey){const e=u();let[t,a]=x(e);if(t.length>0){const e=s();const o=Math.min(r.tab.length,t.length);m({start:a,end:a+o});n.execCommand("delete");e.start-=o;e.end-=o;m(e)}}else{y(r.tab)}}}function b(e){v(e);const t=(e.originalEvent||e).clipboardData.getData("text/plain").replace(/\r/g,"");const r=s();y(t);m({start:r.start+t.length,end:r.start+t.length})}function g(e,t){const r=[];if(e.firstChild)r.push(e.firstChild);let n=r.pop();while(n){if(t(n)==="stop")break;if(n.nextSibling)r.push(n.nextSibling);if(n.firstChild)r.push(n.firstChild);n=r.pop()}}function y(e){e=e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;");n.execCommand("insertHTML",false,e)}function x(e){let t=e.length-1;while(t>=0&&e[t]!=="\n")t--;t++;let r=t;while(r<e.length&&/[ \t]/.test(e[r]))r++;return[e.substring(t,r)||"",t,r]}function $(){return e.textContent||""}function v(e){e.preventDefault()}function S(){if(e.parentNode&&e.parentNode.nodeType==Node.DOCUMENT_FRAGMENT_NODE){return e.parentNode.getSelection()}return window.getSelection()}return{updateOptions(e){Object.assign(r,e)},updateCode(t){e.textContent=t},onUpdate(e){o=e},toString:$,save:s,restore:m,destroy(){for(let[t,r]of a){e.removeEventListener(t,r)}}}};function selectedText(){const e=window.getSelection();if(e.rangeCount===0)return"";return e.getRangeAt(0).toString()}function textBeforeCursor(e){const t=window.getSelection();if(t.rangeCount===0)return"";const r=t.getRangeAt(0);const n=document.createRange();n.selectNodeContents(e);n.setEnd(r.startContainer,r.startOffset);return n.toString()}function textAfterCursor(e){const t=window.getSelection();if(t.rangeCount===0)return"";const r=t.getRangeAt(0);const n=document.createRange();n.selectNodeContents(e);n.setStart(r.endContainer,r.endOffset);return n.toString()}const autoCorrectRegEx=/([!?:<>\-~/_]=| \.|~~|\+-|-\+|<-->|<->|<>|<--|<-|-->|->|=>|-:|\^\^|\|\||\/\/\/|\b(bar|hat|vec|tilde|dot|ddot|ul)|\b(bb|bbb|cc|ff|ss) [A-Za-z]|\\?[A-Za-z]{2,}|\\c|\\ |\\o|root [234]|<<|>>|\^-?[0-9]+|\|\|\||\/_|''|""|00)\s$/;const accents={acute:"́",bar:"̅",breve:"̆",check:"̌",dot:"̇",ddot:"̈",grave:"̀",hat:"̂",harpoon:"⃑",leftharpoon:"⃐",leftrightvec:"⃡",leftvec:"⃖",ring:"̊",tilde:"̃",vec:"⃗",ul:"̲"};const autoCorrections={alpha:"α",beta:"β",chi:"χ",delta:"δ",Delta:"Δ",epsilon:"ε",varepsilon:"ɛ",eta:"η",gamma:"γ",Gamma:"Γ",iota:"ι",kappa:"κ",lambda:"λ",Lambda:"Λ",mu:"μ",nu:"ν",omega:"ω",Omega:"Ω",phi:"ϕ",varphi:"φ",Phi:"Φ",pi:"π",Pi:"Π",psi:"ψ",Psi:"Ψ",rho:"ρ",sigma:"σ",Sigma:"Σ",tau:"τ",theta:"θ",vartheta:"ϑ",Theta:"Θ",upsilon:"υ",xi:"ξ",Xi:"Ξ",zeta:"ζ",prime:"ʹ",ee:"ε",ll:"λ",sqrt:"√","root 2":"√","root 3":"∛","root 4":"∜",AA:"∀",CC:"ℂ",EE:"∃",HH:"ℍ",NN:"ℕ",QQ:"ℚ",RR:"ℝ",ZZ:"ℤ",OO:"𝒪",ii:"√(-1)",oo:"∞",ooo:"°",not:"¬","-:":"÷","\\ ":"˽","\\c":"¢","\\cdots":"⋯","\\vdots":"⋮","\\ddots":"⋱","\\floor":"⎿⏌","\\ceil":"⎾⏋",xx:"×","\\int":"∫","\\iint":"∬","\\oint":"∮","\\sum":"∑",nn:"∩",nnn:"⋂",uu:"∪",uuu:"⋃","\\del":"∂","\\grad":"∇","\\hbar":"ℏ","\\ell":"ℓ","\\nabla":"∇","\\alef":"ℵ","\\subset":"⊂","\\supset":"⊃","\\Subset":"⋐","\\forall":"∀","\\therefore":"∴","\\mapsto":"↦","\\checkmark":"✓",bar:"ˉ",dot:"˙",ddot:"¨",hat:"ˆ",tilde:"˜",vec:" ⃗","\\land":"∧","\\lor":"∨","\\not":"¬","\\notin":"∉","\\euro":"€","\\pound":"£","\\yen":"¥","\\o":"ø","^^":"∧",vv:"∨",vvv:"⋁","\\xor":"⊻","\\in":"∈","!=":"≠","<>":"≠",":=":"≔","?=":"≟","<=":"≤",">=":"≥","-=":"≡","~=":"≅","_=":"≡","~~":"≈","+-":"±","-+":"∓","<<":"⟨",">>":"⟩","///":"∕","<->":"↔","<-":"←","<--":"⟵","--\x3e":"⟶","->":"→","=>":"⇒","<--\x3e":"\\xrightleftarrows","\\circ":"∘","\\otimes":"⊗","|||":"¦","||":"‖","/_":"∠"," .":"·","''":"′",'""':"″"};const supCharFromNum={"^":"","-":"⁻",2:"²",3:"³",1:"¹",0:"⁰",4:"⁴",5:"⁵",6:"⁶",7:"⁷",8:"⁸",9:"⁹","(":"",")":""};const superscript=e=>{let t="";for(const r of e){t+=supCharFromNum[r]}return t};const lowSurrogateDiff={bb:[56255,56249],bbb:[56567,56561],cc:[56411,56405],ff:[56671,56665]};const wideExceptions=[56634,56639,56645,56647,56648,56649,56657,56477,56480,56481,56483,56484,56487,56488,56493,56506,56508,56513,56516];const bbb={C:"ℂ",H:"ℍ",N:"ℕ",P:"ℙ",Q:"ℚ",R:"ℝ",Z:"ℤ"};const calligraphic={B:"ℬ",E:"ℰ",F:"ℱ",H:"ℋ",I:"ℐ",L:"ℒ",M:"ℳ",R:"ℛ",e:"ℯ",g:"ℊ",l:"ℓ",o:"ℴ"};const accentedChar=e=>{const t=e.indexOf(" ");const r=e.substring(t+1);const n=e.substring(0,t);switch(n){case"bb":case"bbb":case"cc":case"ff":{const e=r.charCodeAt(0);let t="";if(e<65||e>122){return null}const a=e<91?0:1;if(n==="cc"&&a&&e!==108){return null}if(e>90&&n==="bbb"){return null}const o=e+lowSurrogateDiff[n][a];if(wideExceptions.includes(o)){t=n==="bbb"?bbb[r]:calligraphic[r]}else{t="\ud835"+String.fromCharCode(o)}return t}default:return null}};const autoCorrect=(e,t,r)=>{if(t.length>0&&t.slice(-1)===" "){const n=autoCorrectRegEx.exec(t);if(n){const a=n[0].slice(0,-1);let o;const i=accents[a];if(i){const a=t.slice(0,-(n[0].length+1))+i;e.updateCode(a+r);const o=a.length;e.restore({start:o,end:o,dir:undefined})}else{o=autoCorrections[a];if(!o){if(a.charAt(0)==="^"){o=superscript(a)}else{if(a.indexOf(" ")>0){o=accentedChar(a)}}}}if(o){const a=t.slice(0,-n[0].length)+o;e.updateCode(a+r);const i=a.length;e.restore({start:i,end:i,dir:undefined})}}}};const allZeros=Object.freeze([0,0,0,0,0,0,0,0]);const dt=Object.freeze({NULL:0,RATIONAL:1,COMPLEX:2,BOOLEAN:4,FROMCOMPARISON:8,BOOLEANFROMCOMPARISON:12,STRING:16,QUANTITY:32,DATE:64,RANGE:128,TUPLE:256,MAP:512,ROWVECTOR:1024,COLUMNVECTOR:2048,MATRIX:4096,DATAFRAME:8192,MODULE:16384,ERROR:32768,UNIT:65536,DRAWING:131072,RICHTEXT:262144});const isIn=(e,t)=>{if(t.length===0){return false}let r=0;let n=0;let a=t.length-1;while(n<a){r=Math.floor((n+a)/2);if(e>t[r]){n=r+1}else{a=r}}return e===t[n]};const clone=e=>{if(null==e||"object"!=typeof e){return e}if(e instanceof Date){return(new Date).setTime(e.valueOf())}if(Array.isArray(e)){const t=[];for(let r=0,n=e.length;r<n;r++){t[r]=clone(e[r])}return t}if(e instanceof Map){const t=new Map;for(const[r,n]of e.entries()){t.set(r,clone(n))}return t}if(typeof e==="object"){const t=Object.create(null);Object.entries(e).forEach((([e,r])=>{t[e]=clone(r)}));return t}throw new Error("Unable to clone obj! Its type isn't supported.")};const mapMap=(e,t)=>{const r=new Map;for(const[n,a]of e.entries()){r.set(n,t(a))}return r};const arrayOfRegExMatches=(e,t)=>{if(e.constructor!==RegExp){throw new Error("not RegExp")}const r=[];let n=null;if(e.global){while(n=e.exec(t)){r.push({value:n[0],index:n.index,length:n[0].length})}}else if(n=e.exec(t)){r.push({value:n[0],index:n.index,length:n[0].length})}return r};const textAccent={"̀":"`","́":"'","̂":"^","̃":"~","̄":"=","̅":"=","̆":"u","̇":".","̈":'"',"̊":"r","̌":"v"};const escapeRegEx=/[#$&%_~^]/g;const accentRegEx=/[\u0300-\u0308\u030A\u030c]/g;const addTextEscapes=e=>{if(e.length>1){let t=arrayOfRegExMatches(escapeRegEx,e);let r=t.length;if(r>0){for(let n=r-1;n>=0;n--){const r=t[n];const a=r.index;if(r.value==="~"){e=e.slice(0,a)+"\\textasciitilde "+e.slice(a+1)}else if(r.value==="^"){e=e.slice(0,a)+"\\textasciicircum "+e.slice(a+1)}else if(a===0){e="\\"+e}else{const t=e.substr(a-1,1);if(t!=="\\"){e=e.slice(0,a)+"\\"+e.slice(a)}}}}t=arrayOfRegExMatches(accentRegEx,e);r=t.length;if(r>0){for(let n=r-1;n>=0;n--){const r=t[n];const a=r.index;if(a>0){e=e.slice(0,a-1)+"\\"+textAccent[r.value]+e.slice(a-1,a)+e.slice(a+1)}}}}return e};const numeralFromSuperScript=e=>{switch(e){case"²":return"2";case"³":return"3";case"⁻":return"-";case"¹":return"1";case"⁰":return"0";default:return String.fromCharCode(e.charCodeAt(0)-8256)}};const leadingSpaceRegEx=/^[ \r\n\f]+/;const trailingSpaceRegEx=/[ \r\n\f]+$/;const tablessTrim=e=>e.replace(leadingSpaceRegEx,"").replace(trailingSpaceRegEx,"");const midDotRegEx=/^(\*|·|\.|-[A-Za-z])/;const exponentRegEx=/[⁰¹²³\u2074-\u2079⁻]/;const unitTeXFromString=e=>{let t=" {\\text{";let r=false;for(let n=0;n<e.length;n++){let a=e.charAt(n);if(exponentRegEx.test(a)){a=numeralFromSuperScript(a)}if(midDotRegEx.test(e.slice(n))){t+="}\\mkern1mu{\\cdot}\\mkern1mu\\text{"}else if(/[0-9-]/.test(a)){a=a==="-"?"\\text{-}":a;if(r){t+=a}else{t+="}^{"+a;r=true}}else if(a==="^"){t+="}^{";r=true}else if(r){t+="}\\text{"+a;r=false}else if(a==="$"){t+="\\$"}else{t+=a}}return t+"}}"};const errorMessages=Object.freeze({EN:{ERROR:"Error. Hurmet does not understand the expression.",ERR_FUNC:"@",BAD_FUN_NM:'Error. Unrecognized function name "@".',DIV:"Error. Divide by zero.",NAN:"Error. Value of $@$ is not a numeric.",NANARG:"Error. Argument to function $@$ must be numeric.",NULL:"Error. Missing value for $@$.",V_NAME:"Error. Variable $@$ not found.",F_NAME:"Error. Function @ not found.",NAN_OP:"Error. Arithmetic operation on a non-numeric value.",UNIT_ADD:"Error. Adding incompatible units.",UNIT_COMP:"Error. Comparing incompatible units.",UNIT_APEND:"Error. Apppending incompatible units.",UNIT_RES:"Error. Calculated units are not compatible with the desired result unit:",UNIT_MISS:"Error. No units specified for the result.",UNIT_IN:"Error. Incorrect unit for input to function @.",UNIT_ARG:"Error. Unit mis-match between arguments to function @.",UNIT_COL:"Error. Data frame column @ has no units. Do not make a unit-aware call to it.",UNIT_AWARE:"Error. Calculation must be unit-aware in order to apply unit @",DATE:"Error. Date required.",LOGIC:"Error. Logic operation “@” on a non-boolean value.",FACT:"Error. Factorial may be applied only to a unit-less non-negative integer.",PER:"Error. Percentage may be applied only to a unit-less number.",BINOM:"Error. Binomial may be applied only to unit-less numbers.",LOGF:"Error. Argument to log!() must be a non-negative integer.","Γ0":"Error. Γ(0) is infinite.","ΓPOLE":"Error. Γ() of a negative integer is infinite.","LOGΓ":"Error. Argument to Hurmet logΓ() must be a positive number.",TAN90:"Error. tan($@$) is infinite.",ATRIG:"Error. Input to @ must be between -1 and 1.",COT:"Error. Input to @ must not be zero.",ASEC:"Error. Absolute value of input to @ must be ≥ 1",STRING:"Error. Text operand required.",NUMARGS:"Error. Wrong number of arguments passed to function @.",NONSQUARE:"Error. Only a square matrix can be inverted.",SINGULAR:"Error. Matrix is singular and cannot be inverted.",BAD_ROW_NAME:"Error. Data frame does not have a row named @.",BAD_COLUMN_NAME:"Error. Data frame does not have a column named @.",SINGLE_ARG:"Error. A call to a data frame must have two arguments in the brackets.",BAD_TYPE:"Error. Unrecognized data type for $@$.",CONCAT:'Error. Cannot add strings. Use "&" if concatenation is desired.',MATRIX_DIV:"Error. Cannot divide one matrix by another.",MATRIX_MOD:"Error. Cannot take the modulo of one matrix by another.",BAD_INDEX:"Error. Index to a matrix must be numeric.",FUNC_LINE:"Error in function @.",BAD_BREAK:"Error in function @. break called outside of a loop",FETCH:"Error. A fetch() function must be the only item in its expression.",STR_INDEX:"Error. The index to text may be only a real number or a range.",UNIT_NAME:"Error. Unrecognized unit name: @",INT_NUM:'Error. Number display type "@" must be an integer.',TWO_MAPS:"Error. Both operands are maps. Hurmet accepts only one.",BAD_FORMAT:"Error. Invalid format @.",BAD_PREC:"Error. Significant digit specification must be between 1 and 15.",ZERO_ROOT:"Error. Zeroth root.",BAD_ROOT:"Error while taking root.",UNREAL:'Error. Argument to function "@" must be a real number.',BIGINDEX:"Error. Index too large.",MIS_ELNUM:"Error. Mis-matched number of elements",CROSS:"Error. Cross product can be performed only on three-vectors. Use * if you want element-wise multiplication.",QUANT_NUM:"Error. A Quantity must include a numeric magnitude.",CURRENCY:"Error. Currency exchange rates must be defined before using a monetary unit.",DF_UNIT:'Invalid unit "&" in data frame.',FORM_FRAC:"Error. Hurmet can do binary or hexadecimal format only on integers.",PRIVATE:"Error. Function @ is not private.",GCD:"Error. The gcd function can take only integers as arguments.",BAD_KEY:'Error. Data structure does not contain key "@".',NUM_KEY:"Error. A key must be a string, not a number.",IMMUT_UDF:`Error. Variable @ already contains a user-defined function.\n                Hurmet cannot assign a different value to @.`,NO_PROP:`Error. Cannot call a property from variable "@" because it has no properties.`,NOT_ARRAY:`Error. Cannot check if an element is in the second operand because\n the second operand is not an array.`,MULT_MIS:"Error. Mismatch in number of multiple assignment.",COUNT:"Error. The count() function works only on strings.",NOT_VECTOR:"Error. Arguments to dataframe() must be vectors.",BAD_DISPLAY:"Error. Result may not be suppressed. Use '?' display selector.",NA_COMPL_OP:'Error. "@" cannot be performed on a complex number.',NA_REAL:'Error. "@" can be performed only a complex number.',ORIGIN:'Error. Function "@" is undefined at the origin.',LOG_ZERO:"Error. Logarithm of zero is negative infinity.",END_MISS:"Error. Too few END statments in function @.",BAD_CONCAT:"Error. Unmatched dimensions.",BAD_KEYSTR:"Error. The key in a key:value pair must be a string.",BAD_APPEND:"Error. Can not append a @",MAP_APPEND:"Error. Can not append. Wrong data type.",BAD_J:"Error. Do not use j for a loop index. In Hurmet, j = √(-1)"}});const errorOprnd=(e,t)=>{if(e===""){return{value:"Error",unit:null,dtype:dt.ERROR}}let r=errorMessages["EN"][e];if(r===undefined){return{value:"Error",unit:null,dtype:dt.ERROR}}if(t){t=addTextEscapes(t);r=r.replace(/@/g,t)}else{r=r.replace(/@ ?/,"")}return{value:r,unit:null,dtype:dt.ERROR}};const iZero=BigInt(0);const iOne=BigInt(1);const iTwo=BigInt(2);const zero=[iZero,iOne];const one=[iOne,iOne];const two=[iTwo,iOne];const pi$1=[BigInt(3141592653589793e34),BigInt(1e49)];const e$1=[BigInt(2718281828459045e42),BigInt(1e57)];const hbar=[BigInt(1054571817),BigInt(1e43)];const intAbs=e=>e>=iZero?e:BigInt(-1)*e;const numberPattern="^(-?)(?:(0x[0-9A-Fa-f]+)|([0-9]+)(?: ([0-9]+)\\/([0-9]+)|(?:\\.([0-9]+))?(?:e([+-]?[0-9]+)|(%))?))";const numberRegEx=new RegExp(numberPattern);const fromNumber=e=>{if(Number.isInteger(e)){return[BigInt(e),iOne]}else{const t=e.toExponential().match(numberRegEx);const r=t[6]||"";const n=BigInt(t[7])-BigInt(r.length);if(n<0){return[BigInt(t[1]+t[3]+r),BigInt(10)**-n]}else if(t[5]){const e=BigInt(t[5]);return normalize([BigInt(t[1]+t[3])*e+BigInt(t[4])])}else{return normalize([BigInt(t[1]+t[3]+r)*BigInt(10)**n,iOne])}}};const fromString=e=>{const t=e.match(numberRegEx);let r;if(t[5]){const e=BigInt(t[5]);const n=BigInt(t[1]+t[3])*e+BigInt(t[4]);r=normalize([n,e])}else if(t[2]){r=[BigInt(t[2]),iOne]}else{const e=t[6]||"";const n=BigInt(t[3]+e);const a=t[7]?BigInt(t[7])-BigInt(e.length):t[8]?BigInt(-2)-BigInt(e.length):BigInt(0)-BigInt(e.length);r=a<0?[n,BigInt(10)**-a]:normalize([n*BigInt(10)**a,iOne])}if(t[1]){r=negate(r)}return r};const gcdi=(e,t)=>{e=intAbs(e);t=intAbs(t);while(t!==iZero){const r=e%t;e=t;t=r}return e};const gcd=(e,t)=>{if(!Rnl.isInteger(e)||!Rnl.isInteger(t)){return errorOprnd("GCD")}return[gcdi(e[0]/e[1],t[0]/t[1]),iOne]};const normalize=e=>{const[t,r]=e;if(r===iOne){return e}const n=gcdi(t,r);return n===iOne?e:[t/n,r/n]};const isRational=e=>Array.isArray(e)&&e.length===2&&typeof e[0]==="bigint"&&typeof e[1]==="bigint";const isInteger=e=>e[1]===iOne||e[0]%e[1]===iZero;const isZero=e=>e[0]===iZero;const isNegative=e=>e[0]<iZero;const isPositive=e=>e[0]>iZero;const negate=e=>[BigInt(-1)*e[0],e[1]];const abs=e=>{const t=e[0]<iZero?BigInt(-1)*e[0]:e[0];return[t,e[1]]};const increment=e=>[e[0]+e[1],e[1]];const decrement=e=>[e[0]-e[1],e[1]];const floor=e=>{if(e[0]%e[1]===iZero){return[e[0]/e[1],iOne]}return e[0]>=iZero?[e[0]/e[1],iOne]:[e[0]/e[1]-iOne,iOne]};const ceil=e=>{if(e[0]%e[1]===iZero){return[e[0]/e[1],iOne]}return e[0]>=iZero?[e[0]/e[1]+iOne,iOne]:[e[0]/e[1],iOne]};const add=(e,t)=>e[1]===t[1]?[e[0]+t[0],e[1]]:normalize([e[0]*t[1]+t[0]*e[1],e[1]*t[1]]);const subtract=(e,t)=>e[1]===t[1]?[e[0]-t[0],e[1]]:normalize([e[0]*t[1]-t[0]*e[1],e[1]*t[1]]);const multiply=(e,t)=>[e[0]*t[0],e[1]*t[1]];const divide=(e,t)=>{let r=e[0]*t[1];let n=e[1]*t[0];if(n<0){r*=BigInt(-1);n*=BigInt(-1)}return[r,n]};const power=(e,t)=>{if(t[0]===iZero){return[iOne,iOne]}else{t=normalize(t);let r;try{r=isInteger(t)&&isNegative(t)?[e[1]**(BigInt(-1)*t[0]),e[0]**(BigInt(-1)*t[0])]:isInteger(t)?[e[0]**t[0],e[1]**t[0]]:isPositive(e)||greaterThan(t,one)||lessThan(t,negate(one))?fromNumber(toNumber(e)**toNumber(t)):areEqual(modulo(t,two),one)?fromNumber(-1*(-1*toNumber(e))**toNumber(t)):errorOprnd("BAD_ROOT")}catch(n){r=fromNumber(toNumber(e)**toNumber(t))}return r}};const sqrt=e=>fromNumber(Math.sqrt(toNumber(e)));const exp=e=>fromNumber(Math.exp(toNumber(e)));const reciprocal=e=>{let t=e[1];let r=e[0];if(r<0){t*=BigInt(-1);r*=BigInt(-1)}return[t,r]};const hypot=(e,t)=>{const r=abs(e);const n=abs(t);const a=max(r,n);const o=min(r,n);const i=Rnl.divide(o,a);return Rnl.multiply(a,sqrt(Rnl.increment(Rnl.multiply(i,i))))};const modulo=(e,t)=>{const r=divide(normalize(e),normalize(t));return[intAbs(r[0]%r[1]),iOne]};const areEqual=(e,t)=>e[1]===t[1]?e[0]===t[0]:e[0]*t[1]===e[1]*t[0];const lessThan=(e,t)=>isNegative(e)!==isNegative(t)?isNegative(e):isNegative(subtract(e,t));const greaterThan=(e,t)=>isPositive(e)!==isPositive(t)?isPositive(e):isPositive(subtract(e,t));const lessThanOrEqualTo=(e,t)=>lessThan(e,t)||areEqual(e,t);const greaterThanOrEqualTo=(e,t)=>greaterThan(e,t)||areEqual(e,t);const max=(e,t)=>greaterThan(e,t)?[e[0],e[1]]:[t[0],t[1]];const min=(e,t)=>lessThan(e,t)?[e[0],e[1]]:[t[0],t[1]];const cos=e=>areEqual(e,divide(pi$1,two))?zero:fromNumber(Math.cos(toNumber(e)));const sin=e=>fromNumber(Math.sin(toNumber(e)));const tan=e=>{if(areEqual(e,divide(pi$1,two))){return errorOprnd("TAN90","π/2")}return fromNumber(Math.tan(toNumber(e)))};const cosh=e=>{const t=toNumber(e);return fromNumber((Math.exp(t)+Math.exp(-t))/2)};const sinh=e=>{const t=toNumber(e);return fromNumber((Math.exp(t)-Math.exp(-t))/2)};const tanh=e=>{const t=toNumber(e);return fromNumber((Math.exp(t)-Math.exp(-t))/(Math.exp(t)+Math.exp(-t)))};const toNumber=e=>{const t=Number(e[0])/Number(e[1]);if(!isNaN(t)&&t!==Infinity){return t}const r=toStringSignificant(e,20);return Number(r)};const toStringSignificant=(e,t)=>{if(isZero(e)){return"0"}else{const r=intAbs(e[0]/e[1]);if(r>0){return toString(e,t-String(r).length)}else{const r=String(intAbs(e[1]/e[0])).length;return toString(e,r+t-1)}}};const toString=(e,t)=>{if(isZero(e)){return"0"}else if(t<0){const r=-t;const n=toString(divide(e,[BigInt(10)**BigInt(r),iOne]),0);return n+"0".repeat(r)}else{const[r,n]=normalize(e);const a=r/n;let o=r%n;let i=String(a);if(o===iZero&&t>0){i+="."+"0".repeat(t)}else if(o!==iZero){o=intAbs(o);const e=o*BigInt(10)**BigInt(t);let r=e/n;const l=e%n;if(t===0){return intAbs(iTwo*l)>=intAbs(n)?String(a+iOne):i}if(intAbs(iTwo*l)>=intAbs(n)){r=r+iOne}i+="."+String(r).padStart(t,"0")}return i}};const preComputedFactorials=["1","1","2","6","24","120","720","5040","40320","362880","3628800","39916800","479001600","6227020800","87178291200","1307674368000","20922789888000","355687428096000","6402373705728000","121645100408832000","2432902008176640000","51090942171709440000","1124000727777607680000","25852016738884976640000","620448401733239439360000","15511210043330985984000000","403291461126605635584000000","10888869450418352160768000000","304888344611713860501504000000","8841761993739701954543616000000","265252859812191058636308480000000","8222838654177922817725562880000000","263130836933693530167218012160000000","8683317618811886495518194401280000000","295232799039604140847618609643520000000","10333147966386144929666651337523200000000","371993326789901217467999448150835200000000","13763753091226345046315979581580902400000000","523022617466601111760007224100074291200000000","20397882081197443358640281739902897356800000000","815915283247897734345611269596115894272000000000","33452526613163807108170062053440751665152000000000","1405006117752879898543142606244511569936384000000000","60415263063373835637355132068513997507264512000000000","2658271574788448768043625811014615890319638528000000000","119622220865480194561963161495657715064383733760000000000","5502622159812088949850305428800254892961651752960000000000","258623241511168180642964355153611979969197632389120000000000","12413915592536072670862289047373375038521486354677760000000000","608281864034267560872252163321295376887552831379210240000000000","30414093201713378043612608166064768844377641568960512000000000000","1551118753287382280224243016469303211063259720016986112000000000000","80658175170943878571660636856403766975289505440883277824000000000000","4274883284060025564298013753389399649690343788366813724672000000000000","230843697339241380472092742683027581083278564571807941132288000000000000","12696403353658275925965100847566516959580321051449436762275840000000000000","710998587804863451854045647463724949736497978881168458687447040000000000000","40526919504877216755680601905432322134980384796226602145184481280000000000000","2350561331282878571829474910515074683828862318181142924420699914240000000000000","138683118545689835737939019720389406345902876772687432540821294940160000000000000","8320987112741390144276341183223364380754172606361245952449277696409600000000000000","507580213877224798800856812176625227226004528988036003099405939480985600000000000000","31469973260387937525653122354950764088012280797258232192163168247821107200000000000000","1982608315404440064116146708361898137544773690227268628106279599612729753600000000000000","126886932185884164103433389335161480802865516174545192198801894375214704230400000000000000","8247650592082470666723170306785496252186258551345437492922123134388955774976000000000000000","544344939077443064003729240247842752644293064388798874532860126869671081148416000000000000000","36471110918188685288249859096605464427167635314049524593701628500267962436943872000000000000000","2480035542436830599600990418569171581047399201355367672371710738018221445712183296000000000000000","171122452428141311372468338881272839092270544893520369393648040923257279754140647424000000000000000","11978571669969891796072783721689098736458938142546425857555362864628009582789845319680000000000000000","850478588567862317521167644239926010288584608120796235886430763388588680378079017697280000000000000000","61234458376886086861524070385274672740778091784697328983823014963978384987221689274204160000000000000000","4470115461512684340891257138125051110076800700282905015819080092370422104067183317016903680000000000000000","330788544151938641225953028221253782145683251820934971170611926835411235700971565459250872320000000000000000","24809140811395398091946477116594033660926243886570122837795894512655842677572867409443815424000000000000000000","1885494701666050254987932260861146558230394535379329335672487982961844043495537923117729972224000000000000000000","145183092028285869634070784086308284983740379224208358846781574688061991349156420080065207861248000000000000000000","11324281178206297831457521158732046228731749579488251990048962825668835325234200766245086213177344000000000000000000","894618213078297528685144171539831652069808216779571907213868063227837990693501860533361810841010176000000000000000000","71569457046263802294811533723186532165584657342365752577109445058227039255480148842668944867280814080000000000000000000","5797126020747367985879734231578109105412357244731625958745865049716390179693892056256184534249745940480000000000000000000","475364333701284174842138206989404946643813294067993328617160934076743994734899148613007131808479167119360000000000000000000","39455239697206586511897471180120610571436503407643446275224357528369751562996629334879591940103770870906880000000000000000000","3314240134565353266999387579130131288000666286242049487118846032383059131291716864129885722968716753156177920000000000000000000","281710411438055027694947944226061159480056634330574206405101912752560026159795933451040286452340924018275123200000000000000000000","24227095383672732381765523203441259715284870552429381750838764496720162249742450276789464634901319465571660595200000000000000000000","2107757298379527717213600518699389595229783738061356212322972511214654115727593174080683423236414793504734471782400000000000000000000","185482642257398439114796845645546284380220968949399346684421580986889562184028199319100141244804501828416633516851200000000000000000000","16507955160908461081216919262453619309839666236496541854913520707833171034378509739399912570787600662729080382999756800000000000000000000","1485715964481761497309522733620825737885569961284688766942216863704985393094065876545992131370884059645617234469978112000000000000000000000","135200152767840296255166568759495142147586866476906677791741734597153670771559994765685283954750449427751168336768008192000000000000000000000","12438414054641307255475324325873553077577991715875414356840239582938137710983519518443046123837041347353107486982656753664000000000000000000000","1156772507081641574759205162306240436214753229576413535186142281213246807121467315215203289516844845303838996289387078090752000000000000000000000","108736615665674308027365285256786601004186803580182872307497374434045199869417927630229109214583415458560865651202385340530688000000000000000000000","10329978488239059262599702099394727095397746340117372869212250571234293987594703124871765375385424468563282236864226607350415360000000000000000000000","991677934870949689209571401541893801158183648651267795444376054838492222809091499987689476037000748982075094738965754305639874560000000000000000000000","96192759682482119853328425949563698712343813919172976158104477319333745612481875498805879175589072651261284189679678167647067832320000000000000000000000","9426890448883247745626185743057242473809693764078951663494238777294707070023223798882976159207729119823605850588608460429412647567360000000000000000000000","933262154439441526816992388562667004907159682643816214685929638952175999932299156089414639761565182862536979208272237582511852109168640000000000000000000000","93326215443944152681699238856266700490715968264381621468592963895217599993229915608941463976156518286253697920827223758251185210916864000000000000000000000000"];const factorial=e=>{if(lessThan(e,[BigInt(101),iOne])){return fromString(preComputedFactorials[toNumber(e)])}else{return lanczos(increment(e))}};const lanczos=e=>{const t=subtract(e,one);const r=multiply(two,sqrt(divide(e$1,pi$1)));const n=power(divide(add(t,fromNumber(11.400511)),e$1),add(t,[iOne,iTwo]));const a=["2.48574089138753565546e-5","1.05142378581721974210","-3.45687097222016235469","4.51227709466894823700","-2.98285225323576655721","1.05639711577126713077","-0.195428773191645869583","0.0170970543404441224307","-0.000571926117404305781283","0.00000463399473359905636708","-0.00000000271994908488607703910"];let o=fromString(a[0]);for(let e=1;e<=10;e++){o=add(o,divide(fromString(a[e]),add(t,fromNumber(e))))}return multiply(multiply(r,n),o)};const Rnl=Object.freeze({fromNumber:fromNumber,fromString:fromString,normalize:normalize,isRational:isRational,isInteger:isInteger,isZero:isZero,isNegative:isNegative,isPositive:isPositive,negate:negate,abs:abs,increment:increment,decrement:decrement,exp:exp,floor:floor,ceil:ceil,add:add,subtract:subtract,multiply:multiply,divide:divide,reciprocal:reciprocal,gcd:gcd,hbar:hbar,modulo:modulo,hypot:hypot,one:one,pi:pi$1,power:power,sqrt:sqrt,two:two,cos:cos,sin:sin,tan:tan,cosh:cosh,sinh:sinh,tanh:tanh,areEqual:areEqual,lessThan:lessThan,greaterThan:greaterThan,lessThanOrEqualTo:lessThanOrEqualTo,greaterThanOrEqualTo:greaterThanOrEqualTo,factorial:factorial,lanczos:lanczos,max:max,min:min,numberPattern:numberPattern,toNumber:toNumber,toString:toString,toStringSignificant:toStringSignificant,zero:zero});const siPrefixes=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"];const groupByThreeRegEx=/\B(?=(\d{3})+$)/g;const groupByFourRegEx=/\B(?=(\d{4})+$)/g;const groupByLakhCroreRegEx=/(\d)(?=(\d\d)+\d$)/g;const formatRegEx=/^([beEfhkmprsStx%])?(-?[\d]+)?([j∠°])?$/;const superscript$1=e=>{let t="";for(let r=0;r<e.length;r++){const n=e.charCodeAt(r);t+=n===49?"¹":n===50?"²":n===51?"³":String.fromCharCode(n+8256)}return t};const subscript=e=>{let t="";for(let r=0;r<e.length;r++){t+=String.fromCharCode(e.charCodeAt(r)+8272)}return t};const texFromMixedFraction=e=>(e[1]?"-":"")+e[3]+"\\,\\class{special-fraction}{\\text{"+superscript$1(e[4])+"⁄"+subscript(e[5])+"}}";const intAbs$1=e=>e>=BigInt(0)?e:BigInt(-1)*e;const roundedString=(e,t)=>{const r=t.numDigits;switch(t.ftype){case"h":{const t=String(Rnl.toString(e,0));if(t.replace("-","").length>=r){return t}if(r<1||r>15){return errorOprnd("BAD_PREC")}return Rnl.toNumber(e).toPrecision(r)}case"f":case"%":return Rnl.toString(e,r);case"r":case"p":{if(r<1||r>15){return errorOprnd("BAD_PREC")}const t=Rnl.toNumber(e).toPrecision(r);return t.indexOf("e")>-1?Number(t).toPrecision():t}case"s":case"S":case"e":case"E":case"n":case"N":case"k":if(r<1||r>15){return errorOprnd("BAD_PREC")}return Rnl.toNumber(e).toExponential(r-1).replace("+","");default:{e=Rnl.normalize(e);const r=Rnl.isNegative(e)?"-":"";const n=intAbs$1(e[0]);const a=e[1];switch(t.ftype){case"m":{const e=String(n/a);const t=n%a;return r+e+" "+superscript$1(t)+"⁄"+subscript(a)}case"t":return r+String(n/a);case"b":case"x":case"X":if(a!==BigInt(1)){return errorOprnd("INT_NUM",t.ftype)}if(n<=Number.MAX_SAFE_INTEGER){return t.ftype==="b"?r+"0b"+Number(n).toString(2):t.ftype==="x"?r+"0x"+Number(n).toString(16):r+"0x"+Number(n).toString(16).toUpperCase()}else{return""}}}}};const formattedInteger=(e,t)=>{const r=t.charAt(1);if(r==="0"){return e}else if(t==="1,00,000."){return e.replace(groupByLakhCroreRegEx,"$1{,}")}else if(t==="1,0000,0000."){return e.replace(groupByFourRegEx,"$1{,}")}else{return e.replace(groupByThreeRegEx,r===","?"{,}":r===" "?"\\:":r==="’"?"’":".")}};const formattedDecimal=(e,t,r)=>{const n=e.indexOf(".");if(n===-1){return formattedInteger(e,t)}else{const a=e.slice(0,n);const o=t.slice(-1);let i=(o==="."?".":"{,}")+e.slice(n+1);if(r){i=i.replace(/(\.|{,})?0+$/,"")}return formattedInteger(a,t)+i}};const parseFormatSpec=e=>{const t=formatRegEx.exec(e);if(!t){const t=errorOprnd("BAD_FORMAT",e).value;return[e,undefined,dt.ERROR,"\\text{"+t+"}"]}let r=t[1]||"h";let n=Number(t[2]||"15");const a=t[3]||"";switch(r){case"b":case"x":case"X":return[e,undefined,dt.STRING,"\\text{"+r+a+"}"];case"t":n=0;break;case"f":case"%":break;default:if(n<1||n>15){const t="\\text{"+errorOprnd("BAD_PREC").value+"}";return[e,undefined,dt.ERROR,t]}}if(r==="%"){r="\\%"}return[e,undefined,dt.STRING,"\\text{"+r+String(n)+a+"}"]};const format=(e,t="h3",r="1,000,000.")=>{if(Rnl.isZero(e)){return"0"}const n={ftype:t.charAt(0)};if(/[j∠°]$/.test(t)){t=t.slice(0,-1)}if(t.length>1){n.numDigits=Number(t.slice(1))}if(n.ftype==="%"||n.ftype==="p"){e[0]=e[0]*BigInt(100)}if((n.ftype==="b"||n.ftype==="x")&&!Rnl.isInteger(e)){return errorOprnd("FORM_FRAC")}const a=roundedString(e,n);switch(n.ftype){case"f":case"r":case"h":return formattedDecimal(a,r,n.ftype==="h");case"t":return formattedInteger(a,r);case"%":case"p":return formattedDecimal(a,r)+"\\%";case"m":case"b":case"x":case"X":return a;default:{const e=a.indexOf("e");let t=a.slice(0,e);if(r.slice(-1)===","){t=t.replace(".","{,}")}switch(n.ftype){case"e":case"E":{const r=t+"\\text{"+n.ftype;if(a.charAt(e+1)==="-"){return r+"-}"+a.slice(e+2)}else{return r+"}"+a.slice(e+1)}}case"s":case"S":case"n":case"N":{const r=n.ftype==="S"?"×":"\\mkern2mu{\\cdot}\\mkern1mu";return t+r+"10^{"+a.slice(e+1)+"}"}case"k":{const r=Number(a.slice(e+1));const n=r/3;const o=n>=0?Math.floor(n):Math.ceil(n);const i=r%3;if(i!==0){t=String(Number(t)*Math.pow(10,i))}return t+siPrefixes[8+o]}}}}};const unitsAreCompatible=(e,t)=>{if(e==null&&t==null){return true}if(e==null||t==null){return false}if(!Array.isArray(e)||!Array.isArray(t)){return false}if(e.length!==t.length){return false}for(let r=0;r<e.length;++r){if(e[r]!==t[r]){return false}}return true};const prefixFactor=JSON.parse('{"Y":1e24,"yotta":1e24,"Z":1e21,"zetta":1e21,"E":1e18,"exa":1e18,"P":1e15,"peta":1e15,"T":1e12,"tera":1e12,"G":1e9,"giga":1e9,"M":1e6,"mega":1e6,"k":1000,"kilo":1000,"h":100,"hecto":100,"deka":10,"d":0.1,"deci":0.1,"c":0.01,"centi":0.01,"m":0.001,"milli":0.001,"µ":1e-6,"µ":1e-6,"micro":1e-6,"n":1e-9,"nano":1e-9,"p":1e-12,"pico":1e-12,"f":1e-15,"femto":1e-15,"a":1e-18,"atto":1e-18,"z":1e-21,"zepto":1e-21,"y":1e-24,"yocto":1e-24,"Ki":1024,"kibi":1024,"Mi":1048576,"mebi":1048576,"Gi":1073741824,"gibi":1073741824,"Ti":1099511627776,"tebi":1099511627776}');const unitTable=Object.freeze(JSON.parse(`{\n"#":["0.45359237", "1","0","0",[0,1,0,0,0,0,0,0]],\n"$":["1","1","0","USD",[0,0,0,0,0,0,0,1]],\n"£":["1","1","0","GBP",[0,0,0,0,0,0,0,1]],\n"'":["0.3048","1","0","0",[1,0,0,0,0,0,0,0]],\n"A":["1","1","0","siSymbol",[0,0,0,1,0,0,0,0]],\n"AUD":["1.5446","1","0","AUD",[0,0,0,0,0,0,0,1]],\n"Adobe point":["0.0254","72","0","0",[1,0,0,0,0,0,0,0]],\n"At":["1","1","0","siSymbol",[0,0,0,0,1,0,1,0]],\n"Australian dollar":["1","1","0","AUD",[0,0,0,0,0,0,0,1]],\n"BRL":["5.6475","1","0","BRL",[0,0,0,0,0,0,0,1]],\n"BTU":["1055.056","1","0","0",[2,1,-2,0,0,0,0,0]],\n"BThU":["1055.056","1","0","0",[2,1,-2,0,0,0,0,0]],\n"Bq":["1","1","0","siSymbol",[0,0,-1,0,0,0,0,0]],\n"Brazilian Real":["1","1","0","BRL",[0,0,0,0,0,0,0,1]],\n"British Pound":["1","1","0","GBP",[0,0,0,0,0,0,0,1]],\n"Btu":["1055.056","1","0","0",[2,1,-2,0,0,0,0,0]],\n"C":["1","1","0","siSymbol",[0,0,1,1,0,0,0,0]],\n"C$":["1","1","0","CAD",[0,0,0,0,0,0,0,1]],\n"CAD":["1.4299","1","0","CAD",[0,0,0,0,0,0,0,1]],\n"CCF":["1","1","0","0",[3,0,0,0,0,0,0,0]],\n"CHF":["0.9865","1","0","CHF",[0,0,0,0,0,0,0,1]],\n"CNY":["7.2546","1","0","CNY",[0,0,0,0,0,0,0,1]],\n"CY":["0.764554857984","1","0","0",[3,0,0,0,0,0,0,0]],\n"Calorie":["4186.8","1","0","0",[2,1,-2,0,0,0,0,0]],\n"Canadian dollar":["1","1","0","CAD",[0,0,0,0,0,0,0,1]],\n"Celsius":["1","1","273.15","0",[0,0,0,0,1,0,0,0]],\n"Chinese Yuan":["1","1","0","CNY",[0,0,0,0,0,0,0,1]],\n"Ci":["37000000000","1","0","siSymbol",[0,0,-1,0,0,0,0,0]],\n"Ckm":["100000","1","0","siSymbol",[1,0,0,0,0,0,0,0]],\n"Da":["1.66053872e-24","1","0","siSymbol",[0,1,0,0,0,0,0,0]],\n"Dalton":["1.66053872e-24","1","0","0",[0,1,0,0,0,0,0,0]],\n"Didot point":["15.625","41559","0","0",[1,0,0,0,0,0,0,0]],\n"EB":["9223372036854770000","1","0","0",[0,0,0,0,0,1,0,0]],\n"EMU":["0.01","360000","0","0",[1,0,0,0,0,0,0,0]],\n"EUR":["1","1","0","EUR",[0,0,0,0,0,0,0,1]],\n"EiB":["9223372036854770000","1","0","0",[0,0,0,0,0,1,0,0]],\n"Euro":["1","1","0","EUR",[0,0,0,0,0,0,0,1]],\n"F":["1","1","0","siSymbol",[-2,-1,4,2,0,0,0,0]],\n"Fahrenheit":["5","9","459","0",[0,0,0,0,1,0,0,0]],\n"G":["0.0001","1","0","siSymbol",[-2,-2,-2,-1,0,0,0,0]],\n"GB":["8589934592","1","0","0",[0,0,0,0,0,1,0,0]],\n"GBP":["0.88048","1","0","GBP",[0,0,0,0,0,0,0,1]],\n"Gal":["0.01","1","0","siSymbol",[1,0,-2,0,0,0,0,0]],\n"Gi":["10","12.5663706143592","0","siWord",[0,0,0,0,1,0,1,0]],\n"GiB":["8589934592","1","0","0",[0,0,0,0,0,1,0,0]],\n"Gregorian year":["31556952","1","0","0",[0,0,1,0,0,0,0,0]],\n"Gy":["1","1","0","siSymbol",[2,0,-2,0,0,0,0,0]],\n"H":["1","1","0","siSymbol",[2,1,-2,-2,0,0,0,0]],\n"HK$":["1","1","0","HKD",[0,0,0,0,0,0,0,1]],\n"HKD":["8.3508","1","0","HKD",[0,0,0,0,0,0,0,1]],\n"HP":["745.69987158227","1","0","0",[2,1,-3,0,0,0,0,0]],\n"Hong Kong dollar":["1","1","0","HKD",[0,0,0,0,0,0,0,1]],\n"Hz":["1","1","0","siSymbol",[0,0,-1,0,0,0,0,0]],\n"ILS":["3.7347","1","0","ILS",[0,0,0,0,0,0,0,1]],\n"INR":["88.0780","1","0","INR",[0,0,0,0,0,0,0,1]],\n"Indian Rupee":["1","1","0","INR",[0,0,0,0,0,0,0,1]],\n"Israeli New Shekel":["1","1","0","ILS",[0,0,0,0,0,0,0,1]],\n"J":["1","1","0","siSymbol",[2,1,-2,0,0,0,0,0]],\n"JPY":["141.35","1","0","JPY",[0,0,0,0,0,0,0,1]],\n"Japanese Yen":["1","1","0","JPY",[0,0,0,0,0,0,0,1]],\n"Joule":["1","1","0","0",[2,1,-2,0,0,0,0,0]],\n"Julian year":["31557600","1","0","0",[0,0,1,0,0,0,0,0]],\n"Jy":["1e-26","1","0","siSymbol",[0,1,-2,0,0,0,0,0]],\n"K":["1","1","0","0",[0,0,0,0,1,0,0,0]],\n"KiB":["8192","1","0","0",[0,0,0,0,0,1,0,0]],\n"KRW":["1330.37","1","0","KRW",[0,0,0,0,0,0,0,1]],\n"L":["0.001","1","0","siSymbol",[3,0,0,0,0,0,0,0]],\n"Lego stud":["0.008","1","0","siSymbol",[1,0,0,0,0,0,0,0]],\n"MB":["8388608","1","0","0",[0,0,0,0,0,1,0,0]],\n"MCM":["5.06707479097497e-07","1","0","0",[2,0,0,0,0,0,0,0]],\n"MMBtu":["1055056000","1","0","0",[2,1,-2,0,0,0,0,0]],\n"MMbbl":["158987.294928","1","0","0",[3,0,0,0,0,0,0,0]],\n"MMbblpd":["158987.294928","86400","0","0",[3,0,-1,0,0,0,0,0]],\n"MMscf":["28316.846592","1","0","0",[3,0,0,0,0,0,0,0]],\n"MMscfd":["0.32774128","1","0","0",[3,0,0,0,0,0,0,0]],\n"MT":["1000","1","0","0",[0,1,0,0,0,0,0,0]],\n"MXN":["20.4825","1","0","MXN",[0,0,0,0,0,0,0,1]],\n"Mach":["331.6","1","0","0",[1,0,-1,0,0,0,0,0]],\n"Mbbl":["158.987294928","1","0","0",[3,0,0,0,0,0,0,0]],\n"Mexican Peso":["1","1","0","MXN",[0,0,0,0,0,0,0,1]],\n"MiB":["8388608","1","0","0",[0,0,0,0,0,1,0,0]],\n"Mscfd":["0.00032774128","1","0","0",[3,0,0,0,0,0,0,0]],\n"Mscfh":["0.00786579072","1","0","0",[3,0,0,0,0,0,0,0]],\n"N":["1","1","0","siSymbol",[1,1,-2,0,0,0,0,0]],\n"NM":["1852","1","0","0",[1,0,0,0,0,0,0,0]],\n"PB":["9007199254740990","1","0","0",[0,0,0,0,0,1,0,0]],\n"PS":["735.49875","1","0","0",[2,1,-3,0,0,0,0,0]],\n"Pa":["1","1","0","siSymbol",[-1,1,-2,0,0,0,0,0]],\n"Pascal":["1","1","0","siWord",[-1,1,-2,0,0,0,0,0]],\n"Pferdestärke":["735.49875","1","0","0",[2,1,-3,0,0,0,0,0]],\n"PiB":["9007199254740990","1","0","0",[0,0,0,0,0,1,0,0]],\n"R":["0.000258","1","0","siSymbol",[0,-1,1,1,0,0,0,0]],\n"R$":["1","1","0","BRL",[0,0,0,0,0,0,0,1]],\n"RT":["3516.8532","1","0","0",[2,1,-3,0,0,0,0,0]],\n"RUB":["1","1","0","RUB",[0,0,0,0,0,0,0,1]],\n"S":["1","1","0","siSymbol",[-2,-1,3,2,0,0,0,0]],\n"SF":["0.09290304","1","0","0",[2,0,0,0,0,0,0,0]],\n"SY":["0.83612736","1","0","0",[2,0,0,0,0,0,0,0]],\n"Sv":["1","1","0","siSymbol",[2,0,-2,0,0,0,0,0]],\n"Swiss Franc":["1","1","0","CHF",[0,0,0,0,0,0,0,1]],\n"T":["1","1","0","siSymbol",[-2,-2,-2,-1,0,0,0,0]],\n"TB":["8796093022208","1","0","0",[0,0,0,0,0,1,0,0]],\n"TWD":["1","1","0","TWD",[0,0,0,0,0,0,0,1]],\n"TeX point":["0.0003515","1","0","0",[1,0,0,0,0,0,0,0]],\n"TiB":["8796093022208","1","0","0",[0,0,0,0,0,1,0,0]],\n"US$":["1","1","0","USD",[0,0,0,0,0,0,0,1]],\n"USD":["1.0696","1","0","USD",[0,0,0,0,0,0,0,1]],\n"V":["1","1","0","siSymbol",[2,1,-3,-1,0,0,0,0]],\n"VA":["1","1","0","siSymbol",[2,1,-3,0,0,0,0,0]],\n"W":["1","1","0","siSymbol",[2,1,-3,0,0,0,0,0]],\n"Wb":["1","1","0","siSymbol",[2,1,-2,-1,0,0,0,0]],\n"Wh":["3600","1","0","siSymbol",[2,1,-2,0,0,0,0,0]],\n"Won":["1","1","0","KRW",[0,0,0,0,0,0,0,1]],\n"Yen":["1","1","0","JPY",[0,0,0,0,0,0,0,1]],\n"a":["31556925.9747","1","0","siSymbol",[0,0,1,0,0,0,0,0]],\n"ac":["4046.8564224","1","0","0",[2,0,0,0,0,0,0,0]],\n"acre":["4046.8564224","1","0","0",[2,0,0,0,0,0,0,0]],\n"admiralty mile":["1853.188","1","0","0",[1,0,0,0,0,0,0,0]],\n"af":["1233.48183754752","1","0","0",[3,0,0,0,0,0,0,0]],\n"amp":["1","1","0","0",[0,0,0,1,0,0,0,0]],\n"ampere":["1","1","0","siWord",[0,0,0,1,0,0,0,0]],\n"ampere turn":["1","1","0","siWord",[0,0,0,0,1,0,1,0]],\n"amu":["1.66053872e-24","1","0","0",[0,1,0,0,0,0,0,0]],\n"angstrom":["0.0000000001","1","0","0",[1,0,0,0,0,0,0,0]],\n"angstrom star":["0.00000000010000015","1","0","0",[1,0,0,0,0,0,0,0]],\n"apostilb":["1","3.14159265358979","0","0",[-2,0,0,0,0,0,1,0]],\n"arcminute":["3.14159265358979","10800","0","0",[0,0,0,0,0,0,0,0]],\n"arcsecond":["3.14159265358979","648000","0","0",[0,0,0,0,0,0,0,0]],\n"are":["100","1","0","0",[2,0,0,0,0,0,0,0]],\n"as":["4.3.14159265358979","648000","0","0",[0,0,0,0,0,0,0,0]],\n"asb":["1","3.14159265358979","0","0",[-2,0,0,0,0,0,1,0]],\n"assay ton":["0.0875","3","0","0",[0,1,0,0,0,0,0,0]],\n"astronomical unit":["149597870691","1","0","0",[1,0,0,0,0,0,0,0]],\n"atmosphere":["101325","1","0","siSymbol",[-1,1,-2,0,0,0,0,0]],\n"au":["149597870691","1","0","0",[1,0,0,0,0,0,0,0]],\n"bar":["100000","1","0","siWord",[-1,1,-2,0,0,0,0,0]],\n"barg":["100000","1","0","0",[-1,1,-2,0,0,0,0,0]],\n"barleycorn":["0.0254","3","0","0",[1,0,0,0,0,0,0,0]],\n"barrel":["0.158987294928","1","0","0",[3,0,0,0,0,0,0,0]],\n"barrel bulk":["0.14158423296","1","0","0",[3,0,0,0,0,0,0,0]],\n"basis point":["0.0001","1","0","0",[0,0,0,0,0,0,0,0]],\n"baud":["1","1","0","siSymbol",[0,0,-1,0,0,1,0,0]],\n"bbl":["0.158987294928","1","0","0",[3,0,0,0,0,0,0,0]],\n"becquerel":["1","1","0","siWord",[0,0,-1,0,0,0,0,0]],\n"beer barrel":["0.119240471196","1","0","0",[3,0,0,0,0,0,0,0]],\n"bit":["1","1","0","0",[0,0,0,0,0,1,0,0]],\n"blink":["0.864","1","0","0",[0,0,1,0,0,0,0,0]],\n"bo":["0.158987294928","1","0","0",[3,0,0,0,0,0,0,0]],\n"boe":["6119000000","1","0","0",[2,1,-2,0,0,0,0,0]],\n"boiler horsepower":["9812.5","1","0","0",[2,1,-3,0,0,0,0,0]],\n"bpd":["0.158987294928","86400","0","0",[3,0,-1,0,0,0,0,0]],\n"bph":["0.158987294928","3600","0","0",[3,0,-1,0,0,0,0,0]],\n"breadth":["0.2286","1","0","0",[1,0,0,0,0,0,0,0]],\n"bushel":["0.03523907016688","1","0","0",[3,0,0,0,0,0,0,0]],\n"byte":["8","1","0","0",[0,0,0,0,0,1,0,0]],\n"caballo de vapor":["735.49875","1","0","0",[2,1,-3,0,0,0,0,0]],\n"cal":["4.1868","1","0","0",[2,1,-2,0,0,0,0,0]],\n"calorie":["4.1868","1","0","siWord",[2,1,-2,0,0,0,0,0]],\n"candela":["1","1","0","siWord",[0,0,0,0,0,0,1,0]],\n"candlepower":["1","1","0","siWord",[0,0,0,0,0,0,1,0]],\n"carat":["0.00002","1","0","0",[0,1,0,0,0,0,0,0]],\n"cc":["0.000001","1","0","0",[3,0,0,0,0,0,0,0]],\n"cd":["1","1","0","siSymbol",[0,0,0,0,0,0,1,0]],\n"centipoise":["0.001","1","0","0",[-1,1,-1,0,0,0,0,0]],\n"centistoke":["0.000001","1","0","0",[2,0,-1,0,0,0,0,0]],\n"cfm":["0.0004719474432","1","0","0",[3,0,-1,0,0,0,0,0]],\n"cfs":["0.028316846592","1","0","0",[3,0,-1,0,0,0,0,0]],\n"ch":["735.49875","1","0","0",[2,1,-3,0,0,0,0,0]],\n"chain":["20.116","1","0","0",[1,0,0,0,0,0,0,0]],\n"cheval vapeur":["735.49875","1","0","0",[2,1,-3,0,0,0,0,0]],\n"cmil":["5.06707479097497e-10","1","0","0",[2,0,0,0,0,0,0,0]],\n"cmm":["0.00001","1","0","0",[1,0,0,0,0,0,0,0]],\n"constant":["1","1","0","0",[0,0,0,0,0,0,0,0]],\n"coulomb":["1","1","0","siWord",[0,0,1,1,0,0,0,0]],\n"cp":["1","1","0","siWord",[0,0,0,0,0,0,1,0]],\n"cps":["1","1","0","0",[0,0,-1,0,0,0,0,0]],\n"cu ft":["0.028316846592","1","0","0",[3,0,0,0,0,0,0,0]],\n"cu in":["0.000016387064","1","0","0",[3,0,0,0,0,0,0,0]],\n"cu yd":["0.764554857984","1","0","0",[3,0,0,0,0,0,0,0]],\n"cubic meter":["1","1","0","0",[3,0,0,0,0,0,0,0]],\n"cubic metre":["1","1","0","0",[3,0,0,0,0,0,0,0]],\n"cup":["0.0002365882365","1","0","0",[3,0,0,0,0,0,0,0]],\n"curie":["37000000000","1","0","siWord",[0,0,-1,0,0,0,0,0]],\n"cv":["735.49875","1","0","0",[2,1,-3,0,0,0,0,0]],\n"cy":["0.764554857984","1","0","0",[3,0,0,0,0,0,0,0]],\n"d":["86400","1","0","0",[0,0,1,0,0,0,0,0]],\n"daN":["10","1","0","0",[1,1,-2,0,0,0,0,0]],\n"darcy":["0.0000000000009869233","1","0","0",[2,0,0,0,0,0,0,0]],\n"day":["86400","1","0","0",[0,0,1,0,0,0,0,0]],\n"deg":["3.14159265358979","180","0","0",[0,0,0,0,0,0,0,0]],\n"degree":["3.14159265358979","180","0","0",[0,0,0,0,0,0,0,0]],\n"dekan":["31.4159265358979","180","0","0",[0,0,0,0,0,0,0,0]],\n"diopter":["1","1","0","0",[-1,0,0,0,0,0,0,0]],\n"dioptre":["1","1","0","0",[-1,0,0,0,0,0,0,0]],\n"dollar":["1","1","0","USD",[0,0,0,0,0,0,0,1]],\n"drum":["0.20819764812","1","0","0",[3,0,0,0,0,0,0,0]],\n"dscf":["0.028316846592","1","0","0",[3,0,0,0,0,0,0,0]],\n"dyn":["0.00001","1","0","0",[1,1,-2,0,0,0,0,0]],\n"dyne":["0.00001","1","0","0",[1,1,-2,0,0,0,0,0]],\n"eV":["1.602176462e-19","1","0","0",[2,1,-2,0,0,0,0,0]],\n"electric horsepower":["746","1","0","0",[2,1,-3,0,0,0,0,0]],\n"electrical horsepower":["746","1","0","0",[2,1,-3,0,0,0,0,0]],\n"electron volt":["1.602176462e-19","1","0","0",[2,1,-2,0,0,0,0,0]],\n"erg":["0.0000001","1","0","0",[2,1,-2,0,0,0,0,0]],\n"euro":["1","1","0","EUR",[0,0,0,0,0,0,0,1]],\n"exabyte":["9223372036854770000","1","0","0",[0,0,0,0,0,1,0,0]],\n"exbibyte":["9223372036854770000","1","0","0",[0,0,0,0,0,1,0,0]],\n"farad":["1","1","0","siWord",[-2,-1,4,2,0,0,0,0]],\n"faraday":["96485.339924","1","0","0",[0,0,1,1,0,0,0,0]],\n"fathom":["1.8288","1","0","0",[1,0,0,0,0,0,0,0]],\n"fc":["10.7639104167097","1","0","0",[-2,0,0,0,0,0,1,0]],\n"feet":["0.3048","1","0","0",[1,0,0,0,0,0,0,0]],\n"fermi":["0.000000000000001","1","0","siWord",[1,0,0,0,0,0,0,0]],\n"fl oz":["0.003785411784","128","0","0",[3,0,0,0,0,0,0,0]],\n"flop":["1","1","0","0",[0,0,-1,0,0,0,0,0]],\n"fluid ounce":["0.003785411784","128","0","0",[3,0,0,0,0,0,0,0]],\n"food calorie":["4186.8","1","0","0",[2,1,-2,0,0,0,0,0]],\n"foot":["0.3048","1","0","0",[1,0,0,0,0,0,0,0]],\n"footcandle":["10.7639104167097","1","0","0",[-2,0,0,0,0,0,1,0]],\n"footlambert":["1","3.14159265358979","0","0",[-2,0,0,0,0,0,1,0]],\n"fortnight":["1209600","1","0","0",[0,0,1,0,0,0,0,0]],\n"fps":["0.3048","1","0","0",[1,0,-1,0,0,0,0,0]],\n"franklin":["0.00000000033356","1","0","siWord",[0,0,1,1,0,0,0,0]],\n"ft":["0.3048","1","0","0",[1,0,0,0,0,0,0,0]],\n"ft water":["2988.874","1","0","0",[-1,1,-2,0,0,0,0,0]],\n"ftc":["10.7639104167097","1","0","0",[-2,0,0,0,0,0,1,0]],\n"ftl":["3.426259","1","0","0",[-2,0,0,0,0,0,1,0]],\n"furlong":["201.168","1","0","0",[1,0,0,0,0,0,0,0]],\n"g":["0.001","1","0","siSymbol",[0,1,0,0,0,0,0,0]],\n"gal":["0.003785411784","1","0","0",[3,0,0,0,0,0,0,0]],\n"galileo":["0.01","1","0","siWord",[1,0,-2,0,0,0,0,0]],\n"gallon":["0.003785411784","1","0","0",[3,0,0,0,0,0,0,0]],\n"gauss":["0.0001","1","0","siSymbol",[-2,-2,-2,-1,0,0,0,0]],\n"gigabyte":["8589934592","1","0","0",[0,0,0,0,0,1,0,0]],\n"gilbert":["10","12.5663706143592","0","siWord",[0,0,0,0,1,0,1,0]],\n"gill":["0.003785411784","32","0","0",[3,0,0,0,0,0,0,0]],\n"gon":["3.14159265358979","200","0","0",[0,0,0,0,0,0,0,0]],\n"gongjin":["1","1","0","siSymbol",[0,1,0,0,0,0,0,0]],\n"gongli":["1000","1","0","siSymbol",[1,0,0,0,0,0,0,0]],\n"gpd":["0.003785411784","86400","0","0",[3,0,-1,0,0,0,0,0]],\n"gph":["0.003785411784","3600","0","0",[3,0,-1,0,0,0,0,0]],\n"gpm":["0.003785411784","60","0","0",[3,0,-1,0,0,0,0,0]],\n"gps":["0.003785411784","1","0","0",[3,0,-1,0,0,0,0,0]],\n"gr":["0.00006479891","1","0","0",[0,1,0,0,0,0,0,0]],\n"grad":["3.14159265358979","200","0","0",[0,0,0,0,0,0,0,0]],\n"grain":["0.00006479891","1","0","0",[0,1,0,0,0,0,0,0]],\n"gram":["0.001","1","0","0",[0,1,0,0,0,0,0,0]],\n"gramme":["0.001","1","0","0",[0,1,0,0,0,0,0,0]],\n"gray":["1","1","0","0",[2,0,-2,0,0,0,0,0]],\n"great year":["814000000000","1","0","0",[0,0,1,0,0,0,0,0]],\n"gsm":["0.001","1","0","0",[-2,1,0,0,0,0,0,0]],\n"gutenberg":["0.0254","7200","0","0",[1,0,0,0,0,0,0,0]],\n"gōngjin":["1","1","0","siSymbol",[0,1,0,0,0,0,0,0]],\n"gōngli":["1000","1","0","siSymbol",[1,0,0,0,0,0,0,0]],\n"h":["3600","1","0","0",[0,0,1,0,0,0,0,0]],\n"ha":["10000","1","0","siSymbol",[2,0,0,0,0,0,0,0]],\n"hand":["0.1016","1","0","0",[1,0,0,0,0,0,0,0]],\n"hectare":["10000","1","0","siWord",[2,0,0,0,0,0,0,0]],\n"helek":["10","3","0","0",[0,0,1,0,0,0,0,0]],\n"hemisphere":["6.28318530717959","1","0","0",[0,0,0,0,0,0,0,0]],\n"henrie":["1","1","0","siWord",[2,1,-2,-2,0,0,0,0]],\n"henry":["1","1","0","siWord",[2,1,-2,-2,0,0,0,0]],\n"hertz":["1","1","0","siWord",[0,0,-1,0,0,0,0,0]],\n"hk":["735.49875","1","0","0",[2,1,-3,0,0,0,0,0]],\n"horsepower":["745.69987158227","1","0","0",[2,1,-3,0,0,0,0,0]],\n"hour":["3600","1","0","0",[0,0,1,0,0,0,0,0]],\n"hp":["745.69987158227","1","0","0",[2,1,-3,0,0,0,0,0]],\n"hpE":["746","1","0","0",[2,1,-3,0,0,0,0,0]],\n"hpI":["745.69987158227","1","0","0",[2,1,-3,0,0,0,0,0]],\n"hpM":["735.49875","1","0","0",[2,1,-3,0,0,0,0,0]],\n"hpS":["9812.5","1","0","0",[2,1,-3,0,0,0,0,0]],\n"hr":["3600","1","0","0",[0,0,1,0,0,0,0,0]],\n"in":["0.0254","1","0","0",[1,0,0,0,0,0,0,0]],\n"in Hg":["3863.8","1","0","0",[-1,1,-2,0,0,0,0,0]],\n"inch":["0.0254","1","0","0",[1,0,0,0,0,0,0,0]],\n"inche":["0.0254","1","0","0",[1,0,0,0,0,0,0,0]],\n"jansky":["1e-26","1","0","0",[0,1,-2,0,0,0,0,0]],\n"jar":["1","900000000","0","0",[-2,-1,4,2,0,0,0,0]],\n"joule":["1","1","0","0",[2,1,-2,0,0,0,0,0]],\n"k":["4448.2216152605","1","0","0",[1,1,-2,0,0,0,0,0]],\n"kB":["8192","1","0","0",[0,0,0,0,0,1,0,0]],\n"kB":["8192","1","0","0",[0,0,0,0,0,1,0,0]],\n"kairi":["1852","1","0","0",[1,0,0,0,0,0,0,0]],\n"kanal":["505.8570528","1","0","0",[2,0,0,0,0,0,0,0]],\n"katal":["6.02214179e+23","1","0","siWord",[0,0,-1,0,0,1,0,0]],\n"kcal":["4186.8","1","0","0",[2,1,-2,0,0,0,0,0]],\n"kcmil":["5.06707479097497e-07","1","0","0",[2,0,0,0,0,0,0,0]],\n"keg":["0.058673882652","1","0","0",[3,0,0,0,0,0,0,0]],\n"kelvin":["1","1","0","0",[0,0,0,0,1,0,0,0]],\n"kgf":["9.80665","1","0","0",[1,1,-2,0,0,0,0,0]],\n"kilo":["1","1","0","0",[0,1,0,0,0,0,0,0]],\n"kilobyte":["8192","1","0","0",[0,0,0,0,0,1,0,0]],\n"kilogram":["1","1","0","0",[0,1,0,0,0,0,0,0]],\n"kilogramme":["1","1","0","0",[0,1,0,0,0,0,0,0]],\n"kilopond":["9.80665","1","0","0",[1,1,-2,0,0,0,0,0]],\n"kip":["4448.2216152605","1","0","0",[1,1,-2,0,0,0,0,0]],\n"klf":["4448.2216152605","0.3048","0","0",[0,1,-2,0,0,0,0,0]],\n"kn":["1852","3600","0","0",[1,0,-1,0,0,0,0,0]],\n"knot":["1852","3600","0","0",[1,0,-1,0,0,0,0,0]],\n"kp":["9.80665","1","0","0",[1,1,-2,0,0,0,0,0]],\n"kpf":["4448.2216152605","0.3048","0","0",[0,1,-2,0,0,0,0,0]],\n"kph":["1000/3600","1","0","0",[1,0,-1,0,0,0,0,0]],\n"kpph":["1000/3600","1","0","0",[-1,1,-3,0,0,0,0,0]],\n"ks":["735.49875","1","0","0",[2,1,-3,0,0,0,0,0]],\n"ksf":["47880.2589803358","1","0","0",[-1,1,-2,0,0,0,0,0]],\n"ksi":["6894757.29316836","1","0","0",[-1,1,-2,0,0,0,0,0]],\n"kwh":["3600000","1","0","0",[2,1,-2,0,0,0,0,0]],\n"l":["0.001","1","0","siSymbol",[3,0,0,0,0,0,0,0]],\n"lambert":["10000","3.14159265358979","0","0",[-2,0,0,0,0,0,1,0]],\n"lb":["0.45359237","1","0","0",[0,1,0,0,0,0,0,0]],\n"lbf":["4.4482216152605","1","0","0",[1,1,-2,0,0,0,0,0]],\n"lbm":["0.45359237","1","0","0",[0,1,0,0,0,0,0,0]],\n"league":["5556","1","0","0",[1,0,0,0,0,0,0,0]],\n"lf":["0.3048","1","0","0",[1,0,0,0,0,0,0,0]],\n"li":["500","1","0","0",[1,0,0,0,0,0,0,0]],\n"light year":["9460730472580800","1","0","0",[1,0,0,0,0,0,0,0]],\n"link":["0.201168","1","0","0",[1,0,0,0,0,0,0,0]],\n"liter":["0.001","1","0","siWord",[3,0,0,0,0,0,0,0]],\n"litre":["0.001","1","0","siWord",[3,0,0,0,0,0,0,0]],\n"lm":["1","1","0","siSymbol",[0,0,0,0,0,0,1,0]],\n"long ton":["1016.0469088","1","0","0",[0,1,0,0,0,0,0,0]],\n"lt":["1016.0469088","1","0","0",[0,1,0,0,0,0,0,0]],\n"ltpd":["0.0117598021851852","1","0","0",[0,1,-1,0,0,0,0,0]],\n"lumen":["1","1","0","siWord",[0,0,0,0,0,0,1,0]],\n"lunar day":["89416.32","1","0","0",[0,0,1,0,0,0,0,0]],\n"lunar month":["2551442.976","1","0","0",[0,0,1,0,0,0,0,0]],\n"lux":["1","1","0","siWord",[-2,0,0,0,0,0,1,0]],\n"lx":["1","1","0","siSymbol",[-2,0,0,0,0,0,1,0]],\n"m":["1","1","0","siSymbol",[1,0,0,0,0,0,0,0]],\n"mD":["9.869233e-16","1","0","0",[2,0,0,0,0,0,0,0]],\n"marathon":["42195","1","0","0",[1,0,0,0,0,0,0,0]],\n"marla":["25.29285264","1","0","0",[2,0,0,0,0,0,0,0]],\n"mas":["3.14159265358979","648000000","0","0",[0,0,0,0,0,0,0,0]],\n"maxwell":["0.00000001","1","0","siSymbol",[2,1,-2,-1,0,0,0,0]],\n"mb":["100","1","0","0",[-1,1,-2,0,0,0,0,0]],\n"megabyte":["8388608","1","0","0",[0,0,0,0,0,1,0,0]],\n"megaton TNT":["4184000000000000","1","0","0",[2,1,-2,0,0,0,0,0]],\n"megatons TNT":["4184000000000000","1","0","0",[2,1,-2,0,0,0,0,0]],\n"megohm":["1000000","1","0","0",[2,1,-3,-2,0,0,0,0]],\n"meter":["1","1","0","siWord",[1,0,0,0,0,0,0,0]],\n"metre":["1","1","0","siWord",[1,0,0,0,0,0,0,0]],\n"metric horsepower":["735.49875","1","0","0",[2,1,-3,0,0,0,0,0]],\n"metric ton":["1000","1","0","0",[0,1,0,0,0,0,0,0]],\n"mgd":["3785.411784","86400","0","0",[3,0,-1,0,0,0,0,0]],\n"mho":["1","1","0","0",[-2,-1,3,2,0,0,0,0]],\n"mi":["1609.344","1","0","0",[1,0,0,0,0,0,0,0]],\n"mil":["0.0000254","1","0","0",[1,0,0,0,0,0,0,0]],\n"mile":["1609.344","1","0","0",[1,0,0,0,0,0,0,0]],\n"min":["60","1","0","0",[0,0,1,0,0,0,0,0]],\n"minute":["60","1","0","0",[0,0,1,0,0,0,0,0]],\n"moa":["3.14159265358979","10800","0","0",[0,0,0,0,0,0,0,0]],\n"mol":["6.02214179e+23","1","0","0",[0,0,0,0,0,1,0,0]],\n"mole":["6.02214179e+23","1","0","0",[0,0,0,0,0,1,0,0]],\n"mpg":["1609.344","0.003785411784","0","0",[-2,0,0,0,0,0,0,0]],\n"mph":["0.44704","1","0","0",[1,0,-1,0,0,0,0,0]],\n"mt":["1000","1","0","0",[0,1,0,0,0,0,0,0]],\n"nautical mile":["1852","1","0","0",[1,0,0,0,0,0,0,0]],\n"newton":["1","1","0","0",[1,1,-2,0,0,0,0,0]],\n"nit":["1","1","0","0",[-2,0,0,0,0,0,1,0]],\n"ohm":["1","1","0","siWord",[2,1,-3,-2,0,0,0,0]],\n"ounce":["0.45359237","16","0","0",[0,1,0,0,0,0,0,0]],\n"oz":["0.45359237","16","0","0",[0,1,0,0,0,0,0,0]],\n"oz t":["0.0311034768","1","0","0",[0,1,0,0,0,0,0,0]],\n"parsec":["30856780000000000","1","0","0",[1,0,0,0,0,0,0,0]],\n"pc":["0.0254","6","0","0",[1,0,0,0,0,0,0,0]],\n"pcf":["4.4482216152605","0.028316846592","0","0",[-2,1,-2,0,0,0,0,0]],\n"pci":["4.4482216152605","0.000016387064","0","0",[-2,1,-2,0,0,0,0,0]],\n"pebibyte":["9007199254740990","1","0","0",[0,0,0,0,0,1,0,0]],\n"peck":["0.00880976754172","1","0","0",[3,0,0,0,0,0,0,0]],\n"perfect ream":["516","1","0","0",[0,0,0,0,0,1,0,0]],\n"person":["1","1","0","0",[0,0,0,0,0,1,0,0]],\n"petabyte":["9007199254740990","1","0","0",[0,0,0,0,0,1,0,0]],\n"pfd":["0.5","1","0","0",[0,1,0,0,0,0,0,0]],\n"pferdestärke":["735.49875","1","0","0",[2,1,-3,0,0,0,0,0]],\n"pfund":["0.5","1","0","0",[0,1,0,0,0,0,0,0]],\n"phot":["10000","1","0","0",[-2,0,0,0,0,0,1,0]],\n"pica":["0.0254","6","0","0",[1,0,0,0,0,0,0,0]],\n"pied du roi":["9000","27706","0","0",[1,0,0,0,0,0,0,0]],\n"pieze":["1000","1","0","0",[-1,1,-2,0,0,0,0,0]],\n"pint":["0.000473176473","1","0","0",[3,0,0,0,0,0,0,0]],\n"pk":["735.49875","1","0","0",[2,1,-3,0,0,0,0,0]],\n"platonic year":["814000000000","1","0","0",[0,0,1,0,0,0,0,0]],\n"plf":["4.4482216152605","0.3048","0","0",[0,1,-2,0,0,0,0,0]],\n"point":["0.0254","72","0","0",[1,0,0,0,0,0,0,0]],\n"poise":["0.1","1","0","siWord",[-1,1,-1,0,0,0,0,0]],\n"pound":["0.45359237","1","0","0",[0,1,0,0,0,0,0,0]],\n"poundal":["4.4482216152605","32.174","0","0",[1,1,-2,0,0,0,0,0]],\n"ppm":["0.000001","1","0","0",[0,0,0,0,0,0,0,0]],\n"ppmdv":["0.000001","1","0","0",[0,0,0,0,0,0,0,0]],\n"ppmv":["0.000001","1","0","0",[0,0,0,0,0,0,0,0]],\n"ppmw":["0.000001","1","0","0",[0,0,0,0,0,0,0,0]],\n"printer's point":["0.0003515","1","0","0",[1,0,0,0,0,0,0,0]],\n"printer's ream":["516","1","0","0",[0,0,0,0,0,1,0,0]],\n"ps":["735.49875","1","0","0",[2,1,-3,0,0,0,0,0]],\n"psf":["4.4482216152605","0.09290304","0","0",[-1,1,-2,0,0,0,0,0]],\n"psi":["4.4482216152605","0.00064516","0","0",[-1,1,-2,0,0,0,0,0]],\n"psia":["6894.75729316836","1","0","0",[-1,1,-2,0,0,0,0,0]],\n"psig":["6894.75729316836","1","14.6959","0",[-1,1,-2,0,0,0,0,0]],\n"px":["0.0254","96","0","0",[1,0,0,0,0,0,0,0]],\n"pz":["1000","1","0","0",[-1,1,-2,0,0,0,0,0]],\n"quart":["0.003785411784","4","0","0",[3,0,0,0,0,0,0,0]],\n"quire":["25","1","0","0",[0,0,0,0,0,1,0,0]],\n"rad":["1","1","0","0",[0,0,0,0,0,0,0,0]],\n"radian":["1","1","0","0",[0,0,0,0,0,0,0,0]],\n"rankin":["5","9","0","0",[0,0,0,0,1,0,0,0]],\n"rd":["0.01","1","0","siSymbol",[2,0,-2,0,0,0,0,0]],\n"real":["1","1","0","BRL",[0,0,0,0,0,0,0,1]],\n"ream":["500","1","0","0",[0,0,0,0,0,1,0,0]],\n"rem":["0.01","1","0","siSymbol",[2,0,-2,0,0,0,0,0]],\n"rev":["6.28318530717959","1","0","0",[0,0,0,0,0,0,0,0]],\n"rod":["5.0292","1","0","0",[1,0,0,0,0,0,0,0]],\n"roentgen":["0.000258","1","0","siWord",[0,-1,1,1,0,0,0,0]],\n"rpm":["6.28318530717959","3600","0","0",[0,0,-1,0,0,0,0,0]],\n"ruble":["1","1","0","RUB",[0,0,0,0,0,0,0,1]],\n"röntgen":["0.000258","1","0","siWord",[0,-1,1,1,0,0,0,0]],\n"s":["1","1","0","siSymbol",[0,0,1,0,0,0,0,0]],\n"saltspoon":["0.003785411784","3072","0","0",[3,0,0,0,0,0,0,0]],\n"scf":["0.028316846592","1","0","0",[3,0,0,0,0,0,0,0]],\n"scfd":["0.028316846592","86400","0","0",[3,0,-1,0,0,0,0,0]],\n"scfh":["0.028316846592","3600","0","0",[3,0,-1,0,0,0,0,0]],\n"scfm":["0.028316846592","60","0","0",[3,0,-1,0,0,0,0,0]],\n"sea mile":["1852","1","0","0",[1,0,0,0,0,0,0,0]],\n"sec":["1","1","0","0",[0,0,1,0,0,0,0,0]],\n"second":["1","1","0","0",[0,0,1,0,0,0,0,0]],\n"section":["2589988.110336","1","0","0",[2,0,0,0,0,0,0,0]],\n"sennight":["604800","1","0","0",[0,0,1,0,0,0,0,0]],\n"sheet":["1","1","0","0",[0,0,0,0,0,1,0,0]],\n"short ream":["480","1","0","0",[0,0,0,0,0,1,0,0]],\n"short ton":["907.18474","1","0","0",[0,1,0,0,0,0,0,0]],\n"siemen":["1","1","0","siWord",[-2,-1,3,2,0,0,0,0]],\n"sievert":["1","1","0","siWord",[2,0,-2,0,0,0,0,0]],\n"slinch":["175.126835246477","1","0","0",[0,1,0,0,0,0,0,0]],\n"slug":["14.5939029372064","1","0","0",[0,1,0,0,0,0,0,0]],\n"smoot":["1.7018","1","0","0",[0,1,0,0,0,0,0,0]],\n"span":["0.2286","1","0","0",[1,0,0,0,0,0,0,0]],\n"sphere":["12.5663706143592","1","0","0",[0,0,0,0,0,0,0,0]],\n"sq ft":["0.09290304","1","0","0",[2,0,0,0,0,0,0,0]],\n"sq in":["0.00064516","1","0","0",[2,0,0,0,0,0,0,0]],\n"sq km":["1000000","1","0","0",[2,0,0,0,0,0,0,0]],\n"sq mi":["2589988.110336","1","0","0",[2,0,0,0,0,0,0,0]],\n"sq yd":["0.83612736","1","0","0",[2,0,0,0,0,0,0,0]],\n"square degree":["0.000304617419786709","1","0","0",[0,0,0,0,0,0,0,0]],\n"square meter":["1","1","0","0",[2,0,0,0,0,0,0,0]],\n"square metre":["1","1","0","0",[2,0,0,0,0,0,0,0]],\n"square mi":["2589988.110336","1","0","0",[2,0,0,0,0,0,0,0]],\n"sr":["1","1","0","siSymbol",[0,0,0,0,0,0,0,0]],\n"ssp":["0.003785411784","3072","0","0",[3,0,0,0,0,0,0,0]],\n"standard volume":["22.414","1","0","0",[3,0,0,0,0,0,0,0]],\n"statampere":["0.00000000033356","1","0","0",[0,0,0,1,0,0,0,0]],\n"statcoulomb":["0.00000000033356","1","0","0",[0,0,1,1,0,0,0,0]],\n"statfarad":["0.0000000000011126","1","0","0",[-2,-1,4,2,0,0,0,0]],\n"stathenrie":["898760000000","1","0","0",[2,1,-2,-2,0,0,0,0]],\n"stathenry":["898760000000","1","0","0",[2,1,-2,-2,0,0,0,0]],\n"statohm":["898760000000","1","0","0",[2,1,-3,-2,0,0,0,0]],\n"statvolt":["299.79","1","0","0",[2,1,-3,-1,0,0,0,0]],\n"statwatt":["0.0000001","1","0","0",[2,1,-3,0,0,0,0,0]],\n"steam horsepower":["9812.5","1","0","0",[2,1,-3,0,0,0,0,0]],\n"steradian":["1","1","0","0",[0,0,0,0,0,0,0,0]],\n"stere":["1","1","0","0",[3,0,0,0,0,0,0,0]],\n"stoke":["0.0001","1","0","0",[2,0,-1,0,0,0,0,0]],\n"stone":["6.35029318","1","0","0",[0,1,0,0,0,0,0,0]],\n"stpd":["0.0104998233796296","1","0","0",[0,1,-1,0,0,0,0,0]],\n"stunde":["3600","1","0","0",[0,0,1,0,0,0,0,0]],\n"survey feet":["1200","3937","0","0",[1,0,0,0,0,0,0,0]],\n"survey foot":["1200","3937","0","0",[1,0,0,0,0,0,0,0]],\n"Sv":["1","1","0","siSymbol",[2,0,-2,0,0,0,0,0]],\n"sverdrup":["1000000","1","0","0",[3,0,-1,0,0,0,0,0]],\n"sym":["1","1","0","siSymbol",[0,0,0,0,0,1,0,0]],\n"tablespoon":["0.003785411784","256","0","0",[3,0,0,0,0,0,0,0]],\n"tbsp":["0.003785411784","256","0","0",[3,0,0,0,0,0,0,0]],\n"teaspoon":["0.003785411784","768","0","0",[3,0,0,0,0,0,0,0]],\n"tebibyte":["8796093022208","1","0","0",[0,0,0,0,0,1,0,0]],\n"terabyte":["8796093022208","1","0","0",[0,0,0,0,0,1,0,0]],\n"tesla":["1","1","0","siSymbol",[-2,-2,-2,-1,0,0,0,0]],\n"therm":["105480400","1","0","0",[2,1,-2,0,0,0,0,0]],\n"tidal day":["89416.32","1","0","0",[0,0,1,0,0,0,0,0]],\n"ton":["907.18474","1","0","0",[0,1,0,0,0,0,0,0]],\n"tonf":["8896.443230521","1","0","0",[1,1,-2,0,0,0,0,0]],\n"ton TNT":["4184000000","1","0","0",[2,1,-2,0,0,0,0,0]],\n"ton refrigeration":["3516.8532","1","0","0",[2,1,-3,0,0,0,0,0]],\n"tonne":["1000","1","0","0",[0,1,0,0,0,0,0,0]],\n"tons TNT":["4184000000","1","0","0",[2,1,-2,0,0,0,0,0]],\n"tons refrigeration":["3516.8532","1","0","0",[2,1,-3,0,0,0,0,0]],\n"township":["93239571.972096","1","0","0",[2,0,0,0,0,0,0,0]],\n"toz":["0.0311034768","1","0","0",[0,1,0,0,0,0,0,0]],\n"tpy":["0.0000287475400032297","1","0","0",[0,1,-1,0,0,0,0,0]],\n"tropical year":["31556925.9747","1","0","0",[0,0,1,0,0,0,0,0]],\n"troy ounce":["0.0311034768","1","0","0",[0,1,0,0,0,0,0,0]],\n"tsp":["0.003785411784","768","0","0",[3,0,0,0,0,0,0,0]],\n"turn":["6.28318530717958","1","0","0",[0,0,0,0,0,0,0,0]],\n"twip":["0.0254","1440","0","0",[1,0,0,0,0,0,0,0]],\n"unit":["1","1","0","0",[0,0,0,0,0,1,0,0]],\n"vapeur":["735.49875","1","0","0",[2,1,-3,0,0,0,0,0]],\n"var":["1","1","0","siSymbol",[2,1,-3,0,0,0,0,0]],\n"varistor":["1","1","0","siWord",[2,1,-3,0,0,0,0,0]],\n"volt":["1","1","0","siWord",[2,1,-3,-1,0,0,0,0]],\n"watt":["1","1","0","siWord",[2,1,-3,0,0,0,0,0]],\n"weber":["1","1","0","siSymbol",[2,1,-2,-1,0,0,0,0]],\n"week":["604800","1","0","0",[0,0,1,0,0,0,0,0]],\n"won":["1","1","0","KRW",[0,0,0,0,0,0,0,1]],\n"wppm":["0.000001","1","0","0",[0,0,0,0,0,0,0,0]],\n"yard":["0.9144","1","0","0",[1,0,0,0,0,0,0,0]],\n"yd":["0.9144","1","0","0",[1,0,0,0,0,0,0,0]],\n"year":["31556952","1","0","0",[0,0,1,0,0,0,0,0]],\n"yen":["1","1","0","JPY",[0,0,0,0,0,0,0,1]],\n"£":["1","1","0","GBP",[0,0,0,0,0,0,0,1]],\n"¥":["1","1","0","JPY",[0,0,0,0,0,0,0,1]],\n"°":["3.14159265358979","180","0","0",[0,0,0,0,0,0,0,0]],\n"°C":["1","1","273.15","0",[0,0,0,0,1,0,0,0]],\n"°F":["5","9","459","0",[0,0,0,0,1,0,0,0]],\n"°K":["1","1","0","0",[0,0,0,0,1,0,0,0]],\n"°R":["5","9","0","0",[0,0,0,0,1,0,0,0]],\n"°R":["5","9","0","0",[0,0,0,0,1,0,0,0]],\n"Å":["0.0000000001","1","0","0",[1,0,0,0,0,0,0,0]],\n"Ω":["1","1","0","siSymbol",[2,1,-3,-2,0,0,0,0]],\n"”":["0.0254","1","0","0",[1,0,0,0,0,0,0,0]],\n"₨":["1","1","0","INR",[0,0,0,0,0,0,0,1]],\n"₪":["1","1","0","ILS",[0,0,0,0,0,0,0,1]],\n"€":["1","1","0","EUR",[0,0,0,0,0,0,0,1]],\n"℃":["1","1","273.15","0",[0,0,0,0,1,0,0,0]],\n"℉":["5","9","459","0",[0,0,0,0,1,0,0,0]],\n"Ω":["1","1","0","siSymbol",[2,1,-3,-2,0,0,0,0]],\n"K":["1","1","0","0",[0,0,0,0,1,0,0,0]],\n"Å":["0.0000000001","1","0","0",[1,0,0,0,0,0,0,0,0]]\n}`));const synonyms=Object.freeze({$:"USD",US$:"USD",dollar:"USD",A$:"AUD","Australian dollar":"AUD","Brazilian Real":"BRL",real:"BRL",R$:"BRL","British Pound":"GBP","£":"GBP",C$:"CAD","Canadian dollar":"CAD","Chinese Yuan":"CNY","€":"EUR",Euro:"EUR",euro:"EUR",HK$:"HKD","Hong Kong dollar":"HKD","Indian Rupee":"IDR","₨":"IDR","Israeli New Shekel":"ILS","₪":"ILS","Mexican Peso":"MXN","Swiss Franc":"CHF",Won:"KRW",won:"KRW",yen:"JPY",Yen:"JPY","Japanese Yen":"JPY","¥":"JPY"});const unitFromWord=(e,t,r)=>{const n=e.trim();const a=n.length;const o={name:n,factor:Rnl.one,gauge:Rnl.zero,log:"",expos:[0,0,0,0,0,0,0,0]};if(e===""){return o}let i="";let l;let s=false;let m="";let u=false;let c=false;for(let e=1;e<3;e++){if(e===1){s=true;i=n;if(a>2){if(i.charAt(i.length-1)==="s"){if(!(i==="cfs"||a===3&i.charAt(1)==="p")){i=i.slice(0,-1)}}}let e="";if(a>3){const t=/^(yotta|zetta|exa|peta|tera|giga|mega|kilo|hecto|deka|deci|centi|milli|micro|nano|pico|femto|atto|zepto|yocto)/.exec(i);if(t){e=t[0].value;s=true;i=i.slice(e.length)}}}else{s=false;m=i.charAt(0);if("YZEPTGMkhdcmnpfazyµμ".indexOf(m)>-1){s=true;i=i.substring(1)}}if(r&&Object.hasOwnProperty.call(r.value.columnMap,i)){const e=r.value.columnMap[i];const t=r.unit[r.value.units[e]];o.factor=Rnl.multiply(Rnl.fromString(r.value.data[e][0]),t.factor);o.expos=t.expos;return o}if(s){l=unitTable[i];if(l){c=true}if(e===1&&c&&m===""){break}else if(c){if(e===1){c=l[3]==="siWord";u=true;break}else{c=l[3]==="siSymbol";u=true}}}}if(c){o.gauge=Rnl.fromString(l[2]);o.expos=Object.freeze(l[4]);if(o.expos[7]===1){const e=synonyms[i]?synonyms[i]:i;if(t&&t.value.has(e)){o.factor=Rnl.reciprocal(t.value.get(e))}else{l=unitTable[e];if(l[0]==="0"){return errorOprnd("CURRENCY")}else{o.factor=Rnl.reciprocal(Rnl.fromString(l[0]))}}}else{o.factor=Rnl.divide(Rnl.fromString(l[0]),Rnl.fromString(l[1]))}if(u){o.factor=Rnl.multiply(o.factor,Rnl.fromNumber(prefixFactor[m]))}}else{return errorOprnd("UNIT_NAME",n)}return Object.freeze(o)};const opOrNumRegEx=/[0-9·\-⁰¹²³\u2074-\u2079⁻/^()]/;const numeralRegEx=/[0-9-]/;const unitFromUnitName=(e,t)=>{if(!e){return{name:null,factor:null,gauge:null,log:"",expos:null}}const r=t.currencies;const n=t.units?t.units:null;let a=e.trim();a=a.replace(/[*.•×\-−](?![0-9.])/g,"·");const o={name:a,factor:Rnl.one,gauge:Rnl.zero,log:"",expos:allZeros};if(a===""){return o}else if(a==="°"||a==="°ʹ"||a==="degMinSec"){o.factor=Rnl.fromString("0.0174532925199433");return o}else if(a==="feetInch"){o.unitExpos=[1,0,0,0,0,0,0,0];o.factor=Rnl.fromString("0.3048");return o}else if(a==="″"||a==="ʹʹ"){o.unitExpos=[1,0,0,0,0,0,0,0];o.factor=Rnl.fromString("0.0254");return o}const i=";";let l=false;let s="";let m="";let u="";let c="";const d=[];let p=0;const h=[{symbol:"",prec:-1}];let f="";for(let e=0;e<a.length;e++){s=a.charAt(e);if(numeralRegEx.test(s)){if(!l){u+=i;c+=i;h.push({symbol:"^",prec:3});l=true}u+=s;c+=s}else if(exponentRegEx.test(s)){if(!l){u+=i;c+=i;h.push({symbol:"^",prec:3});l=true}const e=numeralFromSuperScript(s);u+=e;c+=e}else if(s==="^"){u+=i;c+=i;h.push({symbol:"^",prec:3});l=true}else if(s==="·"||s==="/"){l=false;u+=i;c+=i;while(h[h.length-1].prec>=1){const e=h.pop().symbol;u+=e+i;c+=e+i}h.push({symbol:s,prec:1})}else if(s==="("){h.push({symbol:"(",prec:0})}else if(s===")"){while(h[h.length-1].prec>0){const e=h.pop().symbol;u+=e+i;c+=e+i}h.pop();l=false}else if(s==="-"){l=true;h.push({symbol:"^",prec:3});h.push({symbol:"-",prec:2});u+=i;c+=i}else{l=false;let t;for(t=e+1;t<a.length;t++){if(opOrNumRegEx.test(a.charAt(t))){break}}m=a.substring(e,t);f=unitFromWord(m,r,n);if(f.dtype&&f.dtype===dt.ERROR){return f}if(f.factor===0){o.name="";return o}u+=String(f.factor[0])+","+String(f.factor[1]);c+="¿"+p;d.push(f.expos);p+=1;e=t-1}}if(m===o.name){return Object.freeze(f)}while(h.length>1){const e=h.pop().symbol;u+=i+e;c+=i+e}const b=[];const g=[];const y=u.split(i);const x=c.split(i);let $=1;let v;p=0;for(let e=0;e<y.length;e++){if(/[·/\-^]/.test(y[e])){$=b.pop();v=g.pop()}switch(y[e]){case"·":b[b.length-1]=Rnl.multiply(b[b.length-1],$);g[g.length-1]=g[g.length-1].map(((e,t)=>e+v[t]));break;case"/":if(Rnl.isZero($)){return errorOprnd("DIV")}b[b.length-1]=Rnl.divide(b[b.length-1],$);g[g.length-1]=g[g.length-1].map(((e,t)=>e-v[t]));break;case"^":b[b.length-1]=Rnl.power(b[b.length-1],$);g[g.length-1]=g[g.length-1].map((e=>e*v));break;case"-":b[b.length-1]=Rnl.negate(b[b.length-1]);break;default:if(y[e].indexOf(",")>-1){const t=y[e].split(",");b.push([BigInt(t[0]),BigInt(t[1])])}else{b.push([BigInt(y[e]),BigInt(1)])}if(x[e].charAt(0)==="¿"){g.push(d[p]);p+=1}else{g.push(x[e])}}}o.factor=Object.freeze(b.pop());o.expos=Object.freeze(g.pop());return Object.freeze(o)};const j=[Rnl.zero,Rnl.one];const isComplex=e=>Array.isArray(e)&&e.length===2&&Rnl.isRational(e[0])&&Rnl.isRational(e[1]);const re=e=>e[0];const im=e=>e[1];const abs$1=e=>Rnl.hypot(e[0],e[1]);const negate$1=e=>[Rnl.negate(e[0]),Rnl.negate(e[1])];const conjugate=e=>[e[0],Rnl.negate(e[1])];const argument=e=>{if(Rnl.isZero(e[0])&&Rnl.isZero(e[1])){return errorOprnd("ORIGIN","argument")}else if(Rnl.isZero(e[1])){return Rnl.isPositive(e[0])?Rnl.zero:Rnl.pi}else if(Rnl.isZero(e[0])){return Rnl.isPositive(e[1])?Rnl.divide(Rnl.pi,Rnl.two):Rnl.negate(Rnl.divide(Rnl.pi,Rnl.two))}else{return Rnl.fromNumber(Math.atan2(Rnl.toNumber(e[1]),Rnl.toNumber(e[0])))}};const add$1=(e,t)=>[Rnl.add(e[0],t[0]),Rnl.add(e[1],t[1])];const subtract$1=(e,t)=>[Rnl.subtract(e[0],t[0]),Rnl.subtract(e[1],t[1])];const multiply$1=(e,t)=>[Rnl.subtract(Rnl.multiply(e[0],t[0]),Rnl.multiply(e[1],t[1])),Rnl.add(Rnl.multiply(e[0],t[1]),Rnl.multiply(e[1],t[0]))];const divide$1=(e,t)=>{if(!Rnl.isZero(e[1])&&!Rnl.isZero(t[1])){if(Rnl.lessThan(Rnl.abs(t[1]),Rnl.abs(t[0]))){const r=Rnl.divide(t[1],t[0]);const n=Rnl.add(t[0],Rnl.multiply(t[1],r));return[Rnl.divide(Rnl.add(e[0],Rnl.multiply(e[1],r)),n),Rnl.divide(Rnl.subtract(e[1],Rnl.multiply(e[0],r)),n)]}else{const r=Rnl.divide(t[0],t[1]);const n=Rnl.add(t[1],Rnl.multiply(t[0],r));return[Rnl.divide(Rnl.add(e[1],Rnl.multiply(e[0],r)),n),Rnl.divide(Rnl.add(Rnl.negate(e[0]),Rnl.multiply(e[1],r)),n)]}}else if(Rnl.isZero(e[1])){if(Rnl.lessThan(Rnl.abs(t[1]),Rnl.abs(t[0]))){const r=Rnl.divide(t[1],t[0]);const n=Rnl.add(t[0],Rnl.multiply(t[1],r));return[Rnl.divide(e[0],n),Rnl.negate(Rnl.multiply(e[0],Rnl.divide(r,n)))]}else{const r=Rnl.divide(t[0],t[1]);const n=Rnl.add(t[1],Rnl.multiply(t[0],r));return[Rnl.divide(Rnl.multiply(e[0],r),n),Rnl.negate(Rnl.divide(e[0],n))]}}else if(Rnl.isZero(t[1])){if(Rnl.isZero(t[0]));else{return[Rnl.divide(e[0],t[0]),Rnl.divide(e[1],t[0])]}}else{if(Rnl.isZero(t[0])){return errorOprnd("DIV")}else{return[Rnl.divide(e[0],t[0]),Rnl.zero]}}};const increment$1=e=>[Rnl.increment(e[0]),e[1]];const decrement$1=e=>[Rnl.decrement(e[0]),e[1]];const inverse=e=>{if(Rnl.isZero(e[1])){if(Rnl.isZero(e[0])){return errorOprnd("DIV")}return[Rnl.inverse(e[0]),0]}else{return divide$1([Rnl.one,Rnl.zero],e)}};const cos$1=e=>{const t=Rnl.multiply(Rnl.cos(e[0]),Rnl.cosh(e[1]));const r=Rnl.multiply(Rnl.negate(Rnl.sin(e[0])),Rnl.sinh(e[1]));return[t,r]};const sin$1=e=>{const t=Rnl.multiply(Rnl.sin(e[0]),Rnl.cosh(e[1]));const r=Rnl.multiply(Rnl.cos(e[0]),Rnl.sinh(e[1]));return[t,r]};const log=e=>{let t=[Rnl.zero,Rnl.zero];if(Rnl.isZero(e[0])&&Rnl.isZero(e[1])){return errorOprnd("ORIGIN","log")}else{t[0]=Rnl.fromNumber(Math.log(Rnl.toNumber(Rnl.hypot(e[0],e[1]))));t[1]=argument(e)}return t};const isSmall=e=>Rnl.lessThan(Rnl.abs(e),[BigInt(1),BigInt(1e14)]);const exp$1=e=>{let t=[Rnl.zero,Rnl.zero];if(isSmall(e[1])){t[1]=Rnl.zero;t[0]=Rnl.exp(e[0])}else{if(Rnl.isZero(e[0])){t[0]=Rnl.cos(e[1]);if(isSmall(t[0])){t[0]=Rnl.zero}t[1]=Rnl.sin(e[1]);if(isSmall(t[1])){t[1]=Rnl.zero}}else{const r=Rnl.exp(e[0]);t[0]=Rnl.multiply(r,Rnl.cos(e[1]));t[1]=Rnl.multiply(r,Rnl.sin(e[1]))}}return t};const power$1=(e,t)=>{let r=[Rnl.zero,Rnl.zero];if(!isComplex(t)){r=log(e);r[0]=Rnl.multiply(r[0],t);r[1]=Rnl.multiply(r[1],t)}else if(Rnl.isZero(t[1])){r=log(e);r[0]=Rnl.multiply(r[0],t[0]);r[1]=Rnl.multiply(r[1],t[0])}else if(Rnl.isZero(e[1])&&!Rnl.isNegative(e[0])){e[0]=Rnl.fromNumber(Math.log(Rnl.toNumber(e[0])));r[0]=Rnl.multiply(e[0],t[0]);r[1]=Rnl.multiply(e[0],t[1])}else{e=log(e);r[0]=Rnl.subtract(Rnl.multiply(e[0],t[0]),Rnl.multiply(e[1],t[1]));r[1]=Rnl.add(Rnl.multiply(e[1],t[0]),Rnl.multiply(e[0],t[1]))}r=exp$1(r);if(isSmall(r[1])){r[1]=Rnl.zero}if(isSmall(r[0])){r[0]=Rnl.zero}return r};const acosh=e=>log(add$1(e,multiply$1(sqrt$1(decrement$1(e)),sqrt$1(increment$1(e)))));const asinh=e=>{const t=sqrt$1(add$1(multiply$1(e,e),[Rnl.one,Rnl.zero]));return log(add$1(e,t))};const atanh=e=>divide$1(subtract$1(log(increment$1(e)),log(subtract$1([Rnl.one,Rnl.zero],e))),[Rnl.two,Rnl.zero]);const asin=e=>divide$1(asinh(multiply$1(j,e)),j);const atan=e=>{const t=log(increment$1(multiply$1(j,e)));const r=log(subtract$1([Rnl.one,Rnl.zero],multiply$1(j,e)));return divide$1(subtract$1(t,r),[Rnl.zero,Rnl.two])};const sqrt$1=e=>{const t=log(e);t[0]=Rnl.divide(t[0],Rnl.two);t[1]=Rnl.divide(t[1],Rnl.two);return exp$1(t)};const lanczos$1=t=>{const r=subtract$1(t,[Rnl.one,Rnl.zero]);const n=Rnl.sqrt(Rnl.divide(e,pi));const a=multiply$1([Rnl.two,Rnl.zero],[n,Rnl.zero]);const o=Rnl.fromNumber(11.400511);const i=[[BigInt(1),BigInt(2)],Rnl.zero];const l=power$1(divide$1(add$1(r,[o,Rnl.zero]),[e,Rnl.zero]),add$1(r,i));const s=["2.48574089138753565546e-5","1.05142378581721974210","-3.45687097222016235469","4.51227709466894823700","-2.98285225323576655721","1.05639711577126713077","-0.195428773191645869583","0.0170970543404441224307","-0.000571926117404305781283","0.00000463399473359905636708","-0.00000000271994908488607703910"];let m=[Rnl.fromString(s[0]),Rnl.zero];for(let e=1;e<=10;e++){const t=[Rnl.fromString(t[e]),Rnl.zero];const n=[Rnl.fromNumber(e),Rnl.zero];m=add$1(m,divide$1(t,add$1(r,n)))}return multiply$1(multiply$1(a,l),m)};const display=(e,t,r)=>{const n=/[j∠°]/.test(t)?t.slice(-1):"j";let a="";let o="";if(n==="j"){const n=format(e[0],t,r);let i=format(e[1],t,r);if(i.charAt(0)==="-"){i="("+i+")"}a=n+" + j"+i;o=n+" + j"+i}else{const i=Rnl.hypot(e[0],e[1]);let l=Cpx.argument(result.value);if(n==="°"){l=Rnl.divide(Rnl.multiply(l,Rnl.fromNumber(180)),Rnl.pi)}a=format(i,t,r)+"∠"+format(l,t,r)+(n==="°"?"°":"");o=a}return[a,o]};const Cpx=Object.freeze({j:j,re:re,im:im,abs:abs$1,conjugate:conjugate,argument:argument,inverse:inverse,increment:increment$1,decrement:decrement$1,isComplex:isComplex,add:add$1,subtract:subtract$1,divide:divide$1,multiply:multiply$1,negate:negate$1,power:power$1,exp:exp$1,log:log,sqrt:sqrt$1,sin:sin$1,cos:cos$1,asin:asin,atan:atan,acosh:acosh,asinh:asinh,atanh:atanh,lanczos:lanczos$1,display:display});const isMatrix=e=>e.dtype&dt.ROWVECTOR||e.dtype&dt.COLUMNVECTOR||e.dtype&dt.MATRIX;const isVector=e=>(e.dtype&dt.ROWVECTOR||e.dtype&dt.COLUMNVECTOR)>0;const convertFromBaseUnits=(e,t,r)=>{let n=isVector(e)?e.value.map((e=>Rnl.divide(e,r))):e.value.map((e=>e.map((e=>Rnl.divide(e,r)))));if(!Rnl.isZero(t)){n=isVector(e)?e.value.map((e=>Rnl.subtract(e,t))):e.value.map((e=>e.map((e=>Rnl.subtract(e,t)))))}return Object.freeze(n)};const convertToBaseUnits=(e,t,r)=>{let n=clone(e.value);if(!Rnl.isZero(t)){n=isVector(e)?e.value.map((e=>Rnl.add(e,t))):e.value.map((e=>e.map((e=>Rnl.add(e,t)))))}n=isVector(e)?n.map((e=>Rnl.multiply(e,r))):n.map((e=>e.map((e=>Rnl.multiply(e,r)))));return Object.freeze(n)};const display$1=(e,t,r)=>{let n="\\begin";if(e.dtype&dt.MATRIX){n+="{pmatrix}";const a=e.value.length;const o=e.value[1].length;for(let i=0;i<a;i++){for(let a=0;a<o;a++){n+=format(e.value[i][a],t,r)+" &"}n=n.slice(0,-1)+" \\\\ "}n=n.slice(0,-3).trim();n+="\\end{pmatrix}"}else{n+="{bmatrix}";const a=e.dtype&dt.ROWVECTOR?" & ":" \\\\ ";if(e.value.plain){const o=e.value.plain.length;for(let i=0;i<o;i++){n+=format(e.value.plain[i],t,r)+(i<o-1?a:"")}}else{const o=e.value.length;for(let i=0;i<o;i++){const l=e.value[i]===undefined?"":e.dtype&dt.RATIONAL?format(e.value[i],t,r):e.dtype&dt.COMPLEX?Cpx.display(e.value[i],t,r)[0]:e.dtype&dt.BOOLEAN||e.dtype&dt.STRING?"\\text{"+e.value[i]+"}":e.value[i];n+=l+(i<o-1?a:"")}}n+="\\end{bmatrix}"}return n};const displayAlt=(e,t,r)=>{let n="";if(e.dtype&dt.MATRIX){n+="(";const a=e.value.length;const o=e.value[1].length;for(let i=0;i<a;i++){for(let a=0;a<o;a++){n+=format(e.value[i][a],t,r).replace(/{,}/g,",")+", "}n=n.slice(0,-2)+"; "}n=n.slice(0,-2).trim();n+=")"}else{n+="[";const a=e.dtype&dt.ROWVECTOR?", ":"; ";if(e.value.plain){const o=e.value.plain.length;for(let i=0;i<o;i++){n+=format(e.value.plain[i],t,r).replace(/{,}/g,",")+(i<o-1?a:"")}}else{const o=e.value.length;for(let i=0;i<o;i++){const l=e.value[i]===undefined?"":e.dtype&dt.RATIONAL?format(e.value[i],t,r).replace(/{,}/g,","):e.dtype&dt.COMPLEX?Cpx.display(e.value[i],t,r)[1].replace(/{,}/g,","):e.value[i];n+=l+(i<o-1?a:"")}}n+="]"}return n};const displayMapOfVectors=(e,t,r)=>{let n="\\begin{Bmatrix}";Object.keys(e).forEach((a=>{const o=e[a];n+="\\text{"+a+"}: \\begin{bmatrix}";const i=o.plain.length;if(o.plain){for(let e=0;e<i;e++){n+=format(o.plain[e],t,r)+(e<i-1?", ":"")}}else{for(let e=0;e<i;e++){const a=Rnl.isRational(o[e])?format(o[e],t,r):typeof o[e]==="boolean"||typeof o[e]==="string"?"\\text{"+o[e]+"}":o[e];n+=a+(e<i-1?" & ":"")}}n+="\\end{bmatrix} \\\\"}));n=n.slice(0,-2)+"\\end{Bmatrix}";return n};const displayAltMapOfVectors=(e,t,r)=>{let n="{";Object.keys(e).forEach((a=>{const o=e[a];n+=a+": [";const i=o.plain.length;if(o.plain){for(let e=0;e<i;e++){n+=format(o.plain[e],t,r)+(e<i-1?", ":"").replace(/{,}/g,",")+" "}}else{for(let e=0;e<i;e++){const a=Rnl.isRational(o[e])?format(o[e],t,r).replace(/{,}/g,",")+" ":String(o[e])+"}";n+=a+(e<i-1?" ":"")}}n+="];"}));return n.slice(0,-1)+"}"};const identity=(e,t)=>{const r=Rnl.isRational(e)?Rnl.toNumber(e):e;if(r===1){return[Rnl.one]}else{const e=[];for(let t=0;t<r;t++){e.push(new Array(r).fill(Rnl.zero));e[t][t]=Rnl.one}return t?e:Object.freeze(e)}};const invert=(e,t)=>{if(e.length!==e[0].length){return errorOprnd("NONSQUARE")}const r=e.length;let n=0;let a=0;let o=0;let i=Rnl.zero;let l=Rnl.one;const s=clone(e);const m=identity(r,true);for(n=0;n<r;n+=1){i=s[n][n];if(Rnl.isZero(i)){for(a=n+1;a<r;a++){if(!Rnl.isZero(s[a][n])){for(o=0;o<r;o++){i=s[n][o];s[n][o]=s[a][o];s[a][o]=i;i=m[n][o];m[n][o]=m[a][o];m[a][o]=i}break}}i=s[n][n];if(Rnl.isZero(i)){return errorOprnd("SINGULAR")}}if(t){l=Rnl.divide(l,i);if(n===r-1){return l}}for(o=0;o<r;o++){s[n][o]=Rnl.divide(s[n][o],i);m[n][o]=Rnl.divide(m[n][o],i)}for(a=0;a<r;a++){if(a===n){continue}i=s[a][n];for(o=0;o<r;o++){s[a][o]=Rnl.subtract(s[a][o],Rnl.multiply(i,s[n][o]));m[a][o]=Rnl.subtract(m[a][o],Rnl.multiply(i,m[n][o]))}}}return Object.freeze(m)};const submatrix=(e,t,r)=>{if(!(t.dtype&dt.RATIONAL||t.dtype&dt.RANGE)){return errorOprnd("BAD_INDEX")}let n=[];let a=e.dtype;let o=0;let i=1;let l=0;if(t.dtype&dt.RANGE){o=Rnl.toNumber(t.value[0]);i=Rnl.toNumber(t.value[1]);l=t.value[2]==="∞"?e.value.length:Rnl.toNumber(t.value[2])}else if(Rnl.areEqual(t.value,Rnl.zero)){o=1;l=e.value.length}else{o=Rnl.toNumber(t.value);l=o}if(isVector(e)){if(o===l){n=e.value[o-1];a=e.dtype-(e.dtype&dt.ROWVECTOR)-(e.dtype&dt.COLUMNVECTOR)}else if(i===1){n=e.value.slice(o-1,l)}else{for(let t=o-1;t<l;t+=i){n.push(e.value[t])}}Object.freeze(n);return Object.freeze({value:n,unit:e.unit,dtype:a})}let s=0;let m=1;let u=0;if(r){if(r.dtype&dt.RANGE){s=Rnl.toNumber(r.value[0]);m=Rnl.toNumber(r.value[1]);u=r.value[2]==="∞"?e.value[0].length:Rnl.toNumber(r.value[2])}else if(Rnl.areEqual(r.value,Rnl.zero)){s=1;u=e.value[0].length}else{s=Rnl.toNumber(r.value);u=s}}if(o===l&&s===u){n=e.value[o-1][s-1];a-=dt.MATRIX}else if(o===l){if(m===1){n=e.value[o-1].slice(s-1,u)}else{for(let t=s-1;t<u;t+=m){n.push(e.value[o-1][t])}}a=a-dt.MATRIX+dt.ROWVECTOR}else if(s===u){for(let t=o-1;t<l;t+=i){n.push(e.value[t][s-1])}a=a-dt.MATRIX+dt.COLUMNVECTOR}else if(m===1){for(let t=o-1;t<l;t+=i){n.push([]);n[n.length-1]=e.value[t].slice(s-1,u)}}else{for(let t=o-1;t<l;t+=i){n.push([]);for(let r=s-1;r<u;r+=m){n[n.length-1].push(e[t][r])}}}Object.freeze(n);return Object.freeze({value:n,unit:e.unit,dtype:a})};const multResultType=(e,t)=>{if(e.dtype&dt.ROWVECTOR&&t.dtype&dt.COLUMNVECTOR){return dt.RATIONAL}else if(e.dtype&dt.MATRIX&&t.dtype&dt.COLUMNVECTOR){return t.dtype}else if(e.dtype&dt.ROWVECTOR&&t.dtype&dt.MATRIX){return e.dtype}else{return dt.MATRIX+dt.RATIONAL}};const operandFromRange=e=>{const t=[];if(Rnl.greaterThan(e[2],e[0])){for(let r=e[0];Rnl.lessThan(r,e[2]);r=Rnl.add(r,e[1])){t.push(r)}}else{for(let r=e[0];Rnl.greaterThanOrEqualTo(r,e[2]);r=Rnl.add(r,e[1])){t.push(r)}}if(!Rnl.areEqual(t[t.length-1],e[2])){t.push(e[2])}Object.freeze(t);return Object.freeze({value:t,unit:{expos:allZeros},dtype:dt.RATIONAL+dt.ROWVECTOR})};const operandFromTokenStack=(e,t,r)=>{if(t===0&&r===0){return Object.freeze({value:new Array(0),unit:null,dtype:dt.ROWVECTOR})}else if(t===1&&r===1){return e.pop()}else if(t===1||r===1){const n=Math.max(t,r);let a;let o=e[e.length-1].dtype;if(t===1&&o&dt.COLUMNVECTOR){o=o-dt.COLUMNVECTOR+dt.MATRIX;a=new Array(e[0].value.length);for(let t=0;t<e[0].value.length;t++){a[t]=[];for(let r=0;r<n;r++){a[t][r]=e[r].value[t]}}for(let t=0;t<n;t++){e.pop()}}else{a=new Array(n);o+=t===1?dt.ROWVECTOR:dt.COLUMNVECTOR;for(let t=n-1;t>=0;t--){a[t]=e.pop().value}}Object.freeze(a);return Object.freeze({value:a,unit:o&dt.RATIONAL?{expos:allZeros}:null,dtype:o})}else{const n=new Array(t);const a=e[e.length-1].dtype+dt.MATRIX;for(let e=0;e<t;e++){n[e]=new Array(r)}for(let a=t-1;a>=0;a--){for(let t=r-1;t>=0;t--){n[a][t]=e.pop().value}}Object.freeze(n);return Object.freeze({value:n,unit:a&dt.RATIONAL?{expos:allZeros}:null,dtype:a})}};const zeros=(e,t)=>{if(e===1){return{value:new Array(t).fill(Rnl.zero),unit:allZeros,dtype:dt.RATIONAL+dt.ROWVECTOR}}else if(t===1){return{value:new Array(e).fill(Rnl.zero),unit:allZeros,dtype:dt.RATIONAL+dt.COLUMNVECTOR}}else{const r=[];for(let n=0;n<e;n++){r.push(new Array(t).fill(Rnl.zero))}Object.freeze(r);return Object.freeze({value:r,unit:{expos:allZeros},dtype:dt.RATIONAL+dt.MATRIX})}};const Matrix=Object.freeze({convertFromBaseUnits:convertFromBaseUnits,convertToBaseUnits:convertToBaseUnits,display:display$1,displayAlt:displayAlt,displayMapOfVectors:displayMapOfVectors,displayAltMapOfVectors:displayAltMapOfVectors,identity:identity,invert:invert,isVector:isVector,multResultType:multResultType,operandFromRange:operandFromRange,operandFromTokenStack:operandFromTokenStack,submatrix:submatrix,zeros:zeros});const columnListFromRange=(e,t)=>{const r=[];for(let n=e;n<=t;n++){r.push(n)}return r};const valueFromDatum=e=>e==="true"?true:e==="false"?false:numberRegEx$1.test(e)?Rnl.fromString(e):e===""?undefined:e;const datumFromValue=(e,t)=>e===true?"true":e===false?"false":e=t===dt.RATIONAL?"0 "+String(e[0])+"/"+String(e[1]):e;const range=(e,t,r,n)=>{let a;let o;const i=[];let l=[];let s=Object.create(null);if(e.value.data[0].length===1){a=0;o=0;for(let r=0;r<t.length;r++){if(t[r].dtype===dt.STRING){l.push(e.value.columnMap[t[r].value])}else if(t[r].dtype===dt.RATIONAL){l.push(Rnl.toNumber(t[r].value))}else if(t[r].dtype===dt.RANGE){const e=Rnl.toNumber(t[r].value[0]);const n=Rnl.toNumber(t[r].value[1]);for(let t=e;t<=n;t++){l.push(t)}}}}else if(t.length===1&&t[0].dtype===dt.RATIONAL){a=Rnl.toNumber(t[0].value)-1;o=a;l=columnListFromRange(0,e.value.data.length-1)}else if(t.length===1&&t[0].dtype===dt.RANGE){a=Rnl.toNumber(t[0].value[0])-1;o=Rnl.toNumber(t[0].value[1])-1;l=columnListFromRange(0,e.value.data.length-1)}else if(t.length===1&&t[0].dtype===dt.STRING){if(e.value.rowMap&&t[0].value in e.value.rowMap){a=e.value.rowMap[t[0].value];o=a;l=columnListFromRange(0,e.value.data.length-1)}else if(e.value.columnMap&&t[0].value in e.value.columnMap){a=0;o=e.value.data[0].length-1;l.push(e.value.columnMap[t[0].value])}else{return errorOprnd("BAD_ROW_NAME",t[0].value)}}else if(t.length===1&&t[0].dtype===dt.STRING+dt.COLUMNVECTOR){for(const e of t[0].value){i.push(e)}l=columnListFromRange(0,e.value.data.length-1)}else if(t.length===1&&t[0].dtype===dt.STRING+dt.ROWVECTOR){a=0;o=e.value.data[0].length;for(const r of t[0].value){l.push(e.columnIndicator[r])}}else if(t.length===2&&t[0].dtype===dt.STRING&&e.value.rowMap&&t[0].value in e.value.rowMap&&t[1].dtype===dt.STRING&&e.value.columnMap&&t[0].value in e.value.columnMap){a=e.value.rowMap[t[0].value];o=a;l.push(e.value.columnMap[t[0].value])}if(i.length===0&&a===o&&l.length===1){let t=e.value.dtype[l[0]];if(t&dt.QUANTITY){t-=dt.QUANTITY}const o=l[0];let i=valueFromDatum(e.value.data[o][a]);s.expos=t&dt.RATIONAL?allZeros:null;if(n&&e.value.units[o]){const t=e.value.units[o]?e.value.units[o]:undefined;const n=unitFromUnitName(t,r);i=Rnl.multiply(Rnl.add(i,n.gauge),n.factor);s.expos=n.expos}return{value:i,unit:s,dtype:t}}else if(l.length===1){const t=l[0];const r=e.value.units[t]?e.value.units[t]:{};s=e.unit&&e.unit[r]?e.unit[r]:{expos:null};const i=e.value.data[t].slice(a,o+1).map((e=>valueFromDatum(e)));const m=e.value.dtype[t]+dt.COLUMNVECTOR;const u={value:i,name:e.value.headings[t],unit:s,dtype:m};if(n&&s.gauge){return{value:Matrix.convertToBaseUnits(u,s.gauge,s.factor),name:e.value.headings[t],unit:{expos:clone(s.expos)},dtype:dt.RATIONAL+dt.COLUMNVECTOR}}else{return u}}else{const t=[];const r=[];const n=[];const s=[];const m=Object.create(null);const u=Object.create(null);const c=i.length===0?false:Object.create(null);for(let d=0;d<l.length;d++){t.push(e.value.headings[l[d]]);const p=e.value.units[l[d]];r.push(p);if(p&&!u[p]){u[p]=e.unit[p]}n.push(e.value.dtype[l[d]]);m[e.value.headings[d]]=d;if(i.length>0){const t=[];for(let r=0;r<i.length;r++){const n=i[r];t.push(e.value.data[l[d]][e.value.rowMap[n]]);c[n]=r}s.push(t)}else{s.push(e.value.data[l[d]].slice(a,o+1))}}return{value:{data:s,headings:t,columnMap:m,rowMap:false,units:r,dtype:n},unit:clone(u),dtype:dt.DATAFRAME}}};const numberRegEx$1=new RegExp("^(?:=|"+Rnl.numberPattern.slice(1)+"$)");const mixedFractionRegEx=/^-?(?:[0-9]+(?: [0-9]+\/[0-9]+))$/;const dataFrameFromCSV=(e,t)=>{const r=[];const n=[];const a=Object.create(null);let o=false;const i=[];const l=[];const s=Object.create(null);let m=false;const u=e.indexOf("\t")>-1?"\t":"|";if(e.charAt(0)==="`"){e=e.slice(1)}let c=0;let d=0;const p=e=>{let n=false;for(let e=0;e<r.length;e++){if(numberRegEx$1.test(r[e][0])){n=true;break}}if(!n){for(let e=0;e<r.length;e++){if(numberRegEx$1.test(r[e][1])){m=true;break}}}if(m){for(let e=0;e<r.length;e++){const n=r[e].shift();i.push(n);if(n.length>0){if(!s[n]){const e=unitFromUnitName(n,t);if(e){s[n]=e}else{return errorOprnd("DF_UNIT",n)}}}}if(o){Object.entries(o).forEach((([e,t])=>{o[e]=t-1}))}}};const h=/^(?:[Nn]ame|[Ii]tem|[Ll]able)$/;const f=e=>{e=e.trim();if(c===3&&d===0){p()}if(c===0){n.push(e);a[e]=d;if(d===0&&(e.length===0||h.test(e))){o=Object.create(null)}}else{if(c===1){r.push([])}if(e==="sumAbove()"){let t=Rnl.zero;for(const e of r[d]){if(!isNaN(e)){t=Rnl.add(t,Rnl.fromString(e))}}e=String(Rnl.toNumber(t))}r[d].push(e);if(o&&d===0){o[e]=c-1-(m?1:0)}}};if(e.indexOf('"')===-1){const t=e.split(/\r?\n/g);for(const e of t){if(e.length>0){d=0;const t=e.split(u);for(const e of t){f(e.trim());d++}c+=1}}if(c===3){p()}}else{let t="";let r=false;for(let n=0;n<e.length;n++){const a=e[n];const o=e[n+1];if(a==='"'&&r&&o==='"'){t+=a;++n;continue}if(a==='"'){r=!r;continue}if(a===u&&!r){f(t);t="";++d;continue}if(a==="\r"&&o==="\n"&&!r){f(t);t="";++c;d=0;++n;continue}if(a==="\n"&&!r){f(t);t="";++c;d=0;++n;continue}if(a==="\r"&&!r){f(t);t="";++c;d=0;++n;continue}t+=a}if(t.length>0){f(t)}if(c===2){p()}}for(let e=0;e<r.length;e++){for(let t=0;t<r[0].length;t++){const n=r[e][t];if(n===""){continue}l.push(numberRegEx$1.test(n)?dt.RATIONAL+(i.length>0&&i[e].length>0?dt.QUANTITY:0):n==="true"||n==="false"?dt.BOOLEAN:dt.STRING);break}}let b=false;if(r[0].length===1&&Object.keys(s).length===0){b=true;for(let e=1;e<l.length;e++){if(l[e]!==l[0]){b=false;break}}}if(b){const e=new Map;const t=Object.keys(a);for(let n=0;n<t.length;n++){e.set(t[n],valueFromDatum(r[n][0]))}return{value:e,unit:l[0]===dt.RATIONAL?allZeros:null,dtype:dt.MAP+l[0]}}else{return{value:{data:r,headings:n,columnMap:a,rowMap:o,units:i,dtype:l},unit:s,dtype:dt.DATAFRAME}}};const dataFrameFromVectors=(e,t)=>{const r=[];const n=[];const a=Object.create(null);const o=[];const i=[];const l=Object.create(null);const s=e[0].name&&e[0].name==="name"?Object.create(null):false;for(let m=0;m<e.length;m++){const u=e[m];const c=u.dtype&dt.ROWVECTOR?dt.ROWVECTOR:u.dtype&dt.COLUMNVECTOR?dt.COLUMNVECTOR:dt.ERROR;if(c===dt.ERROR){return errorOprnd("NOT_VECTOR")}n.push(u.name);a[u.name]=m;const d=u.dtype-c;r.push(u.value.map((e=>datumFromValue(e,d))));i.push(d);if(u.unit.name){o.push(u.unit.name);if(!l[u.unit.name]){const e=unitFromUnitName(u.unit.name,t);l[u.unit.name]=e}}else{o.push(null)}if(s){const t=e[0].value;for(let e=0;e<t.length;e++){s[t[e]]=e}}}return{value:{data:r,headings:n,columnMap:a,rowMap:s,units:o,dtype:i},unit:l,dtype:dt.DATAFRAME}};const matrix2table=(e,t,r,n)=>{const a=[];for(let t=0;t<=e.value[0].length;t++){a.push([])}const o=r.value;o.unshift("");const i=Object.create(null);for(let e=1;e<r.value[0].length;e++){i[o[e]]=e}const l=dt.RATIONAL+(e.unit?dt.QUANTITY:0);const s=Array(e.value[0].length).fill(l);s.unshift(null);let m=[];const u=Object.create(null);if(e.unit.name){m=Array(e.value[0].length).fill(e.unit.name);m.unshift("");u[e.unit.name]=unitFromUnitName(e.unit.name,n)}const c=Object.create(null);a[0]=t.value;const d=n.format?n.format.value:"h15";for(let e=0;e<t.value.length;e++){c[a[0][e]]=e}for(let t=0;t<e.value.length;t++){for(let r=0;r<e.value[0].length;r++){const n=e.value[t][r];a[r+1].push(format(n,d,"1000000."))}}return{value:{data:a,headings:o,columnMap:i,rowMap:c,units:m,dtype:s},unit:u,dtype:dt.DATAFRAME}};const append=(e,t,r,n)=>{const a=clone(e);const o=e.value.data[0].length;if(o!==t.value.length){return errorOprnd("BAD_CONCAT")}a.value.headings.push(t.name);a.value.columnMap[t.name]=e.value.headings.length-1;const i=t.dtype&dt.COLUMNVECTOR?t.dtype-dt.COLUMNVECTOR:t.dtype-dt.ROWVECTOR;if(t.unit.name&&t.unit.name.length>0){a.value.units.push(t.unit.name);const e=unitFromUnitName(t.unit.name,r);if(!a.unit[t.unit.name]){a.unit[t.unit.name]=e}if(n){const r=Matrix.convertFromBaseUnits(t,e.gauge,e.factor);a.value.data.push(r.map((e=>datumFromValue(e,i))))}else{a.value.data.push(t.value.map((e=>datumFromValue(e,i))))}}else{a.value.units.push(null)}a.value.dtype.push(i);return a};const quickDisplay=e=>{if(e===""){return""}e=addTextEscapes(e.trim());const t=e.indexOf("\t")>-1?/ *\t */g:/ *\| */g;const r=e.split(/\r?\n/g);let n="";if(r.length<3){n="\\begin{matrix}\\text{";for(let e=0;e<r.length;e++){n+=tablessTrim(r[e]).replace(t,"} & \\text{")+"} \\\\ \\text{"}n=n.slice(0,-10)+"\\end{matrix}"}else{n="\\begin{array}{l|cccccccccccccccccccccccc}\\text{";const e=new Array(r.length);for(let n=0;n<r.length;n++){e[n]=tablessTrim(r[n]).split(t)}let a=false;let o=false;for(let t=0;t<e[1].length;t++){if(numberRegEx$1.test(e[1][t])){o=true;break}}if(!o){for(let t=0;t<e[2].length;t++){if(numberRegEx$1.test(e[2][t])){a=true;break}}}for(let e=0;e<r.length;e++){n+=tablessTrim(r[e]).replace(t,"} & \\text{");n+=a&&e===1||!a&&e===0?"} \\\\ \\hline \\text{":"} \\\\ \\text{"}n=n.slice(0,-10)+"\\end{array}"}n=n.replace(/·/g,"$·$");return n};const isValidIdentifier=/^(?:[A-Za-zıȷ\u0391-\u03C9\u03D5\u210B\u210F\u2110\u2112\u2113\u211B\u212C\u2130\u2131\u2133]|(?:\uD835[\uDC00-\udc33\udc9c-\udcb5]))[A-Za-z0-9_\u0391-\u03C9\u03D5\u0300-\u0308\u030A\u030C\u0332\u20d0\u20d1\u20d6\u20d7\u20e1]*′*$/;const accentRegEx$1=/^([^\u0300-\u0308\u030A\u030C\u0332\u20d0\u20d1\u20d6\u20d7\u20e1]+)([\u0300-\u0308\u030A\u030C\u0332\u20d0\u20d1\u20d6\u20d7\u20e1])(.+)?/;const subscriptRegEx=/([^_]+)(_[^']+)?(.*)?/;const accentFromChar=Object.freeze({"̀":"\\grave","́":"\\acute","̂":"\\hat","̃":"\\tilde","̄":"\\bar","̅":"\\bar","̇":"\\dot","̈":"\\ddot","̊":"\\mathring","̌":"\\check","̲":"\\underline","⃐":"\\overleftharpoon","⃑":"\\overrightharpoon","⃖":"\\overleftarrow","⃗":"\\vec","⃡":"\\overleftrightarrow"});const formatColumnName=e=>{if(!isValidIdentifier.test(e)){return"\\text{"+addTextEscapes(e)+"}"}else{e=e.replace(/′/g,"'");let t=e.match(accentRegEx$1);if(t){e=accentFromChar[t[2]]+"{"+t[1]+"}";return e+(t[3]?t[3]:"")}else{t=e.match(subscriptRegEx);let r=t[1].length>1?`\\text{${t[1]}}`:t[1];if(t[2]){r+="_"+`\\text{${t[2].slice(1)}}`}return r+(t[3]?t[3]:"")}}};const isNotEmpty=e=>{for(let t=0;t<e.length;t++){if(e[t]!==""&&e[t]!==null){return true}}return false};const getNumInfo=e=>{const t=e.data.length;const r=new Array(t);const n=new Array(t);for(let a=0;a<t;a++){if(e.dtype[a]&dt.RATIONAL){r[a]={hasAlignChar:false,maxLenAfterAlignChar:0};n[a]=[];for(let t=0;t<e.data[0].length;t++){const o=e.data[a][t];const i=o.indexOf(".");const l=i>-1;const s=l?o.length-i-1:0;n[a].push({hasAlignChar:l,lenAfterAlignChar:s});if(l){r[a].hasAlignChar=true;if(s>r[a].maxLenAfterAlignChar){r[a].maxLenAfterAlignChar=s}}}}}return[r,n]};const displayNum=(e,t,r,n)=>{let a=formattedDecimal(e,n);const o=t.maxLenAfterAlignChar-r.lenAfterAlignChar;if(t.hasAlignChar&&(o>0||!r.hasAlignChar)){a+="\\phantom{";if(t.hasAlignChar&&!r.hasAlignChar){a+=n.slice(-1)==="."?".":"{,}"}if(o>0){a+="0".repeat(o)}a+="}"}return a};const totalRegEx=/^(?:total|sum)/i;const display$2=(e,t="h3",r="1,000,000.",n=false)=>{if(e.data.length===0){return""}const a=e.data[0].length;const o=e.data.length;const i=a>5&&!e.rowMap;const l=o+(i?1:0);let s="\\begin{array}{";s+=e.rowMap?"l|":i?"r|":"";for(let t=1;t<l;t++){s+=e.dtype[t]&dt.RATIONAL?"r ":"l "}s=s.slice(0,-1)+"}";if(!n){if(i){s+="&"}for(let t=0;t<o;t++){s+="{"+formatColumnName(e.headings[t])+"}&"}s=s.slice(0,-1)+" \\\\ "}if(isNotEmpty(e.units)){if(i){s+="&"}for(let t=0;t<o;t++){let r="";if(e.units[t]&&e.units[t].length>0){const n=unitTeXFromString(e.units[t]);r=n.replace("\\;\\, ","")}else{r=""}s+=r+"&"}s=s.slice(0,-1)+" \\\\ "}s+="\\hline ";const[m,u]=getNumInfo(e);for(let n=0;n<a;n++){if(n===a-1&&totalRegEx.test(e.data[0][n])){s+="\\hline "}if(i){s+=String(n+1)+" & "}for(let a=0;a<o;a++){const o=e.data[a][n];s+=mixedFractionRegEx.test(o)?format(Rnl.fromString(o),t,r)+"&":numberRegEx$1.test(o)?displayNum(o,m[a],u[a][n],r)+"&":o===""?"&":"\\text{"+addTextEscapes(o)+"}&"}s=s.slice(0,-1)+" \\\\ "}s=s.slice(0,-3).trim();s+="\\end{array}";return s};const displayAlt$1=(e,t="h3",r=false)=>{if(e.data.length===0){return""}const n=e.data[0].length;const a=e.data.length;const o=n>5&&!e.rowMap;let i="``";if(!r){if(o){i+="|"}i+=(e.headings[0]==="name"||e.headings[0]==="item"?"":e.headings[0])+"|";for(let t=1;t<a;t++){i+=e.headings[t]+"|"}i=i.slice(0,-1)+"\n"}if(isNotEmpty(e.units)){if(o){i+="|"}for(let t=0;t<a;t++){i+=e.units[t]+"|"}i=i.slice(0,-1)+"\n"}for(let r=0;r<n;r++){if(o){i+=String(r+1)+"|"}for(let n=0;n<a;n++){const a=e.data[n][r];if(mixedFractionRegEx.test(a)){i+=format(Rnl.fromString(a),t,"100000.")+"|"}else{i+=a+"|"}}i=i.slice(0,-1)+"\n"}i=i.slice(0,-1).trim();i+="``";return i};const DataFrame=Object.freeze({append:append,dataFrameFromCSV:dataFrameFromCSV,dataFrameFromVectors:dataFrameFromVectors,matrix2table:matrix2table,display:display$2,displayAlt:displayAlt$1,quickDisplay:quickDisplay,range:range});const checkUnitEquality=(e,t)=>{let r;let n;if(e.expos&&t.expos){r=e.expos;n=t.expos}else{r=e;n=t}if(Array.isArray(r)){if(Array.isArray(n)){if(r.length!==n.length){return false}r.forEach(((e,t)=>{if(e!==n[t]){return false}}));return true}else{return false}}else{return r===n}};const append$1=(e,t,r,n)=>{let a;let o;if(e.dtype&dt.MAP){if(n!=="scalar"){return errorOprnd("BAD_APPEND",n)}a=e;o=t}else{if(r!=="scalar"){return errorOprnd("BAD_APPEND",r)}a=t;o=e}if(!(a.dtype&o.dtype)){errorOprnd("MAP_APPEND")}if(!checkUnitEquality(a.unit,o.unit)){errorOprnd("UNIT_APEND")}a.value.set(o.name,o.value);return a};const convertFromBaseUnits$1=(e,t,r)=>{e=mapMap(e,(e=>Rnl.divide(e,r)));if(!Rnl.isZero(t)){e=mapMap(e,(e=>Rnl.subtract(e,t)))}return e};const convertToBaseUnits$1=(e,t,r)=>{if(!Rnl.isZero(t)){e=mapMap(e,(e=>Rnl.add(e,t)))}return mapMap(e,(e=>Rnl.multiply(e,r)))};const display$3=(e,t,r,n=false)=>{const a=e.value.plain?e.value.plain:e.value;let o="";let i="";for(const[e,n]of a.entries()){o+=formatColumnName(e)+" & ";i+=format(n,t,r)+" & "}o=o.slice(0,-3);i=i.slice(0,-3);let l="\\begin{array}{c}";if(!n){l+=o+" \\\\ \\hline "}l+=i+"\\end{array}";if(e.unit&&e.unit.name){l+="\\;"+unitTeXFromString(e.unit.name)}return l};const displayAlt$2=(e,t,r,n=false)=>{const a=e.value.plain?e.value.plain:e.value;let o="";let i="";for(const[e,n]of a.entries()){o+=e+" | ";i+=format(n,t,r)+" | "}o=o.slice(0,-3);i=i.slice(0,-3);let l="``";if(!n){l+=o+"\n"}l+=i+"``";if(e.unit&&e.unit.name){l=`${l} '${e.unit.name}'`}return l};const singleValueFromMap=(e,t,r,n)=>{if(!e.value.has(t)){return errorOprnd("BAD_KEY",t)}const a=clone(e.value.get(t));if(!r){return{value:a,unit:e.unit,dtype:e.dtype-dt.MAP}}else if(n){return{value:a,unit:{expos:e.unit.expos},dtype:e.dtype-dt.MAP}}else{return{value:a,unit:allZeros,dtype:e.dtype-dt.MAP}}};const valueFromMap=(e,t,r)=>{for(let e=0;e<t.length;e++){if(t[e].dtype===dt.RATIONAL){return errorOprnd("NUM_KEY")}t[e]=t[e].value}if(t.length===1){const n=e.dtype&dt.RATIONAL;const a=t.length>1||r;return singleValueFromMap(e,t[0],n,a)}else{const r=new Map;for(let n=0;n<t.length;n++){r.set(t[n],e.value.get(t[n]))}return{value:r,unit:e.unit,dtype:e.dtype}}};const map=Object.freeze({append:append$1,convertFromBaseUnits:convertFromBaseUnits$1,convertToBaseUnits:convertToBaseUnits$1,display:display$3,displayAlt:displayAlt$2,valueFromMap:valueFromMap});const tt=Object.freeze({UNARY:0,BINARY:1,SUB:2,SUP:3,ACCENT:4,UNARYMINUS:5,DIV:6,PRIME:7,CURRENCY:8,ORD:9,VAR:10,NUM:11,SPACE:12,LONGVAR:13,LEFTBRACKET:14,RIGHTBRACKET:15,UNDEROVER:16,LEFTRIGHT:17,STRING:18,UNIT:19,BIN:20,ADD:21,MULT:22,REL:23,LOGIC:24,SEP:25,FUNCTION:26,ACCESSOR:28,ENVIRONMENT:29,FACTORIAL:30,SUPCHAR:31,ANGLE:32,ELLIPSIS:33,KEYWORD:34,PROPERTY:36,COMMENT:37,RETURN:38,TO:39,DATAFRAME:40,RICHTEXT:41});const minusRegEx=/^-(?![-=<>:])/;const numberRegEx$2=new RegExp(Rnl.numberPattern);const unitRegEx=/^(?:'[^']+'|[°ΩÅK])/;const texFromNumStr=(e,t)=>{let r="";if(e[2]){r="\\mathrm{"+e[2]+"}"}else if(e[5]){return texFromMixedFraction(e)}else{r=e[3];if(e[6]){r+="."+e[6]}r=formattedDecimal(r,t);if(e[8]){r+="\\%"}else if(e[7]){if(e[7].charAt(0)==="-"){r+="\\text{e-}"+e[7].slice(1)}else{r+="\\text{e}"+e[7]}}}if(e[1]){r="\\text{-}"+r}return r};const isUnary=e=>{switch(e.ttype){case tt.NUM:case tt.ORD:case tt.VAR:case tt.RIGHTBRACKET:case tt.LONGVAR:case tt.CURRENCY:case tt.SUPCHAR:case tt.PRIME:case tt.FACTORIAL:return false;default:return true}};const wordRegEx=/^(?:(?:[A-Za-zıȷ\u0391-\u03C9\u03D5\u212C\u2130\u2131\u210B\u2110\u2112\u2133\u211B\u212F\u210A\u2113\u2134]|(?:\uD835[\uDC00-\udc33\udc9c-\udccf\udd38-\udd50]))[A-Za-z0-9_\u0391-\u03C9\u03D5\u0300-\u0308\u030A\u030C\u0332\u20d0\u20d1\u20d6\u20d7\u20e1]*|!in|-->|->|left\.|right\.|log10|log2)/;const words=Object.freeze({true:["true","\\mathord{\\text{true}}",tt.ORD,""],false:["false","\\mathord{\\text{false}}",tt.ORD,""],j:["j","j",tt.ORD,""],cos:["cos","\\cos",tt.FUNCTION,""],cosd:["cosd","\\operatorname{\\cos_d}",tt.FUNCTION,""],if:["if","\\mathrel{\\mathrm{if}}",tt.LOGIC,""],else:["else","\\mathrel{\\mathrm{else}}",tt.LOGIC,""],and:["and","\\mathrel{\\mathrm{and}}",tt.LOGIC,""],or:["or","\\mathrel{\\mathrm{or}}",tt.LOGIC,""],for:["for","\\mathrel{\\mathrm{for}}",tt.KEYWORD,""],while:["while","\\mathrel{\\mathrm{while}}",tt.KEYWORD,""],in:["in","\\mathrel{\\mathrm{in}}",tt.KEYWORD,""],break:["break","\\mathrel{\\mathrm{break}}",tt.KEYWORD,""],to:["to","\\mathbin{\\mathrm{to}}",tt.TO,""],raise:["raise","\\mathrel{\\mathrm{raise}}",tt.UNARY,""],echo:["echo","\\mathrel{\\mathrm{echo}}",tt.UNARY,""],return:["return","\\mathrel{\\mathrm{return}}",tt.RETURN,""],sqrt:["sqrt","\\sqrt",tt.UNARY,""],otherwise:["otherwise","\\mathrel{\\mathrm{otherwise}}",tt.LOGIC,""],root:["root","\\sqrt",tt.BINARY,""],sin:["sin","\\sin",tt.FUNCTION,""],sind:["sind","\\operatorname{\\sin_d}",tt.FUNCTION,""],tan:["tan","\\tan",tt.FUNCTION,""],tand:["tand","\\operatorname{\\tan_d}",tt.FUNCTION,""],cotd:["cotd","\\operatorname{\\cot_d}",tt.FUNCTION,""],secd:["secd","\\operatorname{\\sec_d}",tt.FUNCTION,""],cscd:["cscd","\\operatorname{\\csc_d}",tt.FUNCTION,""],log:["log","\\log",tt.FUNCTION,""],ln:["ln","\\ln",tt.FUNCTION,""],log10:["log10","\\log_{10}",tt.FUNCTION,""],log2:["log2","\\log_{2}",tt.FUNCTION,""],"log!":["log!","\\operatorname{log!}",tt.FUNCTION,""],"π":["π","π",tt.ORD,""],"ℓ":["ℓ","ℓ",tt.VAR,""],modulo:["modulo","\\operatorname{modulo}",tt.MULT,""],"->":["->","→",tt.REL,""],"--\x3e":["--\x3e","\\xrightarrow",tt.UNARY,""],"<--\x3e":["<--\x3e","\\xrightleftarrows",tt.UNARY,""]});const miscRegEx=/^([/÷\u2215_:,;^+\\\-–−*×∘⊗⦼⊙√∛∜·.%∘|╏‖¦><=≈≟≠≡≤≥≅∈∉⋐!¡‼¬∧∨⊻~#?⇒⟶⟵→←&@′″∀∃∫∬∮∑([{⟨⌊⎿⌈⎾〖〗⏋⌉⏌⌋⟩}\])˽∣ℂℕℚℝℤℓℏ∠¨ˆˉ˙˜▪✓\u00A0\u20D7$£¥€₨₩₪]+)/;const miscSymbols=Object.freeze({"#":["#","#",tt.COMMENT,""],"/":["/","\\dfrac{",tt.DIV,""],"//":["//","\\tfrac{",tt.DIV,""],"///":["///","/",tt.MULT,""],"∕":["∕","∕",tt.MULT,""],"÷":["÷","÷",tt.MULT,""],_:["_","_",tt.SUB,""],"^":["^","^",tt.SUP,""],"+":["+","+",tt.ADD,""],"-":["-","-",tt.ADD,""],"–":["-","-",tt.ADD,""],"−":["-","-",tt.ADD,""],"*":["*","*",tt.MULT,""],"×":["×","×",tt.MULT,""],"∘":["∘","\\circ",tt.MULT,""],"⊗":["⊗","⊗",tt.MULT,""],"√":["√","\\sqrt",tt.UNARY,""],"∛":["∛","\\sqrt[3]",tt.UNARY,""],"∜":["∜","\\sqrt[4]",tt.UNARY,""],"+-":["+-","±",tt.BIN,""],"**":["**","\\star",tt.BIN,""],"·":["·","⋅",tt.MULT,""],"...":["...","\\dots",tt.ORD,""],"%":["%","\\%",tt.FACTORIAL,""],"^*":["^*","^*",tt.FACTORIAL,""],"-:":["-:","÷",tt.MULT,""],"=":["=","=",tt.REL,""],"≈":["≈","≈",tt.REL,""],"==":["==","==",tt.REL,""],"≡":["≡","≡",tt.REL,""],">":[">","\\gt",tt.REL,""],"<":["<","\\lt",tt.REL,""],"?=":["?=","≟",tt.REL,""],"≟":["≟","≟",tt.REL,""],"≠":["≠","≠",tt.REL,""],"!=":["!=","≠",tt.REL,""],"<>":["<>","≠",tt.REL,""],":=":[":=","≔",tt.REL,""],"<=":["<=","≤",tt.REL,""],"≤":["≤","≤",tt.REL,""],">=":[">=","≥",tt.REL,""],"≥":["≥","≥",tt.REL,""],"-=":["-=","≡",tt.REL,""],"~=":["~=","≅",tt.REL,""],"≅":["≅","≅",tt.REL,""],"~~":["~~","≈",tt.REL,""],"~":["~","\\sim",tt.REL,""],"=>":["=>","⇒",tt.REL,""],"⟶":["⟶","\\xrightarrow",tt.UNARY,""],"⟵":["⟵","\\xleftarrow",tt.UNARY,""],"⇒":["⇒","⇒",tt.REL,""],"<=>":["<=>","⇔",tt.REL,""],"-<":["-<","≺",tt.REL,""],">-":[">-","≻",tt.REL,""],"-<=":["-<=","⪯",tt.REL,""],">-=":[">-=","⪰",tt.REL,""],"_|_":["_|_","\\bot",tt.REL,""],"|--":["|--","⊢",tt.REL,""],"|==":["|==","\\models",tt.REL,""],"∈":["∈","∈",tt.REL,""],"∉":["∉","∉",tt.REL,""],"⋐":["⋐","⋐",tt.REL,""],"▪":["▪","\\mathrel{▪}",tt.REL,""],"!":["!","!",tt.FACTORIAL,""],"‼":["‼","!!",tt.FACTORIAL,""],"!!":["!!","!!",tt.FACTORIAL,""],"¡":["¡","¡",tt.FACTORIAL,""],"&":["&","\\mathbin{\\&}",tt.ADD,""],"&_":["&_","\\mathbin{\\underline{\\&}}",tt.ADD,""],"′":["′","'",tt.PRIME,""],"″":["″","''",tt.PRIME,""],"′′":["′′","''",tt.PRIME,""],"′′′":["′′′","'''",tt.PRIME,""],"∀":["∀","∀",tt.LOGIC,""],"∃":["∃","∃",tt.LOGIC,""],"∧":["∧","∧",tt.LOGIC,""],"∨":["∨","∨",tt.LOGIC,""],"⊻":["⊻","⊻",tt.LOGIC,""],"¬":["¬","¬",tt.UNARY,""],":":[":",":",tt.LOGIC,""],"∫":["∫","∫",tt.UNDEROVER,""],"∬":["∬","∬",tt.UNDEROVER,""],"∮":["∮","∮",tt.UNDEROVER,""],"∑":["∑","∑",tt.UNDEROVER,""],"(":["(","(",tt.LEFTBRACKET,")"],"[":["[","[",tt.LEFTBRACKET,"]"],"{":["{","\\{",tt.LEFTBRACKET,"\\}"],"{:":["{:","{",tt.LEFTBRACKET,"}"],"⟨":["⟨","⟨",tt.LEFTBRACKET,"⟩"],")":[")",")",tt.RIGHTBRACKET,""],"]":["]","]",tt.RIGHTBRACKET,""],"}":["}","\\}",tt.RIGHTBRACKET,""],"⟩":["⟩","⟩",tt.RIGHTBRACKET,""],":}":[":}","}",tt.RIGHTBRACKET,""],"|":["|","|",tt.LEFTRIGHT,""],"||":["||","\\Vert ",tt.LEFTRIGHT,""],"‖":["‖","\\Vert ",tt.LEFTRIGHT,""],"<<":["<<","⟨",tt.LEFTBRACKET,"⟩"],">>":[">>","⟩",tt.RIGHTBRACKET,""],"⎿":["⎿","\\lfloor ",tt.LEFTBRACKET,"\\rfloor "],"⌋":["⌋","\\rfloor ",tt.RIGHTBRACKET,""],"⏌":["⏌","\\rfloor ",tt.RIGHTBRACKET,""],"⌈":["⌈","\\lceil ",tt.LEFTBRACKET,"\\rceil "],"⎾":["⎾","\\lceil ",tt.LEFTBRACKET,"\\rceil "],"⌉":["⌉","\\rceil ",tt.RIGHTBRACKET,""],"⏋":["⏋","\\rceil ",tt.RIGHTBRACKET,""],"〖":["〖","{",tt.LEFTBRACKET,"}"],"〗":["〗","}",tt.RIGHTBRACKET,""],"¦":["¦","\\mid ",tt.REL,""],"ℂ":["ℂ","ℂ",tt.ORD,""],"ℕ":["ℕ","ℕ",tt.ORD,""],"ℚ":["ℚ","ℚ",tt.ORD,""],"ℝ":["ℝ","ℝ",tt.ORD,""],"ℤ":["ℤ","ℤ",tt.ORD,""],"ℏ":["ℏ","ℏ",tt.ORD,""],"→":["→","→",tt.REL,""],"←":["←","←",tt.REL,""],">->":[">->","↣",tt.REL,""],"->>":["->>","↠",tt.REL,""],"|->":["|->","↦",tt.REL,""],"<--":["<--","\\xleftarrow",tt.UNARY,""],"==>":["==>","\\xRightarrow",tt.UNARY,""],"<==":["<==","\\xLeftarrow",tt.UNARY,""],"<--\x3e":["<--\x3e","\\xleftrightarrow",tt.UNARY,""],"<==>":["<==>","\\xLeftrightarrow",tt.UNARY,""],"∠":["∠","∠",tt.ANGLE,""],"✓":["✓","✓",tt.ORD,""],"˽":["˽","~",tt.SPACE,""],"\\,":["\\,",",\\:",tt.SEP,""],"\\;":["\\;",";\\:",tt.SEP,""],"…":["…","…",tt.ORD,""],"..":["..","..",tt.RANGE,""],",":[",",",\\:",tt.SEP,""],";":[";",";\\:",tt.SEP,""],$:["$","\\$",tt.CURRENCY,""],"£":["£","£",tt.CURRENCY,""],"¥":["¥","¥",tt.CURRENCY,""],"€":["€","€",tt.CURRENCY,""],"₨":["₨","₨",tt.CURRENCY,""],"₩":["₩","₩",tt.CURRENCY,""],"₪":["₪","₪",tt.CURRENCY,""]});const texFunctionRegEx=/^(\\[A-Za-z]+\.?|\\([:.!\u0020]|'+))/;const texFunctions=Object.freeze({"\\aleph":["\\aleph","ℵ",tt.VAR,""],"\\beth":["\\beth","ℶ",tt.VAR,""],"\\gimel":["gimel","ℷ",tt.VAR,""],"\\daleth":["daleth","ℸ",tt.VAR,""],"\\atop":["\\atop","\\atop{",tt.DIV,""],"\\cdots":["\\cdots","⋯",tt.BIN,""],"\\vdots":["\\vdots","⋮",tt.BIN,""],"\\ddots":["\\ddots","⋱",tt.BIN,""],"\\iff":["\\iff","\\iff",tt.LOGIC,""],"\\land":["\\land","\\land",tt.BIN,""],"\\lor":["\\lor","\\lor",tt.BIN,""],"\\in":["\\in","∈",tt.REL,""],"\\notin":["\\notin","∉",tt.REL,""],"\\Subset":["\\Subset","⋐",tt.REL,""],"\\left.":["\\left.","\\left.",tt.LEFTBRACKET,"\\right."],"\\right.":["\\right.","\\right.",tt.RIGHTBRACKET,""],"\\mod":["\\mod","\\mod",tt.BIN,""],"\\diamond":["\\diamond","\\diamond",tt.ORD,""],"\\square":["\\square","\\square",tt.ORD,""],"\\int":["\\int","\\int",tt.UNDEROVER,""],"\\iint":["\\iint","\\iint",tt.UNDEROVER,""],"\\iiint":["\\iiint","\\iiint",tt.UNDEROVER,""],"\\oint":["\\oint","\\oint",tt.UNDEROVER,""],"\\oiint":["\\oiint","\\oiint",tt.UNDEROVER,""],"\\oiiint":["\\oiiint","\\oiiint",tt.UNDEROVER,""],"\\over":["\\over","\\dfrac{",tt.DIV],"\\sum":["\\sum","\\sum",tt.UNDEROVER,""],"\\prod":["\\prod","\\prod",tt.UNDEROVER,""],"\\quad":["\\quad","\\quad",tt.SPACE,""],"\\qquad":["\\qquad","\\qquad",tt.SPACE,""]});const accents$1=Object.freeze(["Bbb","Overrightarrow","acute","bar","bm","bold","boldsymbol","breve","check","ddot","dot","frak","grave","hat","mathbb","mathbf","mathcal","mathfrak","mathit","mathnormal","mathring","mathrm","mathscr","mathsf","mathtt","overbrace","overgroup","overleftarrow","overleftharpoon","overleftrightarrow","overline","overrightarrow","overrightharpoon","tilde","underbrace","undergroup","underleftarrow","underleftrightarrow","underline","underrightarrow","utilde","vec","widecheck","widehat","widetilde"]);const mathOperators=Object.freeze(["arccos","arcsin","arctan","arctg","arcctg","cos","cosec","cosh","cot","cotg","coth","csc","ctg","cth","det","dim","exp","gcd","lg","lim","ln","log","max","min","sec","sin","sinh","sh","sqrt","sup","tan","tanh","tg","th"]);const colors=Object.freeze(["blue","gray","green","orange","pink","purple","red"]);const unaries=Object.freeze(["bcancel","boxed","cancel","clap","color","llap","mathclap","not","operatorname","phantom","pu","rlap","sout","sqrt","tag","textbf","textit","textmd","textnormal","textrm","textsc","textsf","texttt","textup","xLeftarrow","xLeftrightarrow","xRightarrow","xcancel","xleftarrow","xleftrightarrow","xleftharpoondown","xleftharpoons","xleftharpoonup","xlongequal","xmapsto","xrightarrow","xrightharpoondown","xrightharpoonup","xrightleftarrows","xrightleftharpoons","xtofrom","xtwoheadleftarrow","xtwoheadrightarrow"]);const binaries=Object.freeze(["dfrac","frac","lower","overset","raisebox","stackrel","tag","tfrac","underset"]);const texREL=Object.freeze(["Bumpeq","Colonapprox","Coloneq","Coloneqq","Colonsim","Darr","Doteq","Downarrow","Eqcolon","Eqqcolon","Harr","Larr","Leftarrow","Leftrightarrow","Lleftarrow","Longleftarrow","Longleftrightarrow","Longrightarrow","Lrarr","Lsh","Rarr","Rightarrow","Rrightarrow","Rsh","Supset","Subset","Uarr","Uparrow","Updownarrow","Vdash","Vvdash","approx","approxeq","asymp","backepsilon","backsim","backsimeq","between","bowtie","bumpeq","circeq","circlearrowleft","circlearrowright","colonapprox","coloneq","coloneqq","colonsim","cong","curlyeqprec","curlyeqsucc","curvearrowleft","curvearrowright","dArr","darr","dashleftarrow","dashrightarrow","dashv","dblcolon","doteq","doteqdot","downarrow","downdownarrows","downharpoonleft","downharpoonright","eqcirc","eqcolon","eqqcolon","eqsim","eqslantgtr","eqslantless","equiv","fallingdotseq","frown","ge","geq","geqq","geqslant","gets","gg","ggg","gggtr","gnapprox","gneq","gneqq","gnsim","gt","gtrapprox","gtreqless","gtreqqless","gtrless","gtrsim","gvertneqq","hArr","harr","hookleftarrow","hookrightarrow","iff","impliedby","implies","in","isin","Join","gets","impliedby","implies","in","isin","lArr","larr","le","leadsto","leftarrow","leftarrowtail","leftharpoondown","leftharpoonup","leftleftarrows","leftrightarrow","leftrightarrows","leftrightharpoons","leftrightsquigarrow","leq","leqq","leqslant","lessapprox","lesseqgtr","lesseqqgtr","lessgtr","lesssim","ll","lll","llless","lnapprox","lneq","lneqq","lnsim","longleftarrow","longleftrightarrow","longmapsto","longrightarrow","looparrowleft","looparrowright","lrArr","lrarr","lt","lvertneqq","mapsto","mid","models","multimap","nLeftarrow","nLeftrightarrow","nRightarrow","nVDash","nVdash","ncong","ne","nearrow","neq","nexists","ngeq","ngeqq","ngeqslant","ngtr","ni","nleftarrow","nleftrightarrow","nleq","nleqq","nleqslant","nless","nmid","notin","notni","nparallel","nprec","npreceq","nrightarrow","nshortmid","nshortparallel","nsim","nsubseteq","nsubseteqq","nsucc","nsucceq","nsupseteq","nsupseteqq","ntriangleleft","ntrianglelefteq","ntriangleright","ntrianglerighteq","nvDash","nvdash","nwarrow","owns","parallel","perp","pitchfork","prec","precapprox","preccurlyeq","preceq","precnapprox","precneqq","precnsim","precsim","propto","rArr","rarr","restriction","rightarrow","rightarrowtail","rightharpoondown","rightharpoonup","rightleftarrows","rightleftharpoons","rightrightarrows","rightsquigarrow","risingdotseq","searrow","shortmid","shortparallel","sim","simeq","smallfrown","smallsmile","smile","sqsubset","sqsubseteq","sqsupset","sqsupseteq","sub","sube","subset","subseteq","subseteqq","subsetneq","subsetneqq","succ","succapprox","succcurlyeq","succeq","succnapprox","succneqq","succnsim","succsim","supe","supset","supseteq","supseteqq","supsetneq","supsetneqq","swarrow","thickapprox","thicksim","to","trianglelefteq","triangleq","trianglerighteq","twoheadleftarrow","twoheadrightarrow","uArr","uarr","uparrow","updownarrow","upharpoonleft","upharpoonright","upuparrows","varpropto","varsubsetneq","varsubsetneqq","varsupsetneq","varsupsetneqq","vartriangle","vartriangleleft","vartriangleright","vcentcolon","vdash","vDash"]);const superRegEx=/^⁻?[²³¹⁰⁴⁵⁶⁷⁸⁹]+/;const cloneToken=e=>[e[0],e[1],e[2],e[3]];const accentFromChar$1=Object.freeze({"̀":"\\grave","́":"\\acute","̂":"\\hat","̃":"\\tilde","̄":"\\bar","̅":"\\bar","̇":"\\dot","̈":"\\ddot","̊":"\\mathring","̌":"\\check","̲":"\\underline","⃐":"\\overleftharpoon","⃑":"\\overrightharpoon","⃖":"\\overleftarrow","⃗":"\\vec","⃡":"\\overleftrightarrow"});const wideAccentFromChar=Object.freeze({"̀":"\\grave","́":"\\acute","̂":"\\widehat","̃":"\\widetilde","̄":"\\overline","̅":"\\overline","̇":"\\dot","̈":"\\ddot","̊":"\\mathring","̌":"\\check","̲":"\\underline","⃐":"\\overleftharpoon","⃑":"\\overrightharpoon","⃖":"\\overleftarrow","⃗":"\\overrightarrow","⃡":"\\overleftrightarrow"});const groupSubscript=e=>{const t=e.indexOf("_");return t===-1?e:e.slice(0,t+1)+"{"+e.slice(t+1)+"}"};const checkForTrailingAccent=e=>{const t=e.slice(-1);if(/[\u0300-\u0308\u030A\u030C\u0332\u20d0\u20d1\u20d6\u20d7\u20e1]/.test(t)){e=e.slice(0,-1);return e==="i"?accentFromChar$1[t]+"{ı}":e==="j"?accentFromChar$1[t]+"{ȷ}":e.length===1?accentFromChar$1[t]+"{"+e+"}":wideAccentFromChar[t]+"{"+e+"}"}else{return e}};const lexOneWord=(e,t)=>{const r=wordRegEx.exec(e);if(r){let n=r[0].replace(/_*$/,"");const a=e.charAt(n.length);const o=words[n];if(o&&a!=="′"){return o}else if(/^\(/.test(a)){return t.ttype===tt.ACCENT?[n,n+"}{",tt.FUNCTION,""]:n==="sqrt"?[n,"\\sqrt",tt.UNARY,""]:n==="f"?[n,n,tt.FUNCTION,""]:isIn(n,mathOperators)?[n,"\\"+n,tt.FUNCTION,""]:[n,"\\operatorname{"+groupSubscript(n)+"}",tt.FUNCTION,""]}else if(t.ttype===tt.ACCESSOR){return[n,n,tt.PROPERTY,""]}else if(/[_\u0300-\u0308\u030A\u030C\u0332\u20d0\u20d1\u20d6\u20d7\u20e1]/.test(n)){let t="";if(n.indexOf("_")===-1){t=checkForTrailingAccent(n);return[n,t,n.length>2?tt.LONGVAR:tt.VAR,""]}else{const r=n.split("_");for(let e=r.length-1;e>=0;e--){r[e]=checkForTrailingAccent(r[e]);if(e>0){r[e]="_\\text{"+r[e]+"}"}}t=r.join("");const a=/^′*/.exec(e.slice(n.length));if(a){n+=a[0];t+="'".repeat(a[0].length)}const o=t.indexOf("_");if(o>-1){t=t.slice(0,o)+"{"+t.slice(o)+"}"}return[n,t,r[0].length>1?tt.LONGVAR:tt.VAR,""]}}else if(n.length===2&n.charAt(0)==="\ud835"){return[n,n,tt.VAR,""]}else if(n.length>1){return[n,n,tt.LONGVAR,""]}else{if(n.charAt(0)==="\ud835"){return[n.substring(0,2),n.substring(0,2),tt.VAR,""]}else{return[n.charAt(0),n.charAt(0),tt.VAR,""]}}}};const lex=(e,t,r,n=false)=>{let a=0;let o="";let i;if(e.charAt(0)==='"'){a=e.indexOf('"',1);if(a>0){o=e.substring(1,a).replace(/\r?\n.*/,"");return['"'+o+'"',o,tt.STRING,""]}else{return[e,e.replace(/\r?\n.*/,""),tt.STRING,""]}}if(/^#/.test(e)){o=e.slice(2);a=o.indexOf("\n");if(a>-1){const e=o.indexOf("\n");if(e>-1&&e<a){a=e}}if(a>-1){o=o.slice(0,a)}return[`#${o}`,`\\text{\\texttt{ \\#${o}}}`,tt.COMMENT,""]}if(/^``/.test(e)){a=e.indexOf("`",e.charAt(2)==="`"?3:2);const r=a>0?e.slice(2,a):e.slice(2);const o=tablessTrim(r);let i="";if(n){i=DataFrame.quickDisplay(o)}else{const e=DataFrame.dataFrameFromCSV(o,{});if(e.dtype===dt.DATAFRAME){i=DataFrame.display(e.value,"h3",t)}else{i=map.display(e,"h3",t)}}return["``"+r+"``",i,tt.DATAFRAME,""]}if(e.charAt(0)==="`"){a=e.indexOf("`",1);if(a>0){o=e.substring(1,a).replace(/\r?\n.*/,"");return["`"+o+"`",o,tt.RICHTEXT,""]}else{return[e,e.replace(/\r?\n.*/,""),tt.RICHTEXT,""]}}if(unitRegEx.test(e)){a=e.indexOf("'",1);if(a>0){o=e.substring(1,a);return["'"+o+"'",unitTeXFromString(o),tt.UNIT,""]}else{return[e.charAt(0),e.charAt(0),tt.UNIT,""]}}i=texFunctionRegEx.exec(e);if(i){const e=i[0];o=e.substring(1);if(isIn(o,accents$1)){return[e,e,tt.ACCENT,""]}if(isIn(o,unaries)){return[e,e,tt.UNARY,""]}if(isIn(o,colors)){return[e,"\\textcolor{"+o+"}",tt.UNARY,""]}if(isIn(o,binaries)){return[e,e,tt.BINARY,""]}if(isIn(o,texREL)){return[e,e,tt.REL,""]}const t=texFunctions[e];if(t){return cloneToken(t)}return[e,e,tt.ORD,""]}if(minusRegEx.test(e)){if(isUnary(r)){const r=e.match(numberRegEx$2);if(r){o=texFromNumStr(r,t);return[r[0],o,tt.NUM,""]}}return["-","-",tt.ADD,""]}const l=e.match(numberRegEx$2);if(l){o=texFromNumStr(l,t);return[l[0],o,tt.NUM,""]}if(/^_[([{]/.test(e)){return["_","_",tt.SUB,""]}const s=lexOneWord(e,r);if(s){return cloneToken(s)}const m=superRegEx.exec(e);if(m){return[m[0],m[0],tt.SUPCHAR,""]}i=miscRegEx.exec(e);if(i){const e=i[0];for(let t=e.length;t>=1;t--){o=e.substr(0,t);if(miscSymbols[o]){return cloneToken(miscSymbols[o])}}}const u=e.charAt(0);if(u==="."&&(r.ttype===tt.VAR||r.ttype===tt.LONGVAR||r.ttype===tt.STRING||r.input==="]"||r.ttype===tt.PROPERTY)){return[".","{.}",tt.ACCESSOR,""]}return[u,addTextEscapes(u),tt.VAR,""]};const builtInFunctions=["Gamma","Im","Re","abs","acos","acosd","acosh","acot","acotd","acoth","acsc","acscd","acsch","argument","asec","asecd","asech","asin","asind","asinh","atan","atan2","atand","atanh","binomial","chr","cos","cosd","cosh","cosh","cot","cotd","coth","coth","count","csc","cscd","csch","csch","exp","fetch","format","gcd","hypot","isNaN","length","lerp","ln","log","log10","log2","logFactorial","logGamma","logn","logΓ","matrix2table","random","rms","round","roundSig","roundn","sec","secd","sech","sech","sign","sin","sind","sinh","startSvg","string","tan","tand","tanh","tanh","trace","transpose","zeros","Γ"];const builtInReducerFunctions=["accumulate","dataframe","max","mean","median","min","product","range","stddev","sum","variance"];const trigFunctions=["cos","cosd","cot","cotd","csc","cscd","sec","secd","sin","sind","tand","tan"];const rationalRPN=e=>{const t=Rnl.fromString(e);return"®"+String(t[0])+"/"+String(t[1])};const calligraphicRegEx=/^(:?\uD835[\uDC9C-\uDCCF]|[\udc9d\udca0\udca1\udca3\udca4\udca7\udca8\udcad\udcba\udcbc\udcc1\udcc4])/;const bmpCalligraphic={"ℬ":"B","ℰ":"E","ℱ":"F","ℋ":"H","ℐ":"I","ℒ":"L","ℳ":"M","ℛ":"R","ℯ":"e","ℊ":"g","ℓ":"l","ℴ":"o"};const assertCalligraphic=e=>{const t=calligraphicRegEx.exec(e);if(!t){return e}let r="";if(e.charAt(0)==="\ud835"){const t=e.charCodeAt(1);r=String.fromCharCode(t-(t<=56501?56411:56405))}else{r=bmpCalligraphic[e.charAt(0)]}return`\\mathcal{${r}}`+e.slice(t[0].length)};const checkForUnaryMinus=(e,t)=>{switch(t.ttype){case tt.NUM:case tt.ORD:case tt.VAR:case tt.RIGHTBRACKET:case tt.LONGVAR:case tt.PROPERTY:case tt.UNIT:case tt.SUPCHAR:case tt.PRIME:case tt.FACTORIAL:return e}if(e.output==="-"){return{input:"~",output:"\\text{-}",ttype:tt.UNARYMINUS}}else{return{input:"+",output:"~+",ttype:tt.UNARYMINUS}}};const numFromSuperChar={"⁻":"-","²":"2","³":"3","¹":"1","⁰":"0","⁴":"4","⁵":"5","⁶":"6","⁷":"7","⁸":"8","⁹":"9"};const numFromSupChars=e=>{let t="";for(const r of e){t+=numFromSuperChar[r]}return t};const colorSpecRegEx=/^(#([a-f0-9]{6}|[a-f0-9]{3})|[a-z]+|\([^)]+\))/i;const factors=/^[A-Za-zıȷ\u0391-\u03C9\u03D5\u210B\u210F\u2110\u2112\u2113\u211B\u212C\u2130\u2131\u2133\uD835[({√∛∜]/;const setUpIf=(e,t,r,n)=>{const a=e.replace(/^.*\xa0/,"").replace(/§$/," ");r.push(a);e=e.length===a.length?"":e.slice(0,e.length-a.length);n.numArgs+=1;if(t==="otherwise"){e+="true"}return e};const functionExpoRegEx=/^[\^⁻⁰¹²³\u2074-\u2079]/;const openParenRegEx=/^ *\(/;const exponentOfFunction=(e,t,r)=>{let n="";if(e.charAt(0)!=="^"){n=/^[⁰¹²³\u2074-\u2079⁻]+/.exec(e)[0];n=numeralFromSuperScript(n)}else if(!openParenRegEx.test(e.slice(1))){n=lex(e.slice(1),t,{input:"",output:"",ttype:50})[0]}else{n="(";let t=1;for(let r=2;r<e.length;r++){const a=e.charAt(r);n+=a;if("\"'`".indexOf(a)>-1){const t=e.indexOf(a,r+1);n+=e.slice(r+1,t+1);r=t}else if("([{⟨⌈⎿⎾〖".indexOf(a)>-1){t+=1}else if(")]}⟩⌉⌋⏌〗".indexOf(a)>-1){t-=1}if(t===0){break}}}const a=n.charAt(0)==="("?n.slice(1,-1).trim():n;if(r){const e=parse(a,t,true);return[n,"{"+e[0]+"}",e[1]]}else{const e=parse(a,t,false);return[n,"{"+e+"}",""]}};const testForImplicitMult=(e,t,r)=>{if(t.length>0){const e=t[t.length-1].ttype;if(e===tt.UNARY||e===tt.BINARY){return false}if(e===tt.SUB||e===tt.SUP){if(t[t.length-1].isOnFunction){return false}}}let n=false;if(e.output){const t=e.output.charAt(e.length-1);if(")]}".indexOf(t)>-1){if((t===")"||t==="]")&&/^[([]/.test(r)){return false}else{n=true}}else{switch(e.ttype){case tt.ORD:case tt.NUM:case tt.VAR:case tt.LONGVAR:case tt.PRIME:case tt.SUP:case tt.SUPCHAR:case tt.SUB:case tt.PROPERTY:case tt.UNIT:case tt.RIGHTBRACKET:case tt.FACTORIAL:n=true;break;default:n=false}}}if(n&&nextCharIsFactor(r,e.ttype)){return true}return false};const nextCharIsFactor=(e,t)=>{const r=e.replace(leadingLaTeXSpaceRegEx,"");const n=r.charAt(0);let a=false;if(r.length>0){if(n==="|"||n==="‖");else if(/^[({[√∛∜0-9]/.test(r)&&isIn(t,[tt.ORD,tt.VAR,tt.NUM,tt.LONGVAR,tt.RIGHTBRACKET,tt.CURRENCY,tt.SUPCHAR])){return true}else{if(factors.test(n)){a=!/^(if|and|atop|or|else|modulo|otherwise|not|for|in|while|end)\b/.test(r)}}}return a};const cloneToken$1=e=>({input:e.input,output:e.output,ttype:e.ttype,closeDelim:e.closeDelim});const leadingSpaceRegEx$1=/^[ \f\r\t\v\u1680\u2000-\u200a\u2028\u2029\u202f\u205f\u3000\ufeff]+/;const leadingLaTeXSpaceRegEx=/^(˽|\\quad|\\qquad)+/;const rpnPrecFromType=[12,12,15,13,16,10,7,10,12,-1,-1,-1,1,-1,0,0,-1,0,-1,14,0,6,7,5,4,1,-1,16,15,-1,14,13,9,3,2,10,-1,-1,4,3,-1,-1];const texPrecFromType=[12,12,15,13,16,10,2,10,12,2,2,2,1,2,2,0,1,1,2,14,1,2,2,1,1,1,2,-1,15,2,14,13,9,-1,1,-1,15,-1,1,-1,2,2];const dNOTHING=0;const dPAREN=1;const dFUNCTION=2;const dACCESSOR=3;const dMATRIX=4;const dVECTORFROMRANGE=5;const dCASES=7;const dBINOMIAL=8;const dSUBSCRIPT=9;const dDISTRIB=10;const parse=(e,t="1,000,000.",r=false,n=false)=>{let a="";let o="";let i={};let l={input:"",output:"",ttype:50};let s=true;let m=false;let u=0;let c=false;let d=false;let p=false;let h=false;let f=false;let b;const g=[];const y=[];const x=[{delimType:dNOTHING,isTall:false}];let $=true;let v="";let S="";let w=" ";let R=-1;const M=[];const A=e=>{if(r&&e>=0){while(y.length>0){const t=y[y.length-1].prec;if(t<e||t===13&&e===13){break}o+=y.pop().symbol+w}}};const T=(t,n,s)=>{if(!n){return}if(g.length===0){if(l.ttype!==tt.RIGHTBRACKET&&l.ttype!==tt.LEFTRIGHT){b={pos:u,ttype:l.ttype,closeDelim:""}}return}const m=g[g.length-1];if((t===2||t===12||t===14||t===15)&&(l.ttype!==tt.RIGHTBRACKET&&l.ttype!==tt.LEFTRIGHT)&&m.prec<t){b={pos:u,ttype:l.ttype,closeDelim:""};return}let c={};while(g[g.length-1].prec>=t&&!(g[g.length-1].prec===13&&t===13)){b=g.pop();if(b.prec===0){c=x[x.length-1];if((b.ttype===tt.LEFTBRACKET||b.ttype===tt.LEFTRIGHT)&&b.closeDelim.length>0){if(g.length>0){if(b.ttype===tt.LEFTRIGHT&&i.output===")"&&g[g.length-1].closeDelim===")"){if(c.isTall){a=a.substring(0,b.pos)+"\\middle"+a.substring(b.pos);x[x.length-1].isTall=true}b=g.pop();x.pop();c=x[x.length-1]}}if(c.delimType===dMATRIX){const e=a.slice(b.pos,b.pos+1)==="\\"?2:1;a=a.slice(0,b.pos)+c.open+a.slice(b.pos+e);b.closeDelim=c.close}else if(c.delimType===dCASES){a=a.slice(0,b.pos)+c.open+a.slice(b.pos+2);b.closeDelim=c.close}else if(c.delimType===dPAREN&&c.name==="("&&/^(\/|\\atop\s)/.test(e)){a=a.substring(0,b.pos)+a.substring(b.pos+1);b.closeDelim=""}else if(c.isPrecededByDiv&&c.delimType===dPAREN&&c.name==="("&&(/^[^^_!%°⁻²³¹⁰⁴⁵⁶⁷⁸⁹]/.test(e)||e.length===0)){a=a.substring(0,b.pos)+a.substring(b.pos+1);b.closeDelim=""}else if(c.isTall){if(/^\\left/.test(a.substring(b.pos))===false){a=a.substring(0,b.pos)+"\\left"+a.substring(b.pos)}if(/\\right/.test(b.closeDelim)===false){b.closeDelim="\\right"+i.output}}}}a=a.replace(/\\, *$/,"");a+=b.closeDelim;if(b.closeDelim.slice(-1)==="{"){if(b.ttype===tt.BINARY){g.push({prec:12,pos:b.pos,ttype:tt.UNARY,closeDelim:"}"});if(r){o+=w;if(y[y.length-1].symbol==="\\sqrt"){y[y.length-1].symbol="root"}}}b.ttype=tt.UNARY;l={input:"",output:"",ttype:tt.UNARY};return}if(g.length===0||b.prec===0){return}}};e=e.replace(leadingSpaceRegEx$1,"");e=e.replace(/\s+$/,"");while(e.length>0){if(e.charAt(0)==="\n"){e=e.slice(1);const t=l?l.input.slice(-1):"0";if(l.ttype===tt.COMMENT||"{[(,;+-".indexOf(t)===-1&&!/^ *[)}\]]/.test(e)){T(0,true);a+="\\\\ ";const t=/^ +/.exec(e);e=e.replace(/^ */,"");if(e.length>0&&e.charAt(0)==="="&a.indexOf("=")>-1){m=true;a+="&"}else if(t){a+="\\quad ".repeat(t[0].length-1)}}e=e.trim()}s=true;h=c&&$&&testForImplicitMult(l,g,e);if(h){const e=l.ttype;i={input:"⌧",output:[tt.LONGVAR,tt.NUM,tt.UNIT].includes(e)?"\\,":"",ttype:tt.MULT};d=false;p=false;s=false}if(s){const r=lex(e,t,l,n);i={input:r[0],output:r[1],ttype:r[2],closeDelim:r[3]};e=e.substring(i.input.length);d=leadingSpaceRegEx$1.test(e)||/^(˽|\\quad|\\qquad)+/.test(e);p=/^[ \n]/.test(e);e=e.replace(leadingSpaceRegEx$1,"");f=nextCharIsFactor(e,i.ttype)}switch(i.ttype){case tt.SPACE:case tt.BIN:case tt.ADD:case tt.MULT:case tt.REL:case tt.UNDEROVER:{if(i.output.length>0&&"- +".indexOf(i.output)>-1){i=checkForUnaryMinus(i,l)}if(r&&i.ttype!==tt.SPACE){if(i.output!=="\\text{-}"){o+=w}R=rpnPrecFromType[i.ttype];A(R)}const e=texPrecFromType[i.ttype];T(e,$);a+=i.output+" ";u=a.length;if(i.ttype===tt.UNDEROVER&&x.length>1){x[x.length-1].isTall=true}else if(r){y.push({prec:R,symbol:i.input})}$=true;break}case tt.ACCESSOR:case tt.ANGLE:i=checkForUnaryMinus(i,l);if(r){o+=w;R=rpnPrecFromType[i.ttype];A(R);y.push({prec:R,symbol:i.input})}T(texPrecFromType[i.ttype],$);a+=r?i.input:i.output+" ";$=true;break;case tt.NUM:case tt.ORD:T(2,$);if(r){A(-1);o+=i.ttype===tt.NUM?rationalRPN(i.input):i.input}if(c){u=a.length}if(r&&(l.ttype===tt.MULT||f&&l.ttype!==tt.DIV)){i.output="("+i.output+")"}a+=i.output+" ";$=true;if(!d&&f){T(2,$);if(r){o+=w;A(7);y.push({prec:rpnPrecFromType[tt.MULT],symbol:"⌧"})}}break;case tt.STRING:{T(2,$);const e=i.input.charAt(0);if(r){o+=e+i.output+e}if(c){u=a.length}i.output=addTextEscapes(i.output);i.output=i.output.replace(/ +$/,"\\,");a+="\\text{"+i.output+"}";$=true;break}case tt.RICHTEXT:{T(2,$);const e=i.input.charAt(0);if(r){o+=e+i.output+e}if(c){u=a.length}i.output=i.output==="`"?"`":parse(i.output,t,false);a+="{"+i.output+"}";$=true;break}case tt.DATAFRAME:T(2,$);u=a.length;a+=i.output;$=true;break;case tt.VAR:case tt.LONGVAR:{if(i.ttype===tt.LONGVAR&&l.input==="⌧"){a+="\\,"}T(7,$);if(c){u=a.length}i.output=assertCalligraphic(i.output);if(!r){if(i.ttype===tt.LONGVAR){i.output="\\mathrm{"+i.output+"}"}}else if(l.input==="for"){o+='"'+i.input+'"'}else{if(/^(\.[^.]|\[)/.test(e)){i.output=i.ttype===tt.LONGVAR?"\\mathrm{"+i.output+"}":i.output}else{i.output=i.input;i.output="〖"+i.output}o+="¿"+i.input}a+=i.output+(e.charAt(0)==="."?"":" ");if(r){x[x.length-1].isTall=true}$=true;break}case tt.UNIT:{T(14,true);g.push({prec:14,pos:b.pos,ttype:tt.UNIT,closeDelim:""});if(r){A(14);o+=w+"applyUnit"+w+i.input.replace(/'/g,"")}if(!/^'?°'?$/.test(i.input)){a+="\\;"}a+=i.output;$=true;break}case tt.PROPERTY:{T(15,$);const t=i.input.indexOf("_");if(r){o+='"'+i.output+'"';a+=`\\mathrm{${i.output}}`;if(e.charAt(0)!=="."){a+=" "}}else if(t>-1){a+=i.input.substring(0,t)+"_\\mathrm{"+i.input.substring(t+1)+"}"}else{i.output=addTextEscapes(i.output);i.output=i.output.replace(/ +$/,"\\,");a+="\\text{"+i.output+"}"}$=true;break}case tt.TO:{x[x.length-1].delimType=dDISTRIB;T(1,$);u=a.length;a+=i.output;if(r){o+=w;A(3);const e=x[x.length-1].symbol;const t=e==="("?"normal":e==="["?"uniform":"lognormal";y.push({prec:3,symbol:t})}break}case tt.RANGE:{T(1,$);u=a.length;if(r){o+=w;A(3);y.push({prec:3,symbol:".."});if(e.charAt(0)==="]"||e.length===0){o+='"∞"'}}a+=i.output;break}case tt.DIV:if(r){o+=w}T(2,true);A(7);if(i.input==="//"){g.push({prec:2,pos:b.pos,ttype:tt.DIV,closeDelim:"}"});a=a.substring(0,b.pos)+"\\tfrac{"+a.substring(b.pos)+"}{"}else if(i.input==="/"||i.input==="\\over"){g.push({prec:2,pos:b.pos,ttype:tt.DIV,closeDelim:"}"});a=a.substring(0,b.pos)+"\\dfrac{"+a.substring(b.pos)+"}{"}else{g.push({prec:2,pos:b.pos,ttype:tt.DIV,closeDelim:"}}"});a=a.substring(0,b.pos)+"{{"+a.substring(b.pos)+"}\\atop{";if(x[x.length-1].name==="("){x[x.length-1].delimType=dBINOMIAL}}if(r){if(i.input==="\\atop"){if(x[x.length-1].delimType===dBINOMIAL){y.push({prec:7,symbol:"()"})}}else{y.push({prec:7,symbol:i.input})}}x[x.length-1].isTall=true;u=a.length;$=false;break;case tt.SUB:{T(15,true);const e=l.ttype===tt.FUNCTION?"}{":"}";g.push({prec:15,pos:b.pos,ttype:tt.SUB,closeDelim:e});a+="_{";if(r){o+="_"}$=false;break}case tt.SUP:if(r){if(/¿e$/.test(o)){o=o.slice(0,-2)+"®27182818284590452353602874713527/10000000000000000000000000000000"}o+=w;A(13)}T(13,true);if(l.ttype===tt.RIGHTBRACKET){g.push({prec:13,pos:b.pos,ttype:tt.SUP,closeDelim:"}"})}else{g.push({prec:13,pos:u,ttype:tt.SUP,closeDelim:"}"})}if(r){y.push({prec:13,symbol:"^"})}a+="^{";$=false;break;case tt.SUPCHAR:{if(r){if(/¿e$/.test(o)){o=o.slice(0,-2)+"®27182818284590452353602874713527/10000000000000000000000000000000"}o+=w;A(13)}T(13,true);const e=numFromSupChars(i.output);if(l.ttype===tt.RIGHTBRACKET){g.push({prec:13,pos:b.pos,ttype:tt.SUP,closeDelim:"}"})}else{g.push({prec:13,pos:u,ttype:tt.SUP,closeDelim:"}"})}a+="^{"+e;if(r){y.push({prec:13,symbol:"^"});o+=rationalRPN(e)}$=true;break}case tt.FUNCTION:{T(2,$);u=a.length;if(functionExpoRegEx.test(e)){const[n,a,o]=exponentOfFunction(e,t,r);if(r&&o===`®1/1${w}~`&&isIn(i.input,trigFunctions)){i.input="a"+i.input;i.output="\\a"+i.output.slice(1)}else{if(r){i.input+=w+o+w+"^"}i.output+="^"+a}const l=n.length+(e.charAt(0)==="^"?1:0);e=e.slice(l).trim()}if(r){y.push({prec:12,symbol:i.input});if(l.input==="⌧"){a+="×"}}v=e.charAt(0);g.push({prec:12,pos:a.length,ttype:tt.FUNCTION,closeDelim:v==="("?"":"}"});a+=i.output;a+=v==="("?"":"{";S=i.input;$=false;break}case tt.ACCENT:if(r){o+=w;A(16)}T(1,$);if(r){g.push({prec:16,pos:a.length,ttype:tt.ACCENT,closeDelim:"〗"});a+="〖"+i.input;o+="¿"+i.input}else{g.push({prec:16,pos:a.length,ttype:tt.ACCENT,closeDelim:"}"});a+=i.output+"{"}x[x.length-1].isTall=true;$=false;break;case tt.PRIME:T(15,true);if(r){o+=i.input}a=a.trim()+i.output+" ";$=true;break;case tt.BINARY:{T(1,$);u=a.length;const e=i.input==="root"?"]{":"}{";g.push({prec:12,pos:a.length,ttype:tt.BINARY,closeDelim:e});if(r){y.push({prec:12,symbol:i.output})}a+=i.output+(i.input==="root"?"[":"{");x[x.length-1].isTall=true;$=false;break}case tt.CURRENCY:{T(1,$);u=a.length;g.push({prec:12,pos:a.length,ttype:tt.CURRENCY,closeDelim:""});if(r){y.push({prec:12,symbol:"applyUnit"+w+i.input});if(l.input==="⌧"){a+="×"}}a+=i.output;$=false;break}case tt.UNARY:T(1,$);u=a.length;g.push({prec:12,pos:a.length,ttype:tt.UNARY,closeDelim:"}"});if(r){y.push({prec:12,symbol:i.input});if(l.input==="⌧"){a+="×"}}a+=i.output;if(/det|inf/.test(i.input)&&e.charAt(0)==="_"){g.push({prec:15,pos:a.length,ttype:tt.SUB,closeDelim:"}"});i={input:"_",output:"_",ttype:tt.SUB};a+="_{";e=e.substring(1);e=e.replace(/^\s+/,"")}else if(i.input==="\\color"){const t=colorSpecRegEx.exec(e);if(t){a+="{"+t[0].replace(/[()]/g,"")+"}";g.pop();e=e.slice(t[0].length).trim()}else{a+="{"}}else{a+="{"}x[x.length-1].isTall=true;$=false;break;case tt.FACTORIAL:T(14,true);g.push({prec:14,pos:b.pos,ttype:tt.FACTORIAL,closeDelim:""});if(r){A(14);o+=w+i.output}a+=i.output;$=true;break;case tt.RETURN:T(1,$);u=a.length;if(r){A(4);y.push({prec:4,symbol:"return"})}a+=i.output+" ";break;case tt.KEYWORD:T(1,true);u=a.length;if(r){A(2);if(i.input==="in"){o+=w;y.push({prec:R,symbol:"for"})}}a+=i.output+" ";break;case tt.LOGIC:{T(1,$);if(r){o+=w}A(4);const e=x[x.length-1];if(i.input==="if"||i.input==="otherwise"){if(e.delimType===dPAREN&&e.name==="{"){e.delimType=dCASES;e.close="\\end{cases}";e.open="\\begin{cases}";if(r&&w===" "&&i.input==="if"){o=o.slice(0,e.rpnPos)+o.slice(e.rpnPos).replace(/\xa0/g,"§")}}}if(e.delimType===dCASES&&isIn(i.input,["if","otherwise"])){a+="&"}if(i.input===":"&&e.delimType===dPAREN&&e.symbol==="{"){i.output="\\colon"}a+=i.output;if(r){if(e.delimType===dCASES&&(i.input==="if"||i.input==="otherwise")){o=setUpIf(o,i.input,M,e);w=" "}else{y.push({prec:4,symbol:i.input})}}u=a.length;$=true;break}case tt.LEFTBRACKET:{T(2,$);const t=l.ttype===tt.DIV;let n=false;const s={prec:0,pos:a.length,ttype:tt.LEFTBRACKET,closeDelim:i.closeDelim};if((i.input==="("||i.input==="[")&&l.ttype<5){s.closeDelim=""}else if(i.input==="("&&b.ttype===tt.BINARY){s.closeDelim=""}else{s.closeDelim=i.closeDelim;n=(i.input==="("||i.input==="[")&&l.ttype===tt.FUNCTION;a+=i.output}g.push(s);if(r){while(y.length>0&&y[y.length-1].symbol==="."){o+=w+y.pop().symbol}y.push({prec:0,symbol:i.output.trim()})}const m=/^\s*[)}\]]/.test(e)?0:1;const c={name:i.input,isTall:false,open:i.output,close:s.closeDelim,numArgs:m,numRows:m,rpnPos:o.length,isPrecededByDiv:t,isFuncParen:n,isControlWordParen:l.ttype<5};if(n){c.delimType=dFUNCTION;c.name=S}else if(l.ttype===tt.SUB){c.delimType=dSUBSCRIPT;c.name="("}else if(i.input==="{"){c.delimType=dPAREN;c.rpnLength=o.length}else if(i.input==="["&&(isIn(l.ttype,[tt.VAR,tt.LONGVAR,tt.STRING,tt.PROPERTY])||l.input==="]")){o+=w;c.delimType=dACCESSOR}else{c.delimType=dPAREN;c.name=i.input}x.push(c);S="";u=a.length;$=false;break}case tt.SEP:{T(1,$);u=a.length;if(i.input==="\\,"||i.input==="\\;"){a+=i.output+" "}else{const t=x[x.length-1];if(t.delimType===dPAREN&&p){t.delimType=dMATRIX;const e=t.name==="["?"b":t.name==="("?"p":t.name==="{:"?"":"B";t.open=`\\begin{${e}matrix}`;t.close=`\\end{${e}matrix}`;t.isTall=true;i.output=i.input===","?"&":"\\\\"}else if(t.delimType===dMATRIX&&i.input===","){i.output="&"}else if(t.delimType>3&&i.input===";"){i.output="\\\\"}if(r){if(l.ttype===tt.LEFTBRACKET&&t.delimType===dACCESSOR){o+="®0/1"}o+=w;A(1)}a+=i.output+" ";if(r){if(x.length===1){o+=i.output}else{if(i.input===";"){t.numRows+=1;if(x.length>0&&t.delimType===dCASES){w="§"}}if(t.numRows===1){if(i.input===","||i.input===" "&&t.delimType===dMATRIX){if(e.charAt(0)==="]"){o+="®0/1"}else if(i.input===","&&t.delimType===dFUNCTION&&t.numArgs===2&&t.name==="plot"){o=o.slice(0,t.rpnPos+5)+'"'+o.slice(t.rpnPos+5,-1).replace(/\u00a0/g,"§")+'"'+w}}}t.numArgs+=1}}}$=true;break}case tt.RIGHTBRACKET:{T(0,true,i.output);const t=x.pop();if(t.delimType===dPAREN&&!t.isControlWordParen&&t.close!==i.output){a=a.slice(0,-1*t.close.length)+i.output}if(t.isTall&&x.length>1){x[x.length-1].isTall=true}if(r){while(y.length>0&&y[y.length-1].prec>0){o+=w+y.pop().symbol}if(t.delimType===dCASES&&l.input!=="otherwise"){o=setUpIf(o,"otherwise",M,t);w=" "}const r=y.pop();const n=t.numArgs;const a=t.numRows;const s=t.numArgs/t.numRows;const m=n===0?"":w;switch(t.delimType){case dFUNCTION:{let e=y.pop().symbol;const t=new RegExp(w+"!$");if(n===2){if(e==="log"){e="logn"}if(e==="round"){e="roundn"}if(e==="atan"){e="atan2"}if(e==="plot"){o=o.slice(0,6)+'"'+o.slice(6).replace(/\u00a0/g,"§")+'"'}}else if(e==="log"&&t.test(o)){o=o.slice(0,o.length-1)+"logFactorial";break}o+=e.slice(-1)==="^"?m+e:isIn(e,builtInFunctions)?m+e:isIn(e,builtInReducerFunctions)?m+e+w+n:m+"function"+w+e+w+n;break}case dACCESSOR:o+=m+"[]"+w+n;break;case dMATRIX:o+=m+"matrix"+w+a+w+s;break;case dCASES:w=" ";o+=w+"cases"+w+a+w;while(M.length>0){o+=M.shift()}o=o.slice(0,-1);break;case dVECTORFROMRANGE:o+=w+"matrix"+w+"1"+w+"1";break;case dDISTRIB:break;default:if(n===0&&t.open==="["){o+="matrix"+w+0+w+0}else if(n===1&&t.open==="["){o+=w+"matrix"+w+1+w+1}if(r.symbol==="\\lfloor"){o+=w+"⎿⏌"}if(r.symbol==="\\lceil"){o+=w+"⎾⏋"}}if(i.input===")"&&nextCharIsFactor(e,tt.RIGHTBRACKET)||i.input==="]"&&/^\(/.test(e)){o+=w;A(rpnPrecFromType[tt.MULT]);y.push({prec:rpnPrecFromType[tt.MULT],symbol:"⌧"});d=false}}u=a.length;$=b.ttype!==tt.BINARY;break}case tt.LEFTRIGHT:{T(1,$);const e=x[x.length-1];let t=false;if(g.length>0){t=g[g.length-1].ttype===tt.LEFTRIGHT||g[g.length-1].closeDelim==="⟩"||g[g.length-1].closeDelim==="\\right."||g[g.length-1].closeDelim==="\\end{vmatrix}"}if(t){e.close=i.input==="|"?"\\vert ":"\\Vert ";g[g.length-1].closeDelim=e.close;T(0,$);x.pop();if(r){while(y.length>0&&y[y.length-1].prec>0){o+=w+y.pop().symbol}o+=w+y.pop().symbol}$=b.ttype!==tt.BINARY}else if(e.delimType===dPAREN&&e.name==="{"){a+="\\mid ";u=a.length;$=true}else{g.push({prec:0,pos:a.length,ttype:tt.LEFTRIGHT,closeDelim:i.input==="|"?"\\vert ":"\\Vert "});x.push({delimType:dPAREN,name:i.input,isTall:false,open:i.input==="|"?"\\vert ":"\\Vert ",close:i.input==="|"?"\\vert ":"\\Vert ",numArgs:1,numRows:1,rpnPos:o.length,isPrecededByDiv:l.ttype===tt.DIV});if(r){y.push({prec:0,symbol:i.output})}a+=i.input==="|"?"\\vert ":"\\Vert ";u=a.length;$=false}break}case tt.COMMENT:T(0,true);a+=i.output+" ";break;default:if(r){o+=w;A(12)}T(1,$);g.push({prec:1,pos:a.length,ttype:tt.ORD,closeDelim:""});if(r){y.push({prec:12,symbol:i.output})}a+=i.output+" ";u=a.length;$=true}l=cloneToken$1(i);c=d||i.input==="⌧"}T(0,true);if(r){while(y.length>0){o+=w+y.pop().symbol}const e=/〖[^ ().]+/g;let t;while((t=e.exec(a))!==null){if("¨ˆˉ˙˜".indexOf(t[0][1])===-1){const e=t.index+t[0].length;if(a.length>e&&a.charAt(e)==="("){a=a.slice(0,t.index)+a.slice(t.index+1)}else{a=a.substring(0,e)+"〗"+a.substring(e)}}}}a=a.replace(/ {2,}/g," ");a=a.replace(/\s+(?=[_^'!)}\]〗])/g,"");a=a.replace(/\s+$/,"");if(m){const e=a.indexOf("=");a="\\begin{aligned}"+a.slice(0,e)+"&"+a.slice(e)+"\\end{aligned}"}return r?[a,o]:a};const fromAssignment=(e,t)=>{if(e.value===null){const t=e.name?e.name:"?";return errorOprnd("NULL",t)}const r=Object.create(null);r.dtype=e.dtype;r.name=e.name;const n=e.dtype;if(n===dt.STRING||n===dt.BOOLEAN||n===dt.DRAWING||n===dt.MODULE||n===dt.NULL){r.unit=null}else if(n===dt.DATAFRAME||n&dt.MAP){r.unit=Object.freeze(clone(e.unit))}else if(e.unit&&e.unit.expos){r.unit=clone(e.unit)}else if(e.unit){r.unit=Object.create(null);if(e.unit){r.unit.name=e.unit}if(e.expos){r.unit.expos=clone(e.expos)}}else if(e.expos&&Array.isArray(e.expos)){r.unit={expos:clone(e.expos)}}else{r.unit=null}if(e.dtype&dt.QUANTITY){r.value=Object.freeze(t?clone(e.value.inBaseUnits):clone(e.value.plain));r.dtype=e.dtype-dt.QUANTITY}else if(e.dtype===dt.STRING){const t=e.value;const n=t.charAt(0);const a=t.charAt(t.length-1);r.value=n==='"'&&a==='"'?t.slice(1,-1).trim():t.trim()}else if(e.dtype===dt.DATAFRAME){r.value=e.value}else{r.value=clone(e.value)}return Object.freeze(r)};function propertyFromDotAccessor(e,t,r,n){const a=Object.create(null);if(e.dtype&dt.MAP){return map.valueFromMap(e,[t],n)}else if(e.dtype&dt.DATAFRAME){return DataFrame.range(e,[t],r,n)}else if((e.dtype===dt.STRING||e.dtype&dt.ARRAY)&&t.dtype===dt.RATIONAL){const r=Rnl.toNumber(t.value);a.value=e.value.slice(r-1,r);a.unit=e.unit;a.dtype=e.dtype;return a}else if((e.dtype===dt.STRING||e.dtype&dt.ARRAY)&&t.dtype===dt.RANGE){const r=t.value[0]-1;const n=t.value[1];const o=t.value[2]==="∞"?e.value.length:t.value[2];a.unit=e.unit;a.dtype=e.dtype;if(n===1){a.value=e.value.slice(r,o)}else{a.value=[];for(let t=r;t<o;t+=n){a.value.push(e.value[t])}}return a}else if(e.dtype===dt.MODULE){return fromAssignment(e.value[t.value],n)}else{return errorOprnd("NO_PROP",e.name)}}const display$4=(e,t="h3",r="1,000,000.")=>{if(e.size===0){return""}let n="\\begin{array}{c}";let a=false;for(const t of e.values()){if(t.unit&&t.unit.name){a=true;break}}if(a){let t="";for(const r of e.values()){if(r.unit&&r.unit.name){t+=unitTeXFromString(r.unit.name).replace("\\;\\, ","")}t+="&"}n+=t.slice(0,-1)+" \\\\ ";n+="\\hline "}let o="";for(const n of e.values()){o+=format(n.value,t,r)+" & "}n+=o.slice(0,-1);n+="\\end{array}";return n};const displayAlt$3=(e,t="h3")=>{if(e.size===0){return""}let r="``";let n=false;for(const t of e.values()){if(t.unit&&t.unit.name){n=true;break}}if(n){let t="";for(const r of e.values()){if(r.unit&&r.unit.name){t+=r.unit.name}t+=" | "}r+=t.slice(0,-3)+"\n"}let a="";for(const r of e.values()){a+=format(r.value,t,"100000.")+" | "}r=a.slice(0,-3);return r+"``"};const Tuple=Object.freeze({display:display$4,displayAlt:displayAlt$3});const numMisMatchError=e=>{const t="Error. Mismatch in number of multiple assignment.";return[`\\color{firebrick}\\text{${t}}`,t]};const formatResult=(e,t,r,n,a)=>{if(!t){return e}if(t.dtype===dt.DRAWING){e.resultdisplay=t.value;delete e.resultdisplay.temp;return e}const o=!e.name?0:!Array.isArray(e.name)?1:e.name.length;if(e.resulttemplate.indexOf("?")>-1||e.resulttemplate.indexOf("!")>-1||e.resulttemplate.indexOf("@")>-1||e.resulttemplate.indexOf("%")>-1){e.value=t.value;let i="";let l="";if(e.resulttemplate.indexOf("!")>-1){i="";l="";return e}else if(isMatrix(t)&&t.dtype&dt.MAP){i=Matrix.displayMapOfVectors(t.value,r,n);l=Matrix.displayAltMapOfVectors(t.value,r,n)}else if(isMatrix(t)){i=Matrix.display(a?{value:t.value.plain,dtype:t.dtype}:t,r,n);l=Matrix.displayAlt(a?{value:t.value.plain,dtype:t.dtype}:t,r,n)}else if(t.dtype===dt.DATAFRAME){if(o>1&&o!==t.value.data.length){[i,l]=numMisMatchError()}else{const a=e.name&&Array.isArray(e.name)&&e.name.length>1;i=DataFrame.display(t.value,r,n,a);l=DataFrame.displayAlt(t.value,r,a)}}else if(t.dtype&dt.MAP){const a=e.dtype&dt.QUANTITY?t.value.plain.size:t.value.size;if(o>1&&o!==a){[i,l]=numMisMatchError()}else{const a=e.name&&Array.isArray(e.name)&&e.name.length>1;i=map.display(t,r,n,a);l=map.displayAlt(t,r,n,a)}}else if(t.dtype===dt.TUPLE){if(o>1&&o!==t.length){[i,l]=numMisMatchError()}else{i=Tuple.display(t.value,r,n);l=Tuple.displayAlt(t.value,r)}}else if(t.dtype&dt.STRING){i="\\text{"+addTextEscapes(t.value)+"}";if(t.unit){i=`\\textcolor{${t.unit}}{${i}}`}l=t.value}else if(t.dtype&dt.RICHTEXT){i=parse(t.value,n,false);l=t.value}else if(t.dtype&dt.BOOLEAN){i="\\text{"+t.value+"}";l=String(t.value)}else if(t.dtype===dt.COMPLEX){const e=t.value;[i,l]=Cpx.display(e,r,n)}else if(t.value.plain){i=format(t.value.plain,r,n);if(i.dtype&&i.dtype===dt.ERROR){i="\\color{firebrick}\\text{"+i.value+"}";l=i.value}else{l=i.replace(/{,}/g,",").replace("\\","")}}else if(Rnl.isRational(t.value)){i=format(t.value,r,n);if(i.dtype&&i.dtype===dt.ERROR){i="\\color{firebrick}\\text{"+i.value+"}";l=i.value}else{l=i.replace(/{,}/g,",").replace("\\","")}}else if(t.dtype===dt.IMAGE){return e}else{i=t.value;l=i}e.resultdisplay=e.resulttemplate.replace(/(\? *\??|@ *@?|%%?)/,i);if(e.resulttemplate.indexOf("@")>-1){e.tex=e.resultdisplay;e.alt=e.altresulttemplate.replace(/@@?/,l)}else if(e.resulttemplate.indexOf("?")>-1){let t=e.tex.lastIndexOf("?");e.tex=e.tex.slice(0,t).replace(/\? *$/,"")+i+e.tex.slice(t+1);t=e.alt.lastIndexOf("?");e.alt=e.alt.slice(0,t).replace(/\? *$/,"")+l+e.alt.slice(t+1)}else if(e.resulttemplate.indexOf("%")>-1){let t=e.tex.lastIndexOf("%");e.tex=e.tex.slice(0,t).replace(/% *$/,"")+i+e.tex.slice(t+1);t=e.alt.lastIndexOf("%");e.alt=e.alt.slice(0,t).replace(/% *$/,"")+l+e.alt.slice(t+1)}}return e};const varRegEx=/〖[^〗]*〗/;const openParenRegEx$1=/([([{|‖]|[^\\][,;:])$/;const plugValsIntoEcho=(e,t,r,n,a)=>{let o;while((o=varRegEx.exec(e))!==null){const i=o[0].replace(/[〖〗()]/g,"").trim().replace(/'/g,"′");const l=o[0].length;const s=o.index;let m;let u="";if(i.indexOf(".")>-1){const o=i.split(".");const c=o[0];if(!t[c]){return errorOprnd("V_NAME",c)}m=t[c];if(m.dtype===dt.DATAFRAME&&o.length===2){u="\\mathrm{"+t[o[0]].name+"{.}\\mathrm{"+o[1]+"}";return e.substring(0,s)+u+e.substring(s+l)}else{for(let e=1;e<o.length;e++){const i=o[e].replace("}","").replace("\\mathrm{","").trim();const l={value:i,unit:null,dtype:dt.STRING};m=propertyFromDotAccessor(m,l,t,r);if(!m){return errorOprnd("V_NAME",i)}const s={resulttemplate:"@",altresulttemplate:"@"};m.resultdisplay=formatResult(s,m,n,a).resultdisplay}}}else if(!t[i]&&i==="T"){m={dtype:dt.RATIONAL,resultdisplay:"\\text{T}"}}else if(i==="e"&&/^\^/.test(e.slice(s+3).trim())){e=e.substring(0,s)+"e"+e.substring(s+l);continue}else if(!t[i]){return errorOprnd("V_NAME",i)}else{m={dtype:t[i].dtype,resultdisplay:t[i].resultdisplay}}if(!m||!m.resultdisplay){const e=i?i:"?";return errorOprnd("NULL",e)}else if(m.error){return errorOprnd("NULL",i)}let c=true;if(isMatrix(m)||m.dtype&dt.DATAFRAME){c=false}if(r&&m.dtype&dt.QUANTITY){c=true}let d=false;if(s>0){const t=e.slice(0,s).trim();if(openParenRegEx$1.test(t)){const t=e.slice(s+i.length+2).trim();d=t.length>0&&/^([)|‖\]},;:]|\\right)/.test(t)}else if(/^\\begin{[bp]matrix}/.test(m.resultdisplay)){d=/\\end{[bp]matrix}$/.test(m.resultdisplay)}}c=c&&!d;if(m.dtype===dt.DATAFRAME||m.dtype&dt.MAP){u="\\mathrm{"+t[i].name+"}"}else if(r){u=c?"\\left("+m.resultdisplay+"\\right)":m.resultdisplay}else{let e=m.resultdisplay;const t=m.resultdisplay.lastIndexOf("{\\text{");if(t>-1){e=m.resultdisplay.slice(0,t).trim();e=e.replace(/\\; *$/,"").trim()}u=c?"\\left("+e+"\\right)":e}e=e.substring(0,s)+u+e.substring(s+l)}return e};const negativeOne=Object.freeze(Rnl.negate(Rnl.one));const oneHalf=[BigInt(1),BigInt(2)];const thirty=[BigInt(30),BigInt(1)];const fortyFive=[BigInt(45),BigInt(1)];const sixty=[BigInt(60),BigInt(1)];const ninety=[BigInt(90),BigInt(1)];const halfPi=Object.freeze(Rnl.divide(Rnl.pi,Rnl.two));const functionExpos=(e,t)=>{const r=t.length;const n=r===1?t[0].unit.expos:null;switch(e){case"abs":case"round":case"roundn":case"sign":case"trace":case"fetch":return n;case"cos":case"sin":case"tan":case"sec":case"csc":case"cot":case"acos":case"arccos":case"asin":case"arcsin":case"atan":case"arctan":case"asec":case"arcsec":case"acsc":case"arccsc":case"acot":case"arccot":case"cosd":case"sind":case"tand":case"secd":case"cscd":case"cotd":case"acosd":case"asind":case"atand":case"asecd":case"acscd":case"acotd":case"gud":if(!unitsAreCompatible(n,allZeros)){return errorOprnd("UNIT_IN",e)}return allZeros;case"exp":case"log":case"ln":case"log10":case"log2":case"logn":case"cosh":case"sinh":case"tanh":case"sech":case"csch":case"coth":case"acosh":case"asinh":case"atanh":case"asech":case"acsch":case"acoth":case"binomial":case"gamma":case"Γ":case"logΓ":case"logFactorial":if(!unitsAreCompatible(n,allZeros)){return errorOprnd("UNIT_IN",e)}return allZeros;case"sqrt":return n.map((e=>e/2));case"gcd":case"mht":if(!unitsAreCompatible(n,allZeros)){return errorOprnd("UNIT_IN",e)}return e==="hmt"?[1,0,0,0,0,0,0,0]:allZeros;case"atan2":case"hypot":case"rms":case"sum":case"mean":case"median":case"min":case"max":case"range":case"stddev":case"variance":{const r=t[0].unit.expos;for(let n=1;n<t.length;n++){const a=t[n].unit.expos;if(r.length!==a.length){return errorOprnd("UNIT_ARG",e)}for(let t=0;t<r.length;t++){if(r[t]!==a[t]){return errorOprnd("UNIT_ARG",e)}}}return e==="atan2"?allZeros:r}case"Re":case"Im":case"argument":return allZeros;case"product":{const e=clone(t[0].unit.expos);for(let r=1;r<t.length;r++){const n=t[r].unit.expos;e.map(((e,t)=>e+n[t]))}return e}default:return errorOprnd("F_NAME",e)}};const gamma=e=>{if(Rnl.isZero(e)){return errorOprnd("Γ0")}else if(Rnl.isPositive(e)&&Rnl.isInteger(e)&&Rnl.lessThan(e,Rnl.fromNumber(101))){return Rnl.factorial(Rnl.subtract(e,Rnl.one))}else if(Rnl.isNegative(e)&&Rnl.isInteger(e)){return errorOprnd("ΓPOLE")}else if(Rnl.lessThan(e,oneHalf)){return Rnl.fromNumber(Math.PI/Math.sin(Math.PI*Rnl.toNumber(e))*Rnl.toNumber(gamma(Rnl.subtract(Rnl.one,e))))}else{return Rnl.lanczos(e)}};const logΓ=e=>{if(Rnl.isZero(e)){return errorOprnd("Γ0")}if(Rnl.isNegative(e)){return errorOprnd("LOGΓ")}if(Rnl.areEqual(e,Rnl.one)||Rnl.areEqual(e,Rnl.two)){return Rnl.zero}if(Rnl.lessThanOrEqualTo(e,Rnl.fromNumber(14))){return Rnl.fromNumber(Math.log(Rnl.toNumber(gamma(e))))}else{const t=Rnl.toNumber(e);const r=(t-.5)*Math.log(t)-t+.5*Math.log(2*Math.PI)+1/(12*t)-1/(360*t**3)+1/(1260*t**5)-1/(1680*t**7)+5/(540*t**9);return Rnl.fromNumber(r)}};const binomial=(e,t)=>{if(Rnl.areEqual(e,t)){return Rnl.one}if(Rnl.isZero(e)){return Rnl.zero}if(Rnl.isNegative(t)){return Rnl.zero}if(Rnl.lessThan(e,t)){return Rnl.zero}if(Rnl.isInteger(e)&&Rnl.isInteger(t)&&Rnl.isPositive(e)&&Rnl.isPositive(t)){return Rnl.divide(Rnl.factorial(e),Rnl.multiply(Rnl.factorial(t),Rnl.factorial(Rnl.subtract(e,t))))}else if(Rnl.isInteger(e)&&Rnl.isInteger(t)&&Rnl.isPositive(t)){return Rnl.multiply(Rnl.power(negativeOne,t),multiset(Rnl.negate(e),t))}else{return Rnl.divide(gamma(Rnl.increment(e)),Rnl.multiply(gamma(Rnl.increment(t)),gamma(Rnl.increment(Rnl.subtract(e,t)))))}};const multiset=(e,t)=>binomial(Rnl.add(e,Rnl.decrement(t)),t);const piOver180=Rnl.divide(Rnl.pi,[BigInt(180),BigInt(1)]);const unary={scalar:{abs(e){return Rnl.abs(e)},argument(e){return errorOprnd("NA_REAL","argument")},Re(e){return errorOprnd("NA_REAL","Re")},Im(e){return errorOprnd("NA_REAL","Im")},cos(e){return Rnl.cos(e)},sin(e){return Rnl.sin(e)},tan(e){return Rnl.tan(e)},cosh(e){return Rnl.cosh(e)},sinh(e){return Rnl.sinh(e)},tanh(e){return Rnl.tanh(e)},acos(e){if(Rnl.greaterThan(Rnl.abs(e),Rnl.one)){return errorOprnd("ATRIG","acos")}return Rnl.fromNumber(Math.acos(Rnl.toNumber(e)))},asin(e){if(Rnl.greaterThan(Rnl.abs(e),Rnl.one)){return errorOprnd("ATRIG","asin")}return Rnl.fromNumber(Math.asin(Rnl.toNumber(e)))},atan(e){return Rnl.fromNumber(Math.atan(Rnl.toNumber(e)))},sec(e){return Rnl.fromNumber(1/Math.cos(Rnl.toNumber(e)))},csc(e){return Rnl.fromNumber(1/Math.sin(Rnl.toNumber(e)))},cot(e){if(Rnl.isZero(e)){return errorOprnd("COT","cotangent")}return Rnl.fromNumber(1/Math.tan(Rnl.toNumber(e)))},asec(e){if(Rnl.greaterThanOrEqualTo(Rnl.abs(e),Rnl.one)){return errorOprnd("ASEC","arcecant")}const t=Math.atn(Math.sqrt(Rnl.toNumber(Rnl.decrement(Rnl.multiply(e,e)))));return Rnl.isPositive(e)?Rnl.fromNumber(t):Rnl.fromNumber(t-Math.PI)},acot(e){if(Rnl.greaterThanOrEqualTo(Rnl.abs(e),Rnl.one)){return errorOprnd("ASEC","acot")}const t=Math.atn(1/Math.sqrt(Rnl.toNumber(Rnl.decrement(Rnl.multiply(e,e)))));return Rnl.isPositive(e)?Rnl.fromNumber(t):Rnl.fromNumber(t-Math.PI)},acsc(e){return Rnl.fromNumber(Math.atn(-Rnl.toNumber(e))+Math.PI)},exp(e){return Rnl.exp(e)},log(e){return Rnl.isZero(e)?errorOprnd("LOG_ZERO"):Rnl.fromNumber(Math.log(Rnl.toNumber(e)))},ln(e){return Rnl.isZero(e)?errorOprnd("LOG_ZERO"):Rnl.fromNumber(Math.log(Rnl.toNumber(e)))},log10(e){return Rnl.isZero(e)?errorOprnd("LOG_ZERO"):Rnl.fromNumber(Math.log10(Rnl.toNumber(e)))},log2(e){return Rnl.isZero(e)?errorOprnd("LOG_ZERO"):Rnl.fromNumber(Math.log2(Rnl.toNumber(e)))},sech(e){const t=Rnl.toNumber(e);return Rnl.fromNumber(2/(Math.exp(t)+Math.exp(-t)))},csch(e){const t=Rnl.toNumber(e);return Rnl.fromNumber(2/(Math.exp(t)-Math.exp(-t)))},coth(e){const t=Rnl.toNumber(e);return Rnl.fromNumber((Math.exp(t)+Math.exp(-t))/(Math.exp(t)-Math.exp(-t)))},acosh(e){const t=Rnl.toNumber(e);return Rnl.fromNumber(Math.log(t+Math.sqrt(t-1)*Math.sqrt(t+1)))},asinh(e){const t=Rnl.toNumber(e);return Rnl.fromNumber(Math.log(t+Math.sqrt(Math.pow(t,2)+1)))},atanh(e){const t=Rnl.toNumber(e);return Rnl.fromNumber((Math.log(1+t)-Math.log(1-t))/2)},asech(e){if(Rnl.isZero(e)){return errorOprnd("DIV")}const t=Rnl.toNumber(e);return Rnl.fromNumber(Math.log((Math.sqrt(-t*t+1)+1)/t))},ascsh(e){if(Rnl.isZero(e)){return errorOprnd("DIV")}const t=Rnl.toNumber(e);return Rnl.fromNumber(Math.log(Math.sqrt(1+1/Math.pow(t,2))+1/t))},acoth(e){if(Rnl.isZero(e)){return errorOprnd("DIV")}const t=Rnl.toNumber(e);return Rnl.fromNumber((Math.log(1+1/t)-Math.log(1-1/t))/2)},Gamma(e){return gamma(e)},"Γ"(e){return gamma(e)},"logΓ"(e){if(Rnl.isNegative(e)||Rnl.isZero(e)){return errorOprnd("LOGΓ")}return logΓ(e)},logFactorial(e){if(Rnl.isNegative(e)||!Rnl.isInteger(e)){return errorOprnd("FACT")}return logΓ(Rnl.add(e,Rnl.one))},sign(e){return Rnl.isPositive(e)?Rnl.one:Rnl.isZero(e)?Rnl.zero:negativeOne},cosd(e){if(Rnl.areEqual(e,ninety)){return Rnl.zero}if(Rnl.areEqual(e,sixty)){return oneHalf}return this.cos(Rnl.multiply(e,piOver180))},sind(e){if(Rnl.areEqual(e,thirty)){return oneHalf}return this.sin(Rnl.multiply(e,piOver180))},tand(e){if(Rnl.areEqual(e,fortyFive)){return Rnl.one}if(Rnl.areEqual(e,ninety)){return errorOprnd("TAN90","90°")}return this.tan(Rnl.multiply(e,piOver180))},cotd(e){return this.cot(Rnl.multiply(e,piOver180))},cscd(e){return this.csc(Rnl.multiply(e,piOver180))},secd(e){return this.sec(Rnl.multiply(e,piOver180))},acosd(e){const t=this.acos(e);return t.dtype?t:Rnl.divide(t,piOver180)},asind(e){const t=this.asin(e);return t.dtype?t:Rnl.divide(t,piOver180)},atand(e){return Rnl.divide(this.atan(e),piOver180)},acotd(e){const t=this.acot(e);return t.dtype?t:Rnl.divide(t,piOver180)},acscd(e){const t=this.acsc(e);return t.dtype?t:Rnl.divide(t,piOver180)},asecd(e){const t=this.asec(e);return t.dtype?t:Rnl.divide(t,piOver180)},chr(e){return String.fromCodePoint(Number(e))},sqrt(e){const t=[BigInt(1),BigInt(2)];return Cpx.isComplex(e)||Rnl.isNegative(e)?Cpx.power([e,Rnl.zero],t):Rnl.power(e,t)},round(e){return Rnl.fromString(Rnl.toString(e,0))}},complex:{abs(e){return Cpx.abs(e)},argument(e){return Cpx.argument(e)},Re(e){return e[0]},Im(e){return e[1]},cos(e){return Cpx.cos(e)},sin(e){return Cpx.sin(e)},asin(e){return Cpx.asin(e)},atan(e){return Cpx.atan(e)},acos(e){return Cpx.subtract([halfPi,Rnl.zero],Cpx.asin(e))},tan(e){return Cpx.divide(Cpx.sin(e),Cpx.cos(e))},cot(e){return Cpx.divide(Cpx.cos(e),Cpx.sin(e))},sec(e){const t=Cpx.cos(e);return t.dtype?t:Cpx.inverse(t)},csc(e){const t=Cpx.sin(e);return t.dtype?t:Cpx.inverse(t)},asec(e){const t=Cpx.inverse(e);return Cpx.subtract([halfPi,Rnl.zero],Cpx.asin(t))},acot(e){return Cpx.atan(Cpx.inverse(e))},acsc(e){return Cpx.asin(Cpx.inverse(e))},exp(e){return Cpx.exp(e)},log(e){return Cpx.log(e)},ln(e){return Cpx.log(e)},log10(e){return Rnl.fromNumber(Math.log10(Rnl.toNumber(e)))},log2(e){return Rnl.fromNumber(Math.log2(Rnl.toNumber(e)))},cosh(e){return Cpx.divide(Cpx.add(Cpx.exp(e),Cpx.exp(Cpx.negate(e))),[Rnl.two,Rnl.zero])},sinh(e){return Cpx.divide(Cpx.subtract(Cpx.exp(e),Cpx.exp(Cpx.negate(e))),[Rnl.two,Rnl.zero])},tanh(e){const t=Cpx.exp(e);const r=Cpx.exp(Cpx.negate(e));return Cpx.divide(Cpx.subtract(t,r),Cpx.add(t,r))},sech(e){return Cpx.divide([Rnl.two,Rnl.zero],Cpx.add(Cpx.exp(e),Cpx.exp(Cpx.negate(e))))},csch(e){return Cpx.divide([Rnl.two,Rnl.zero],Cpx.subtract(Cpx.exp(e),Cpx.exp(Cpx.negate(e))))},coth(e){const t=Cpx.exp(e);const r=Cpx.exp(Cpx.negate(e));return Cpx.divide(Cpx.add(t,r),Cpx.subtract(t,r))},acosh(e){return Cpx.acosh(e)},asinh(e){return Cpx.asinh(e)},atanh(e){return Cpx.atanh(e)},asech(e){return Cpx.acosh(Cpx.inverse(e))},acsch(e){return Cpx.asinh(Cpx.inverse(e))},acoth(e){return Cpx.atanh(Cpx.inverse(e))},Gamma(e){return Cpx.gamma(e)},"Γ"(e){return Cpx.gamma(e)},"logΓ"(e){return errorOprnd("NA_COMPL_OP","logΓ")},sign(e){if(Rnl.isZero(e[1])&&Rnl.isPositive(e[0])){return Rnl.one}else if(Rnl.isZero(e[1])&&Rnl.isNegative(e[0])){return Rnl.negate(Rnl.one)}else{return Cpx.divide(e,[Cpx.abs(e),Rnl.zero])}},round(e){return errorOprnd("NA_COMPL_OP","round")}}};const binary={logn([e,t]){return Rnl.fromNumber(Math.log(Rnl.toNumber(t))/Math.log(Rnl.toNumber(e)))},roundFixed([e,t]){return Rnl.fromString(Rnl.toString(e,t))},roundSignificant([e,t]){return Rnl.fromString(Rnl.toStringSignificant(e,t))},stringFixed([e,t]){return Rnl.toString(e,t)},stringSignificant([e,t]){return Rnl.toStringSignificant(e,t)},atan2([e,t]){return Rnl.fromNumber(Math.atan2(Rnl.toNumber(t),Rnl.toNumber(e)))},hypot([e,t]){const r=Rnl.max(e,t);const n=Rnl.divide(Rnl.min(e,t),r);return Rnl.multiply(r,Rnl.sqrt(Rnl.increment(Rnl.multiply(n,n))))},gcd([e,t]){return Rnl.gcd(e,t)},rms([e,t]){return this.hypot(e,t)},binomial([e,t]){return binomial(e,t)},zeros([e,t]){return Matrix.zeros(Rnl.toNumber(e),Rnl.toNumber(t))}};const reduce={max(e){return e.reduce(((e,t)=>Rnl.max(e,t)))},min(e){return e.reduce(((e,t)=>Rnl.min(e,t)))},sum(e){return e.reduce(((e,t)=>Rnl.add(e,t)))},product(e){return e.reduce(((e,t)=>Rnl.multiply(e,t)))},mean(e){const t=this.sum(e);return Rnl.divide(t,Rnl.fromNumber(e.length))},median(e){const t=this.max(e);const r=this.min(e);return Rnl.divide(Rnl.add(t,r),Rnl.two)},range(e){return Rnl.subtract(this.max(e),this.min(e))},variance(e){const t=this.sum(e);const r=Rnl.divide(t,Rnl.fromNumber(e.length));const n=e.reduce(((e,t)=>Rnl.add(e,Rnl.pow(Rnl.subtract(t,r),Rnl.two))));return Rnl.divide(n,Rnl.subtract(Rnl.fromNumber(e.length),Rnl.one))},stddev(e){const t=this.variance(e);return Rnl.power(t,oneHalf)},accumulate(e){const t=new Array(e.length).fill(0);t[0]=e[0];for(let r=1;r<e.length;r++){t[r]=Rnl.add(t[r-1],e[r])}return t}};const lerp=(e,t)=>{for(let t=0;t<3;t++){if(!(e[t].dtype&dt.RATIONAL)){return errorOprnd("")}}let r=allZeros;if(t){if(e[0].expos!==e[1].expos){return errorOprnd("")}if(e[1].expos!==e[2].expos){return errorOprnd("")}r=e[0].expos}const n=Object.create(null);n.unit=Object.create(null);n.unit.expos=r;n.dtype=dt.RATIONAL;const a=e[0].value;const o=e[1].value;const i=e[2].value;for(let e=0;e<a.length-1;e++){if(Rnl.lessThanOrEqualTo(a[e],i)&Rnl.lessThanOrEqualTo(i,a[e+1])){const t=Rnl.divide(Rnl.subtract(o[e+1],o[e]),Rnl.subtract(a[e+1],a[e]));n.value=Rnl.add(o[e],Rnl.multiply(t,Rnl.subtract(i,a[e])));return Object.freeze(n)}}};const Functions=Object.freeze({functionExpos:functionExpos,unary:unary,binary:binary,reduce:reduce,lerp:lerp});const multivarFunction=(e,t,r)=>{if(r.length===1){const n=Matrix.isVector(r[0])?r[0].value:r.dtype&dt.MATRIX?r[0].value.flat():r[0].value;const a=Functions[e][t](n);let o=r[0].dtype;if(e==="reduce"&&t!=="accumulate"){if(o&dt.MATRIX){o-=dt.MATRIX}if(o&dt.ROWVECTOR){o-=dt.ROWVECTOR}if(o&dt.COLUMNVECTOR){o-=dt.COLUMNVECTOR}}return[a,o]}else{let n=0;let a=false;let o=r[0].dtype;for(n=0;n<r.length;n++){if(Matrix.isVector(r[n])){a=true;o=r[n].dtype;break}}const i=r.map((e=>e.value));if(!a){const n=Functions[e][t](i);return t==="zeros"?[n.value,n.dtype]:[n,r[0].dtype]}else{const r=clone(i);const a=[];for(let o=0;o<i[n].length;o++){r[n]=i[n][o];a.push(Functions[e][t](r))}return[a,o]}}};const equals=(e,t)=>{if(Rnl.isRational(e)&&Rnl.isRational(t)){return Rnl.areEqual(e,t)}else{return e===t}};const compare=(e,t,r,n)=>{if(t===false&&n){return false}if(t===true&&n){t=n}switch(e){case"=":return equals(t,r);case"≠":case"!=":case"/=":if(Rnl.isRational(t)&&Rnl.isRational(r)){return!Rnl.areEqual(t,r)}else{return t!==r}case">":if(Rnl.isRational(t)&&Rnl.isRational(r)){return Rnl.greaterThan(t,r)}else{return t>r}case"<":if(Rnl.isRational(t)&&Rnl.isRational(r)){return Rnl.lessThan(t,r)}else{return t<r}case"≥":case">=":if(Rnl.isRational(t)&&Rnl.isRational(r)){return Rnl.greaterThanOrEqualTo(t,r)}else{return t>=r}case"≤":case"<=":if(Rnl.isRational(t)&&Rnl.isRational(r)){return Rnl.lessThanOrEqualTo(t,r)}else{return t<=r}case"∈":if(typeof t==="string"&&typeof r==="string"){return r.indexOf(t)>-1}else if(Array.isArray(r)&&!Array.isArray(t)){for(let e=0;e<r.length;e++){if(equals(t,r[e])){return true}}return false}else if(r instanceof Map){return r.has(t)}else{return errorOprnd("NOT_ARRAY")}case"⋐":if(typeof t==="string"&&typeof r==="string"){return r.indexOf(t)>-1}else if(Array.isArray(t)&&Array.isArray(r)){for(let e=0;e<r.length;e++){if(equals(t[0],r[e])){if(e+t.length>r.length){return false}for(let n=1;n<t.length;n++){if(!equals(t[n],r[e+n])){return false}}return true}}return false}else{return errorOprnd("NOT_ARRAY")}case"∉":if(typeof t==="string"&&typeof r==="string"){return r.indexOf(t)===-1}else if(Array.isArray(r)){for(let e=0;e<r.length;e++){if(t===r[e]){return false}}return true}else if(r instanceof Map){return!r.has(t)}else{return errorOprnd("NOT_ARRAY")}}};const transpose2D=e=>e[0].map(((t,r)=>e.map((e=>e[r]))));const dotProduct=(e,t)=>e.map(((e,r)=>Rnl.multiply(e,t[r]))).reduce(((e,t)=>Rnl.add(e,t)));const sumOfSquares=e=>e.map((e=>Rnl.multiply(e,e))).reduce(((e,t)=>Rnl.add(e,t)));const oneTenth=[BigInt(1),BigInt(100)];const unary$1={scalar:{abs(e){return Rnl.abs(e)},norm(e){return Rnl.abs(e)},negate(e){return Rnl.negate(e)},exp(e){return Rnl.exp(e)},floor(e){return Rnl.floor(e)},ceil(e){return Rnl.ceil(e)},percent(e){return Rnl.multiply(oneTenth,e)},factorial(e){return Rnl.factorial(e)},not(e){return!e}},complex:{abs(e){return Cpx.abs(e)},norm(e){return Cpx.abs(e)},conjugate(e){return Cpx.conjugate(e)},negate(e){return Cpx.negate(e)},exp(e){return Cpx.exp(e)},floor(e){return errorOprnd("NA_COMPL_OP","floor")},ceil(e){return errorOprnd("NA_COMPL_OP","ceil")},percent(e){return errorOprnd("NA_COMPL_OP","percent")},factorial(e){return errorOprnd("NA_COMPL_OP","factorial")},not(e){return errorOprnd("NA_COMPL_OP","not")}},vector:{abs(e){return Rnl.sqrt(sumOfSquares(e))},norm(e){return Rnl.sqrt(sumOfSquares(e))},negate(e){return e.map((e=>Rnl.negate(e)))},exp(e){return e.map((e=>Rnl.exp(e)))},floor(e){return e.map((e=>Rnl.floor(e)))},ceil(e){return e.map((e=>Rnl.ceil(e)))},percent(e){return e.map((e=>Rnl.multiply(oneTenth,e)))},factorial(e){return e.map((e=>Rnl.factorial(e)))},not(e){return e.map((e=>!e))}},matrix:{abs(e){return Matrix.invert(e,true)},norm(e){if(e.length===e[0].length){let t=Rnl.zero;for(let r=0;r<e.length;r++){t=Rnl.add(t,sumOfSquares(e[r]))}return t.sqrt()}},negate(e){return e.map((e=>e.map((e=>Rnl.negate(e)))))},exp(e){return e.map((e=>e.map((e=>Rnl.exp(e)))))},floor(e){return e.map((e=>e.map((e=>Rnl.floor(e)))))},ceil(e){return e.map((e=>e.map((e=>Rnl.ceil(e)))))},percent(e){return e.map((e=>e.map((e=>Rnl.multiply(oneTenth,e)))))},factorial(e){return e.map((e=>e.map((e=>Rnl.factorial(e)))))},not(e){return e.map((e=>e.map((e=>!e))))}},map:{abs(e){return mapMap(e,(e=>Rnl.abs(e)))},negate(e){return mapMap(e,(e=>Rnl.negate(e)))},exp(e){return mapMap(e,(e=>Rnl.exp(e)))},floor(e){return mapMap(e,(e=>Rnl.floor(e)))},ceil(e){return mapMap(e,(e=>Rnl.ceil(e)))},percent(e){return mapMap(e,(e=>Rnl.multiply(oneTenth,e)))},factorial(e){return mapMap(e,(e=>Rnl.factorial(e)))},not(e){return mapMap(e,(e=>!e))}},mapWithVectorValues:{abs(e){return mapMap(e,(e=>e.map((e=>Rnl.abs(e)))))},negate(e){return mapMap(e,(e=>e.map((e=>Rnl.negate(e)))))},exp(e){return mapMap(e,(e=>e.map((e=>Rnl.exp(e)))))},floor(e){return mapMap(e,(e=>e.map((e=>Rnl.floor(e)))))},ceil(e){return mapMap(e,(e=>e.map((e=>Rnl.ceil(e)))))},percent(e){return mapMap(e,(e=>e.map((e=>Rnl.multiply(oneTenth,e)))))},factorial(e){return mapMap(e,(e=>e.map((e=>Rnl.factorial(e)))))},not(e){return mapMap(e,(e=>e.map((e=>!e))))}}};const condition={scalar(e){return e},vector(e){return e.reduce(((e,t)=>e&&t),true)},matrix(e){const t=new Array(e.length);for(let r=0;r<e.length;r++){t[r]=e[r].reduce(((e,t)=>e&&t),true)}return t.reduce(((e,t)=>e&&t),true)}};const dtype={scalar:{scalar(e,t,r){return r==="&"||r==="&_"?e+(r==="&"?dt.ROWVECTOR:dt.COLUMNVECTOR):e},complex(e,t,r){return t},vector(e,t,r){return t},matrix(e,t,r){return t},dataFrame(e,t,r){return t},map(e,t,r){return t},mapWithVectorValues(e,t,r){return t}},complex:{scalar(e,t,r){return e},complex(e,t,r){return e}},vector:{scalar(e,t,r){return e},map(e,t,r){return t+(e&dt.ROWVECTOR)+(e&dt.COLUMNVECTOR)}},rowVector:{rowVector(e,t,r){return r==="&_"?e-dt.ROWVECTOR+dt.MATRIX:e},columnVector(e,t,r){return e},matrix(e,t,r){return r==="&_"?t:e}},columnVector:{rowVector(e,t,r){return r==="dot"?dt.RATIONAL:r==="cross"?e:e-dt.COLUMNVECTOR+dt.MATRIX},columnVector(e,t,r){return r==="&"?e-dt.COLUMNVECTOR+dt.MATRIX:e},matrix(e,t,r){return t}},matrix:{scalar(e,t,r){return e},rowVector(e,t,r){return e},columnVector(e,t,r){return r==="&"?e:t},matrix(e,t,r){return e},map(e,t,r){return 0}},dataFrame:{scalar(e,t,r){return e}},map:{scalar(e,t,r){return e},vector(e,t,r){return e+(t&dt.ROWVECTOR)+(t&dt.COLUMNVECTOR)},matrix(e,t,r){return 0},map(e,t,r){return e}},mapWithVectorValues:{scalar(e,t,r){return e}}};const binary$1={scalar:{scalar:{add(e,t){return Rnl.add(e,t)},subtract(e,t){return Rnl.subtract(e,t)},multiply(e,t){return Rnl.multiply(e,t)},divide(e,t){return Rnl.divide(e,t)},power(e,t){return Cpx.isComplex(e)||Rnl.isNegative(e)&&Rnl.isPositive(t)&&Rnl.lessThan(t,Rnl.one)?Cpx.power([e,Rnl.zero],t):Rnl.power(e,t)},hypot(e,t){return Rnl.hypot(e,t)},modulo(e,t){return Rnl.modulo(e,t)},and(e,t){return e&&t},or(e,t){return e||t},xor(e,t){return e!==t},concat(e,t){return[e,t]},unshift(e,t){return[e,t]}},complex:{add(e,t){return[Rnl.add(e,t[0]),t[1]]},subtract(e,t){return[Rnl.subtract(e,t[0]),Rnl.negate(t[1])]},multiply(e,t){return[Rnl.multiply(e,t[0]),Rnl.multiply(e,t[1])]},divide(e,t){return Cpx.divide([e,Rnl.zero],t)},power(e,t){return Cpx.power([e,Rnl.zero],t)},modulo(e,t){return errorOprnd("NA_COMPL_OP","modulo")},and(e,t){return errorOprnd("NA_COMPL_OP","and")},or(e,t){return errorOprnd("NA_COMPL_OP","or")},xor(e,t){return errorOprnd("NA_COMPL_OP","xor")}},vector:{add(e,t){return t.map((t=>Rnl.add(e,t)))},subtract(e,t){return t.map((t=>Rnl.subtract(e,t)))},multiply(e,t){return t.map((t=>Rnl.multiply(e,t)))},divide(e,t){return t.map((t=>Rnl.divide(e,t)))},power(e,t){return t.map((t=>Rnl.power(e,t)))},modulo(e,t){return t.map((t=>Rnl.modulo(e,t)))},and(e,t){return t.map((t=>e&&t))},or(e,t){return t.map((t=>e||t))},xor(e,t){return t.map((t=>e!==t))},concat(e,t){return[e,...t]}},matrix:{add(e,t){return t.map((t=>t.map((t=>Rnl.add(e,t)))))},subtract(e,t){return t.map((t=>t.map((t=>Rnl.subtract(e,t)))))},multiply(e,t){return t.map((t=>t.map((t=>Rnl.multiply(e,t)))))},divide(e,t){return t.map((t=>t.map((t=>Rnl.divide(e,t)))))},power(e,t){return t.map((t=>t.map((t=>Rnl.power(e,t)))))},modulo(e,t){return t.map((t=>t.map((t=>Rnl.modulo(e,t)))))},and(e,t){return t.map((t=>t.map((t=>e&&t))))},or(e,t){return t.map((t=>t.map((t=>e||t))))},xor(e,t){return t.map((t=>t.map((t=>e!==t))))},concat(e,t){return errorOprnd("BAD_CONCAT")}},dataFrame:{multiply(e,t){t.data=t.data.map((t=>isNaN(t[0])?t:t.map((t=>{let r=t.length;if(t.indexOf(".")){r-=1}return Rnl.toStringSignificant(Rnl.multiply(e,Rnl.fromString(t)),r)}))));return t},divide(e,t){t.data=t.data.map((t=>isNaN(t[0])?t:t.map((t=>{let r=t.length;if(t.indexOf(".")){r-=1}return Rnl.toStringSignificant(Rnl.divide(e,Rnl.fromString(t)),r)}))));return t}},map:{add(e,t){return mapMap(t,(t=>Rnl.add(e,t)))},subtract(e,t){return mapMap(t,(t=>Rnl.subtract(e,t)))},multiply(e,t){return mapMap(t,(t=>Rnl.multiply(e,t)))},divide(e,t){return mapMap(t,(t=>Rnl.divide(e,t)))},power(e,t){return mapMap(t,(t=>Rnl.power(e,t)))},modulo(e,t){return mapMap(t,(t=>Rnl.modulo(e,t)))},and(e,t){return mapMap(t,(t=>e&&t))},or(e,t){return mapMap(t,(t=>e||t))},xor(e,t){return mapMap(t,(t=>e!==t))}},mapWithVectorValues:{add(e,t){return mapMap(t,(t=>t.map((t=>Rnl.add(e,t)))))},subtract(e,t){return mapMap(t,(t=>t.map((t=>Rnl.subtract(e,t)))))},multiply(e,t){return mapMap(t,(t=>t.map((t=>Rnl.multiply(e,t)))))},divide(e,t){return mapMap(t,(t=>t.map((t=>Rnl.divide(e,t)))))},power(e,t){return mapMap(t,(t=>t.map((t=>Rnl.power(e,t)))))},modulo(e,t){return mapMap(t,(t=>t.map((t=>Rnl.modulo(e,t)))))},and(e,t){return mapMap(t,(t=>t.map((t=>e&&t))))},or(e,t){return mapMap(t,(t=>t.map((t=>e||t))))},xor(e,t){return mapMap(t,(t=>t.map((t=>e!==t))))}}},complex:{scalar:{add(e,t){return[Rnl.add(e[0],t),e[1]]},subtract(e,t){return[Rnl.subtract(e[0],t),e[1]]},multiply(e,t){return[Rnl.multiply(e[0],t),Rnl.multiply(e[1],t)]},divide(e,t){return Cpx.divide(e,[t,Rnl.zero])},power(e,t){return Cpx.power(e,[t,Rnl.zero])},modulo(e,t){return errorOprnd("NA_COMPL_OP","modulo")},and(e,t){return errorOprnd("NA_COMPL_OP","and")},or(e,t){return errorOprnd("NA_COMPL_OP","or")},xor(e,t){return errorOprnd("NA_COMPL_OP","xor")}},complex:{add(e,t){return[Rnl.add(e[0],t[0]),Rnl.add(e[1],t[1])]},subtract(e,t){return[Rnl.subtract(e[0],t[0]),Rnl.subtract(e[1],t[1])]},multiply(e,t){return Cpx.multiply(e,t)},divide(e,t){return Cpx.divide(e,t)},power(e,t){return Cpx.power(e,t)},modulo(e,t){return errorOprnd("NA_COMPL_OP","modulo")},and(e,t){return errorOprnd("NA_COMPL_OP","and")},or(e,t){return errorOprnd("NA_COMPL_OP","or")},xor(e,t){return errorOprnd("NA_COMPL_OP","xor")}}},vector:{scalar:{add(e,t){return e.map((e=>Rnl.add(e,t)))},subtract(e,t){return e.map((e=>Rnl.subtract(e,t)))},multiply(e,t){return e.map((e=>Rnl.multiply(e,t)))},divide(e,t){return e.map((e=>Rnl.divide(e,t)))},power(e,t){return e.map((e=>Rnl.power(e,t)))},modulo(e,t){return e.map((e=>Rnl.modulo(e,t)))},and(e,t){return e.map((e=>e&&t))},or(e,t){return e.map((e=>e||t))},xor(e,t){return e.map((e=>e!==t))},concat(e,t){return[...e,t]}},map:{add(e,t){return mapMap(t,(t=>e.map((e=>Rnl.add(t,e)))))},subtract(e,t){return mapMap(t,(t=>e.map((e=>Rnl.subtract(t,e)))))},multiply(e,t){return mapMap(t,(t=>e.map((e=>Rnl.multiply(t,e)))))},divide(e,t){return mapMap(t,(t=>e.map((e=>Rnl.divide(t,e)))))},power(e,t){return mapMap(t,(t=>e.map((e=>Rnl.power(t,e)))))},modulo(e,t){return mapMap(t,(t=>e.map((e=>Rnl.modulo(t,e)))))},and(e,t){return mapMap(t,(t=>e.map((e=>t&&e))))},or(e,t){return mapMap(t,(t=>e.map((e=>t||e))))},xor(e,t){return mapMap(t,(t=>e.map((e=>t!==e))))}}},rowVector:{rowVector:{add(e,t){if(e.length!==t.length){return errorOprnd("MIS_ELNUM")}return e.map(((e,r)=>Rnl.add(e,t[r])))},subtract(e,t){if(e.length!==t.length){return errorOprnd("MIS_ELNUM")}return e.map(((e,r)=>Rnl.subtract(e,t[r])))},divide(e,t){if(e.length!==t.length){return errorOprnd("MIS_ELNUM")}return e.map(((e,r)=>Rnl.divide(e,t[r])))},dot(e,t){if(e.length!==t.length){return errorOprnd("MIS_ELNUM")}return dotProduct(e,t)},cross(e,t){if(e.length!==3||t.length!==3){return errorOprnd("CROSS")}const r=[Rnl.zero,Rnl.zero,Rnl.zero];r[0]=Rnl.subtract(Rnl.multiply(e[1],t[2]),Rnl.multiply(e[2],t[1]));r[1]=Rnl.subtract(Rnl.multiply(e[2],t[0]),Rnl.multiply(e[0],t[2]));r[2]=Rnl.subtract(Rnl.multiply(e[0],t[1]),Rnl.multiply(e[1],t[0]));return r},multiply(e,t){if(e.length===1&&t.length===1){return[Rnl.multiply(e[0],t[0])]}return errorOprnd("MIS_ELNUM")},asterisk(e,t){if(e.length!==t.length){return errorOprnd("MIS_ELNUM")}return e.map(((e,r)=>Rnl.multiply(e,t[r])))},power(e,t){if(e.length!==t.length){return errorOprnd("MIS_ELNUM")}return e.map(((e,r)=>Rnl.power(e,t[r])))},modulo(e,t){if(e.length!==t.length){return errorOprnd("MIS_ELNUM")}return e.map(((e,r)=>Rnl.modulo(e,t[r])))},and(e,t){if(e.length!==t.length){return errorOprnd("MIS_ELNUM")}return e.map(((e,r)=>e&&t[r]))},or(e,t){if(e.length!==t.length){return errorOprnd("MIS_ELNUM")}return e.map(((e,r)=>e||t[r]))},xor(e,t){if(e.length!==t.length){return errorOprnd("MIS_ELNUM")}return e.map(((e,r)=>e!==t[r]))},concat(e,t){return e.concat(t)},unshift(e,t){return[e,t]}},columnVector:{add(e,t){if(e.length===1&&t.length===1){return[Rnl.add(e[0],t[0])]}return errorOprnd("MIS_ELNUM")},subtract(e,t){if(e.length===1&&t.length===1){return[Rnl.subtract(e[0],t[0])]}return errorOprnd("MIS_ELNUM")},dot(e,t){if(e.length!==t.length){return errorOprnd("MIS_ELNUM")}return dotProduct(e,t)},cross(e,t){if(e.length!==3||t.length!==3){return errorOprnd("CROSS")}const r=[Rnl.zero,Rnl.zero,Rnl.zero];r[0]=Rnl.subtract(Rnl.multiply(e[1],t[2]),Rnl.multiply(e[2],t[1]));r[1]=Rnl.subtract(Rnl.multiply(e[2],t[0]),Rnl.multiply(e[0],t[2]));r[2]=Rnl.subtract(Rnl.multiply(e[0],t[1]),Rnl.multiply(e[1],t[0]));return r},multiply(e,t){if(e.length!==t.length){return errorOprnd("MIS_ELNUM")}return dotProduct(e,t)},asterisk(e,t){if(e.length!==t.length){return errorOprnd("MIS_ELNUM")}return e.map(((e,r)=>Rnl.multiply(e,t[r])))},power(e,t){if(e.length===1&&t.length===1){return[Rnl.power(e[0],t[0])]}return errorOprnd("MIS_ELNUM")},modulo(e,t){if(e.length===1&&t.length===1){return[Rnl.modulo(e[0],t[0])]}return errorOprnd("MIS_ELNUM")},and(e,t){if(e.length===1&&t.length===1){return[e[0]&&t[0]]}return errorOprnd("MIS_ELNUM")},or(e,t){if(e.length===1&&t.length===1){return[e[0]||t[0]]}return errorOprnd("MIS_ELNUM")},xor(e,t){if(e.length===1&&t.length===1){return[e[0]!==t[0]]}return errorOprnd("MIS_ELNUM")},concat(e,t){return"BAD_CONCAT"},unshift(e,t){return"BAD_CONCAT"}},matrix:{add(e,t){if(e.length!==t[0].length){return errorOprnd("MIS_ELNUM")}return t.map((t=>t.map(((t,r)=>Rnl.add(e[r],t)))))},subtract(e,t){if(e.length!==t[0].length){return errorOprnd("MIS_ELNUM")}return t.map((t=>t.map(((t,r)=>Rnl.subtract(e[r],t)))))},concat(e,t){if(e.length!==t[0].length){return errorOprnd("BAD_CONCAT")}return t.map(((t,r)=>[e[r],...t]))},unshift(e,t){if(e.length!==t[0].length){return errorOprnd("BAD_CONCAT")}return[e,...t]}}},columnVector:{rowVector:{add(e,t){if(e.length===1&&t.length===1){return[Rnl.add(e[0],t[0])]}return errorOprnd("MIS_ELNUM")},subtract(e,t){if(e.length===1&&t.length===1){return[Rnl.subtract(e[0],t[0])]}return errorOprnd("MIS_ELNUM")},dot(e,t){if(e.length!==t.length){return errorOprnd("MIS_ELNUM")}return dotProduct(e,t)},cross(e,t){if(e.length!==3||t.length!==3){return errorOprnd("CROSS")}const r=[Rnl.zero,Rnl.zero,Rnl.zero];r[0]=Rnl.subtract(Rnl.multiply(e[1],t[2]),Rnl.multiply(e[2],t[1]));r[1]=Rnl.subtract(Rnl.multiply(e[2],t[0]),Rnl.multiply(e[0],t[2]));r[2]=Rnl.subtract(Rnl.multiply(e[0],t[1]),Rnl.multiply(e[1],t[0]));return r},multiply(e,t){if(e.length!==t.length){return errorOprnd("MIS_ELNUM")}return dotProduct(e,t)},divide(e,t){return e.map((e=>t.map((t=>Rnl.divide(e,t)))))},asterisk(e,t){if(e.length!==t.length){return errorOprnd("MIS_ELNUM")}return e.map(((e,r)=>Rnl.multiply(e,t[r])))},power(e,t){if(e.length===1&&t.length===1){return[Rnl.power(e[0],t[0])]}return errorOprnd("MIS_ELNUM")},modulo(e,t){if(e.length===1&&t.length===1){return[Rnl.modulo(e[0],t[0])]}return errorOprnd("MIS_ELNUM")},and(e,t){if(e.length===1&&t.length===1){return[e[0]&&t[0]]}return errorOprnd("MIS_ELNUM")},or(e,t){if(e.length===1&&t.length===1){return[e[0]||t[0]]}return errorOprnd("MIS_ELNUM")},xor(e,t){if(e.length===1&&t.length===1){return[e[0]!==t[0]]}return errorOprnd("MIS_ELNUM")},concat(e,t){return"BAD_CONCAT"},unshift(e,t){return"BAD_CONCAT"}},columnVector:{add(e,t){if(e.length!==t.length){return errorOprnd("MIS_ELNUM")}return e.map(((e,r)=>Rnl.add(e,t[r])))},subtract(e,t){if(e.length!==t.length){return errorOprnd("MIS_ELNUM")}return e.map(((e,r)=>Rnl.subtract(e,t[r])))},divide(e,t){if(e.length!==t.length){return errorOprnd("MIS_ELNUM")}return e.map(((e,r)=>Rnl.divide(e,t[r])))},dot(e,t){if(e.length!==t.length){return errorOprnd("MIS_ELNUM")}return dotProduct(e,t)},cross(e,t){if(e.length!==3||t.length!==3){return errorOprnd("CROSS")}const r=[Rnl.zero,Rnl.zero,Rnl.zero];r[0]=Rnl.subtract(Rnl.multiply(e[1],t[2]),Rnl.multiply(e[2],t[1]));r[1]=Rnl.subtract(Rnl.multiply(e[2],t[0]),Rnl.multiply(e[0],t[2]));r[2]=Rnl.subtract(Rnl.multiply(e[0],t[1]),Rnl.multiply(e[1],t[0]));return r},multiply(e,t){if(e.length===1&&t.length===1){return[Rnl.multiply(e[0],t[0])]}return errorOprnd("MIS_ELNUM")},asterisk(e,t){if(e.length!==t.length){return errorOprnd("MIS_ELNUM")}return e.map(((e,r)=>Rnl.multiply(e,t[r])))},power(e,t){if(e.length!==t.length){return errorOprnd("MIS_ELNUM")}return e.map(((e,r)=>Rnl.power(e,t[r])))},modulo(e,t){if(e.length!==t.length){return errorOprnd("MIS_ELNUM")}return e.map(((e,r)=>Rnl.modulo(e,t[r])))},and(e,t){if(e.length!==t.length){return errorOprnd("MIS_ELNUM")}return e.map(((e,r)=>e&&t[r]))},or(e,t){if(e.length!==t.length){return errorOprnd("MIS_ELNUM")}return e.map(((e,r)=>e||t[r]))},xor(e,t){if(e.length!==t.length){return errorOprnd("MIS_ELNUM")}return e.map(((e,r)=>e!==t[r]))},concat(e,t){if(e.length!==t.length){return errorOprnd("MIS_ELNUM")}return e.map(((e,r)=>[e,t[r]]))},unshift(e,t){return e.concat(t)}},matrix:{add(e,t){const r=clone(t);if(e.length!==t.length){return errorOprnd("MIS_ELNUM")}for(let n=0;n<t.length;n++){for(let a=0;a<t[0].length;a++){r[n][a]=Rnl.add(t[n][a],e[a])}}return r},subtract(e,t){const r=clone(t);if(e.length!==t.length){return errorOprnd("MIS_ELNUM")}for(let n=0;n<t.length;n++){for(let a=0;a<t[0].length;a++){r[n][a]=Rnl.subtract(t[n][a],e[a])}}return r},concat(e,t){if(e.length!==t.length){return errorOprnd("MIS_ELNUM")}return t.map(((t,r)=>[e[r],...t]))},unshift(e,t){return"BAD_CONCAT"}}},matrix:{scalar:{add(e,t){return e.map((e=>e.map((e=>Rnl.add(e,t)))))},subtract(e,t){return e.map((e=>e.map((e=>Rnl.subtract(e,t)))))},multiply(e,t){return e.map((e=>e.map((e=>Rnl.multiply(e,t)))))},divide(e,t){return e.map((e=>e.map((e=>Rnl.divide(e,t)))))},power(e,t){if(t==="T"){return transpose2D(e)}if(e.length===e[0].length&&Rnl.areEqual(t,[BigInt(-1),BigInt(1)])){return Matrix.invert(e)}return e.map((e=>e.map((e=>Rnl.power(e,t)))))},modulo(e,t){return e.map((e=>e.map((e=>Rnl.modulo(e,t)))))}},rowVector:{add(e,t){return e.map((e=>e.map(((e,r)=>Rnl.add(e,t[r])))))},subtract(e,t){return e.map((e=>e.map(((e,r)=>Rnl.subtract(e,t[r])))))},multiply(e,t){return e.map((e=>e.map(((e,r)=>Rnl.multiply(e,t[r])))))},divide(e,t){return e.map((e=>e.map(((e,r)=>Rnl.divide(e,t[r])))))},power(e,t){return e.map((e=>e.map(((e,r)=>Rnl.power(e,t[r])))))},unshift(e,t){if(e[0].length!==t.length){return errorOprnd("MIS_ELNUM")}return[...e,t]}},columnVector:{add(e,t){return e.map((e=>e.map(((e,r)=>Rnl.add(e,t[r])))))},subtract(e,t){return e.map((e=>e.map(((e,r)=>Rnl.subtract(e,t[r])))))},multiply(e,t){if(e[0].length!==t.length){return errorOprnd("MIS_ELNUM")}return e.map((e=>dotProduct(e,t)))},concat(e,t){if(e.length!==t.length){return errorOprnd("MIS_ELNUM")}return e.map(((e,r)=>[...e,t[r]]))}},matrix:{add(e,t){if(e.length!==t.length){return errorOprnd("MIS_ELNUM")}if(e[0].length!==t[0].length){return errorOprnd("MIS_ELNUM")}return e.map(((e,r)=>e.map(((e,n)=>Rnl.add(e,t[r][n])))))},subtract(e,t){if(e.length!==t.length){return errorOprnd("MIS_ELNUM")}if(e[0].length!==t[0].length){return errorOprnd("MIS_ELNUM")}return e.map(((e,r)=>e.map(((e,n)=>Rnl.subtract(e,t[r][n])))))},dot(e,t){if(e.length!==t.length){return errorOprnd("MIS_ELNUM")}if(e[0].length!==t[0].length){return errorOprnd("MIS_ELNUM")}return e.map(((e,r)=>dotProduct(e,t[r]))).reduce(((e,t)=>Rnl.add(e,t)))},cross(e,t){return errorOprnd("CROSS")},multiply(e,t){},asterisk(e,t){if(e.length!==t.length){return errorOprnd("MIS_ELNUM")}if(e[0].length!==t[0].length){return errorOprnd("MIS_ELNUM")}return e.map(((e,r)=>e.map(((e,n)=>Rnl.multiply(e,t[r][n])))))},divide(e,t){if(e.length!==t.length){return errorOprnd("MIS_ELNUM")}if(e[0].length!==t[0].length){return errorOprnd("MIS_ELNUM")}return e.map(((e,r)=>e.map(((e,n)=>Rnl.divide(e,t[r][n])))))},power(e,t){if(e.length!==t.length){return errorOprnd("MIS_ELNUM")}if(e[0].length!==t[0].length){return errorOprnd("MIS_ELNUM")}return e.map(((e,r)=>e.map(((e,n)=>Rnl.power(e,t[r][n])))))},modulo(e,t){if(e.length!==t.length){return errorOprnd("MIS_ELNUM")}if(e[0].length!==t[0].length){return errorOprnd("MIS_ELNUM")}return e.map(((e,r)=>e.map(((e,n)=>Rnl.modulo(e,t[r][n])))))},and(e,t){if(e.length!==t.length){return errorOprnd("MIS_ELNUM")}if(e[0].length!==t[0].length){return errorOprnd("MIS_ELNUM")}return e.map(((e,r)=>e.map(((e,n)=>e&&t[r][n]))))},or(e,t){if(e.length!==t.length){return errorOprnd("MIS_ELNUM")}if(e[0].length!==t[0].length){return errorOprnd("MIS_ELNUM")}return e.map(((e,r)=>e.map(((e,n)=>e||t[r][n]))))},xor(e,t){if(e.length!==t.length){return errorOprnd("MIS_ELNUM")}if(e[0].length!==t[0].length){return errorOprnd("MIS_ELNUM")}return e.map(((e,r)=>e.map(((e,n)=>e!==t[r][n]))))},concat(e,t){if(e.length!==t.length){return errorOprnd("MIS_ELNUM")}return e.map(((e,r)=>e.concat(t[r])))},unshift(e,t){if(e[0].length!==t[0].length){return errorOprnd("MIS_ELNUM")}return e.concat(t)}},map:{}},dataFrame:{multiply(e,t){e.data=e.data.map((e=>isNaN(e[0])?e:e.map((e=>{let r=e.length;if(e.indexOf(".")){r-=1}return Rnl.toStringSignificant(Rnl.multiply(t,Rnl.fromString(e)),r)}))));return e},divide(e,t){e.data=e.data.map((e=>isNaN(e[0])?e:e.map((e=>{let r=e.length;if(e.indexOf(".")){r-=1}return Rnl.toStringSignificant(Rnl.divide(t,Rnl.fromString(e)),r)}))));return e}},map:{scalar:{add(e,t){return mapMap(e,(e=>Rnl.add(e,t)))},subtract(e,t){return mapMap(e,(e=>Rnl.subtract(e,t)))},multiply(e,t){return mapMap(e,(e=>Rnl.multiply(e,t)))},divide(e,t){return mapMap(e,(e=>Rnl.divide(e,t)))},power(e,t){return mapMap(e,(e=>Rnl.power(e,t)))},modulo(e,t){return mapMap(e,(e=>Rnl.modulo(e,t)))},and(e,t){return mapMap(e,(e=>e&&t))},or(e,t){return mapMap(e,(e=>e||t))},xor(e,t){return mapMap(e,(e=>e!==t))}},vector:{add(e,t){return mapMap(e,(e=>t.map((t=>Rnl.add(e,t)))))},subtract(e,t){return mapMap(e,(e=>t.map((t=>Rnl.subtract(e,t)))))},multiply(e,t){return mapMap(e,(e=>t.map((t=>Rnl.multiply(e,t)))))},divide(e,t){return mapMap(e,(e=>t.map((t=>Rnl.divide(e,t)))))},power(e,t){return mapMap(e,(e=>t.map((t=>Rnl.power(e,t)))))},modulo(e,t){return mapMap(e,(e=>t.map((t=>Rnl.modulo(e,t)))))},and(e,t){return mapMap(e,(e=>t.map((t=>e&&t))))},or(e,t){return mapMap(e,(e=>t.map((t=>e||t))))},xor(e,t){return mapMap(e,(e=>t.map((t=>e!==t))))}},matrix:{},map:{}},mapWithVectorValues:{scalar:{add(e,t){return mapMap(e,(e=>e.map((e=>Rnl.add(e,t)))))},subtract(e,t){return mapMap(e,(e=>e.map((e=>Rnl.subtract(e,t)))))},multiply(e,t){return mapMap(e,(e=>e.map((e=>Rnl.multiply(e,t)))))},divide(e,t){return mapMap(e,(e=>e.map((e=>Rnl.divide(e,t)))))},power(e,t){return mapMap(e,(e=>e.map((e=>Rnl.power(e,t)))))},modulo(e,t){return mapMap(e,(e=>e.map((e=>Rnl.modulo(e,t)))))},and(e,t){return mapMap(e,(e=>e.map((e=>e&&t))))},or(e,t){return mapMap(e,(e=>e.map((e=>e||t))))},xor(e,t){return mapMap(e,(e=>e.map((e=>e!==t))))}},vector:{},matrix:{},map:{},mapWithVectorValues:{}}};const relations={scalar:{scalar:{relate(e,t,r,n){return compare(e,t,r,n)}},vector:{relate(e,t,r,n){if(n===undefined){return r.map((r=>compare(e,t,r,undefined)))}else if(typeof n!=="object"){return r.map((r=>compare(e,t,r,n)))}else if(Array.isArray(n)){return r.map(((r,a)=>compare(e,t,r,n[a])))}}},matrix:{relate(e,t,r,n){if(n===undefined){return r.map((r=>r.map((r=>compare(e,t,r,undefined)))))}else if(typeof n!=="object"){return r.map((r=>r.map((r=>compare(e,t,r,n)))))}else if(Array.isArray(n)){return r.map(((r,a)=>r.map(((r,o)=>compare(e,t,r,n[a][o])))))}}},map:{relate(e,t,r,n){if(n===undefined){return mapMap(r,(r=>compare(e,t,r,undefined)))}else if(typeof n!=="object"){return mapMap(r,(r=>compare(e,t,r,n)))}else{const a=new Map;for(const[o,i]of r.entries()){a.set(o,compare(e,t,i,n[o]))}return a}}}},vector:{scalar:{relate(e,t,r,n){if(n===undefined){return t.map((t=>compare(e,t,r,undefined)))}else if(typeof n!=="object"){return t.map((t=>compare(e,t,r,n)))}else if(Array.isArray(n)){return t.map(((t,a)=>compare(e,t,r,n[a])))}}}},rowVector:{rowVector:{relate(e,t,r,n){if(n===undefined){return t.map(((t,n)=>compare(e,t,r[n],undefined)))}}}},columnVector:{columnVector:{relate(e,t,r,n){if(n===undefined){return t.map(((t,n)=>compare(e,t,r[n],undefined)))}}}},matrix:{scalar:{relate(e,t,r,n){if(n===undefined){return t.map((t=>t.map((t=>compare(e,t,r,undefined)))))}else if(typeof n!=="object"){return t.map((t=>t.map((t=>compare(e,t,r,n)))))}else if(Array.isArray(n)){return t.map(((t,a)=>t.map(((t,o)=>compare(e,t,r,n[a][o])))))}}}}};const isDivByZero=(e,t)=>{switch(t){case"scalar":return e[1]===BigInt(0);case"vector":for(let t=0;t<e.length;t++){if(e[t][1]===BigInt(0)){return true}}return false;case"matrix":for(let t=0;t<e.length;t++){for(let r=0;r<e[0].length;r++){if(e[t][r][1]===BigInt(0)){return true}}}return false;case"map":for(const[t,r]of Object.entries(e)){if(r[1]===BigInt(0)){return true}}return false;case"mapWithVectorValues":for(const[t,r]of Object.entries(e)){for(let e=0;e<r.length;e++){if(r[e][1]===BigInt(0)){return true}}}return false;default:return false}};const Operators=Object.freeze({unary:unary$1,binary:binary$1,relations:relations,condition:condition,dtype:dtype});const wideCharRegEx=/[\uD800-\uDBFF][\uDC00-\uDFFF][\uFE00\uFE01]?/g;const textRange=(e,t)=>{if(t.dtype!==dt.RATIONAL&&t.dtype!==dt.RANGE){return errorOprnd("STR_INDEX")}const r=arrayOfRegExMatches(wideCharRegEx,e);let n="";if(r.length===0){if(t.dtype===dt.RATIONAL){n=e.charAt(Rnl.toNumber(t.value)-1)}else if(t.dtype===dt.RANGE){const r=Rnl.toNumber(t.value[0]);const a=Rnl.toNumber(t.value[1]);const o=t.value[2]==="∞"?e.length:Rnl.toNumber(t.value[2]);if(a===1){n=e.slice(r-1,o)}else{for(let t=r-1;t<o;t+=a){n+=e.charAt(t)}}}}else{let a=0;let o=0;let i="";let l=0;let s=0;let m=0;if(t.dtype===dt.RATIONAL){l=Rnl.toNumber(t.value);s=1;m=l}else{l=Rnl.toNumber(t.value[0]);s=Rnl.toNumber(t.value[1]);m=Rnl.toNumber(t.value[2])}let u=l;for(let t=0;t<r.length;t++){const l=r[t].index;i=e.slice(o,l);while(u<=m&&a+i.length>=u){n+=i[u-a-1];u+=s}if(u<=m&&a+i.length===u-1){n+=r[t].value;u+=s}if(u>m){return{value:n,unit:null,dtype:dt.STRING}}a+=i.length+1;o=l+r[t].length}if(u>=a&&u<=m){i=e.slice(o);while(u<=m&&a+i.length>=u){n+=i[u-a-1];u+=s}}else{return errorOprnd("BIGINDEX")}}return{value:n,unit:null,dtype:dt.STRING}};function insertOneHurmetVar(e,t,r){const n=e.format?e.format.value:"h15";if(!Array.isArray(t.name)){e[t.name]=t}else if(t.value===null){for(let r=0;r<t.name.length;r++){e[t.name[r]]={value:null}}}else if(isMatrix(t)){const r=Boolean(t.dtype&dt.QUANTITY);let n=t.resultdisplay;n=n.replace(/\\(begin|end){[bp]matrix}/g,"").trim();const a=n.split(/&|\\\\/);if(t.dtype&dt.MATRIX){const n=t.dtype-dt.MATRIX;const o=r?t.value.plain.length:t.value.length;const i=t.name.length/o;let l=0;for(let s=0;s<o;s++){for(let o=0;o<i;o++){const i=r?{plain:t.value.plain[s][o],inBaseUnits:t.value.inBaseUnits[s][o]}:t.value[s][o];e[t.name[s]]={name:t.name[l],value:i,resultdisplay:r?parse(a[l].trim()+" '"+t.unit+"'"):a[l].trim(),expos:t.expos,unit:r?t.unit:undefined,dtype:n};l+=1}}}else{const n=Boolean(t.dtype&dt.COLUMNVECTOR);const o=t.dtype-(n?dt.COLUMNVECTOR:dt.ROWVECTOR);for(let n=0;n<t.name.length;n++){const i=r?{plain:t.value.plain[n],inBaseUnits:t.value.inBaseUnits[n]}:t.value[n];e[t.name[n]]={name:t.name[n],value:i,resultdisplay:r?parse(a[n].trim()+" '"+t.unit+"'"):a[n].trim(),expos:t.expos,unit:r?t.unit:undefined,dtype:o}}}}else if(t.dtype&dt.MAP){const a=t.value.unit;const o=a&&a.name?a.name:undefined;const i=t.dtype-dt.MAP;let l=0;if(t.dtype&dt.QUANTITY){for(const a of t.value.plain.values()){const s={value:{plain:a},expos:t.expos,factor:t.factor,dtype:i};s.resultdisplay=format(a,n,r);if(o){s.resultdisplay+=" "+unitTeXFromString(o)}e[t.name[l]]=s;l+=1}l=0;for(const r of t.value.inBaseUnits.values()){e[t.name[l]].value.inBaseUnits=r;l+=1}}else{for(const a of t.value.values()){const s={value:a,expos:t.expos,factor:t.factor,dtype:i};s.resultdisplay=Rnl.isRational(a)?format(a,n,r):String(a);if(o){s.resultdisplay+=" "+unitTeXFromString(o)}e[t.name[l]]=s;l+=1}}}else if(t.dtype===dt.DATAFRAME){for(let r=0;r<t.name.length;r++){const n=t.value.data[r][0];const a=t.value.dtype[r];const o=a&dt.RATIONAL?Rnl.fromString(n):n;const i={value:o,unit:t.unit[t.value.units[r]],dtype:a,resultdisplay:a&dt.RATIONAL?parse(format(o)):parse(o)};if(t.value.units[r]){i.value={plain:i.value};const e=t.unit[t.value.units[r]];i.value.inBaseUnits=Rnl.multiply(Rnl.add(i.value.plain,e.gauge),e.factor);i.expos=e.expos;i.resultdisplay+=" "+unitTeXFromString(i.unit.name)}e[t.name[r]]=i}}else if(t.dtype===dt.TUPLE){let r=0;for(const n of t.value.values()){e[t.name[r]]=n;r+=1}}else if(t.dtype===dt.MODULE){if(t.name.length!==t.value.length){return errorOprnd("MULT_MIS")}else{let r=0;for(const n of t.value.values()){const a=clone(n);e[t.name[r]]=a;r+=1}}}}const CR_NEWLINE_R=/\r\n?/g;const TAB_R=/\t/g;const FORMFEED_R=/\f/g;const CLASS_R=/(?:^| )\.([a-z-]+)(?: |$)/;const WIDTH_R=/(?:^| )width="?([\d.a-z]+"?)(?: |$)/;const COL_WIDTHS_R=/(?:^| )colWidths="([^"]*)"/;const ID_R=/(?:^| )#([a-z-]+)(?: |$)/;const preprocess=function(e){return e.replace(CR_NEWLINE_R,"\n").replace(FORMFEED_R,"").replace(TAB_R,"    ")};const inlineRegex=function(e){const t=function(t,r){return r.inline?e.exec(t):null};t.regex=e;return t};const blockRegex=function(e){const t=function(t,r){return r.inline?null:e.exec(t)};t.regex=e;return t};const anyScopeRegex=function(e){const t=function(t,r){return e.exec(t)};t.regex=e;return t};const UNESCAPE_URL_R=/\\([^0-9A-Za-z\s])/g;const unescapeUrl=function(e){return e.replace(UNESCAPE_URL_R,"$1")};const parseList=(e,t)=>{const r=e.replace(LIST_BLOCK_END_R,"\n").match(LIST_ITEM_R);const n=t.inHtml&&!/\n\n(?!$)/.test(e);const a=r.map((function(e,r){const a=LIST_ITEM_PREFIX_R.exec(e);const o=a?a[0].length:0;const i=new RegExp("^ {1,"+o+"}","gm");const l=e.replace(i,"").replace(LIST_ITEM_PREFIX_R,"");const s=t.inline;const m=t._list;t._list=true;const u=t.isTight;t.isTight=n;t.inline=n;const c=l.replace(LIST_ITEM_END_R,"");const d=n?{type:"list_item",content:parseInline(c,t)}:{type:"list_item",content:parse$1(c,t)};t.inline=s;t._list=m;t.isTight=u;return d}));return a};const TABLES=function(){const e=/^ *\| *| *\| *$/g;const t=/^[-=]+:$/;const r=/^:[-=]+:$/;const n=function(n){n=n.replace(e,"");const a=n.trim().split(/[|+*]/);let o="";for(let e=0;e<a.length;e++){o+=r.test(a[e])?` c${String(e+1)}c`:t.test(a[e])?` c${String(e+1)}r`:""}return o.trim()};const a=(e,t)=>{if(!e&&t===""){return["","",null]}const r=CLASS_R.exec(e);let n=r?r[1]:"";if(t.length>0){n+=(n.length>0?" ":"")+t}const a=ID_R.exec(e);const o=a?a[1]:"";const i=COL_WIDTHS_R.exec(e);const l=i?i[1].split(" "):null;return[n,o,l]};const o=function(e,t,r,n,a){const o=r.inTable;r.inTable=true;const i=t(e.trim(),r);consolidate(i);r.inTable=o;const l={type:"table_row",content:[]};let s=-1;i.forEach((function(e,t){if(e.type==="text"){e.text=e.text.trim()}if(e.type==="tableSeparator"){if(t!==i.length-1){s+=1;l.content.push({type:a?"table_header":"table_cell",attrs:{colspan:1,rowspan:1,colwidth:n?[Number(n[s])]:null,background:null},content:r.inHtml?[]:[{type:"paragraph",content:[]}]})}}else if(r.inHtml){l.content[s].content.push(e)}else{l.content[s].content[0].content.push(e)}}));return l};const i=function(){return function(e,t){t.inline=true;const r=n(e[2]);const[i,l,s]=a(e[4],r);const m={type:"table",attrs:{},content:[]};if(l){m.attrs.id=l}if(i){m.attrs.class=i}m.content.push(o(e[1],parse$1,t,s,true));const u=e[3].trim().split("\n");u.forEach((e=>{m.content.push(o(e,parse$1,t,s,false))}));t.inline=false;return m}};const l=/^\+:?=/;const s=function(){return function(e,t){const r=e[2];const o=n(r.slice(1));const[i,s,m]=a(e[3],o);const u=e[1].slice(0,-1).split("\n");let c=false;let d=u.length+10;for(let e=0;e<u.length;e++){if(l.test(u[e])){c=true;d=e;break}}const p=[0];for(let e=1;e<r.length;e++){const t=r.charAt(e);if(t==="+"){p.push(e)}}const h=[0];for(let e=1;e<u.length;e++){const t=u[e].charAt(0);if(t==="+"){h.push(e)}}const f=p.length-1;const b=h.length-1;const g=[];for(let e=0;e<b;e++){const e=new Array(f);for(let t=0;t<f;t++){e[t]={rowspan:1}}g.push(e)}for(let e=0;e<b;e++){const t=g[e];for(let r=0;r<f;r++){const n=t[r];if(n.rowspan===0){continue}n.colspan=1;const a=u[h[e+1]-1];for(let e=r+1;e<p.length;e++){if(a.charAt(p[e])==="|"){break}n.colspan+=1;t[e].rowspan=0}for(let t=e+1;t<h.length;t++){const e=u[h[t]].charAt(p[r]+1);if(e==="-"||e==="="){break}n.rowspan+=1;for(let e=0;e<n.colspan;e++){g[t][r+e].rowspan=0}}const o=p[r]+2;const i=p[r+n.colspan]-1;const l=h[e]+1;const s=h[e+n.rowspan];let f="";for(let e=l;e<s;e++){f+=u[e].slice(o,i).replace(/ +$/,"")+"\n"}n.blob=f.slice(0,-1).replace(/^\n+/,"");n.inHeader=c&&l<d;if(m){let e=0;for(let t=0;t<n.colspan;t++){e+=Number(m[r+t])}n.width=e}}}const y={type:"table",attrs:{},content:[]};if(s){y.attrs.id=s}if(i){y.attrs.class=i}for(let e=0;e<b;e++){y.content.push({type:"table_row",content:[]});for(let r=0;r<f;r++){if(g[e][r].rowspan===0){continue}const n=g[e][r];t.inline=false;let a=t.inHtml&&n.blob.indexOf("```")===-1&&!/\n\n/.test(n.blob.replace(/\n+$/g,""))?parseInline(n.blob,t):parse$1(n.blob,t);if(a.length===1&&a[0].type==="null"){a=t.inHtml?[{type:"text",text:""}]:[{type:"paragraph",content:[]}]}y.content[e].content.push({type:n.inHeader?"table_header":"table_cell",attrs:{colspan:n.colspan,rowspan:n.rowspan,colwidth:m?[n.width]:null,background:null},content:a})}}t.inline=false;return y}};return{parsePipeTable:i(),PIPE_TABLE_REGEX:/^(\|.+)\n\|([-:]+[-| :]*)\n((?:\|.*(?:\n|$))*)(?:\{([^\n}]+)\}\n)?\n*/,parseGridTable:s(),GRID_TABLE_REGEX:/^((\+(?:[-:=]+\+)+)\n(?:[+|][^\n]+[+|]\n)+)(?:\{([^\n}]+)\}\n)?\n*/}}();const LINK_INSIDE="(?:\\[[^\\]]*\\]|[^\\[\\]]|\\](?=[^\\[]*\\]))*";const LINK_HREF_AND_TITLE="\\s*<?((?:\\([^)]*\\)|[^\\s\\\\]|\\\\.)*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*";const linkIndex=e=>{for(let t=0;t<e.length;t++){if(e[t].type==="link"){return t}}};const parseRef=function(e,t,r){let n=e[2]?e[2]:e[1];n=n.replace(/\s+/g," ");if(t._defs&&t._defs[n]){const e=t._defs[n];if(r.type==="image"){r.attrs.src=e.target;r.attrs.width=null}else{r.attrs.href=e.target}}t._refs=t._refs||{};t._refs[n]=t._refs[n]||[];t._refs[n].push(r);return r};const parseTextMark=(e,t,r)=>{const n=parseInline(e,t);if(Array.isArray(n)&&n.length===0){return n}consolidate(n);for(const e of n){if(e.marks){e.marks.push({type:r})}else{e.marks=[{type:r}]}}return n};const BLOCK_HTML=/^ *(?:<(head|h[1-6]|p|pre|script|style|table)[\s>][\s\S]*?(?:<\/\1>[^\n]*\n)|<!--[^>]+-->[^\n]*\n|<\/?(?:body|details|(div|input|label)(?: [^>]+)?|!DOCTYPE[a-z ]*|html[a-z ="]*|br|dl(?: class="[a-z-]+")?|li|main[a-z\- ="]*|nav|ol|ul(?: [^>]+)?)\/?>[^\n]*?(?:\n|$))/;const divType={C:"centered_div",H:"header",i:"indented_div"};const rules=new Map;rules.set("html",{isLeaf:true,match:blockRegex(BLOCK_HTML),parse:function(e,t){if(!t.inHtml){return null}return{type:"html",text:e[0]}}});rules.set("heading",{isLeaf:false,match:blockRegex(/^ *(#{1,6})([^\n]+?)#* *(?:\n *)+\n/),parse:function(e,t){return{attrs:{level:e[1].length},content:parseInline(e[2].trim(),t)}}});rules.set("dt",{isLeaf:false,match:blockRegex(/^(([^\n]*)\n)(?=<dd>|\n:)/),parse:function(e,t){return{content:parseInline(e[2].trim(),t)}}});rules.set("horizontal_rule",{isLeaf:true,match:blockRegex(/^( *[-*_]){3,} *(?:\n *)+\n/),parse:function(e,t,r){return{type:"horizontal_rule"}}});rules.set("lheading",{isLeaf:false,match:blockRegex(/^([^\n]+)\n *(=|-){3,} *(?:\n *)+\n/),parse:function(e,t,r){return{type:"heading",level:e[2]==="="?1:2,content:parseInline(t,e[1])}}});rules.set("fence",{isLeaf:true,match:blockRegex(/^(`{3,}) *(?:(\S+) *)?\n([\s\S]+?)\n?\1 *(?:\n *)+\n/),parse:function(e,t){return{type:"code_block",content:[{type:"text",text:e[3]}]}}});rules.set("blockquote",{isLeaf:false,match:blockRegex(/^( *>[^\n]+(\n[^\n]+)*\n*)+\n{2,}/),parse:function(e,t){const r=e[0].replace(/^ *> ?/gm,"");return{content:parse$1(r,t)}}});rules.set("ordered_list",{isLeaf:false,match:blockRegex(/^( {0,3})(\d{1,9}\.) [\s\S]+?(?:\n{2,}(?! )(?!\1(?:\d{1,9}\.) )\n*|\s*$)/),parse:function(e,t){const r=Number(e[2].trim());return{attrs:{order:r},content:parseList(e[0],t,e[1])}}});rules.set("bullet_list",{isLeaf:false,match:blockRegex(/^( {0,3})([*+-]) [\s\S]+?(?:\n{2,}(?! )(?!\1(?:[*+-]) )\n*|\s*$)/),parse:function(e,t){return{content:parseList(e[0],t,e[1])}}});rules.set("dd",{isLeaf:false,match:blockRegex(/^:( +)[\s\S]+?(?:\n{2,}(?! |:)(?!\1)\n*|\s*$)/),parse:function(e,t){let r=" "+e[0].slice(1);const n=1+e[1].length;const a=new RegExp("^ {"+n+","+n+"}","gm");r=r.replace(a,"");return{content:parse$1(r,t)}}});rules.set("special_div",{isLeaf:false,match:blockRegex(/^(C|H|i)>( {1,})[\s\S]+?(?:\n{2,}(?! {2,2}\2)\n*|\s*$)/),parse:function(e,t){const r=divType[e[1]];let n="  "+e[0].slice(2);const a=2+e[2].length;const o=new RegExp("^ {"+a+","+a+"}","gm");n=n.replace(o,"");return{type:r,content:parse$1(n,t)}}});rules.set("def",{isLeaf:true,match:blockRegex(/^\[([^\]]+)\]: *<?([^\n>]*)>? *\n(?:\{([^\n}]*)\}\n)?/),parse:function(e,t){const r=e[1].replace(/\s+/g," ");const n=e[2];const a=e[3]||"";const o={};if(t._refs&&t._refs[r]){t._refs[r].forEach((function(e){if(e.type==="image"){e.attrs.src=n;if(a){const t=CLASS_R.exec(a);if(t){e.attrs.class=t[1];o.class=t[1]}const r=WIDTH_R.exec(a);if(r){e.attrs.width=r[1];o.width=r[1]}const n=ID_R.exec(a);if(n){e.attrs.id=n[1];o.id=n[1]}}}else{e.attrs.href=n}}))}t._defs=t._defs||{};t._defs[r]={target:n,attrs:o};return{def:r,target:n,directives:a}}});rules.set("toc",{isLeaf:true,match:blockRegex(/^{\.toc start=(\d) end=(\d)}\n/),parse:function(e,t){return{attrs:{start:Number(e[1]),end:Number(e[2]),body:[]}}}});rules.set("pipeTable",{isLeaf:false,match:blockRegex(TABLES.PIPE_TABLE_REGEX),parse:TABLES.parsePipeTable});rules.set("gridTable",{isLeaf:false,match:blockRegex(TABLES.GRID_TABLE_REGEX),parse:TABLES.parseGridTable});rules.set("newline",{isLeaf:true,match:blockRegex(/^(?:\n *)*\n/),parse:function(){return{type:"null"}}});rules.set("paragraph",{isLeaf:false,match:blockRegex(/^((?:[^\n]|\n(?! *\n))+)(?:\n *)+\n/),parse:function(e,t){return{content:parseInline(e[1],t)}}});rules.set("escape",{isLeaf:true,match:inlineRegex(/^\\([^0-9A-Za-z\s])/),parse:function(e,t){return{type:"text",text:e[1]}}});rules.set("tableSeparator",{isLeaf:true,match:function(e,t){if(!t.inTable){return null}return/^ *\| */.exec(e)},parse:function(){return{type:"tableSeparator"}}});rules.set("calculation",{isLeaf:true,match:anyScopeRegex(/^(?:¢((?:\\[\s\S]|[^\\])+?)¢|¢¢\n?((?:\\[\s\S]|[^\\])+?)\n?¢¢)/),parse:function(e,t){if(e[1]){let t=e[1].trim();if(!/^(?:function|draw\()/.test(t)&&t.indexOf("``")===-1){t=t.replace(/\n/g," ")}return{content:"",attrs:{entry:t}}}else{const t=e[2].trim();return{content:"",attrs:{entry:t,displayMode:true}}}}});rules.set("tex",{isLeaf:true,match:anyScopeRegex(/^(?:\$\$\n?((?:\\[\s\S]|[^\\])+?)\n?\$\$|\$((?:\\[\s\S]|[^\\])+?)\$)/),parse:function(e,t){if(e[2]){const t=e[2].trim().replace(/\n/g," ");return{content:"",attrs:{tex:t}}}else{const t=e[1].trim();return{content:"",attrs:{tex:t,displayMode:true}}}}});rules.set("comment",{isLeaf:true,match:inlineRegex(/^©((?:\\[\s\S]|[^\\])+?)©/),parse:function(e,t){return{content:"",attrs:{comment:e[1]}}}});rules.set("link",{isLeaf:true,match:inlineRegex(new RegExp("^\\[("+LINK_INSIDE+")\\]\\("+LINK_HREF_AND_TITLE+"\\)")),parse:function(e,t){const r=parseTextMark(e[1],t,"link")[0];const n=linkIndex(r.marks);r.marks[n].attrs={href:unescapeUrl(e[2])};return r}});rules.set("image",{isLeaf:true,match:inlineRegex(new RegExp("^!\\[("+LINK_INSIDE+")\\]\\("+LINK_HREF_AND_TITLE+"\\)")),parse:function(e,t){return{attrs:{alt:e[1],src:unescapeUrl(e[2])}}}});rules.set("reflink",{isLeaf:true,match:inlineRegex(/^\[((?:(?:\\[\s\S]|[^\\])+?)?)\]\[([^\]]*)\]/),parse:function(e,t){const r=parseTextMark(e[1],t,"link")[0];const n=linkIndex(r.marks);r.marks[n].attrs={href:null};if(e[2]){r.marks[n].attrs.title=e[2]}parseRef(e,t,r.marks[n]);return r}});rules.set("refimage",{isLeaf:true,match:inlineRegex(/^!\[((?:(?:\\[\s\S]|[^\\])+?)?)\]\[([^\]]*)\]/),parse:function(e,t){return parseRef(e,t,{type:"image",attrs:{alt:e[1]}})}});rules.set("code",{isLeaf:true,match:inlineRegex(/^(`+)([\s\S]*?[^`])\1(?!`)/),parse:function(e,t){const r=e[2].trim();return[{type:"text",text:r,marks:[{type:"code"}]}]}});rules.set("em",{isLeaf:true,match:inlineRegex(/^_((?:\\[\s\S]|[^\\])+?)_/),parse:function(e,t){return parseTextMark(e[1],t,"em")}});rules.set("strong",{isLeaf:true,match:inlineRegex(/^\*\*(?=\S)((?:\\[\s\S]|\*(?!\*)|[^\s*\\]|\s(?!\*\*))+?)\*\*/),parse:function(e,t){return parseTextMark(e[1],t,"strong")}});rules.set("strikethru",{isLeaf:true,match:inlineRegex(/^~~(?=\S)((?:\\[\s\S]|~(?!~)|[^\s~\\]|\s(?!~~))+?)~~/),parse:function(e,t){return parseTextMark(e[1],t,"strikethru")}});rules.set("superscript",{isLeaf:true,match:inlineRegex(/^<sup>([\s\S]*?)<\/sup>/),parse:function(e,t){return parseTextMark(e[1],t,"superscript")}});rules.set("subscript",{isLeaf:true,match:inlineRegex(/^~((?:\\[\s\S]|[^\\])+?)~/),parse:function(e,t){return parseTextMark(e[1],t,"subscript")}});rules.set("underline",{isLeaf:true,match:inlineRegex(/^<u>([\s\S]*?)<\/u>/),parse:function(e,t){return parseTextMark(e[1],t,"underline")}});rules.set("highlight",{isLeaf:true,match:inlineRegex(/^<mark>([\s\S]*?)<\/mark>/),parse:function(e,t){return parseTextMark(e[1],t,"highlight")}});rules.set("hard_break",{isLeaf:true,match:anyScopeRegex(/^\\\n/),parse:function(){return{text:"\n"}}});rules.set("inline_break",{isLeaf:true,match:anyScopeRegex(/^<br>/),parse:function(){return{type:"hard_break",text:"\n"}}});rules.set("span",{isLeaf:true,match:inlineRegex(/^<span [a-z =":]+>[^<]+<\/span>/),parse:function(e,t){return!t.inHtml?null:{type:"html",text:e[0]}}});rules.set("text",{isLeaf:true,match:anyScopeRegex(/^[\s\S]+?(?=[^0-9A-Za-z\s\u00c0-\uffff]|\n\n| {2,}\n|\w+:\S|$)/),parse:function(e,t){return{text:e[0].replace(/\n/g," ")}}});const doNotEscape=["calculation","code","tex"];const textModeRegEx=/\\(ce|text|hbox|raisebox|fbox)\{/;const identifyTeX=e=>{let t="$";let r=0;for(let n=1;n<e.length;n++){const a=e.charAt(n);if(a==="{"&&t!=="\\"){r+=1}if(a==="}"&&t!=="\\"){r-=1}if(a==="$"&&t!=="\\"&&r===0){return[e.slice(0,n+1),null,e.slice(1,n)]}t=a}return[e,null,e.slice(1,-1)]};const parse$1=(e,t)=>{if(!t.inline){e+="\n\n"}e=preprocess(e);const r=[];while(e){let n=null;let a=null;let o=null;for(const[r,i]of rules){if(t.inCode&&doNotEscape.includes(r)){continue}n=i.match(e,t);if(n){o=i;a=r;break}}if(a==="tex"&&n[2]&&textModeRegEx.test(n[2])){n=identifyTeX(e)}const i=o.parse(n,t);if(Array.isArray(i)){Array.prototype.push.apply(r,i)}else{if(i.type==null){i.type=a}r.push(i)}e=e.substring(n[0].length)}return r};const parseInline=function(e,t){const r=t.inline||false;t.inline=true;const n=parse$1(e,t);t.inline=r;return n};const LIST_BULLET="(?:[*+-]|\\d+\\.)";const LIST_ITEM_PREFIX="( *)("+LIST_BULLET+") +";const LIST_ITEM_PREFIX_R=new RegExp("^"+LIST_ITEM_PREFIX);const LIST_ITEM_R=new RegExp(LIST_ITEM_PREFIX+"[^\\n]*(?:\\n"+"(?!\\1"+LIST_BULLET+" )[^\\n]*)*(\n|$)","gm");const BLOCK_END_R=/\n{2,}$/;const LIST_BLOCK_END_R=BLOCK_END_R;const LIST_ITEM_END_R=/ *\n+$/;const ignore=["def","newline","null"];const consolidate=e=>{if(Array.isArray(e)&&e.length>0){for(let t=e.length-1;t>0;t--){const r=e[t];const n=e[t-1];if(r.type==="text"&&n.type==="text"&&!r.marks&&!n.marks){n.text+=r.text;e.splice(t,1)}else if(ignore.includes(r.type)){e.splice(t,1)}else if(!rules.has(r.type)||!rules.get(r.type).isLeaf){consolidate(r.content)}}if(!rules.has(e[0].type)||!rules.get(e[0].type).isLeaf){consolidate(e[0].content)}}};const populateTOC=e=>{let t;for(const r of e){if(r.type==="toc"){t=r;break}}if(!t){return}const r=t.attrs.start;const n=t.attrs.end;for(const a of e){if(a.type==="heading"){const e=a.attrs.level;if(r<=e&&e<=n){const r=[];let n="";for(const e of a.content){n+=e.text}r.push(n);r.push(e);r.push(0);r.push(0);t.attrs.body.push(r)}}}};const md2ast=(e,t=false)=>{const r=parse$1(e,{inline:false,inHtml:t});if(Array.isArray(r)&&r.length>0&&r[0].type==="null"){r.shift()}consolidate(r);populateTOC(r);return r};const startSvg=e=>({tag:"svg",children:[],attrs:{xmlns:"http://www.w3.org/2000/svg",width:250,height:250,style:"display: inline;"},temp:{width:250,height:250,xmin:0,xmax:5,ymin:0,ymax:5,xunitlength:20,yunitlength:20,origin:[0,0],stroke:"black",strokewidth:1,strokedasharray:null,fill:"none",fontstyle:"normal",fontfamily:"sans-serif",fontsize:13.33,fontweight:"normal",markerstrokewidth:1,markerstroke:"black",markerfill:"yellow",markersize:4,marker:"none",dotradius:4,axesstroke:"black",gridstroke:"grey",isDim:false}});const setStrokeAndFill=(e,t)=>{e.attrs["stroke-width"]=t.strokewidth;e.attrs.stroke=t.stroke;e.attrs.fill=t.fill;if(t.strokedasharray!=null&&t.strokedasharray!=="none"){e.attrs["stroke-dasharray"]=t.strokedasharray}};const pointZeroRegEx=/\.0+$/;const chopZ=e=>{const t=e.indexOf(".");if(t===-1){return e}if(pointZeroRegEx.test(e)){return e.replace(pointZeroRegEx,"")}let r;for(r=e.length-1;r>t&&e.charAt(r)==="0";r--){if(r===t){r--}}return e.slice(0,r+1)};const markerDot=(e,t,r,n)=>{if(r==null){r=t.stroke}if(n==null){n=t.fill}const a={tag:"circle",attrs:{}};a.attrs.cx=e[0]*t.xunitlength+t.origin[0];a.attrs.cy=t.height-e[1]*t.yunitlength-t.origin[1];a.attrs.r=t.markersize;a.attrs["stroke-width"]=t.strokewidth;a.attrs.stroke=r;a.attrs.fill=n;return a};const arrowhead=(e,t,r)=>{const n=e.temp;const a=[t[0]*n.xunitlength+n.origin[0],n.height-t[1]*n.yunitlength-n.origin[1]];const o=[r[0]*n.xunitlength+n.origin[0],n.height-r[1]*n.yunitlength-n.origin[1]];let i=[o[0]-a[0],o[1]-a[1]];const l=Math.sqrt(i[0]*i[0]+i[1]*i[1]);if(l>1e-8){i=[i[0]/l,i[1]/l];const t=n.marker==="markerdot"?3:n.isDim?0:1;const r=[-i[1],i[0]];const a={tag:"path",attrs:{}};a.attrs.d="M "+(o[0]-12.5*i[0]-3*r[0])+","+(o[1]-12.5*i[1]-3*r[1])+" L "+(o[0]-t*i[0])+","+(o[1]-t*i[1])+" L "+(o[0]-12.5*i[0]+3*r[0])+","+(o[1]-12.5*i[1]+3*r[1])+" z";if(n.isDim){a.attrs.stroke="none"}else{a.attrs["stroke-width"]=n.markerstrokewidth;a.attrs.stroke=n.stroke}a.attrs.fill=n.stroke;e.children.push(a)}};const markAttribute={em:["font-style","italic"],strong:["font-weight","bold"],code:["font-family","monospace"],strikethru:["text-decoration","line-through"],subscript:["font-size","0.8em"]};const textLocal=(e,t,r,n)=>{const a=e.temp;let o="middle";let i=0;let l=a.fontsize/3;if(n!=null){if(n.slice(0,5)==="above"){l=-a.fontsize/2}if(n.slice(0,5)==="below"){l=1.25*a.fontsize}if(n.slice(0,5)==="right"||n.slice(5,10)==="right"){o="start";i=a.fontsize/2}if(n.slice(0,4)==="left"||n.slice(5,9)==="left"){o="end";i=-a.fontsize/2}}const s={tag:"text",children:[],attrs:{}};s.attrs["text"]=r;s.attrs.x=t[0]*a.xunitlength+a.origin[0]+i;s.attrs.y=a.height-t[1]*a.yunitlength-a.origin[1]+l;s.attrs["font-family"]=a.fontfamily;s.attrs["font-size"]=a.fontsize;s.attrs["text-anchor"]=o;const m=md2ast(r)[0].content;if(Array.isArray(m)){let e=false;for(const t of m){const r={tag:"tspan",text:t.text};let n=false;if(t.marks){r.attrs={};for(const e of t.marks){const t=markAttribute[e.type];r.attrs[t[0]]=t[1];if(e.type==="subscript"){n=true}}}if(n){if(!e){r.attrs.dy="2"}}else if(e){if(!t.marks){r.attrs={}}r.attrs.dy="-2"}e=n;s.children.push(r)}}e.children.push(s);return e};const functions={stroke(e,t){e.value.temp.stroke=t.value;return e},strokewidth(e,t){e.value.temp.strokewidth=Rnl.toNumber(t.value);return e},strokedasharray(e,t){e.value.temp.strokedasharray=t.value;return e},fill(e,t){e.value.temp.fill=t.value;return e},fontsize(e,t){e.value.temp.fontsize=Rnl.toNumber(t.value);return e},fontfamily(e,t){e.value.temp.fontfamily=t.value;return e},marker(e,t){e.value.temp.marker=t.value;return e},title(e,t){e.value.children.push({tag:"title",attrs:{text:t.value}});return e},frame(e,t=250,r=250,n="inline"){const a=e.value;const o=a.temp;o.width=typeof t==="number"?t:Rnl.toNumber(t.value);a.attrs.width=o.width;o.height=typeof r==="number"?r:Rnl.toNumber(r.value);a.attrs.height=o.height;if(typeof n!=="string"){n=n.value}a.attrs.style=`float: ${n}`;o.xunitlength=o.width/(o.xmax-o.xmin);o.yunitlength=o.height/(o.ymax-o.ymin);o.origin=[-o.xmin*o.xunitlength,-o.ymin*o.yunitlength];return{value:a,unit:null,dtype:dt.DRAWING}},view(e,t=0,r=5,n,a){const o=e.value;const i=o.temp;i.xmin=typeof t==="number"?t:Rnl.toNumber(t.value);i.xmax=typeof r==="number"?r:Rnl.toNumber(r.value);i.xunitlength=i.width/(i.xmax-i.xmin);i.yunitlength=i.xunitlength;if(n==null){i.origin=[-i.xmin*i.xunitlength,i.height/2];i.ymin=-i.height/(2*i.yunitlength);i.ymax=-i.ymin}else{i.ymin=Rnl.toNumber(n.value);if(a!=null){i.ymax=Rnl.toNumber(a.value);i.yunitlength=i.height/(i.ymax-i.ymin)}else{i.ymax=i.height/i.yunitlength+i.ymin}i.origin=[-i.xmin*i.xunitlength,-i.ymin*i.yunitlength]}return{value:o,unit:null,dtype:dt.DRAWING}},grid(e,t,r,n){const a=e.value;const o=a.temp;t=t==null?o.xunitlength:Rnl.toNumber(t.value)*o.xunitlength;r=r==null?t:Rnl.toNumber(r.value)*o.yunitlength;const i={tag:"path",attrs:{}};let l="";for(let e=o.origin[0];e<o.width;e+=t){l+=" M"+e+",0 "+e+","+o.height}for(let e=o.origin[0]-t;e>0;e-=t){l+=" M"+e+",0 "+e+","+o.height}for(let e=o.height-o.origin[1];e<o.height;e+=r){l+=" M0,"+e+" "+o.width+","+e}for(let e=o.height-o.origin[1]-r;e>0;e-=r){l+=" M0,"+e+" "+o.width+","+e}i.attrs.d=l;i.attrs["stroke-width"]=.5;i.attrs.stroke=o.gridstroke;i.attrs.fill=o.fill;a.children.push(i);if(!n){return{value:a,unit:null,dtype:dt.DRAWING}}},axes(e,t,r,n,a,o){let i=e.value;const l=i.temp;t=t==null?l.xunitlength:Rnl.toNumber(t.value)*l.xunitlength;r=r==null?t:Rnl.toNumber(r.value)*l.yunitlength;const s=l.fontsize;l.fontsize=Math.min(t/2,r/2,10);const m=l.fontsize/4;if(a!=null){this.grid(e,a,o,true)}const u={tag:"path",attrs:{}};let c="M0,"+(l.height-l.origin[1])+" "+l.width+","+(l.height-l.origin[1])+" M"+l.origin[0]+",0 "+l.origin[0]+","+l.height;for(let e=l.origin[0]+t;e<l.width;e+=t){c+=" M"+e+" "+(l.height-l.origin[1]+m)+" "+e+","+(l.height-l.origin[1]-m)}for(let e=l.origin[0]-t;e>0;e-=t){c+=" M"+e+","+(l.height-l.origin[1]+m)+" "+e+","+(l.height-l.origin[1]-m)}for(let e=l.height-l.origin[1]+r;e<l.height;e+=r){c+=" M"+(l.origin[0]+m)+","+e+" "+(l.origin[0]-m)+","+e}for(let e=l.height-l.origin[1]-r;e>0;e-=r){c+=" M"+(l.origin[0]+m)+","+e+" "+(l.origin[0]-m)+","+e}if(n!=null){const e=t/l.xunitlength;const n=r/l.yunitlength;const a=l.xmin>0||l.xmax<0?l.xmin:0;const o=l.ymin>0||l.ymax<0?l.ymin:0;const s=o===0?"below":"above";const m=a===0?"left":"right";const u=Math.floor(1.1-Math.log(e)/Math.log(10))+1;const c=Math.floor(1.1-Math.log(n)/Math.log(10))+1;for(let t=e;t<=l.xmax;t+=e){i=textLocal(i,[t,o],chopZ(t.toFixed(u)),s)}for(let t=-e;l.xmin<=t;t-=e){i=textLocal(i,[t,o],chopZ(t.toFixed(u)),s)}for(let e=n;e<=l.ymax;e+=n){i=textLocal(i,[a,e],chopZ(e.toFixed(c)),m)}for(let e=-n;l.ymin<=e;e-=n){i=textLocal(i,[a,e],chopZ(e.toFixed(c)),m)}}u.attrs.d=c;u.attrs["stroke-width"]=.5;u.attrs.stroke=l.axesstroke;u.attrs.fill=l.fill;i.temp.fontsize=s;i.children.push(u);return{value:i,unit:null,dtype:dt.DRAWING}},line(e,t){const r=e.value;const n=r.temp;const a={tag:"path",attrs:{}};const o=[Rnl.toNumber(t.value[0][0]),Rnl.toNumber(t.value[0][1])];const i=[Rnl.toNumber(t.value[1][0]),Rnl.toNumber(t.value[1][1])];a.attrs.d="M"+(o[0]*n.xunitlength+n.origin[0])+","+(n.height-o[1]*n.yunitlength-n.origin[1])+" "+(i[0]*n.xunitlength+n.origin[0])+","+(n.height-i[1]*n.yunitlength-n.origin[1]);setStrokeAndFill(a,n);r.children.push(a);if(n.marker==="dot"||n.marker==="arrowdot"){r.children.push(markerDot(o,n,n.markerstroke,n.markerfill));if(n.marker==="arrowdot"){arrowhead(r,o,i)}r.children.push(markerDot(i,n,n.markerstroke,n.markerfill))}else if(n.marker==="arrow"){arrowhead(r,o,i)}return{value:r,unit:null,dtype:dt.DRAWING}},path(e,t,r){const n=e.value;const a=n.temp;const o={tag:"path",attrs:{}};let i="";let l;if(typeof t==="string"){i=t.value}else{l=t.value.map((e=>e.map((e=>Rnl.toNumber(e)))));if(r==null){r=new Array(l.length).fill("L");r[0]="M"}else if(r.dtype===dt.STRING){r=new Array(l.length).fill(r.value);r[0]="M"}else if(typeof r==="string"){r=new Array(l.length).fill(r);r[0]="M"}else if(r.dtype&dt.ROWVECTOR||r.dtype&dt.COLUMNVECTOR){r=r.value.map((e=>{if(Rnl.isZero(e)){return"L"}const t=Rnl.toNumber(e)*a.xunitlength;return`A${t} ${t} 0 0 0 `}));r.unshift("M")}else{r=new Array(l.length).fill("L");r[0]="M"}for(let e=0;e<l.length;e++){i+=r[e]+(l[e][0]*a.xunitlength+a.origin[0])+","+(a.height-l[e][1]*a.yunitlength-a.origin[1])+" "}}o.attrs.d=i;o.attrs["stroke-width"]=a.strokewidth;if(a.strokedasharray!=null){o.attrs["stroke-dasharray"]=a.strokedasharray}o.attrs.stroke=a.stroke;o.attrs.fill=a.fill;if(a.marker==="dot"||a.marker==="arrowdot"){for(let e=0;e<l.length;e++){if(r!=="C"&&r!=="T"||e!==1&&e!==2){n.children.push(markerDot(l[e],a,a.markerstroke,a.markerfill))}}}else if(a.marker==="arrow"){arrowhead(n,l[l.length-2],l[l.length-1])}n.children.push(o);return{value:n,unit:null,dtype:dt.DRAWING}},curve(e,t){return functions.path(e,t,"T")},rect(e,t,r){const n=e.value;const a=n.temp;const o={tag:"rect",attrs:{}};const i=[Rnl.toNumber(t.value[0][0]),Rnl.toNumber(t.value[0][1])];const l=[Rnl.toNumber(t.value[1][0]),Rnl.toNumber(t.value[1][1])];o.attrs.x=i[0]*a.xunitlength+a.origin[0];o.attrs.y=a.height-l[1]*a.yunitlength-a.origin[1];o.attrs.width=(l[0]-i[0])*a.xunitlength;o.attrs.height=(l[1]-i[1])*a.yunitlength;if(r!=null){const e=Rnl.toNumber(r.value)*a.xunitlength;o.attrs.rx=e;o.attrs.ry=e}setStrokeAndFill(o,a);n.children.push(o);return{value:n,unit:null,dtype:dt.DRAWING}},circle(e,t,r){const n=e.value;const a=n.temp;const o={tag:"circle",attrs:{}};o.attrs.cx=Rnl.toNumber(t.value[0])*a.xunitlength+a.origin[0];o.attrs.cy=a.height-Rnl.toNumber(t.value[1])*a.yunitlength-a.origin[1];o.attrs.r=Rnl.toNumber(r.value)*a.xunitlength;setStrokeAndFill(o,a);n.children.push(o);return{value:n,unit:null,dtype:dt.DRAWING}},ellipse(e,t,r,n){const a=e.value;const o=a.temp;const i={tag:"ellipse",attrs:{}};i.attrs.cx=Rnl.toNumber(t.value[0])*o.xunitlength+o.origin[0];i.attrs.cy=o.height-Rnl.toNumber(t.value[1])*o.yunitlength-o.origin[1];i.attrs.rx=Rnl.toNumber(r.value)*o.xunitlength;i.attrs.ry=Rnl.toNumber(n.value)*o.yunitlength;setStrokeAndFill(i,o);a.children.push(i);return{value:a,unit:null,dtype:dt.DRAWING}},arc(e,t,r){const n=e.value;const a=n.temp;const o={tag:"path",attrs:{}};const i=[Rnl.toNumber(t.value[0][0]),Rnl.toNumber(t.value[0][1])];const l=[Rnl.toNumber(t.value[1][0]),Rnl.toNumber(t.value[1][1])];if(r==null){const e=[l[0]-i[0],l[1]-i[1]];r=Math.sqrt(e[0]*e[0]+e[1]*e[1])*a.yunitlength}else if(isVector(r)){r=r.value.map((e=>Rnl.toNumber(e)*a.yunitlength))}else{r=Rnl.toNumber(r.value)*a.yunitlength}let s="M"+(i[0]*a.xunitlength+a.origin[0])+","+(a.height-i[1]*a.yunitlength-a.origin[1])+" A";s+=Array.isArray(r)?r[0]+","+r[1]:r+","+r;s+=" 0 0,0 "+(l[0]*a.xunitlength+a.origin[0])+","+(a.height-l[1]*a.yunitlength-a.origin[1]);o.attrs.d=s;setStrokeAndFill(o,a);let m=0;if(a.marker==="arrow"||a.marker==="arrowdot"){const e=[(l[1]-i[1])/4,(i[0]-l[0])/4];m=[(l[0]-i[0])/2,(l[1]-i[1])/2];m=[i[0]+m[0]+e[0],i[1]+m[1]+e[1]]}else{m=[i[0],i[1]]}if(a.marker==="dot"||a.marker==="arrowdot"){n.children.push(markerDot(i,a,a.markerstroke,a.markerfill));if(a.marker==="arrowdot"){arrowhead(n,m,l)}n.children.push(markerDot(l,a,a.markerstroke,a.markerfill))}else if(a.marker==="arrow"){arrowhead(n,m,l)}n.children.push(o);return{value:n,unit:null,dtype:dt.DRAWING}},text(e,t,r,n){const a=textLocal(e.value,[Rnl.toNumber(t.value[0]),Rnl.toNumber(t.value[1])],r.value,n==null?null:n.value);return{value:a,unit:null,dtype:dt.DRAWING}},dot(e,t,r,n,a){let o=e.value;const i=o.temp;let l;const s=Rnl.toNumber(t.value[0])*i.xunitlength+i.origin[0];const m=i.height-Rnl.toNumber(t.value[1])*i.yunitlength-i.origin[1];if(r.value==="+"||r.value==="-"||r.value==="|"){l={tag:"path",attrs:{}};if(r.value==="+"){l.attrs.d=" M "+(s-i.ticklength)+","+m+" L "+(s+i.ticklength)+","+m+" M "+s+","+(m-i.ticklength)+" L "+s+","+(m+i.ticklength);l.attrs["stroke-width"]=.5;l.attrs.stroke=i.axesstroke}else{if(r.value==="-"){l.attrs.d=" M "+(s-i.ticklength)+","+m+" L "+(s+i.ticklength)+","+m}else{l.attrs.d=" M "+s+","+(m-i.ticklength)+" L "+s+","+(m+i.ticklength)}l.attrs["stroke-width"]=i.strokewidth;l.attrs["stroke"]=i.stroke}}else{l={tag:"circle",attrs:{}};l.attrs.cx=s;l.attrs.cy=m;l.attrs.r=i.dotradius;l.attrs["stroke-width"]=i.strokewidth;l.attrs.stroke=i.stroke;l.attrs.fill=r.value==="open"?"white":i.stroke}o.children.push(l);if(n!=null){o=textLocal(o,[Rnl.toNumber(t.value[0]),Rnl.toNumber(t.value[1])],n.value,a==null?"below":a.value)}return{value:o,unit:null,dtype:dt.DRAWING}},leader(e,t,r){const n=e.value.temp.marker;e.value.temp.marker="arrow";e.value.temp.isDim=true;const a=clone(t);a.value.reverse();e=this.path(e,a,"L");const o=a.value[0].map((e=>Rnl.toNumber(e)));const i=a.value[1].map((e=>Rnl.toNumber(e)));let l="right";if(Math.abs(o[0]-i[0])>=Math.abs(o[1]-i[1])){l=o[0]>=i[0]?"right":"left"}else{l=o[1]<i[1]?"below":"above"}const s=textLocal(e.value,o,r.value,l);s.temp.marker=n;s.temp.isDim=false;return{value:s,unit:null,dtype:dt.DRAWING}},dimension(e,t,r){const n=clone(t.value);const a=n.pop();const o=e.value.temp.strokewidth;e.value.temp.strokewidth=.5;e.value.temp.isDim=true;let i=Rnl.fromNumber(6/e.value.temp.xunitlength);const l=n[n.length-1];let s;if(Rnl.lessThan(n[0][1],a[1])&&Rnl.lessThan(a[1],l[1])||Rnl.lessThan(l[1],a[1])&&Rnl.lessThan(a[1],n[0][1])){if(!Rnl.lessThan(l[0],a[0])){i=Rnl.negate(i)}n.forEach((t=>{e=this.line(e,{value:[[Rnl.add(t[0],i),t[1]],[Rnl.add(a[0],i),t[1]]]})}));e.value.temp.marker="arrow";const t=Rnl.lessThanOrEqualTo(l[0],a[0])?"right":"left";for(let o=0;o<n.length-1;o++){e=this.line(e,{value:[[a[0],n[o][1]],[a[0],n[o+1][1]]],unit:null,dtype:dt.MATRIX});e=this.line(e,{value:[[a[0],n[o+1][1]],[a[0],n[o][1]]],unit:null,dtype:dt.MATRIX});const i=[Rnl.toNumber(a[0]),(Rnl.toNumber(n[o][1])+Rnl.toNumber(n[o+1][1]))/2];const l=n.length===2?r.value:r.value[o];s=textLocal(e.value,i,l,t)}}else{if(!Rnl.lessThan(l[1],a[1])){i=Rnl.negate(i)}n.forEach((t=>{e=this.line(e,{value:[[t[0],Rnl.add(t[1],i)],[t[0],Rnl.add(a[1],i)]]})}));e.value.temp.marker="arrow";const t=Rnl.lessThanOrEqualTo(l[1],a[1])?"above":"below";for(let o=0;o<n.length-1;o++){e=this.line(e,{value:[[n[o][0],a[1]],[n[o+1][0],a[1]]],unit:null,dtype:dt.MATRIX});e=this.line(e,{value:[[n[o+1][0],a[1]],[n[o][0],a[1]]],unit:null,dtype:dt.MATRIX});const i=[(Rnl.toNumber(n[o][0])+Rnl.toNumber(n[o+1][0]))/2,Rnl.toNumber(a[1])];const l=n.length===2?r.value:r.value[o];s=textLocal(e.value,i,l,t)}}s.temp.strokewidth=o;s.temp.marker="none";s.temp.isDim=false;return{value:s,unit:null,dtype:dt.DRAWING}}};const renderSVG=e=>{const t=document.createElementNS("http://www.w3.org/2000/svg","svg");Object.keys(e.attrs).forEach((r=>{t.setAttribute(r,e.attrs[r])}));e.children.forEach((e=>{const r=document.createElementNS("http://www.w3.org/2000/svg",e.tag);Object.keys(e.attrs).forEach((t=>{r.setAttribute(t,e.attrs[t]);if(t==="title"){r.appendChild(document.createTextNode(e.attrs["text"]))}else{r.setAttribute(t,e.attrs[t])}}));if(e.tag==="text"){e.children.forEach((e=>{const t=document.createElementNS("http://www.w3.org/2000/svg","tspan");if(e.attrs){Object.keys(e.attrs).forEach((r=>{t.setAttribute(r,e.attrs[r])}))}t.appendChild(document.createTextNode(e.text));r.appendChild(t)}))}t.appendChild(r)}));return t};const draw=Object.freeze({startSvg:startSvg,functions:functions,renderSVG:renderSVG});const needsMap=(...e)=>{for(let t=0;t<e.length;t++){if(e[t].dtype&dt.MAP&&e[t].dtype&dt.RATIONAL){return true}}return false};const shapeOf=e=>e.dtype===dt.COMPLEX?"complex":e.dtype<128?"scalar":Matrix.isVector(e)?"vector":e.dtype&dt.MATRIX?"matrix":e.dtype===dt.DATAFRAME?"dataFrame":e.dtype&dt.MAP&&(e.dtype&dt.ROWVECTOR||e.dtype&dt.COLUMNVECTOR)?"mapWithVectorValues":e.dtype&dt.MAP?"map":"other";const binaryShapesOf=(e,t)=>{let r=shapeOf(e);let n=shapeOf(t);let a=false;if(isMatrix(e)&&isMatrix(t)){a=true;if(r==="vector"){r=e.dtype&dt.ROWVECTOR?"rowVector":"columnVector"}if(n==="vector"){n=t.dtype&dt.ROWVECTOR?"rowVector":"columnVector"}}return[r,n,a]};const nextToken=(e,t)=>{if(e.length<t+2){return undefined}return e[t+1]};const arfn=["abs","argument","Im","Re","Γ"];const stringFromOperand=(e,t)=>e.dtype===dt.STRING?e.value:e.dtype===dt.RATIONAL?format(e.value,"h15",t):isMatrix(e.dtype)?Matrix.displayAlt(e,"h15",t):e.dtype&dt.MAP?map.displayAlt(e.value,"h15",t):e.value;const evalRpn=(e,t,r,n,a)=>{const o=e.split(" ");const i=[];let l;for(let e=0;e<o.length;e++){const s=o[e];const m=s.charAt(0);if(m==="®"){const e=new Array(2);const t=s.indexOf("/");e[0]=BigInt(s.slice(1,t));e[1]=BigInt(s.slice(t+1));const r=Object.create(null);r.value=e;r.unit=Object.create(null);r.unit.expos=allZeros;r.dtype=dt.RATIONAL;i.push(Object.freeze(r))}else if(m==="©"){const e=s.slice(1).split(",");const t=new Array(2);t[0]=[BigInt(e[0]),BigInt(e[1])];t[1]=[BigInt(e[2]),BigInt(e[3])];const r=Object.create(null);r.value=t;r.unit=Object.create(null);r.unit.expos=allZeros;r.dtype=dt.COMPLEX;i.push(Object.freeze(r))}else if(m==="¿"){const r=s.substring(1);let a=Object.create(null);if(r==="undefined"){a.value=undefined;a.unit=null;a.dtype=0}else if(r==="T"&&nextToken(o,e)==="^"&&i.length>0&&isMatrix(i[i.length-1])){a.value="T";a.unit=null;a.dtype=dt.RATIONAL}else{const e=t[r];if(!e){return errorOprnd("V_NAME",r)}a=fromAssignment(e,n);if(a.dtype===dt.ERROR){return a}}i.push(Object.freeze(a))}else if(m==='"'){const e=s.charAt(s.length-1);const t=m==='"'&&e==='"'?s.slice(1,-1).trim():s.trim();i.push(Object.freeze({value:t,unit:null,dtype:dt.STRING}))}else if(/^``/.test(s)){i.push(DataFrame.dataFrameFromCSV(tablessTrim(s.slice(2,-2)),{}))}else if(m==="`"){const e=s.charAt(s.length-1);const t=m==="`"&&e==="`"?s.slice(1,-1).trim():s.trim();i.push(Object.freeze({value:t,unit:null,dtype:dt.RICHTEXT}))}else{switch(s){case"true":case"false":{const e=Object.create(null);e.value=s==="true";e.unit=null;e.dtype=dt.BOOLEAN;i.push(Object.freeze(e));break}case"π":{const e=Object.create(null);e.value=Rnl.pi;e.dtype=dt.RATIONAL;e.unit=Object.create(null);e.unit.expos=allZeros;i.push(Object.freeze(e));break}case"e":{const e=Object.create(null);e.value="e";e.dtype=dt.RATIONAL;e.unit=Object.create(null);e.unit.expos=allZeros;i.push(Object.freeze(e));break}case"j":{const e=Object.create(null);e.value=[Rnl.zero,Rnl.one];e.unit=Object.create(null);e.unit.expos=allZeros;e.dtype=dt.COMPLEX;i.push(Object.freeze(e));break}case"ℏ":{const e=Object.create(null);e.value=Rnl.hbar;e.dtype=dt.RATIONAL;e.unit=Object.create(null);e.unit.expos=Object.freeze(n?[2,1,-1,0,0,0,0,0]:allZeros);i.push(Object.freeze(e));break}case"∠":{const e=i.pop();const t=i.pop();if(t.dtype!==dt.RATIONAL||e.dtype!==dt.RATIONAL){return errorOprnd("NAN_OP")}const r=Rnl.toNumber(e.value);const n=Object.create(null);n.value=[Rnl.multiply(t.value,Rnl.fromNumber(Math.cos(r))),Rnl.multiply(t.value,Rnl.fromNumber(Math.sin(r)))];n.unit=Object.create(null);n.unit.expos=allZeros;n.dtype=dt.COMPLEX;i.push(Object.freeze(n));break}case"+":case"-":{const e=i.pop();const t=i.pop();const r=s==="+"?"add":"subtract";if(!((t.dtype&dt.RATIONAL||t.dtype&dt.COMPLEX)&&(e.dtype&dt.RATIONAL||e.dtype&dt.COMPLEX))){return errorOprnd("NAN_OP")}if(n){if(!unitsAreCompatible(t.unit.expos,e.unit.expos)){return errorOprnd("UNIT_ADD")}}const[a,o,l]=binaryShapesOf(t,e);const m=Object.create(null);m.value=Operators.binary[a][o][r](t.value,e.value);if(m.value.dtype&&m.value.dtype===dt.ERROR){return m.value}m.unit=t.unit;m.dtype=Operators.dtype[a][o](t.dtype,e.dtype,s);i.push(Object.freeze(m));break}case"~":{const e=i.pop();if(!(e.dtype&dt.RATIONAL||e.dtype===dt.COMPLEX)){return errorOprnd("NAN_OP")}const t=Object.create(null);t.value=Operators.unary[shapeOf(e)]["negate"](e.value);if(t.value.dtype&&t.value.dtype===dt.ERROR){return t.value}t.unit=e.unit;t.dtype=e.dtype;i.push(Object.freeze(t));break}case"×":case"·":case"*":case"⌧":{const e=i.pop();const t=e.dtype===dt.DATAFRAME?clone(e):e;const r=i.pop();if(!((r.dtype&dt.RATIONAL||r.dtype&dt.COMPLEX)&&(t.dtype&dt.RATIONAL||t.dtype&dt.COMPLEX||t.dtype===dt.DATAFRAME))){return errorOprnd("NAN_OP")}const a=Object.create(null);let o=Object.create(null);if(n){if(r.dtype===dt.DATAFRAME&&t.dtype===dt.RATIONAL||r.dtype===dt.RATIONAL&&t.dtype===dt.DATAFRAME){o=r.dtype===dt.DATAFRAME?r.unit:t.unit}else{o.expos=r.unit.expos.map(((e,r)=>e+t.unit.expos[r]))}}else{o.expos=allZeros}a.unit=t.dtype===dt.DATAFRAME?clone(t.unit):Object.freeze(o);const[l,m,u]=binaryShapesOf(r,t);const c=u?{"×":"cross","·":"dot","*":"asterisk","⌧":"multiply"}[s]:"multiply";a.dtype=s==="*"||l==="scalar"||l==="map"||l==="complex"||m==="scalar"||m==="map"||m==="complex"?Operators.dtype[l][m](r.dtype,t.dtype,c):s==="·"?dt.RATIONAL:s==="×"?dt.COLUMNVECTOR:Matrix.multResultType(r,t);a.value=Operators.binary[l][m][c](r.value,t.value);if(a.value.dtype&&a.value.dtype===dt.ERROR){return a.value}i.push(Object.freeze(a));break}case"/":case"//":case"÷":case"///":case"∕":{const e=i.pop();const t=i.pop();if(!((t.dtype&dt.RATIONAL||t.dtype===dt.COMPLEX)&&(e.dtype&dt.RATIONAL||e.dtype===dt.COMPLEX))){return errorOprnd("NAN_OP")}const r=Object.create(null);const a=Object.create(null);a.expos=n?t.unit.expos.map(((t,r)=>t-e.unit.expos[r])):allZeros;r.unit=Object.freeze(a);const[o,l,s]=binaryShapesOf(t,e);r.value=Operators.binary[o][l]["divide"](t.value,e.value);r.dtype=Operators.dtype[o][l](t.dtype,e.dtype,"divide");if(isDivByZero(r.value,shapeOf(r))){return errorOprnd("DIV")}i.push(Object.freeze(r));break}case"^":{const e=i.pop();const t=i.pop();if(Matrix.isVector(t)&&e.value==="T"){const e=clone(t);e.dtype=t.dtype+(t.dtype&dt.ROWVECTOR?dt.COLUMNVECTOR-dt.ROWVECTOR:dt.ROWVECTOR-dt.COLUMNVECTOR);i.push(Object.freeze(e));break}if(!((t.dtype&dt.RATIONAL||t.dtype===dt.COMPLEX)&&(e.dtype&dt.RATIONAL||e.dtype===dt.COMPLEX)||isMatrix(t)&&e.value==="T")){return errorOprnd("NAN_OP")}const r=Object.create(null);const a=Object.create(null);a.expos=allZeros;if(n){const r=typeof e.unit==="number"?e.unit:Rnl.toNumber(e.value);a.expos=t.unit.expos.map((e=>e*r))}r.unit=Object.freeze(a);const[o,l,m]=binaryShapesOf(t,e);r.value=Operators.binary[o][l]["power"](t.value,e.value);if(r.value.dtype){return r.value}r.dtype=Cpx.isComplex(r.value)?dt.COMPLEX:Operators.dtype[o][l](t.dtype,e.dtype,s);i.push(Object.freeze(r));break}case"^*":{const e=i.pop();if(!(e.dtype&dt.COMPLEX)){return errorOprnd("NA_REAL"),"conjugate"}const t={value:Cpx.conjugate(e.value),unit:e.unit,dtype:e.dtype};i.push(Object.freeze(t));break}case"&":case"&_":{const e=i.pop();const a=i.pop();const o=s==="&"?"concat":"unshift";const[l,m,u]=binaryShapesOf(a,e);let c=Object.create(null);if(a.dtype===dt.STRING&&a.dtype===dt.STRING){const t=stringFromOperand(a,r);const n=stringFromOperand(e,r);c.value=t+n;c.unit=null;c.dtype=dt.STRING}else if(a.dtype&dt.DATAFRAME&&Matrix.isVector(e)&&s==="&"){c=DataFrame.append(a,e,t,n);if(c.dtype===dt.ERROR){return c}}else if(a.dtype&dt.MAP||e.dtype&dt.MAP){c=map.append(a,e,l,m,t);if(c.dtype===dt.ERROR){return c}}else{if(n){if(!unitsAreCompatible(a.unit.expos,e.unit.expos)){return errorOprnd("UNIT_ADD")}}c.value=Operators.binary[l][m][o](a.value,e.value);if(c.value.dtype){return c.value}c.dtype=Operators.dtype[l][m](a.dtype,e.dtype,s);c.unit=a.unit}i.push(Object.freeze(c));break}case"√":case"∛":case"∜":{const e=s.charCodeAt(0)-8728;const t=[BigInt(1),BigInt(e)];const r=i.pop();if(!(r.dtype&dt.RATIONAL||r.dtype&dt.COMPLEX)){return errorOprnd("NAN_OP")}const a=Object.create(null);const o=Object.create(null);o.expos=allZeros;if(n){o.expos=r.unit.expos.map((t=>t/e))}a.unit=Object.freeze(o);const l=shapeOf(r);a.value=Operators.binary[l]["scalar"]["power"](r.value,t);if(a.value.dtype&&a.value.dtype===dt.ERROR){return a.value}a.dtype=Cpx.isComplex(a.value)?dt.COMPLEX:Operators.dtype[l]["scalar"](r.dtype,dt.RATIONAL,s);i.push(Object.freeze(a));break}case"root":{const e=i.pop();const t=i.pop();if(!(t.dtype&dt.RATIONAL&(e.dtype&dt.RATIONAL))){return errorOprnd("NAN_OP")}const r=Object.create(null);const a=Object.create(null);a.expos=allZeros;if(n){a.expos=e.unit.expos.map((e=>e/Number(t.value[0])))}r.unit=Object.freeze(a);const o=Rnl.reciprocal(t.value);const l=shapeOf(t);r.value=Operators.binary[l]["scalar"]["power"](e.value,o);if(r.value.dtype&&r.value.dtype===dt.ERROR){return r.value}r.dtype=Operators.dtype[l]["scalar"](t.dtype,dt.RATIONAL,s);i.push(Object.freeze(r));break}case".":{const e=i.pop();const r=i.pop();const a=propertyFromDotAccessor(r,e,t,n);if(a.dtype===dt.ERROR){return a}i.push(Object.freeze(a));break}case"[]":{const r=Number(o[e+1]);e+=1;const a=[];for(let e=0;e<r;e++){a.unshift(i.pop())}const l=i.pop();let s;if(l.dtype&dt.DATAFRAME){s=DataFrame.range(l,a,t,n)}else if(l.dtype&dt.MAP){s=map.valueFromMap(l,a,n)}else if(l.dtype===dt.STRING){s=textRange(l.value,a[0])}else if(l.dtype===dt.MODULE){if(r===1){s=fromAssignment(l.value[a[0].value],n)}else{s={value:new Map,unit:null,dtype:dt.TUPLE};for(let e=0;e<a.length;e++){const t=a[e].value;s.value.set(t,fromAssignment(l.value[t],n))}}}else{const e=a[0];const o=r===2?a[1]:isVector(l)?null:{value:Rnl.zero,unit:allZeros,dtype:dt.RATIONAL};s=l.dtype&dt.DATAFRAME?DataFrame.range(l,e,o,t,n):Matrix.submatrix(l,e,o)}if(s.dtype===dt.ERROR){return s}i.push(Object.freeze(s));break}case"..":{const e=i.pop();const t=i.pop();if(!(t.dtype===dt.RATIONAL||t.dtype===dt.RANGE)){return errorOprnd("NAN_OP")}const r=Object.create(null);r.unit=null;r.dtype=dt.RANGE;const n=t.dtype!==dt.RATIONAL?t.value[2]:e.value==="∞"||Rnl.lessThan(t.value,e.value)?Rnl.one:Rnl.negate(Rnl.one);r.value=t.dtype===dt.RATIONAL?[t.value,n,e.value]:[t.value[0],t.value[2],e.value];i.push(Object.freeze(r));break}case":":{const e=i.pop();const t=i.pop();if(t.dtype!==dt.STRING){return errorOprnd("BAD_KEYSTR")}i.push(Object.freeze({name:t.value,value:e.value,unit:e.unit,dtype:e.dtype}));break}case"normal":case"uniform":case"lognormal":{const e=i.pop();const t=i.pop();break}case"!":{const e=i.pop();if(!(e.dtype&dt.RATIONAL)){return errorOprnd("NAN_OP")}if(n){if(!unitsAreCompatible(e.unit.expos,allZeros)){return errorOprnd("FACT")}}const t=e.value;if(!Rnl.isInteger(t)||Rnl.isNegative(t)){return errorOprnd("FACT")}const r=Object.create(null);r.unit=allZeros;r.dtype=dt.RATIONAL;r.value=Operators.unary[shapeOf(e)]["factorial"](t);if(r.value.dtype){return r.value}i.push(Object.freeze(r));break}case"%":{const e=i.pop();if(!(e.dtype&dt.RATIONAL)){return errorOprnd("NAN_OP")}const t=Object.create(null);t.unit=e.unit;t.dtype=e.dtype;t.value=Operators.unary[shapeOf(e)]["percent"](e.value);if(t.value){return t.value}i.push(Object.freeze(t));break}case"|":case"‖":{const e=i.pop();if(!(e.dtype&dt.RATIONAL||e.dtype===dt.COMPLEX)){return errorOprnd("NAN_OP")}const t=s==="|"?"abs":"norm";const r=Object.create(null);r.unit=e.unit;r.dtype=dt.RATIONAL;r.value=Operators.unary[shapeOf(e)][t](e.value);if(r.value.dtype&&r.value.dtype===dt.ERROR){return r.value}i.push(Object.freeze(r));break}case"matrix":{const t=Number(o[e+1]);const r=Number(o[e+2]);e+=2;if(i[i.length-1].dtype===dt.RANGE){i.push(Matrix.operandFromRange(i.pop().value))}else{i.push(Matrix.operandFromTokenStack(i,t,r))}break}case"startSvg":i.push({value:draw.startSvg(),unit:null,dtype:dt.DRAWING});break;case"abs":case"cos":case"sin":case"tan":case"acos":case"asin":case"atan":case"sec":case"csc":case"cot":case"asec":case"acsc":case"acot":case"exp":case"log":case"ln":case"log10":case"log2":case"cosh":case"sinh":case"tanh":case"sech":case"csch":case"coth":case"acosh":case"asinh":case"atanh":case"asech":case"acsch":case"acoth":case"Gamma":case"Γ":case"logGamma":case"logΓ":case"logFactorial":case"cosd":case"sind":case"tand":case"acosd":case"asind":case"atand":case"secd":case"cscd":case"cotd":case"asecd":case"acscd":case"acotd":case"Re":case"Im":case"argument":case"chr":case"round":case"sqrt":case"sign":{const e=i.pop();if(!(e.dtype&dt.RATIONAL||e.dtype&dt.COMPLEX)){return errorOprnd("UNREAL",s)}const t=Object.create(null);const r=Object.create(null);r.expos=n?Functions.functionExpos(s,[e]):allZeros;if(r.expos.dtype&&r.expos.dtype===dt.ERROR){return r.expos}t.unit=Object.freeze(r);const a=e.dtype&dt.RATIONAL?"scalar":"complex";const o=e.dtype&dt.MAP&&Matrix.isVector(e)?mapMap(e.value,(e=>e.map((e=>Functions.unary[a][s](e))))):Matrix.isVector(e)?e.value.map((e=>Functions.unary[a][s](e))):isMatrix(e)?e.value.map((e=>e.map((e=>Functions.unary[a][s](e))))):needsMap(e)?mapMap(e.value,(e=>Functions.unary[a][s](e))):Functions.unary[a][s](e.value);if(o.dtype&&o.dtype===dt.ERROR){return o}t.value=Object.freeze(o);t.dtype=s==="chr"?e.dtype-dt.RATIONAL+dt.STRING:e.dtype&dt.COMPLEX&&arfn.includes(s)?e.dtype-dt.COMPLEX+dt.RATIONAL:e.dtype;i.push(Object.freeze(t));break}case"logn":case"atan2":case"hypot":case"gcd":case"rms":case"binomial":case"zeros":{const e=[];e.push(i.pop());e.unshift(i.pop());if(!(e[0].dtype&dt.RATIONAL)){return errorOprnd("")}const t=Object.create(null);const r=Object.create(null);r.expos=n?Functions.functionExpos(s,e):allZeros;if(r.dtype&&r.dtype===dt.ERROR){return r}t.unit=Object.freeze(r);const[a,o]=multivarFunction("binary",s,e);t.value=Object.freeze(a);t.dtype=o;i.push(Object.freeze(t));break}case"roundn":case"string":{const e=i.pop();const t=i.pop();if(!(t.dtype&dt.RATIONAL)){return errorOprnd("")}if(!(e.dtype&dt.STRING)){return errorOprnd("")}if(!/(?:f-?|r)\d+/.test(e.value)){return errorOprnd("")}let r="";const n=Object.create(null);if(s==="string"){r=e.value.charAt()==="f"?"stringFixed":"stringSignificant";n.unit=null;n.dtype=t.dtype-dt.RATIONAL+dt.STRING}else{r=e.value.charAt()==="f"?"roundFixed":"roundSignificant";n.unit=t.unit;n.dtype=t.dtype}const a=Number(e.value.slice(1));const o=t.dtype&dt.MAP&&Matrix.isVector(t)?mapMap(t.value,(e=>e.map((e=>Functions.binary[r]([e,a]))))):Matrix.isVector(t)?t.value.map((e=>Functions.binary[r]([e,a]))):isMatrix(t)?t.value.map((e=>e.map((e=>Functions.binary[r]([e,a]))))):needsMap(t)?mapMap(t.value,(e=>Functions.binary[r]([e,a]))):Functions.binary[r]([t.value,a]);if(o.dtype&&o.dtype===dt.ERROR){return o}n.value=Object.freeze(o);if(t.name){n.name=t.name}i.push(Object.freeze(n));break}case"dataframe":case"max":case"min":case"sum":case"product":case"range":case"mean":case"median":case"variance":case"stddev":case"accumulate":{const r=Number(o[e+1]);e+=1;const a=[];for(let e=0;e<r;e++){const e=i.pop();if(s!=="dataframe"&&!(e.dtype&dt.RATIONAL)){return errorOprnd("NANARG",s)}a.unshift(e)}if(s==="dataframe"){const e=DataFrame.dataFrameFromVectors(a,t);if(e.dtype&&e.dtype===dt.ERROR){return e}i.push(e);break}const l=Object.create(null);const m=Object.create(null);m.expos=n?Functions.functionExpos(s,a):allZeros;if(m.dtype&&m.dtype===dt.ERROR){return errorOprnd("")}l.unit=Object.freeze(m);const[u,c]=multivarFunction("reduce",s,a);l.value=Object.freeze(u);l.dtype=c;i.push(Object.freeze(l));break}case"random":{const e=Object.create(null);e.value=Rnl.fromNumber(Math.random());e.unit=Object.create(null);e.unit.expos=allZeros;e.dtype=dt.RATIONAL;i.push(Object.freeze(e));break}case"isNaN":{const e=i.pop();const t=Object.create(null);t.value=!(e.dtype&dt.RATIONAL);t.unit=null;t.dtype=dt.BOOLEAN;i.push(Object.freeze(t));break}case"length":{const e=i.pop();const t=e.value;const r=Matrix.isVector(e)?t.length:e.dtype&dt.MATRIX?t.length*t[0].length:e.dtype===dt.STRING?t.length-arrayOfRegExMatches(/[\uD800-\uD8FF\uFE00\uFE01]/g,t).length:e.dtype&dt.MAP?e.keys().value.length:0;const n=Object.create(null);n.value=Object.freeze(Rnl.fromNumber(r));n.unit=Object.create(null);n.unit.expos=allZeros;n.dtype=dt.RATIONAL;i.push(Object.freeze(n));break}case"count":{const e=i.pop();const t=i.pop();if(e.dtype!==dt.STRING||t.dtype!==dt.STRING){return errorOprnd("COUNT")}const r=Object.create(null);r.value=Object.freeze(Rnl.fromNumber(t.value.split(e.value).length-1));r.unit=Object.create(null);r.unit.expos=allZeros;r.dtype=dt.RATIONAL;i.push(Object.freeze(r));break}case"format":{const e=i.pop().value;const t=format(i.pop().value,e);i.push({value:t,unit:null,dtype:dt.STRING});break}case"lerp":{const e=new Array(3);e[2]=i.pop();e[1]=i.pop();e[0]=i.pop();const t=Functions.lerp(e,n);if(t.dtype===dt.ERROR){return t}i.push(t);break}case"matrix2table":{const e=i.pop();const r=i.pop();const n=i.pop();const a=DataFrame.matrix2table(n,r,e,t);if(a.dtype===dt.ERROR){return a}i.push(a);break}case"transpose":i.push(Matrix.transpose(i.pop()));break;case"trace":i.push(Matrix.trace(i.pop()));break;case"fetch":return errorOprnd("FETCH");case"function":{const l=o[e+1];const s=Number(o[e+2]);e+=2;const m=new Array(s);for(let e=s-1;e>=0;e--){m[e]=i.pop()}let u;if(t.svg&&(l==="plot"||draw.functions[l])){if(l==="plot"){m.splice(1,0,r);u=plot(...m)}else{u=draw.functions[l](...m)}}else if(nextToken(o,e)==="."){let t=i.pop().value;if(t.value){t=t.value}const a=t[l];if(a===undefined){return errorOprnd("F_NAME",l)}if(a.dtype===dt.ERROR){return a}if(a.isPrivate){return errorOprnd("PRIVATE",l)}u=evalCustomFunction(a,m,r,n,t);e+=1}else if(a&&a[l]){const e=a[l];u=evalCustomFunction(e,m,r,n,a)}else if(t[l]&&t[l].dtype===dt.MODULE){const e=t[l]["value"];u=evalCustomFunction(e,m,r,n)}else{return errorOprnd("BAD_FUN_NM",l)}if(u.dtype===dt.ERROR){return u}i.push(u);break}case"=":case"==":case"<":case">":case"<=":case"≤":case">=":case"≥":case"≠":case"!=":case"∈":case"∉":case"⋐":{const e=i.pop();const t=i.pop();if(n&&!(t.dtype&dt.STRING||e.dtype&dt.STRING||t.dtype===dt.NULL||e.dtype===dt.NULL)){if(!unitsAreCompatible(t.unit.expos,e.unit.expos)){return errorOprnd("UNIT_COMP")}}const r=Object.create(null);r.unit=null;const a=t.dtype&dt.BOOLEANFROMCOMPARISON?l.value:undefined;if(isIn(s,["∈","∉","⋐"])){r.value=compare(s,t.value,e.value,a)}else{const[n,o,i]=binaryShapesOf(t,e);r.value=Operators.relations[n][o].relate(s,t.value,e.value,a)}if(r.value.dtype&&r.value.dtype===dt.ERROR){return r.value}r.dtype=t.dtype+dt.BOOLEANFROMCOMPARISON;if(r.dtype&dt.RATIONAL){r.dtype-=dt.RATIONAL}if(r.dtype&dt.COMPLEX){r.dtype-=dt.COMPLEX}if(r.dtype&dt.STRING){r.dtype-=dt.STRING}l=e;i.push(Object.freeze(r));break}case"and":case"or":case"∧":case"∨":case"⊻":{const t=i.pop();const r=i.pop();if(!(r.dtype&dt.BOOLEAN)||!(t.dtype&dt.BOOLEAN)){return errorOprnd("LOGIC",o[e])}const n={and:"and",or:"or","∧":"and","∨":"or","⊻":"xor"}[s];const[a,l,m]=binaryShapesOf(r,t);const u=Object.create(null);u.unit=null;u.value=Operators.binary[a][l][n](r.value,t.value);if(u.value.dtype&&u.value.dtype===dt.ERROR){return u.value}u.dtype=Operators.dtype[a][l](r.dtype,t.dtype,s);i.push(Object.freeze(u));break}case"not":case"¬":{const e=i.pop();if(!(e.dtype&dt.BOOLEAN)){return errorOprnd("LOGIC",s)}const t=Object.create(null);t.unit=null;t.value=Operators.unary[shapeOf(e)]["not"](e.value);if(t.value.dtype&&t.value.dtype===dt.ERROR){return t.value}t.dtype=dt.BOOLEAN;i.push(Object.freeze(t));break}case"cases":{const l=Number(o[e+1]);e+=1;const s=new Array(l);for(let e=l-1;e>=0;e--){s[e]=i.pop()}for(let m=0;m<l;m++){if((s[m].dtype&dt.BOOLEAN)===0){return errorOprnd("LOGIC","if")}const l=Operators.condition[shapeOf(s[m])](s[m].value);if(l){const l=o[e+m+1].replace(/§/g," ");const s=evalRpn(l,t,r,n,a);if(s.dtype===dt.ERROR){return s}i.push(s);break}}e+=l;break}case"applyUnit":{if(!n){return errorOprnd("UNIT_AWARE",o[e+1])}const r=i.pop();if(!(r.dtype&dt.RATIONAL)){return errorOprnd("QUANT_NUM")}const a=o[e+1];e+=1;const l=Object.create(null);l.unit=Object.create(null);l.dtype=r.dtype;if(!n){l.value=r.value;if(r.dtype&dt.MAP){l.unit=unitFromUnitName(a,t)}else{l.unit.name=a}}else{const e=unitFromUnitName(a,t);if(e.dtype&&e.dtype===dt.ERROR){return e}if(isMatrix(r)){l.unit.expos=r.unit.expos.map(((t,r)=>t+e.expos[r]));l.value=Matrix.convertToBaseUnits(r,e.gauge,e.factor)}else if(r.dtype&dt.MAP){l.unit=unitFromUnitName(r.unit);l.value=r.value}else{l.unit.expos=r.unit.expos.map(((t,r)=>t+e.expos[r]));l.value=Rnl.multiply(Rnl.add(r.value,e.gauge),e.factor)}}i.push(Object.freeze(l));break}case"modulo":{const e=i.pop();const t=i.pop();if(!(t.dtype&dt.RATIONAL&(e.dtype&dt.RATIONAL))){return errorOprnd("NAN_OP")}const[r,n,a]=binaryShapesOf(t,e);const o=Object.create(null);o.unit=Object.create(null);o.unit.expos=allZeros;o.value=Operators.binary[r][n]["modulo"](t.value,e.value);if(o.value.dtype&&o.value.dtype===dt.ERROR){return o.value}o.dtype=Operators.dtype[r][n](t.dtype,e.dtype,s);i.push(Object.freeze(o));break}case"⎾⏋":case"⎿⏌":{const e=i.pop();if(!(e.dtype&dt.RATIONAL)){return errorOprnd("NAN_OP")}if(n){if(!unitsAreCompatible(e.unit.expos,allZeros)){{return errorOprnd("")}}}const t=s==="⎾⏋"?"ceil":"floor";const r=Object.create(null);r.value=Operators.unary[shapeOf(e)][t](e.value);if(r.value.dtype&&r.value.dtype===dt.ERROR){return r.value}r.unit=e.unit;r.dtype=e.dtype;i.push(Object.freeze(r));break}case"()":{const e=[];e.unshift(i.pop());e.unshift(i.pop());if(n){if(!unitsAreCompatible(e[0].unit.expos,allZeros)||!unitsAreCompatible(e[1].unit.expos,allZeros)){return errorOprnd("BINOM")}}const t=Object.create(null);t.unit=Object.create(null);t.unit.expos=allZeros;const[r,a]=multivarFunction("binary","binomial",e);t.value=r;t.dtype=a;i.push(Object.freeze(t));break}case"raise":return{value:i.pop().value,unit:null,dtype:dt.ERROR};case"\\blue":case"\\gray":case"\\green":case"\\orange":case"\\pink":case"\\purple":case"\\red":{const e=clone(i.pop());if(e.dtype===dt.STRING){e.unit=s.slice(1)}i.push(e);break}}}}const s=i.pop();if(i.length>0){return errorOprnd("ERROR")}return s};const plot=(e,t,r,n,a,o)=>{const i=e.value.temp;n=n==null?Rnl.fromNumber(250):n.value;const l=a==null?Rnl.fromNumber(i.xmin):a.value;const s=o==null?Rnl.fromNumber(i.xmax):o.value;const m=Rnl.divide(Rnl.subtract(s,l),n);const u=Matrix.operandFromRange([l,m,s]);const c={value:u.value,unit:null,dtype:dt.COLUMNVECTOR+dt.RATIONAL};let d;let p;if(r.value.dtype&&r.value.dtype===dt.MODULE){d=evalCustomFunction(r.value,[c],t,false);p=c.value.map(((e,t)=>[e,d.value[t]]))}else if(r.dtype===dt.STRING){if(/§matrix§1§2$/.test(r.value)){c.name="t";p=evalRpn(r.value.replace(/§/g," "),{t:c},t,false).value}else{c.name="x";d=evalRpn(r.value.replace(/§/g," "),{x:c},t,false);p=c.value.map(((e,t)=>[e,d.value[t]]))}}const h={value:p,unit:null,dtype:dt.MATRIX+dt.RATIONAL};return draw.functions.path(e,h,"L")};const elementFromIterable=(e,t,r)=>{let n;let a=Rnl.increment(t);let o=0;if(e.dtype===dt.RANGE){n=t;a=Rnl.add(t,r);o=dt.RATIONAL}else if(e.dtype===dt.STRING&&e.value[Rnl.fromNumber(t)]==="\ud835"){n=Rnl.fromNumber(e.value[t]+e.value[t+1]);a=Rnl.add(t,2);o=dt.STRING}else{n=e.value[Rnl.toNumber(t)];o=e.dtype&dt.STRING?dt.STRING:e.dtype&dt.ROWVECTOR?e.dtype-dt.ROWVECTOR:e.dtype&dt.COLUMNVECTOR?e.dtype-dt.COLUMNVECTOR:e.dtype-dt.MATRIX}const i={value:n,unit:e.unit,dtype:o};return[i,a]};const loopTypes=["while","for"];const evalCustomFunction=(e,t,r,n,a)=>{if(e.dtype===dt.ERROR){return e}if(t.length>e.parameters.length){return errorOprnd("NUMARGS",e.name)}const o=Object.create(null);for(let r=0;r<t.length;r++){o[e.parameters[r]]=t[r]}if(e.parameters.length>t.length){for(let r=t.length;r<e.parameters.length;r++){o[e.parameters[r]]={value:undefined,unit:null,dtype:0}}}if(e.dtype===dt.DRAWING){o["svg"]={value:draw.startSvg(),unit:null,dtype:dt.DRAWING}}const i=[{type:"if",condition:true,endOfBlock:e.statements.length-1}];for(let t=0;t<e.statements.length;t++){const l=e.statements[t];const s=l.stype;const m=i.length-1;switch(s){case"statement":{if(i[m].condition){const e=evalRpn(l.rpn,o,r,n,a);if(e.dtype===dt.ERROR){return e}if(l.name){l.resultdisplay=n?"!!":"!";const[t,a]=conditionResult(l,e,n);insertOneHurmetVar(o,t,r)}}break}case"if":{if(i[m].condition){const e=evalRpn(l.rpn,o,r,n,a);if(e.dtype===dt.ERROR){return e}const t=Operators.condition[shapeOf(e)](e.value);i.push({type:"if",condition:t,endOfBlock:l.endOfBlock})}else{t=l.endOfBlock}break}case"else if":{if(i[m].type==="if"&&i[m].condition){t=i[m].endOfBlock;i.pop()}else{const e=evalRpn(l.rpn,o,r,n,a);if(e.dtype===dt.ERROR){return e}const t=Operators.condition[shapeOf(e)](e.value);i[i.length-1].condition=t}break}case"else":if(i[m].type==="if"&&i[m].condition){t=i[m].endOfBlock;i.pop()}else{i[m].condition=true}break;case"while":{if(i[m].condition){const e={type:"while",startStatement:t,rpn:l.rpn,endOfBlock:l.endOfBlock};const s=evalRpn(l.rpn,o,r,n,a);if(s.dtype===dt.ERROR){return s}const m=Operators.condition[shapeOf(s)](s.value);e.condition=m;if(e.condition===true){i.push(e)}else{t=l.endOfBlock}}else{t=l.endOfBlock}break}case"for":{const e={type:"for",condition:true,startStatement:t,endOfBlock:l.endOfBlock};const s=l.rpn.split(" ");s.pop();e.dummyVariable=s.shift().slice(1);const m=evalRpn(s.join(" "),o,r,n,a);e.index=m.dtype&dt.RANGE?m.value[0]:Rnl.fromNumber(0);e.step=m.dtype&dt.RANGE?m.value[1]:Rnl.fromNumber(0);e.endIndex=m.dtype&dt.RANGE?m.value[2]:Rnl.fromNumber(m.value.length-1);const[u,c]=elementFromIterable(m,e.index,e.step);e.nextIndex=c;e.iterable=m;i.push(e);o[e.dummyVariable]=u;break}case"break":{if(i[m].condition){for(let e=i.length-1;e>0;e--){if(loopTypes.includes(i[e].type)||e===0){t=i[e].endOfBlock;i.pop();break}else{i.pop()}}}break}case"end":{if(i[m].type==="if"&&t>=i[m].endOfBlock){i.pop()}else if(i[m].type==="if"&&i[m].condition){if(t<i[m].endOfBlock){t=i[m].endOfBlock}i.pop()}else if(i[m].type==="while"){const e=evalRpn(i[m].rpn,o,r,n,a);if(e.dtype===dt.ERROR){return e}i[m].condition=e.value;if(i[m].condition){t=i[m].startStatement}else{i.pop()}}else if(i[m].type==="for"){i[m].index=i[m].nextIndex;const e=Rnl.isRational(i[m].index)&&Rnl.isPositive(i[m].step)?Rnl.lessThanOrEqualTo(i[m].index,i[m].endIndex):Rnl.isRational(i[m].index)?Rnl.greaterThanOrEqualTo(i[m].index,i[m].endIndex):i[m].index<=i[m].endIndex;if(e){const[e,r]=elementFromIterable(i[m].iterable,i[m].index,i[m].step);o[i[m].dummyVariable]=e;i[m].nextIndex=r;t=i[m].startStatement}else{i.pop()}}break}case"return":if(i[m].condition){if(l.rpn){const e=evalRpn(l.rpn,o,r,n,a);return e}else{return{value:Rnl.zero,unit:allZeros,dtype:dt.RATIONAL}}}break;case"echo":if(i[m].condition){if(l.rpn){const e=evalRpn(l.rpn,o,r,n,a);if(e.dtype===dt.ERROR){return e}const t=e.dtype===dt.RATIONAL?Rnl.toNumber(e.value):e.dtype===dt.STRING?e.value:isVector(e)&&e.dtype&dt.RATIONAL?e.value.map((e=>Rnl.toNumber(e))):e.dtype===dt.MATRIX+dt.RATIONAL?e.value.map((e=>e.map((e=>Rnl.toNumber(e))))):e.value;console.log(t)}}break;case"raise":if(i[m].condition){if(l.rpn){const e=evalRpn(l.rpn,o,r,n,a);return{value:e.value,unit:null,dtype:dt.ERROR}}else{return{value:l.rpn,unit:null,dtype:dt.ERROR}}}break}}};const errorResult=(e,t)=>{e.value=null;e.resultDisplay="\\color{firebrick}\\text{"+t.value+"}";e.altResultDisplay=t.value;e.error=true;if(e.resulttemplate.indexOf("!")>-1){e.tex+="= "+e.resultDisplay;e.alt+=t.value}else if(e.resulttemplate.indexOf("@")>-1){e.tex=e.resulttemplate.replace(/@@?/,e.resultDisplay);e.alt=e.altresulttemplate.replace(/@@?/,e.altResultDisplay)}else{e.tex=e.tex.replace(/[?%] *[?%]|[?%]/,e.resultDisplay);e.alt=e.alt.replace(/[?%] *[?%]|[?%]/,e.altResultDisplay)}return[e,t]};const conditionResult=(e,t,r)=>{let n=Object.create(null);n.value=clone(t.value);n.unit=clone(t.unit);n.dtype=t.dtype;if(n.dtype===dt.COMPLEX&&Rnl.isZero(Cpx.im(n.value))){n.value=Cpx.re(n.value);n.dtype=1}if(n.dtype!==dt.ERROR&&r&&e.resultdisplay.indexOf("!")===-1&&(e.expos||n.unit&&n.unit.expos&&Array.isArray(n.unit.expos))){const t=e.expos?e.expos:allZeros;if(!unitsAreCompatible(n.unit.expos,t)){const t=e.expos?"UNIT_RES":"UNIT_MISS";n=errorOprnd(t)}}if(n.dtype===dt.ERROR){return errorResult(e,n)}if(e.resulttemplate&&e.resulttemplate.indexOf("!")>-1&&!(n.dtype===dt.DATAFRAME||n.dtype&dt.MAP||isMatrix(n)||n.dtype&dt.TUPLE)){return errorResult(e,errorOprnd("BAD_DISPLAY"))}if(n.dtype&dt.RATIONAL){n.value=isVector(n)?n.value.map((e=>Rnl.normalize(e))):isMatrix(n)?n.value.map((e=>e.map((e=>Rnl.normalize(e))))):n.dtype===dt.RATIONAL?Rnl.normalize(n.value):n.value}else if(n.dtype===dt.COMPLEX){n.value=[Rnl.normalize(n.value[0]),Rnl.normalize(n.value[1])]}e.dtype=n.dtype;const a=e.factor&&(e.factor!==1||e.gauge);if(n.dtype&dt.DATAFRAME||typeof e.resultdisplay==="string"&&e.resultdisplay.indexOf("!")>-1){e.unit=n.unit}else if(r&&n.dtype&dt.RATIONAL){if(!a&unitsAreCompatible(n.unit.expos,allZeros)){e.factor=Rnl.one;e.gauge=Rnl.zero;e.expos=allZeros}n.value={plain:isMatrix(n)?Matrix.convertFromBaseUnits({value:n.value,dtype:n.dtype},e.gauge,e.factor):n.dtype&dt.MAP?map.convertFromBaseUnits(n.value,e.gauge,e.factor):Rnl.subtract(Rnl.divide(n.value,e.factor),e.gauge),inBaseUnits:n.value};e.dtype+=dt.QUANTITY;e.expos=n.unit.expos}else if(a){n.value={plain:n.value,inBaseUnits:isMatrix(n)&&n.dtype&dt.MAP?mapMap(n.value,(t=>t.map((t=>Rnl.multiply(Rnl.add(t,e.gauge),e.factor))))):isMatrix(n)?Matrix.convertToBaseUnits({value:n.value,dtype:n.dtype},e.gauge,e.factor):n.dtype&dt.MAP?mapMap(n.value,(t=>Rnl.multiply(Rnl.add(t,e.gauge),e.factor))):Rnl.multiply(Rnl.add(n.value,e.gauge),e.factor)};e.dtype+=dt.QUANTITY}else if(n.dtype&dt.RATIONAL||n.dtype&dt.COMPLEX){e.expos=allZeros}if(n.value){e.value=n.value}return[e,n]};const evaluateDrawing=(e,t,r="1,000,000.")=>{const n=e.value;const a=[];for(let e=0;e<n.parameters.length;e++){const o=n.parameters[e];a.push(evalRpn("¿"+o,t,r,false,{}))}const o=evalCustomFunction(n,a,r,false,{});if(o.dtype===dt.ERROR){e.error=true;e.tex="\\color{firebrick}\\text{"+o.value+"}";e.value=null;e.dtype=dt.ERROR}else{e.resultdisplay=o.value;delete e.resultdisplay.temp}return e};const evaluate=(e,t,r="1,000,000.")=>{e.tex=e.template;e.alt=e.altTemplate;const n=/\?\?|!!|%%|@@|¡¡/.test(e.resulttemplate);const a=t.format?t.format.value:"h15";if(e.tex.indexOf("〖")>-1){const o=plugValsIntoEcho(e.tex,t,n,a,r);if(o.dtype&&o.dtype===dt.ERROR){const[t,r]=errorResult(e,o);return t}else{e.tex=o}}if(e.rpn){let o=evalRpn(e.rpn,t,r,n);if(o.dtype===dt.ERROR){[e,o]=errorResult(e,o);return e}let i;[e,i]=conditionResult(e,o,n);if(e.error){return e}e=formatResult(e,i,a,r,n)}return e};const numberRegEx$3=new RegExp(Rnl.numberPattern);const unitRegEx$1=/('[^']+'|[°ΩÅK])$/;const numStr="(-?(?:0x[0-9A-Fa-f]+|[0-9]+(?: [0-9]+\\/[0-9]+|(?:\\.[0-9]+)?(?:e[+-]?[0-9]+|%)?)))";const nonNegNumStr="(0x[0-9A-Fa-f]+|[0-9]+(?: [0-9]+\\/[0-9]+|(?:\\.[0-9]+)?(?:e[+-]?[0-9]+|%)?))";const complexRegEx=new RegExp("^"+numStr+"(?: *([+-]) *j +"+nonNegNumStr+"|∠"+numStr+"(°)?)");const valueFromLiteral=(e,t,r)=>{let n="";let a="";const o=unitRegEx$1.exec(e);if(o){n=o[0].replace(/'/g,"").trim();e=e.slice(0,-o[0].length).trim();a=unitTeXFromString(n)}if(/^[({[].* to /.test(e)){return[0,null,dt.ERROR,""]}else if(e==="true"||e==="false"){return[Boolean(e),null,dt.BOOLEAN,`\\mathord{\\text{${e}}}`]}else if(/^\x22.+\x22/.test(e)){if(t==="format"){return parseFormatSpec(e.slice(1,-1).trim())}else{const t=parse(e,r);return[e,undefined,dt.STRING,t]}}else if(/^[([]/.test(e)){const[t,o]=parse(e,r,true);const i=evalRpn(o,{},r,false,{});let l=i.dtype&dt.RATIONAL?allZeros:null;let s=i.dtype;if(n){l=n;s+=dt.QUANTITY;return[i.value,l,s,t+"\\,"+a]}else{return[i.value,l,s,t]}}else if(/^``/.test(e)){e=tablessTrim(e.slice(2,-2));const t=DataFrame.dataFrameFromCSV(e,{});if(t.dtype===dt.DATAFRAME){return[t.value,t.unit,dt.DATAFRAME,DataFrame.display(t.value,"h3",r)]}else{if(n){t.unit=n;t.dtype=dt.MAP+dt.RATIONAL+dt.QUANTITY}return[t.value,t.unit,t.dtype,map.display(t,"h3",r)+"\\;"+a]}}else if(complexRegEx.test(e)){const t=parse(e,r);const n=e.match(complexRegEx);let a;let o;if(n[3]){a=Rnl.fromString(n[1]);o=Rnl.fromString(n[3]);if(n[2]==="-"){o=Rnl.negate(o)}}else{const e=Rnl.fromString(n[1]);let t=Rnl.fromString(n[4]);if(n[5]){t=Rnl.divide(Rnl.multiply(t,Rnl.pi),Rnl.fromNumber(180))}a=Rnl.multiply(e,Rnl.fromNumber(Math.cos(Rnl.toNumber(t))));o=Rnl.multiply(e,Rnl.fromNumber(Math.sin(Rnl.toNumber(t))))}return[[a,o],allZeros,dt.COMPLEX,t]}else if(e.match(numberRegEx$3)){const t=parse(e,r);if(n){return[Rnl.fromString(e),n,dt.RATIONAL+dt.QUANTITY,t+"\\;"+a]}else{return[Rnl.fromString(e),allZeros,dt.RATIONAL,t]}}else{return[0,null,dt.ERROR,""]}};const improveQuantities=(e,t)=>{if(e.name&&e.value&&e.dtype&dt.QUANTITY){const r=e.unit===undefined?{name:"",factor:Rnl.one,gauge:Rnl.zero,log:"",expos:allZeros}:typeof e.unit==="string"?unitFromUnitName(e.unit,t):e.unit;if(r.dtype&&r.dtype===dt.ERROR){e.tex+=" \\color{firebrick}{\\text{"+r.value+"}}";e.alt+=r.value;return e}e.expos=r.expos;if(Rnl.isRational(e.value)){e.value={plain:e.value,inBaseUnits:Rnl.multiply(Rnl.add(e.value,r.gauge),r.factor)}}else if(isMatrix(e)){e.value={plain:e.value,inBaseUnits:Matrix.convertToBaseUnits(e,r.gauge,r.factor)}}else if(e.dtype&dt.MAP){const t=clone(e.value);const n=map.convertToBaseUnits(t,r.gauge,r.factor);e.value={plain:t,inBaseUnits:n};e.unit={expos:r.expos}}}if(e.rpn&&!e.value){if(e.unit){const r=e.unit?unitFromUnitName(e.unit,t):{factor:1,gauge:0,expos:allZeros};e.factor=r.factor;e.gauge=r.gauge;e.expos=r.expos}}};const isValidIdentifier$1=/^(?:[A-Za-zıȷ\u0391-\u03C9\u03D5\u210B\u210F\u2110\u2112\u2113\u211B\u212C\u2130\u2131\u2133]|(?:\uD835[\uDC00-\udc33\udc9c-\udcb5]))[A-Za-z0-9_\u0391-\u03C9\u03D5\u0300-\u0308\u030A\u030C\u0332\u20d0\u20d1\u20d6\u20d7\u20e1]*′*$/;const keywordRegEx=/^(if|else if|else|return|raise|while|for|break|echo|end)\b/;const drawCommandRegEx=/^(title|frame|view|axes|grid|stroke|strokewidth|strokedasharray|fill|fontsize|fontweight|fontstyle|fontfamily|marker|line|path|plot|curve|rect|circle|ellipse|arc|text|dot|leader|dimension)\b/;const functionRegEx=/^(?:private +)?function (?:[A-Za-zıȷ\u0391-\u03C9\u03D5\u210B\u210F\u2110\u2112\u2113\u211B\u212C\u2130\u2131\u2133]|(?:\uD835[\uDC00-\udc33\udc9c-\udcb5]))[A-Za-z0-9_\u0391-\u03C9\u03D5\u0300-\u0308\u030A\u030C\u0332\u20d0\u20d1\u20d6\u20d7\u20e1]*′*\(/;const drawRegEx=/^draw\(/;const startSvgRegEx=/^startSvg\(\)/;const lexRegEx=/"[^"]*"|``.*|`[^`]*`|'[^']*'|#|[^"`'#]+/g;const testForStatement=e=>{const t=e.indexOf("=");if(t===-1){return false}const r=e.slice(0,t).trim();if(isValidIdentifier$1.test(r)){return true}if(r.indexOf(",")===-1){return false}let n=true;const a=r.split(",");a.forEach((e=>{if(!isValidIdentifier$1.test(e.trim())){n=false}}));return n};const stripComment=e=>{const t=arrayOfRegExMatches(lexRegEx,e);for(let r=0;r<t.length;r++){if(t[r].value==="#"){e=e.slice(0,t[r].index);break}}return e.trim()};const scanModule=(e,t)=>{const r=Object.create(null);const n=e.split(/\r?\n/g);for(let e=0;e<n.length;e++){const a=stripComment(n[e]);if(a.length===0){continue}if(functionRegEx.test(a)||drawRegEx.test(a)){const[a,o]=scanFunction(n,t,e);if(a.dtype&&a.dtype===dt.ERROR){return a}r[a.name]=a;e=o}else if(testForStatement(a)){const[a,o]=scanAssignment(n,t,e);r[a.name]=a;e=o}}return{value:r,unit:null,dtype:dt.MODULE}};const handleCSV=(e,t,r)=>{for(let n=r+1;n<t.length;n++){const r=t[n].trim();if(r.length===0){continue}e+="\n"+r;if(r.slice(-2)==="``"){return[e,n]}}};const scanFunction=(e,t,r)=>{const n=stripComment(e[r]);let a=n.charAt(0)==="d";const o=n.indexOf("(");let i="";if(a){i="draw"}else{const e=n.indexOf("function");i=n.slice(e+8,o).trim()}const l=/^private /.test(n);const s=n.slice(o+1,-1).trim();const m=s.length===0?[]:s.split(/, */g);const u={name:i,dtype:a?dt.DRAWING:dt.MODULE,isPrivate:l,parameters:m,statements:[]};const c=[];let d="";let p=false;let h="";let f="";let b=false;for(let n=r+1;n<e.length;n++){let r=stripComment(e[n]);if(r.length===0){continue}if(p){const e=h.slice(-1);r=e===";"&&"})]".indexOf(r.charAt(0))>-1?h.slice(0,-1).trim()+r:e===";"||e===","?h+" "+r:h+r}if(/[{([,;]$/.test(r)){p=true;h=r;continue}else if(e.length>n+1&&/^\s*[+\-)\]}]/.test(e[n+1])){p=true;h=r;continue}const o=keywordRegEx.exec(r);if(o){f=o[0];d=r.slice(f.length).trim();if(d.length>0&&/^``/.test(d)){[d,n]=handleCSV(d,e,n)}}else if(a&&drawCommandRegEx.test(r)){f="svg";d=r.indexOf(" ")===-1?r+"(svg)":r.replace(" ","(svg, ")+")";b=true}else{if(testForStatement(r)){const t=r.indexOf("=");f=r.slice(0,t-1).trim();d=r.slice(t+1).trim();if(/^``/.test(d)){[d,n]=handleCSV(d,e,n)}if(startSvgRegEx.test(d)){a=true}b=true}else{return[errorOprnd("FUNC_LINE",i+", line "+(n+1)),n]}}let l="";if(d){[,l]=parse(d,t,true)}const s=b?"statement":f;if(b&&/[,;]/.test(f)){f=f.split(/[,;]/).map((e=>e.trim()))}u.statements.push({name:f,rpn:l,stype:s});if(s==="if"||s==="while"||s==="for"){c.push({type:s,statementNum:u.statements.length-1});if(s==="for"&&l.indexOf("j ")===0){return[errorOprnd("BAD_J")]}}else if(s==="end"){if(c.length===0){if(a){u.statements.splice(-1,0,{name:"return",rpn:"¿svg",stype:"return"})}return[u,n]}const e=c[c.length-1];u.statements[e.statementNum].endOfBlock=u.statements.length-1;c.pop()}b=false;p=false;h="";f="";d=""}return[errorOprnd("END_MISS",i),0]};const scanAssignment=(e,t,r)=>{let n=false;let a="";let o=r;for(let t=r;t<e.length;t++){const r=stripComment(e[t]);if(r.length===0){continue}if(n){a=a.slice(-1)===";"&&"})]".indexOf(r.charAt(0))>-1?a.slice(0,-1).trim()+r:a+r}else{a=r}if(/[{([,;]$/.test(a)){n=true}else if(e.length>t+1&&/^\s*[+\-)\]}]/.test(e[t+1])){n=true}else{o=t;break}}const i=a.indexOf("=");let l=a.slice(0,i).trim();if(/[,;]/.test(l)){l=l.split(/[,;]/).map((e=>e.trim()))}const s=a.slice(i+1).trim();const[m,u,c,d]=valueFromLiteral(s,l,t);const p={name:l,value:m,unit:u,dtype:c,resultDisplay:d};improveQuantities(p,{});return[p,o]};const containsOperator=/[+\-×·*∘⌧/^%‰&√!¡|‖&=<>≟≠≤≥∈∉⋐∧∨⊻¬]|\xa0(function|modulo|\\atop|root|sum|abs|cos|sin|tan|acos|asin|atan|sec|csc|cot|asec|acsc|acot|exp|log|ln|log10|log2|cosh|sinh|tanh|sech|csch|coth|acosh|asinh|atanh|asech|acsch|acoth|Gamma|Γ|logGamma|logΓ|logFactorial|cosd|sind|tand|acosd|asind|atand|secd|cscd|cotd|asecd|acscd|acotd|Re|Im|argument|chr|round|sqrt|sign|\?{}|%|⎾⏋|⎿⏌|\[\]|\(\))\xa0/;const mustDoCalculation=/^(``.+``|[$$£¥\u20A0-\u20CF]?(\?{1,2}|@{1,2}|%{1,2}|!{1,2})[^=!(?@%!{})]*)$/;const assignDataFrameRegEx=/^[^=]+=\s*``/;const currencyRegEx=/^[$£¥\u20A0-\u20CF]/;const isValidIdentifier$2=/^(?:[A-Za-zıȷ\u0391-\u03C9\u03D5\u210B\u210F\u2110\u2112\u2113\u211B\u212C\u2130\u2131\u2133]|(?:\uD835[\uDC00-\udc33\udc9c-\udcb5]))[A-Za-z0-9_\u0391-\u03C9\u03D5\u0300-\u0308\u030A\u030C\u0332\u20d0\u20d1\u20d6\u20d7\u20e1]*′*$/;const matrixOfNames=/^[([](?:[A-Za-zıȷ\u0391-\u03C9\u03D5\u210B\u210F\u2110\u2112\u2113\u211B\u212C\u2130\u2131\u2133]|(?:\uD835[\uDC00-\udc33\udc9c-\udcb5]))[A-Za-z0-9_\u0391-\u03C9\u03D5\u0300-\u0308\u030A\u030C\u0332\u20d0\u20d1\u20d6\u20d7\u20e1]*′*[,;].+[)\]]$/;const isKeyWord=/^(π|true|false|root|if|else|and|or|otherwise|modulo|for|while|break|return|raise)$/;const shortcut=(e,t)=>{const r=parse(e,t);return{entry:e,tex:r,alt:e}};const prepareStatement=(e,t="1,000,000.")=>{let r="";let n="";let a="";let o=false;let i=false;let l=false;let s=false;let m=false;let u=0;let c="";let d="";let p="";let h="";let f="";let b=false;let g;let y;let x;let $="";const v=drawRegEx.test(e);if(functionRegEx.test(e)||v){let r="";if(v){r="draw"}else{const t=e.indexOf("function");const n=e.indexOf("(");r=e.slice(t+8,n).trim()}const n=scanModule(e,t);const a=n.dtype&&n.dtype===dt.ERROR;if(a){window.alert(n.value)}const o={entry:e,name:r,value:a?n.value:n.value[r],dtype:a?dt.ERROR:r==="draw"?dt.DRAWING:dt.MODULE,error:a};return o}$=e;const S=assignDataFrameRegEx.test($);const w=S?$.indexOf("=")+1:$.lastIndexOf("=")+1;if(w>1){n=$.substring(0,w-1).replace(/ +$/,"");if(n.length>0&&/;\s*$/.test(n)){m=true;n=n.replace(/;\s*$/,"")}n=n.trim();a=$.substring(w).trim();if(mustDoCalculation.test(a)){o=true;i=a.indexOf("!")>-1;l=a.indexOf("@")>-1;s=a.indexOf("%")>-1;u=n.indexOf("=")+1;if(u){r=n.slice(0,u-1).trim();c=n.substring(u).trim();if(matrixOfNames.test(r)){r=r.slice(1,-1).trim()}if(/[,;]/.test(r)){const e=r.split(/[,;]/);for(let r=0;r<e.length;r++){const n=e[r].trim();if(isKeyWord.test(n)||!isValidIdentifier$2.test(n)){return shortcut($,t)}}f=e.map((e=>e.trim()))}else{if(isValidIdentifier$2.test(r)&&!isKeyWord.test(r)){f=r}else{c=n}}}else{c=n}}else if(S){f=n;c=a}else if(isValidIdentifier$2.test(n)&&!isKeyWord.test(n)){f=n;if(a===""){const e=parse($,t);return{entry:$,tex:e,alt:$}}}else{return shortcut($,t)}}else{return shortcut($,t)}if(c.length>0){if(/^\s*fetch\(/.test(c)){d=""}else{[d,p]=parse(c,t,true);if(i||l||d.indexOf("〖")===-1||/\u00a0for\u00a0/.test(p)){d=""}else if(s){d=""}else{if(containsOperator.test(" "+p+" ")){d="{\\color{#0000ff}"+d+"}"}else{d=""}}}}if(currencyRegEx.test(a)){b=true;y=a.charAt(0)}if(o){g=null;if(!b){y=a.replace(/[?@%!']/g,"").trim()}if(i){h=a}else{if(y){h=a.trim().replace(/([^ ?!@%]+)$/,"'"+"$1"+"'");h=parse(h,t).replace(/\\%/g,"%").replace("@ @","@@")}else{h=parse(a,t).replace(/\\%/g,"%").replace("@ @","@@")}h=h.replace(/\\text\{(\?\??|%%?)\}/,"$1");h=h.replace(/([?%]) ([?%])/,"$1"+"$2")}}else{[g,y,x,h]=valueFromLiteral(a,f,t);if(x===dt.ERROR){return shortcut($,t)}p=""}let R="";let M="";if(!l){R=parse(n,t);if(m){R="\\begin{aligned}"+R;const e=R.indexOf("=");R=R.slice(0,e)+"&"+R.slice(e)}const e=m?"\\\\ &":"";M=n;if(d.length>0&&!s){R+=` ${e}= `+d}if(!i){R+=" "+(m?"\\\\&":"")+"= "+h;M+=" = "+a}if(m){R+="\\end{aligned}"}}const A={entry:$,template:R,altTemplate:M,resultdisplay:h,dtype:x,error:false};if(f){A.name=f}if(o){A.resulttemplate=h;A.altresulttemplate=a}else{A.tex=R;A.alt=M}if(p){A.rpn=p}if(g){A.value=g}if(y){if(Array.isArray(y)){A.expos=y}else{A.unit=y}}return A};const fetchRegEx=/^(?:[A-Za-zıȷ\u0391-\u03C9\u03D5\u210B\u210F\u2110\u2112\u2113\u211B\u212C\u2130\u2131\u2133]|(?:\uD835[\uDC00-\udc33\udc9c-\udcb5]))[A-Za-z0-9_\u0391-\u03C9\u03D5\u0300-\u0308\u030A\u030C\u0332\u20d0\u20d1\u20d6\u20d7\u20e1]*′* *= *(?:fetch|import)\(/;const importRegEx=/^[^=]+= *import/;const fileErrorRegEx=/^Error while reading file. Status Code: \d*$/;const textRegEx=/\\text{[^}]+}/;const urlFromEntry=e=>{const t=e.replace(/^[^()]+\("?/,"");return t.replace(/"?\).*$/,"").trim()};const processFetchedString=(e,t,r,n)=>{const a=Object.create(null);a.entry=e;a.name=e.replace(/=.+$/,"").trim();let o=parse(e.replace(/\s*=\s*[$$£¥\u20A0-\u20CF]?(?:!{1,2}).*$/,""),n);const i=urlFromEntry(e);if(/\.(?:csv|txt)$/.test(i)){const e=i.replace(/.+\//,"");const t=textRegEx.exec(o);o=o.slice(0,t.index)+"\\text{"+addTextEscapes(e)+"})"}a.tex=o;a.alt=e;if(t==="File not found."||fileErrorRegEx.test(t)){a.dtype=dt.ERROR;a.tex+=` = \\red{\\text{${t}}}`;a.alt=" = "+t;a.value=null;return a}const l=importRegEx.test(e)?scanModule(t,n):DataFrame.dataFrameFromCSV(t,r);a.value=l.value;a.dtype=l.dtype;a.unit=l.unit;a.isFetch=true;if(l.dtype===dt.MODULE&&/^importedParameters *=/.test(e)){let e="\\begin{matrix}";let t=0;Object.entries(l.value).forEach((([n,a])=>{r[n]=a;e+=parse(a.name)+" & ";t+=1;if(t===5){e=e.slice(0,-1)+"\\\\ ";t=0}}));e=e.slice(0,t===0?-2:-1)+"\\end{matrix}";a.tex=a.tex.replace("\\mathrm{importedParameters}",e)}return a};const workAsync=(e,t,r,n,a,o,i,l)=>{const s=e.state.doc;const m=s.attrs.inDraftMode;const u=s.attrs.decimalFormat;Promise.all(i.map((e=>fetch(e,{method:"GET",headers:{"Content-Type":"text/plain;charset=UTF-8"},mode:"cors"})))).then((e=>Promise.all(e.map((e=>{if(e.status!==200&&e.status!==0){return e.status===404?"File not found.":"Error while reading file. Status Code: "+e.status}return e.text()}))))).then((i=>{const c=e.state;if(c.selection.to===a+1){c.selection=c.selection.constructor.near(c.doc.resolve(a+1))}const d=c.tr;for(let e=0;e<i.length;e++){const a=l[e];const c=r?s.nodeAt(a).attrs.entry:n.entry;const p=processFetchedString(c,i[e],o,u);p.inDraftMode=m;d.replaceWith(a,a+1,t.createAndFill(p));if(p.name){insertOneHurmetVar(o,p,u)}}try{proceedAfterFetch(e,t,r,n,a,o,d)}catch(r){console.log(r);const o=n.template.indexOf(n.resultdisplay);n.tex=n.template.slice(0,o)+"\\text{"+r+"}";d.replaceWith(a,a+1,t.createAndFill(n));d.setSelection(e.state.selection.constructor.near(d.doc.resolve(a+1)));e.dispatch(d);e.focus()}}))};const proceedAfterFetch=(e,t,r,n,a,o,i)=>{const l=e.state.doc;const s=l.attrs.decimalFormat;if(!r&&(n.name||n.rpn||n.dtype&&n.dtype===dt.DRAWING)){l.nodesBetween(0,a,(function(e){if(e.type.name==="calculation"){const t=e.attrs;if(t.name){if(t.name==="importedParameters"){Object.entries(t.value).forEach((([e,t])=>{o[e]=t}))}else{insertOneHurmetVar(o,t,s)}}}}));l.nodesBetween(a+1,l.content.size,(function(e,t){if(e.type.name==="calculation"&&e.attrs.dtype===dt.MODULE){insertOneHurmetVar(o,e.attrs,s)}}));if(!fetchRegEx.test(n.entry)){let e=clone(n);improveQuantities(e,o);if(e.rpn||n.dtype&&n.dtype===dt.DRAWING){e=e.dtype&&e.dtype===dt.DRAWING?evaluateDrawing(e,o,s):evaluate(e,o,s)}if(e.name){insertOneHurmetVar(o,e,s)}e.displayMode=n.displayMode;i.replaceWith(a,a+1,t.createAndFill(e))}}const m=r?0:a+1;l.nodesBetween(m,l.content.size,(function(e,n){if(e.type.name==="calculation"){const a=r?!fetchRegEx.test(e.attrs.entry):!e.attrs.isFetch;if(a){const a=e.attrs.entry;let l=r?prepareStatement(a,s):clone(e.attrs);l.displayMode=e.attrs.displayMode;const m=l.dtype&&l.dtype===dt.DRAWING&&(l.rpn||(l.value.parameters.length>0||r));if(r||l.rpn||m||l.name&&!(o[l.name]&&o[l.name].isFetch)){if(r){improveQuantities(l,o)}if(l.rpn||m){l=l.rpn?evaluate(l,o,s):evaluateDrawing(l,o,s)}if(l.name){insertOneHurmetVar(o,l,s)}if(r||l.rpn||m){i.replaceWith(n,n+1,t.createAndFill(l))}}}else if(e.attrs.name&&!(r&&e.attrs.isFetch)){if(e.attrs.name){if(e.attrs.name==="importedParameters"){Object.entries(e.attrs.value).forEach((([e,t])=>{o[e]=t}))}else{insertOneHurmetVar(o,e.attrs,s)}}}}}));if(!r){i.setSelection(e.state.selection.constructor.near(i.doc.resolve(a+1)))}e.dispatch(i);e.focus()};function updateCalculations(e,t,r=false,n,a){const o=e.state.doc;if(!(r||n.name||n.rpn||n.dtype&&n.dtype===dt.DRAWING)){const r=e.state;if(r.selection.to===a+1){r.selection=r.selection.constructor.near(r.doc.resolve(a+1))}const o=r.tr;try{o.replaceWith(a,a+1,t.createAndFill(n))}catch(e){}finally{e.dispatch(o);e.focus()}return}const i=Object.create(null);i.format={value:"h15"};const l=[];const s=[];if(!r){const e=n.entry;if(fetchRegEx.test(e)){l.push(urlFromEntry(e));s.push(a)}}else{o.nodesBetween(0,o.content.size,(function(e,t){if(e.type.name==="calculation"&&!e.attrs.value){const r=e.attrs.entry;if(fetchRegEx.test(r)){l.push(urlFromEntry(r));s.push(t)}else if(/^function /.test(r)){e.attrs=prepareStatement(r,o.attrs.decimalFormat);insertOneHurmetVar(i,e.attrs,o.attrs.decimalFormat)}}else if(e.attrs.isFetch||e.attrs.dtype&&e.attrs.dtype===dt.MODULE){insertOneHurmetVar(i,e.attrs,o.attrs.decimalFormat)}}))}if(l.length>0){workAsync(e,t,r,n,a,i,l,s)}else{const o=e.state;if(o.selection.to===a+1){o.selection=o.selection.constructor.near(o.doc.resolve(a+1))}const l=o.tr;try{proceedAfterFetch(e,t,r,n,a,i,l)}catch(r){console.log(r);const o=n.template.indexOf(n.resultdisplay);n.tex=n.template.slice(0,o)+"\\text{"+r+"}";l.replaceWith(a,a+1,t.createAndFill(n));l.setSelection(e.state.selection.constructor.near(l.doc.resolve(a+1)));e.dispatch(l);e.focus()}}}const calculate=(e,t={},r=false,n="1,000,000.")=>{let a=prepareStatement(e,n);improveQuantities(a,t);if(a.rpn){a=evaluate(clone(a),t,n)}else if(a.dtype&&a.dtype===dt.DRAWING){a=evaluateDrawing(a,t,n)}if(a.name){insertOneHurmetVar(t,a)}return a.dtype&&a.dtype===dt.DRAWING?a:r?a.alt:a.tex};class SourceLocation{constructor(e,t,r){this.lexer=void 0;this.start=void 0;this.end=void 0;this.lexer=e;this.start=t;this.end=r}static range(e,t){if(!t){return e&&e.loc}else if(!e||!e.loc||!t.loc||e.loc.lexer!==t.loc.lexer){return null}else{return new SourceLocation(e.loc.lexer,e.loc.start,t.loc.end)}}}class Token{constructor(e,t){this.text=void 0;this.loc=void 0;this.noexpand=void 0;this.treatAsRelax=void 0;this.text=e;this.loc=t}range(e,t){return new Token(t,SourceLocation.range(this,e))}}class ParseError{constructor(e,t){this.position=void 0;var r="KaTeX parse error: "+e;var n;var a=t&&t.loc;if(a&&a.start<=a.end){var o=a.lexer.input;n=a.start;var i=a.end;if(n===o.length){r+=" at end of input: "}else{r+=" at position "+(n+1)+": "}var l=o.slice(n,i).replace(/[^]/g,"$&̲");var s;if(n>15){s="…"+o.slice(n-15,n)}else{s=o.slice(0,n)}var m;if(i+15<o.length){m=o.slice(i,i+15)+"…"}else{m=o.slice(i)}r+=s+l+m}var u=new Error(r);u.name="ParseError";u.__proto__=ParseError.prototype;u.position=n;return u}}ParseError.prototype.__proto__=Error.prototype;var contains=function e(t,r){return t.indexOf(r)!==-1};var deflt=function e(t,r){return t===undefined?r:t};var uppercase=/([A-Z])/g;var hyphenate=function e(t){return t.replace(uppercase,"-$1").toLowerCase()};var ESCAPE_LOOKUP={"&":"&amp;",">":"&gt;","<":"&lt;",'"':"&quot;","'":"&#x27;"};var ESCAPE_REGEX=/[&><"']/g;function escape(e){return String(e).replace(ESCAPE_REGEX,(e=>ESCAPE_LOOKUP[e]))}var getBaseElem=function e(t){if(t.type==="ordgroup"){if(t.body.length===1){return e(t.body[0])}else{return t}}else if(t.type==="color"){if(t.body.length===1){return e(t.body[0])}else{return t}}else if(t.type==="font"){return e(t.body)}else{return t}};var isCharacterBox=function e(t){var r=getBaseElem(t);return r.type==="mathord"||r.type==="textord"||r.type==="atom"};var assert=function e(t){if(!t){throw new Error("Expected non-null, but got "+String(t))}return t};var protocolFromUrl=function e(t){var r=/^\s*([^\\/#]*?)(?::|&#0*58|&#x0*3a)/i.exec(t);return r!=null?r[1]:"_relative"};var utils={contains:contains,deflt:deflt,escape:escape,hyphenate:hyphenate,getBaseElem:getBaseElem,isCharacterBox:isCharacterBox,protocolFromUrl:protocolFromUrl};var SETTINGS_SCHEMA={displayMode:{type:"boolean",description:"Render math in display mode, which puts the math in "+"display style (so \\int and \\sum are large, for example), and "+"centers the math on the page on its own line.",cli:"-d, --display-mode"},output:{type:{enum:["htmlAndMathml","html","mathml"]},description:"Determines the markup language of the output.",cli:"-F, --format <type>"},leqno:{type:"boolean",description:"Render display math in leqno style (left-justified tags)."},fleqn:{type:"boolean",description:"Render display math flush left."},throwOnError:{type:"boolean",default:true,cli:"-t, --no-throw-on-error",cliDescription:"Render errors (in the color given by --error-color) ins"+"tead of throwing a ParseError exception when encountering an error."},errorColor:{type:"string",default:"#cc0000",cli:"-c, --error-color <color>",cliDescription:"A color string given in the format 'rgb' or 'rrggbb' "+"(no #). This option determines the color of errors rendered by the "+"-t option.",cliProcessor:e=>"#"+e},macros:{type:"object",cli:"-m, --macro <def>",cliDescription:"Define custom macro of the form '\\foo:expansion' (use "+"multiple -m arguments for multiple macros).",cliDefault:[],cliProcessor:(e,t)=>{t.push(e);return t}},minRuleThickness:{type:"number",description:"Specifies a minimum thickness, in ems, for fraction lines,"+" `\\sqrt` top lines, `{array}` vertical lines, `\\hline`, "+"`\\hdashline`, `\\underline`, `\\overline`, and the borders of "+"`\\fbox`, `\\boxed`, and `\\fcolorbox`.",processor:e=>Math.max(0,e),cli:"--min-rule-thickness <size>",cliProcessor:parseFloat},colorIsTextColor:{type:"boolean",description:"Makes \\color behave like LaTeX's 2-argument \\textcolor, "+"instead of LaTeX's one-argument \\color mode change.",cli:"-b, --color-is-text-color"},strict:{type:[{enum:["warn","ignore","error"]},"boolean","function"],description:"Turn on strict / LaTeX faithfulness mode, which throws an "+"error if the input uses features that are not supported by LaTeX.",cli:"-S, --strict",cliDefault:false},trust:{type:["boolean","function"],description:"Trust the input, enabling all HTML features such as \\url.",cli:"-T, --trust"},maxSize:{type:"number",default:Infinity,description:"If non-zero, all user-specified sizes, e.g. in "+"\\rule{500em}{500em}, will be capped to maxSize ems. Otherwise, "+"elements and spaces can be arbitrarily large",processor:e=>Math.max(0,e),cli:"-s, --max-size <n>",cliProcessor:parseInt},maxExpand:{type:"number",default:1e3,description:"Limit the number of macro expansions to the specified "+"number, to prevent e.g. infinite macro loops. If set to Infinity, "+"the macro expander will try to fully expand as in LaTeX.",processor:e=>Math.max(0,e),cli:"-e, --max-expand <n>",cliProcessor:e=>e==="Infinity"?Infinity:parseInt(e)},globalGroup:{type:"boolean",cli:false}};function getDefaultValue(e){if(e.default){return e.default}var t=e.type;var r=Array.isArray(t)?t[0]:t;if(typeof r!=="string"){return r.enum[0]}switch(r){case"boolean":return false;case"string":return"";case"number":return 0;case"object":return{}}}class Settings{constructor(e){this.displayMode=void 0;this.output=void 0;this.leqno=void 0;this.fleqn=void 0;this.throwOnError=void 0;this.errorColor=void 0;this.macros=void 0;this.minRuleThickness=void 0;this.colorIsTextColor=void 0;this.strict=void 0;this.trust=void 0;this.maxSize=void 0;this.maxExpand=void 0;this.globalGroup=void 0;e=e||{};for(var t in SETTINGS_SCHEMA){if(SETTINGS_SCHEMA.hasOwnProperty(t)){var r=SETTINGS_SCHEMA[t];this[t]=e[t]!==undefined?r.processor?r.processor(e[t]):e[t]:getDefaultValue(r)}}}reportNonstrict(e,t,r){var n=this.strict;if(typeof n==="function"){n=n(e,t,r)}if(!n||n==="ignore"){return}else if(n===true||n==="error"){throw new ParseError("LaTeX-incompatible input and strict mode is set to 'error': "+(t+" ["+e+"]"),r)}else if(n==="warn"){typeof console!=="undefined"&&console.warn("LaTeX-incompatible input and strict mode is set to 'warn': "+(t+" ["+e+"]"))}else{typeof console!=="undefined"&&console.warn("LaTeX-incompatible input and strict mode is set to "+("unrecognized '"+n+"': "+t+" ["+e+"]"))}}useStrictBehavior(e,t,r){var n=this.strict;if(typeof n==="function"){try{n=n(e,t,r)}catch(e){n="error"}}if(!n||n==="ignore"){return false}else if(n===true||n==="error"){return true}else if(n==="warn"){typeof console!=="undefined"&&console.warn("LaTeX-incompatible input and strict mode is set to 'warn': "+(t+" ["+e+"]"));return false}else{typeof console!=="undefined"&&console.warn("LaTeX-incompatible input and strict mode is set to "+("unrecognized '"+n+"': "+t+" ["+e+"]"));return false}}isTrusted(e){if(e.url&&!e.protocol){e.protocol=utils.protocolFromUrl(e.url)}var t=typeof this.trust==="function"?this.trust(e):this.trust;return Boolean(t)}}class Style{constructor(e,t,r){this.id=void 0;this.size=void 0;this.cramped=void 0;this.id=e;this.size=t;this.cramped=r}sup(){return styles[sup[this.id]]}sub(){return styles[sub[this.id]]}fracNum(){return styles[fracNum[this.id]]}fracDen(){return styles[fracDen[this.id]]}cramp(){return styles[cramp[this.id]]}text(){return styles[text$1[this.id]]}isTight(){return this.size>=2}}var D=0;var Dc=1;var T=2;var Tc=3;var S=4;var Sc=5;var SS=6;var SSc=7;var styles=[new Style(D,0,false),new Style(Dc,0,true),new Style(T,1,false),new Style(Tc,1,true),new Style(S,2,false),new Style(Sc,2,true),new Style(SS,3,false),new Style(SSc,3,true)];var sup=[S,Sc,S,Sc,SS,SSc,SS,SSc];var sub=[Sc,Sc,Sc,Sc,SSc,SSc,SSc,SSc];var fracNum=[T,Tc,S,Sc,SS,SSc,SS,SSc];var fracDen=[Tc,Tc,Sc,Sc,SSc,SSc,SSc,SSc];var cramp=[Dc,Dc,Tc,Tc,Sc,Sc,SSc,SSc];var text$1=[D,Dc,T,Tc,T,Tc,T,Tc];var Style$1={DISPLAY:styles[D],TEXT:styles[T],SCRIPT:styles[S],SCRIPTSCRIPT:styles[SS]};var scriptData=[{name:"latin",blocks:[[256,591],[768,879]]},{name:"cyrillic",blocks:[[1024,1279]]},{name:"armenian",blocks:[[1328,1423]]},{name:"brahmic",blocks:[[2304,4255]]},{name:"georgian",blocks:[[4256,4351]]},{name:"cjk",blocks:[[12288,12543],[19968,40879],[65280,65376]]},{name:"hangul",blocks:[[44032,55215]]}];function scriptFromCodepoint(e){for(var t=0;t<scriptData.length;t++){var r=scriptData[t];for(var n=0;n<r.blocks.length;n++){var a=r.blocks[n];if(e>=a[0]&&e<=a[1]){return r.name}}}return null}var allBlocks=[];scriptData.forEach((e=>e.blocks.forEach((e=>allBlocks.push(...e)))));function supportedCodepoint(e){for(var t=0;t<allBlocks.length;t+=2){if(e>=allBlocks[t]&&e<=allBlocks[t+1]){return true}}return false}var hLinePad=80;var sqrtMain=function e(t,r){return"M95,"+(622+t+r)+"\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl"+t/2.075+" -"+t+"\nc5.3,-9.3,12,-14,20,-14\nH400000v"+(40+t)+"H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM"+(834+t)+" "+r+"h400000v"+(40+t)+"h-400000z"};var sqrtSize1=function e(t,r){return"M263,"+(601+t+r)+"c0.7,0,18,39.7,52,119\nc34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120\nc340,-704.7,510.7,-1060.3,512,-1067\nl"+t/2.084+" -"+t+"\nc4.7,-7.3,11,-11,19,-11\nH40000v"+(40+t)+"H1012.3\ns-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232\nc-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1\ns-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26\nc-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z\nM"+(1001+t)+" "+r+"h400000v"+(40+t)+"h-400000z"};var sqrtSize2=function e(t,r){return"M983 "+(10+t+r)+"\nl"+t/3.13+" -"+t+"\nc4,-6.7,10,-10,18,-10 H400000v"+(40+t)+"\nH1013.1s-83.4,268,-264.1,840c-180.7,572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7\ns-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744\nc-10,12,-21,25,-33,39s-32,39,-32,39c-6,-5.3,-15,-14,-27,-26s25,-30,25,-30\nc26.7,-32.7,52,-63,76,-91s52,-60,52,-60s208,722,208,722\nc56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,-658.5\nc53.7,-170.3,84.5,-266.8,92.5,-289.5z\nM"+(1001+t)+" "+r+"h400000v"+(40+t)+"h-400000z"};var sqrtSize3=function e(t,r){return"M424,"+(2398+t+r)+"\nc-1.3,-0.7,-38.5,-172,-111.5,-514c-73,-342,-109.8,-513.3,-110.5,-514\nc0,-2,-10.7,14.3,-32,49c-4.7,7.3,-9.8,15.7,-15.5,25c-5.7,9.3,-9.8,16,-12.5,20\ns-5,7,-5,7c-4,-3.3,-8.3,-7.7,-13,-13s-13,-13,-13,-13s76,-122,76,-122s77,-121,77,-121\ns209,968,209,968c0,-2,84.7,-361.7,254,-1079c169.3,-717.3,254.7,-1077.7,256,-1081\nl"+t/4.223+" -"+t+"c4,-6.7,10,-10,18,-10 H400000\nv"+(40+t)+"H1014.6\ns-87.3,378.7,-272.6,1166c-185.3,787.3,-279.3,1182.3,-282,1185\nc-2,6,-10,9,-24,9\nc-8,0,-12,-0.7,-12,-2z M"+(1001+t)+" "+r+"\nh400000v"+(40+t)+"h-400000z"};var sqrtSize4=function e(t,r){return"M473,"+(2713+t+r)+"\nc339.3,-1799.3,509.3,-2700,510,-2702 l"+t/5.298+" -"+t+"\nc3.3,-7.3,9.3,-11,18,-11 H400000v"+(40+t)+"H1017.7\ns-90.5,478,-276.2,1466c-185.7,988,-279.5,1483,-281.5,1485c-2,6,-10,9,-24,9\nc-8,0,-12,-0.7,-12,-2c0,-1.3,-5.3,-32,-16,-92c-50.7,-293.3,-119.7,-693.3,-207,-1200\nc0,-1.3,-5.3,8.7,-16,30c-10.7,21.3,-21.3,42.7,-32,64s-16,33,-16,33s-26,-26,-26,-26\ns76,-153,76,-153s77,-151,77,-151c0.7,0.7,35.7,202,105,604c67.3,400.7,102,602.7,104,\n606zM"+(1001+t)+" "+r+"h400000v"+(40+t)+"H1017.7z"};var phasePath=function e(t){var r=t/2;return"M400000 "+t+" H0 L"+r+" 0 l65 45 L145 "+(t-80)+" H400000z"};var sqrtTall=function e(t,r,n){var a=n-54-r-t;return"M702 "+(t+r)+"H400000"+(40+t)+"\nH742v"+a+"l-4 4-4 4c-.667.7 -2 1.5-4 2.5s-4.167 1.833-6.5 2.5-5.5 1-9.5 1\nh-12l-28-84c-16.667-52-96.667 -294.333-240-727l-212 -643 -85 170\nc-4-3.333-8.333-7.667-13 -13l-13-13l77-155 77-156c66 199.333 139 419.667\n219 661 l218 661zM702 "+r+"H400000v"+(40+t)+"H742z"};var sqrtPath=function e(t,r,n){r=1e3*r;var a="";switch(t){case"sqrtMain":a=sqrtMain(r,hLinePad);break;case"sqrtSize1":a=sqrtSize1(r,hLinePad);break;case"sqrtSize2":a=sqrtSize2(r,hLinePad);break;case"sqrtSize3":a=sqrtSize3(r,hLinePad);break;case"sqrtSize4":a=sqrtSize4(r,hLinePad);break;case"sqrtTall":a=sqrtTall(r,hLinePad,n)}return a};var innerPath=function e(t,r){switch(t){case"⎜":return"M291 0 H417 V"+r+" H291z M291 0 H417 V"+r+" H291z";case"∣":return"M145 0 H188 V"+r+" H145z M145 0 H188 V"+r+" H145z";case"∥":return"M145 0 H188 V"+r+" H145z M145 0 H188 V"+r+" H145z"+("M367 0 H410 V"+r+" H367z M367 0 H410 V"+r+" H367z");case"⎟":return"M457 0 H583 V"+r+" H457z M457 0 H583 V"+r+" H457z";case"⎢":return"M319 0 H403 V"+r+" H319z M319 0 H403 V"+r+" H319z";case"⎥":return"M263 0 H347 V"+r+" H263z M263 0 H347 V"+r+" H263z";case"⎪":return"M384 0 H504 V"+r+" H384z M384 0 H504 V"+r+" H384z";case"⏐":return"M312 0 H355 V"+r+" H312z M312 0 H355 V"+r+" H312z";case"‖":return"M257 0 H300 V"+r+" H257z M257 0 H300 V"+r+" H257z"+("M478 0 H521 V"+r+" H478z M478 0 H521 V"+r+" H478z");default:return""}};var path={doubleleftarrow:"M262 157\nl10-10c34-36 62.7-77 86-123 3.3-8 5-13.3 5-16 0-5.3-6.7-8-20-8-7.3\n 0-12.2.5-14.5 1.5-2.3 1-4.8 4.5-7.5 10.5-49.3 97.3-121.7 169.3-217 216-28\n 14-57.3 25-88 33-6.7 2-11 3.8-13 5.5-2 1.7-3 4.2-3 7.5s1 5.8 3 7.5\nc2 1.7 6.3 3.5 13 5.5 68 17.3 128.2 47.8 180.5 91.5 52.3 43.7 93.8 96.2 124.5\n 157.5 9.3 8 15.3 12.3 18 13h6c12-.7 18-4 18-10 0-2-1.7-7-5-15-23.3-46-52-87\n-86-123l-10-10h399738v-40H218c328 0 0 0 0 0l-10-8c-26.7-20-65.7-43-117-69 2.7\n-2 6-3.7 10-5 36.7-16 72.3-37.3 107-64l10-8h399782v-40z\nm8 0v40h399730v-40zm0 194v40h399730v-40z",doublerightarrow:"M399738 392l\n-10 10c-34 36-62.7 77-86 123-3.3 8-5 13.3-5 16 0 5.3 6.7 8 20 8 7.3 0 12.2-.5\n 14.5-1.5 2.3-1 4.8-4.5 7.5-10.5 49.3-97.3 121.7-169.3 217-216 28-14 57.3-25 88\n-33 6.7-2 11-3.8 13-5.5 2-1.7 3-4.2 3-7.5s-1-5.8-3-7.5c-2-1.7-6.3-3.5-13-5.5-68\n-17.3-128.2-47.8-180.5-91.5-52.3-43.7-93.8-96.2-124.5-157.5-9.3-8-15.3-12.3-18\n-13h-6c-12 .7-18 4-18 10 0 2 1.7 7 5 15 23.3 46 52 87 86 123l10 10H0v40h399782\nc-328 0 0 0 0 0l10 8c26.7 20 65.7 43 117 69-2.7 2-6 3.7-10 5-36.7 16-72.3 37.3\n-107 64l-10 8H0v40zM0 157v40h399730v-40zm0 194v40h399730v-40z",leftarrow:"M400000 241H110l3-3c68.7-52.7 113.7-120\n 135-202 4-14.7 6-23 6-25 0-7.3-7-11-21-11-8 0-13.2.8-15.5 2.5-2.3 1.7-4.2 5.8\n-5.5 12.5-1.3 4.7-2.7 10.3-4 17-12 48.7-34.8 92-68.5 130S65.3 228.3 18 247\nc-10 4-16 7.7-18 11 0 8.7 6 14.3 18 17 47.3 18.7 87.8 47 121.5 85S196 441.3 208\n 490c.7 2 1.3 5 2 9s1.2 6.7 1.5 8c.3 1.3 1 3.3 2 6s2.2 4.5 3.5 5.5c1.3 1 3.3\n 1.8 6 2.5s6 1 10 1c14 0 21-3.7 21-11 0-2-2-10.3-6-25-20-79.3-65-146.7-135-202\n l-3-3h399890zM100 241v40h399900v-40z",leftbrace:"M6 548l-6-6v-35l6-11c56-104 135.3-181.3 238-232 57.3-28.7 117\n-45 179-50h399577v120H403c-43.3 7-81 15-113 26-100.7 33-179.7 91-237 174-2.7\n 5-6 9-10 13-.7 1-7.3 1-20 1H6z",leftbraceunder:"M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13\n 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688\n 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7\n-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z",leftgroup:"M400000 80\nH435C64 80 168.3 229.4 21 260c-5.9 1.2-18 0-18 0-2 0-3-1-3-3v-38C76 61 257 0\n 435 0h399565z",leftgroupunder:"M400000 262\nH435C64 262 168.3 112.6 21 82c-5.9-1.2-18 0-18 0-2 0-3 1-3 3v38c76 158 257 219\n 435 219h399565z",leftharpoon:"M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3\n-3.3 10.2-9.5 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5\n-18.3 3-21-1.3-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7\n-196 228-6.7 4.7-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40z",leftharpoonplus:"M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3-3.3 10.2-9.5\n 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5-18.3 3-21-1.3\n-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7-196 228-6.7 4.7\n-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40zM0 435v40h400000v-40z\nm0 0v40h400000v-40z",leftharpoondown:"M7 241c-4 4-6.333 8.667-7 14 0 5.333.667 9 2 11s5.333\n 5.333 12 10c90.667 54 156 130 196 228 3.333 10.667 6.333 16.333 9 17 2 .667 5\n 1 9 1h5c10.667 0 16.667-2 18-6 2-2.667 1-9.667-3-21-32-87.333-82.667-157.667\n-152-211l-3-3h399907v-40zM93 281 H400000 v-40L7 241z",leftharpoondownplus:"M7 435c-4 4-6.3 8.7-7 14 0 5.3.7 9 2 11s5.3 5.3 12\n 10c90.7 54 156 130 196 228 3.3 10.7 6.3 16.3 9 17 2 .7 5 1 9 1h5c10.7 0 16.7\n-2 18-6 2-2.7 1-9.7-3-21-32-87.3-82.7-157.7-152-211l-3-3h399907v-40H7zm93 0\nv40h399900v-40zM0 241v40h399900v-40zm0 0v40h399900v-40z",lefthook:"M400000 281 H103s-33-11.2-61-33.5S0 197.3 0 164s14.2-61.2 42.5\n-83.5C70.8 58.2 104 47 142 47 c16.7 0 25 6.7 25 20 0 12-8.7 18.7-26 20-40 3.3\n-68.7 15.7-86 37-10 12-15 25.3-15 40 0 22.7 9.8 40.7 29.5 54 19.7 13.3 43.5 21\n 71.5 23h399859zM103 281v-40h399897v40z",leftlinesegment:"M40 281 V428 H0 V94 H40 V241 H400000 v40z\nM40 281 V428 H0 V94 H40 V241 H400000 v40z",leftmapsto:"M40 281 V448H0V74H40V241H400000v40z\nM40 281 V448H0V74H40V241H400000v40z",leftToFrom:"M0 147h400000v40H0zm0 214c68 40 115.7 95.7 143 167h22c15.3 0 23\n-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69-70-101l-7-8h399905v-40H95l7-8\nc28.7-32 52-65.7 70-101 10.7-23.3 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 265.3\n 68 321 0 361zm0-174v-40h399900v40zm100 154v40h399900v-40z",longequal:"M0 50 h400000 v40H0z m0 194h40000v40H0z\nM0 50 h400000 v40H0z m0 194h40000v40H0z",midbrace:"M200428 334\nc-100.7-8.3-195.3-44-280-108-55.3-42-101.7-93-139-153l-9-14c-2.7 4-5.7 8.7-9 14\n-53.3 86.7-123.7 153-211 199-66.7 36-137.3 56.3-212 62H0V214h199568c178.3-11.7\n 311.7-78.3 403-201 6-8 9.7-12 11-12 .7-.7 6.7-1 18-1s17.3.3 18 1c1.3 0 5 4 11\n 12 44.7 59.3 101.3 106.3 170 141s145.3 54.3 229 60h199572v120z",midbraceunder:"M199572 214\nc100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14\n 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3\n 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0\n-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z",oiintSize1:"M512.6 71.6c272.6 0 320.3 106.8 320.3 178.2 0 70.8-47.7 177.6\n-320.3 177.6S193.1 320.6 193.1 249.8c0-71.4 46.9-178.2 319.5-178.2z\nm368.1 178.2c0-86.4-60.9-215.4-368.1-215.4-306.4 0-367.3 129-367.3 215.4 0 85.8\n60.9 214.8 367.3 214.8 307.2 0 368.1-129 368.1-214.8z",oiintSize2:"M757.8 100.1c384.7 0 451.1 137.6 451.1 230 0 91.3-66.4 228.8\n-451.1 228.8-386.3 0-452.7-137.5-452.7-228.8 0-92.4 66.4-230 452.7-230z\nm502.4 230c0-111.2-82.4-277.2-502.4-277.2s-504 166-504 277.2\nc0 110 84 276 504 276s502.4-166 502.4-276z",oiiintSize1:"M681.4 71.6c408.9 0 480.5 106.8 480.5 178.2 0 70.8-71.6 177.6\n-480.5 177.6S202.1 320.6 202.1 249.8c0-71.4 70.5-178.2 479.3-178.2z\nm525.8 178.2c0-86.4-86.8-215.4-525.7-215.4-437.9 0-524.7 129-524.7 215.4 0\n85.8 86.8 214.8 524.7 214.8 438.9 0 525.7-129 525.7-214.8z",oiiintSize2:"M1021.2 53c603.6 0 707.8 165.8 707.8 277.2 0 110-104.2 275.8\n-707.8 275.8-606 0-710.2-165.8-710.2-275.8C311 218.8 415.2 53 1021.2 53z\nm770.4 277.1c0-131.2-126.4-327.6-770.5-327.6S248.4 198.9 248.4 330.1\nc0 130 128.8 326.4 772.7 326.4s770.5-196.4 770.5-326.4z",rightarrow:"M0 241v40h399891c-47.3 35.3-84 78-110 128\n-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20\n 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7\n 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85\n-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\n 151.7 139 205zm0 0v40h399900v-40z",rightbrace:"M400000 542l\n-6 6h-17c-12.7 0-19.3-.3-20-1-4-4-7.3-8.3-10-13-35.3-51.3-80.8-93.8-136.5-127.5\ns-117.2-55.8-184.5-66.5c-.7 0-2-.3-4-1-18.7-2.7-76-4.3-172-5H0V214h399571l6 1\nc124.7 8 235 61.7 331 161 31.3 33.3 59.7 72.7 85 118l7 13v35z",rightbraceunder:"M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3\n 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237\n-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z",rightgroup:"M0 80h399565c371 0 266.7 149.4 414 180 5.9 1.2 18 0 18 0 2 0\n 3-1 3-3v-38c-76-158-257-219-435-219H0z",rightgroupunder:"M0 262h399565c371 0 266.7-149.4 414-180 5.9-1.2 18 0 18\n 0 2 0 3 1 3 3v38c-76 158-257 219-435 219H0z",rightharpoon:"M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3\n-3.7-15.3-11-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2\n-10.7 0-16.7 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58\n 69.2 92 94.5zm0 0v40h399900v-40z",rightharpoonplus:"M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3-3.7-15.3-11\n-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2-10.7 0-16.7\n 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58 69.2 92 94.5z\nm0 0v40h399900v-40z m100 194v40h399900v-40zm0 0v40h399900v-40z",rightharpoondown:"M399747 511c0 7.3 6.7 11 20 11 8 0 13-.8 15-2.5s4.7-6.8\n 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3 8.5-5.8 9.5\n-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3-64.7 57-92 95\n-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 241v40h399900v-40z",rightharpoondownplus:"M399747 705c0 7.3 6.7 11 20 11 8 0 13-.8\n 15-2.5s4.7-6.8 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3\n 8.5-5.8 9.5-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3\n-64.7 57-92 95-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 435v40h399900v-40z\nm0-194v40h400000v-40zm0 0v40h400000v-40z",righthook:"M399859 241c-764 0 0 0 0 0 40-3.3 68.7-15.7 86-37 10-12 15-25.3\n 15-40 0-22.7-9.8-40.7-29.5-54-19.7-13.3-43.5-21-71.5-23-17.3-1.3-26-8-26-20 0\n-13.3 8.7-20 26-20 38 0 71 11.2 99 33.5 0 0 7 5.6 21 16.7 14 11.2 21 33.5 21\n 66.8s-14 61.2-42 83.5c-28 22.3-61 33.5-99 33.5L0 241z M0 281v-40h399859v40z",rightlinesegment:"M399960 241 V94 h40 V428 h-40 V281 H0 v-40z\nM399960 241 V94 h40 V428 h-40 V281 H0 v-40z",rightToFrom:"M400000 167c-70.7-42-118-97.7-142-167h-23c-15.3 0-23 .3-23\n 1 0 1.3 5.3 13.7 16 37 18 35.3 41.3 69 70 101l7 8H0v40h399905l-7 8c-28.7 32\n-52 65.7-70 101-10.7 23.3-16 35.7-16 37 0 .7 7.7 1 23 1h23c24-69.3 71.3-125 142\n-167z M100 147v40h399900v-40zM0 341v40h399900v-40z",twoheadleftarrow:"M0 167c68 40\n 115.7 95.7 143 167h22c15.3 0 23-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69\n-70-101l-7-8h125l9 7c50.7 39.3 85 86 103 140h46c0-4.7-6.3-18.7-19-42-18-35.3\n-40-67.3-66-96l-9-9h399716v-40H284l9-9c26-28.7 48-60.7 66-96 12.7-23.333 19\n-37.333 19-42h-46c-18 54-52.3 100.7-103 140l-9 7H95l7-8c28.7-32 52-65.7 70-101\n 10.7-23.333 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 71.3 68 127 0 167z",twoheadrightarrow:"M400000 167\nc-68-40-115.7-95.7-143-167h-22c-15.3 0-23 .3-23 1 0 1.3 5.3 13.7 16 37 18 35.3\n 41.3 69 70 101l7 8h-125l-9-7c-50.7-39.3-85-86-103-140h-46c0 4.7 6.3 18.7 19 42\n 18 35.3 40 67.3 66 96l9 9H0v40h399716l-9 9c-26 28.7-48 60.7-66 96-12.7 23.333\n-19 37.333-19 42h46c18-54 52.3-100.7 103-140l9-7h125l-7 8c-28.7 32-52 65.7-70\n 101-10.7 23.333-16 35.7-16 37 0 .7 7.7 1 23 1h22c27.3-71.3 75-127 143-167z",tilde1:"M200 55.538c-77 0-168 73.953-177 73.953-3 0-7\n-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0\n 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0\n 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128\n-68.267.847-113-73.952-191-73.952z",tilde2:"M344 55.266c-142 0-300.638 81.316-311.5 86.418\n-8.01 3.762-22.5 10.91-23.5 5.562L1 120c-1-2-1-3-1-4 0-5 3-9 8-10l18.4-9C160.9\n 31.9 283 0 358 0c148 0 188 122 331 122s314-97 326-97c4 0 8 2 10 7l7 21.114\nc1 2.14 1 3.21 1 4.28 0 5.347-3 9.626-7 10.696l-22.3 12.622C852.6 158.372 751\n 181.476 676 181.476c-149 0-189-126.21-332-126.21z",tilde3:"M786 59C457 59 32 175.242 13 175.242c-6 0-10-3.457\n-11-10.37L.15 138c-1-7 3-12 10-13l19.2-6.4C378.4 40.7 634.3 0 804.3 0c337 0\n 411.8 157 746.8 157 328 0 754-112 773-112 5 0 10 3 11 9l1 14.075c1 8.066-.697\n 16.595-6.697 17.492l-21.052 7.31c-367.9 98.146-609.15 122.696-778.15 122.696\n -338 0-409-156.573-744-156.573z",tilde4:"M786 58C457 58 32 177.487 13 177.487c-6 0-10-3.345\n-11-10.035L.15 143c-1-7 3-12 10-13l22-6.7C381.2 35 637.15 0 807.15 0c337 0 409\n 177 744 177 328 0 754-127 773-127 5 0 10 3 11 9l1 14.794c1 7.805-3 13.38-9\n 14.495l-20.7 5.574c-366.85 99.79-607.3 139.372-776.3 139.372-338 0-409\n -175.236-744-175.236z",vec:"M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z",widehat1:"M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22\nc-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z",widehat2:"M1181 0h2l1171 176c6 0 10 5 10 11l-2 23c-1 6-5 10\n-11 10h-1L1182 67 15 220h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z",widehat3:"M1181 0h2l1171 236c6 0 10 5 10 11l-2 23c-1 6-5 10\n-11 10h-1L1182 67 15 280h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z",widehat4:"M1181 0h2l1171 296c6 0 10 5 10 11l-2 23c-1 6-5 10\n-11 10h-1L1182 67 15 340h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z",widecheck1:"M529,159h5l519,-115c5,-1,9,-5,9,-10c0,-1,-1,-2,-1,-3l-4,-22c-1,\n-5,-5,-9,-11,-9h-2l-512,92l-513,-92h-2c-5,0,-9,4,-11,9l-5,22c-1,6,2,12,8,13z",widecheck2:"M1181,220h2l1171,-176c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\n-11,-10h-1l-1168,153l-1167,-153h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z",widecheck3:"M1181,280h2l1171,-236c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\n-11,-10h-1l-1168,213l-1167,-213h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z",widecheck4:"M1181,340h2l1171,-296c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\n-11,-10h-1l-1168,273l-1167,-273h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z",baraboveleftarrow:"M400000 620h-399890l3 -3c68.7 -52.7 113.7 -120 135 -202\nc4 -14.7 6 -23 6 -25c0 -7.3 -7 -11 -21 -11c-8 0 -13.2 0.8 -15.5 2.5\nc-2.3 1.7 -4.2 5.8 -5.5 12.5c-1.3 4.7 -2.7 10.3 -4 17c-12 48.7 -34.8 92 -68.5 130\ns-74.2 66.3 -121.5 85c-10 4 -16 7.7 -18 11c0 8.7 6 14.3 18 17c47.3 18.7 87.8 47\n121.5 85s56.5 81.3 68.5 130c0.7 2 1.3 5 2 9s1.2 6.7 1.5 8c0.3 1.3 1 3.3 2 6\ns2.2 4.5 3.5 5.5c1.3 1 3.3 1.8 6 2.5s6 1 10 1c14 0 21 -3.7 21 -11\nc0 -2 -2 -10.3 -6 -25c-20 -79.3 -65 -146.7 -135 -202l-3 -3h399890z\nM100 620v40h399900v-40z M0 241v40h399900v-40zM0 241v40h399900v-40z",rightarrowabovebar:"M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32\n-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0\n13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39\n-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5\n-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\n151.7 139 205zm96 379h399894v40H0zm0 0h399904v40H0z",baraboveshortleftharpoon:"M507,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11\nc1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17\nc2,0.7,5,1,9,1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21\nc-32,-87.3,-82.7,-157.7,-152,-211c0,0,-3,-3,-3,-3l399351,0l0,-40\nc-398570,0,-399437,0,-399437,0z M593 435 v40 H399500 v-40z\nM0 281 v-40 H399908 v40z M0 281 v-40 H399908 v40z",rightharpoonaboveshortbar:"M0,241 l0,40c399126,0,399993,0,399993,0\nc4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,\n-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6\nc-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z\nM0 241 v40 H399908 v-40z M0 475 v-40 H399500 v40z M0 475 v-40 H399500 v40z",shortbaraboveleftharpoon:"M7,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11\nc1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17c2,0.7,5,1,9,\n1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21c-32,-87.3,-82.7,-157.7,\n-152,-211c0,0,-3,-3,-3,-3l399907,0l0,-40c-399126,0,-399993,0,-399993,0z\nM93 435 v40 H400000 v-40z M500 241 v40 H400000 v-40z M500 241 v40 H400000 v-40z",shortrightharpoonabovebar:"M53,241l0,40c398570,0,399437,0,399437,0\nc4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,\n-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6\nc-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z\nM500 241 v40 H399408 v-40z M500 435 v40 H400000 v-40z"};var tallDelim=function e(t,r){switch(t){case"lbrack":return"M403 1759 V84 H666 V0 H319 V1759 v"+r+" v1759 h347 v-84\nH403z M403 1759 V0 H319 V1759 v"+r+" v1759 h84z";case"rbrack":return"M347 1759 V0 H0 V84 H263 V1759 v"+r+" v1759 H0 v84 H347z\nM347 1759 V0 H263 V1759 v"+r+" v1759 h84z";case"vert":return"M145 15 v585 v"+r+" v585 c2.667,10,9.667,15,21,15\nc10,0,16.667,-5,20,-15 v-585 v"+-r+" v-585 c-2.667,-10,-9.667,-15,-21,-15\nc-10,0,-16.667,5,-20,15z M188 15 H145 v585 v"+r+" v585 h43z";case"doublevert":return"M145 15 v585 v"+r+" v585 c2.667,10,9.667,15,21,15\nc10,0,16.667,-5,20,-15 v-585 v"+-r+" v-585 c-2.667,-10,-9.667,-15,-21,-15\nc-10,0,-16.667,5,-20,15z M188 15 H145 v585 v"+r+" v585 h43z\nM367 15 v585 v"+r+" v585 c2.667,10,9.667,15,21,15\nc10,0,16.667,-5,20,-15 v-585 v"+-r+" v-585 c-2.667,-10,-9.667,-15,-21,-15\nc-10,0,-16.667,5,-20,15z M410 15 H367 v585 v"+r+" v585 h43z";case"lfloor":return"M319 602 V0 H403 V602 v"+r+" v1715 h263 v84 H319z\nMM319 602 V0 H403 V602 v"+r+" v1715 H319z";case"rfloor":return"M319 602 V0 H403 V602 v"+r+" v1799 H0 v-84 H319z\nMM319 602 V0 H403 V602 v"+r+" v1715 H319z";case"lceil":return"M403 1759 V84 H666 V0 H319 V1759 v"+r+" v602 h84z\nM403 1759 V0 H319 V1759 v"+r+" v602 h84z";case"rceil":return"M347 1759 V0 H0 V84 H263 V1759 v"+r+" v602 h84z\nM347 1759 V0 h-84 V1759 v"+r+" v602 h84z";case"lparen":return"M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1\nc-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,\n-36,557 l0,"+(r+84)+"c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,\n949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9\nc0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,\n-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189\nl0,-"+(r+92)+"c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,\n-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z";case"rparen":return"M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,\n63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5\nc11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,"+(r+9)+"\nc-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664\nc-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11\nc0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17\nc242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558\nl0,-"+(r+144)+"c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,\n-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z";default:throw new Error("Unknown stretchy delimiter.")}};class DocumentFragment{constructor(e){this.children=void 0;this.classes=void 0;this.height=void 0;this.depth=void 0;this.maxFontSize=void 0;this.style=void 0;this.children=e;this.classes=[];this.height=0;this.depth=0;this.maxFontSize=0;this.style={}}hasClass(e){return utils.contains(this.classes,e)}toNode(){var e=document.createDocumentFragment();for(var t=0;t<this.children.length;t++){e.appendChild(this.children[t].toNode())}return e}toMarkup(){var e="";for(var t=0;t<this.children.length;t++){e+=this.children[t].toMarkup()}return e}toText(){var e=e=>e.toText();return this.children.map(e).join("")}}var fontMetricsData={"AMS-Regular":{32:[0,0,0,0,.25],65:[0,.68889,0,0,.72222],66:[0,.68889,0,0,.66667],67:[0,.68889,0,0,.72222],68:[0,.68889,0,0,.72222],69:[0,.68889,0,0,.66667],70:[0,.68889,0,0,.61111],71:[0,.68889,0,0,.77778],72:[0,.68889,0,0,.77778],73:[0,.68889,0,0,.38889],74:[.16667,.68889,0,0,.5],75:[0,.68889,0,0,.77778],76:[0,.68889,0,0,.66667],77:[0,.68889,0,0,.94445],78:[0,.68889,0,0,.72222],79:[.16667,.68889,0,0,.77778],80:[0,.68889,0,0,.61111],81:[.16667,.68889,0,0,.77778],82:[0,.68889,0,0,.72222],83:[0,.68889,0,0,.55556],84:[0,.68889,0,0,.66667],85:[0,.68889,0,0,.72222],86:[0,.68889,0,0,.72222],87:[0,.68889,0,0,1],88:[0,.68889,0,0,.72222],89:[0,.68889,0,0,.72222],90:[0,.68889,0,0,.66667],107:[0,.68889,0,0,.55556],160:[0,0,0,0,.25],165:[0,.675,.025,0,.75],174:[.15559,.69224,0,0,.94666],240:[0,.68889,0,0,.55556],295:[0,.68889,0,0,.54028],710:[0,.825,0,0,2.33334],732:[0,.9,0,0,2.33334],770:[0,.825,0,0,2.33334],771:[0,.9,0,0,2.33334],989:[.08167,.58167,0,0,.77778],1008:[0,.43056,.04028,0,.66667],8245:[0,.54986,0,0,.275],8463:[0,.68889,0,0,.54028],8487:[0,.68889,0,0,.72222],8498:[0,.68889,0,0,.55556],8502:[0,.68889,0,0,.66667],8503:[0,.68889,0,0,.44445],8504:[0,.68889,0,0,.66667],8513:[0,.68889,0,0,.63889],8592:[-.03598,.46402,0,0,.5],8594:[-.03598,.46402,0,0,.5],8602:[-.13313,.36687,0,0,1],8603:[-.13313,.36687,0,0,1],8606:[.01354,.52239,0,0,1],8608:[.01354,.52239,0,0,1],8610:[.01354,.52239,0,0,1.11111],8611:[.01354,.52239,0,0,1.11111],8619:[0,.54986,0,0,1],8620:[0,.54986,0,0,1],8621:[-.13313,.37788,0,0,1.38889],8622:[-.13313,.36687,0,0,1],8624:[0,.69224,0,0,.5],8625:[0,.69224,0,0,.5],8630:[0,.43056,0,0,1],8631:[0,.43056,0,0,1],8634:[.08198,.58198,0,0,.77778],8635:[.08198,.58198,0,0,.77778],8638:[.19444,.69224,0,0,.41667],8639:[.19444,.69224,0,0,.41667],8642:[.19444,.69224,0,0,.41667],8643:[.19444,.69224,0,0,.41667],8644:[.1808,.675,0,0,1],8646:[.1808,.675,0,0,1],8647:[.1808,.675,0,0,1],8648:[.19444,.69224,0,0,.83334],8649:[.1808,.675,0,0,1],8650:[.19444,.69224,0,0,.83334],8651:[.01354,.52239,0,0,1],8652:[.01354,.52239,0,0,1],8653:[-.13313,.36687,0,0,1],8654:[-.13313,.36687,0,0,1],8655:[-.13313,.36687,0,0,1],8666:[.13667,.63667,0,0,1],8667:[.13667,.63667,0,0,1],8669:[-.13313,.37788,0,0,1],8672:[-.064,.437,0,0,1.334],8674:[-.064,.437,0,0,1.334],8705:[0,.825,0,0,.5],8708:[0,.68889,0,0,.55556],8709:[.08167,.58167,0,0,.77778],8717:[0,.43056,0,0,.42917],8722:[-.03598,.46402,0,0,.5],8724:[.08198,.69224,0,0,.77778],8726:[.08167,.58167,0,0,.77778],8733:[0,.69224,0,0,.77778],8736:[0,.69224,0,0,.72222],8737:[0,.69224,0,0,.72222],8738:[.03517,.52239,0,0,.72222],8739:[.08167,.58167,0,0,.22222],8740:[.25142,.74111,0,0,.27778],8741:[.08167,.58167,0,0,.38889],8742:[.25142,.74111,0,0,.5],8756:[0,.69224,0,0,.66667],8757:[0,.69224,0,0,.66667],8764:[-.13313,.36687,0,0,.77778],8765:[-.13313,.37788,0,0,.77778],8769:[-.13313,.36687,0,0,.77778],8770:[-.03625,.46375,0,0,.77778],8774:[.30274,.79383,0,0,.77778],8776:[-.01688,.48312,0,0,.77778],8778:[.08167,.58167,0,0,.77778],8782:[.06062,.54986,0,0,.77778],8783:[.06062,.54986,0,0,.77778],8785:[.08198,.58198,0,0,.77778],8786:[.08198,.58198,0,0,.77778],8787:[.08198,.58198,0,0,.77778],8790:[0,.69224,0,0,.77778],8791:[.22958,.72958,0,0,.77778],8796:[.08198,.91667,0,0,.77778],8806:[.25583,.75583,0,0,.77778],8807:[.25583,.75583,0,0,.77778],8808:[.25142,.75726,0,0,.77778],8809:[.25142,.75726,0,0,.77778],8812:[.25583,.75583,0,0,.5],8814:[.20576,.70576,0,0,.77778],8815:[.20576,.70576,0,0,.77778],8816:[.30274,.79383,0,0,.77778],8817:[.30274,.79383,0,0,.77778],8818:[.22958,.72958,0,0,.77778],8819:[.22958,.72958,0,0,.77778],8822:[.1808,.675,0,0,.77778],8823:[.1808,.675,0,0,.77778],8828:[.13667,.63667,0,0,.77778],8829:[.13667,.63667,0,0,.77778],8830:[.22958,.72958,0,0,.77778],8831:[.22958,.72958,0,0,.77778],8832:[.20576,.70576,0,0,.77778],8833:[.20576,.70576,0,0,.77778],8840:[.30274,.79383,0,0,.77778],8841:[.30274,.79383,0,0,.77778],8842:[.13597,.63597,0,0,.77778],8843:[.13597,.63597,0,0,.77778],8847:[.03517,.54986,0,0,.77778],8848:[.03517,.54986,0,0,.77778],8858:[.08198,.58198,0,0,.77778],8859:[.08198,.58198,0,0,.77778],8861:[.08198,.58198,0,0,.77778],8862:[0,.675,0,0,.77778],8863:[0,.675,0,0,.77778],8864:[0,.675,0,0,.77778],8865:[0,.675,0,0,.77778],8872:[0,.69224,0,0,.61111],8873:[0,.69224,0,0,.72222],8874:[0,.69224,0,0,.88889],8876:[0,.68889,0,0,.61111],8877:[0,.68889,0,0,.61111],8878:[0,.68889,0,0,.72222],8879:[0,.68889,0,0,.72222],8882:[.03517,.54986,0,0,.77778],8883:[.03517,.54986,0,0,.77778],8884:[.13667,.63667,0,0,.77778],8885:[.13667,.63667,0,0,.77778],8888:[0,.54986,0,0,1.11111],8890:[.19444,.43056,0,0,.55556],8891:[.19444,.69224,0,0,.61111],8892:[.19444,.69224,0,0,.61111],8901:[0,.54986,0,0,.27778],8903:[.08167,.58167,0,0,.77778],8905:[.08167,.58167,0,0,.77778],8906:[.08167,.58167,0,0,.77778],8907:[0,.69224,0,0,.77778],8908:[0,.69224,0,0,.77778],8909:[-.03598,.46402,0,0,.77778],8910:[0,.54986,0,0,.76042],8911:[0,.54986,0,0,.76042],8912:[.03517,.54986,0,0,.77778],8913:[.03517,.54986,0,0,.77778],8914:[0,.54986,0,0,.66667],8915:[0,.54986,0,0,.66667],8916:[0,.69224,0,0,.66667],8918:[.0391,.5391,0,0,.77778],8919:[.0391,.5391,0,0,.77778],8920:[.03517,.54986,0,0,1.33334],8921:[.03517,.54986,0,0,1.33334],8922:[.38569,.88569,0,0,.77778],8923:[.38569,.88569,0,0,.77778],8926:[.13667,.63667,0,0,.77778],8927:[.13667,.63667,0,0,.77778],8928:[.30274,.79383,0,0,.77778],8929:[.30274,.79383,0,0,.77778],8934:[.23222,.74111,0,0,.77778],8935:[.23222,.74111,0,0,.77778],8936:[.23222,.74111,0,0,.77778],8937:[.23222,.74111,0,0,.77778],8938:[.20576,.70576,0,0,.77778],8939:[.20576,.70576,0,0,.77778],8940:[.30274,.79383,0,0,.77778],8941:[.30274,.79383,0,0,.77778],8994:[.19444,.69224,0,0,.77778],8995:[.19444,.69224,0,0,.77778],9416:[.15559,.69224,0,0,.90222],9484:[0,.69224,0,0,.5],9488:[0,.69224,0,0,.5],9492:[0,.37788,0,0,.5],9496:[0,.37788,0,0,.5],9585:[.19444,.68889,0,0,.88889],9586:[.19444,.74111,0,0,.88889],9632:[0,.675,0,0,.77778],9633:[0,.675,0,0,.77778],9650:[0,.54986,0,0,.72222],9651:[0,.54986,0,0,.72222],9654:[.03517,.54986,0,0,.77778],9660:[0,.54986,0,0,.72222],9661:[0,.54986,0,0,.72222],9664:[.03517,.54986,0,0,.77778],9674:[.11111,.69224,0,0,.66667],9733:[.19444,.69224,0,0,.94445],10003:[0,.69224,0,0,.83334],10016:[0,.69224,0,0,.83334],10731:[.11111,.69224,0,0,.66667],10846:[.19444,.75583,0,0,.61111],10877:[.13667,.63667,0,0,.77778],10878:[.13667,.63667,0,0,.77778],10885:[.25583,.75583,0,0,.77778],10886:[.25583,.75583,0,0,.77778],10887:[.13597,.63597,0,0,.77778],10888:[.13597,.63597,0,0,.77778],10889:[.26167,.75726,0,0,.77778],10890:[.26167,.75726,0,0,.77778],10891:[.48256,.98256,0,0,.77778],10892:[.48256,.98256,0,0,.77778],10901:[.13667,.63667,0,0,.77778],10902:[.13667,.63667,0,0,.77778],10933:[.25142,.75726,0,0,.77778],10934:[.25142,.75726,0,0,.77778],10935:[.26167,.75726,0,0,.77778],10936:[.26167,.75726,0,0,.77778],10937:[.26167,.75726,0,0,.77778],10938:[.26167,.75726,0,0,.77778],10949:[.25583,.75583,0,0,.77778],10950:[.25583,.75583,0,0,.77778],10955:[.28481,.79383,0,0,.77778],10956:[.28481,.79383,0,0,.77778],57350:[.08167,.58167,0,0,.22222],57351:[.08167,.58167,0,0,.38889],57352:[.08167,.58167,0,0,.77778],57353:[0,.43056,.04028,0,.66667],57356:[.25142,.75726,0,0,.77778],57357:[.25142,.75726,0,0,.77778],57358:[.41951,.91951,0,0,.77778],57359:[.30274,.79383,0,0,.77778],57360:[.30274,.79383,0,0,.77778],57361:[.41951,.91951,0,0,.77778],57366:[.25142,.75726,0,0,.77778],57367:[.25142,.75726,0,0,.77778],57368:[.25142,.75726,0,0,.77778],57369:[.25142,.75726,0,0,.77778],57370:[.13597,.63597,0,0,.77778],57371:[.13597,.63597,0,0,.77778]},"Caligraphic-Regular":{32:[0,0,0,0,.25],65:[0,.68333,0,.19445,.79847],66:[0,.68333,.03041,.13889,.65681],67:[0,.68333,.05834,.13889,.52653],68:[0,.68333,.02778,.08334,.77139],69:[0,.68333,.08944,.11111,.52778],70:[0,.68333,.09931,.11111,.71875],71:[.09722,.68333,.0593,.11111,.59487],72:[0,.68333,.00965,.11111,.84452],73:[0,.68333,.07382,0,.54452],74:[.09722,.68333,.18472,.16667,.67778],75:[0,.68333,.01445,.05556,.76195],76:[0,.68333,0,.13889,.68972],77:[0,.68333,0,.13889,1.2009],78:[0,.68333,.14736,.08334,.82049],79:[0,.68333,.02778,.11111,.79611],80:[0,.68333,.08222,.08334,.69556],81:[.09722,.68333,0,.11111,.81667],82:[0,.68333,0,.08334,.8475],83:[0,.68333,.075,.13889,.60556],84:[0,.68333,.25417,0,.54464],85:[0,.68333,.09931,.08334,.62583],86:[0,.68333,.08222,0,.61278],87:[0,.68333,.08222,.08334,.98778],88:[0,.68333,.14643,.13889,.7133],89:[.09722,.68333,.08222,.08334,.66834],90:[0,.68333,.07944,.13889,.72473],160:[0,0,0,0,.25]},"Fraktur-Regular":{32:[0,0,0,0,.25],33:[0,.69141,0,0,.29574],34:[0,.69141,0,0,.21471],38:[0,.69141,0,0,.73786],39:[0,.69141,0,0,.21201],40:[.24982,.74947,0,0,.38865],41:[.24982,.74947,0,0,.38865],42:[0,.62119,0,0,.27764],43:[.08319,.58283,0,0,.75623],44:[0,.10803,0,0,.27764],45:[.08319,.58283,0,0,.75623],46:[0,.10803,0,0,.27764],47:[.24982,.74947,0,0,.50181],48:[0,.47534,0,0,.50181],49:[0,.47534,0,0,.50181],50:[0,.47534,0,0,.50181],51:[.18906,.47534,0,0,.50181],52:[.18906,.47534,0,0,.50181],53:[.18906,.47534,0,0,.50181],54:[0,.69141,0,0,.50181],55:[.18906,.47534,0,0,.50181],56:[0,.69141,0,0,.50181],57:[.18906,.47534,0,0,.50181],58:[0,.47534,0,0,.21606],59:[.12604,.47534,0,0,.21606],61:[-.13099,.36866,0,0,.75623],63:[0,.69141,0,0,.36245],65:[0,.69141,0,0,.7176],66:[0,.69141,0,0,.88397],67:[0,.69141,0,0,.61254],68:[0,.69141,0,0,.83158],69:[0,.69141,0,0,.66278],70:[.12604,.69141,0,0,.61119],71:[0,.69141,0,0,.78539],72:[.06302,.69141,0,0,.7203],73:[0,.69141,0,0,.55448],74:[.12604,.69141,0,0,.55231],75:[0,.69141,0,0,.66845],76:[0,.69141,0,0,.66602],77:[0,.69141,0,0,1.04953],78:[0,.69141,0,0,.83212],79:[0,.69141,0,0,.82699],80:[.18906,.69141,0,0,.82753],81:[.03781,.69141,0,0,.82699],82:[0,.69141,0,0,.82807],83:[0,.69141,0,0,.82861],84:[0,.69141,0,0,.66899],85:[0,.69141,0,0,.64576],86:[0,.69141,0,0,.83131],87:[0,.69141,0,0,1.04602],88:[0,.69141,0,0,.71922],89:[.18906,.69141,0,0,.83293],90:[.12604,.69141,0,0,.60201],91:[.24982,.74947,0,0,.27764],93:[.24982,.74947,0,0,.27764],94:[0,.69141,0,0,.49965],97:[0,.47534,0,0,.50046],98:[0,.69141,0,0,.51315],99:[0,.47534,0,0,.38946],100:[0,.62119,0,0,.49857],101:[0,.47534,0,0,.40053],102:[.18906,.69141,0,0,.32626],103:[.18906,.47534,0,0,.5037],104:[.18906,.69141,0,0,.52126],105:[0,.69141,0,0,.27899],106:[0,.69141,0,0,.28088],107:[0,.69141,0,0,.38946],108:[0,.69141,0,0,.27953],109:[0,.47534,0,0,.76676],110:[0,.47534,0,0,.52666],111:[0,.47534,0,0,.48885],112:[.18906,.52396,0,0,.50046],113:[.18906,.47534,0,0,.48912],114:[0,.47534,0,0,.38919],115:[0,.47534,0,0,.44266],116:[0,.62119,0,0,.33301],117:[0,.47534,0,0,.5172],118:[0,.52396,0,0,.5118],119:[0,.52396,0,0,.77351],120:[.18906,.47534,0,0,.38865],121:[.18906,.47534,0,0,.49884],122:[.18906,.47534,0,0,.39054],160:[0,0,0,0,.25],8216:[0,.69141,0,0,.21471],8217:[0,.69141,0,0,.21471],58112:[0,.62119,0,0,.49749],58113:[0,.62119,0,0,.4983],58114:[.18906,.69141,0,0,.33328],58115:[.18906,.69141,0,0,.32923],58116:[.18906,.47534,0,0,.50343],58117:[0,.69141,0,0,.33301],58118:[0,.62119,0,0,.33409],58119:[0,.47534,0,0,.50073]},"Main-Bold":{32:[0,0,0,0,.25],33:[0,.69444,0,0,.35],34:[0,.69444,0,0,.60278],35:[.19444,.69444,0,0,.95833],36:[.05556,.75,0,0,.575],37:[.05556,.75,0,0,.95833],38:[0,.69444,0,0,.89444],39:[0,.69444,0,0,.31944],40:[.25,.75,0,0,.44722],41:[.25,.75,0,0,.44722],42:[0,.75,0,0,.575],43:[.13333,.63333,0,0,.89444],44:[.19444,.15556,0,0,.31944],45:[0,.44444,0,0,.38333],46:[0,.15556,0,0,.31944],47:[.25,.75,0,0,.575],48:[0,.64444,0,0,.575],49:[0,.64444,0,0,.575],50:[0,.64444,0,0,.575],51:[0,.64444,0,0,.575],52:[0,.64444,0,0,.575],53:[0,.64444,0,0,.575],54:[0,.64444,0,0,.575],55:[0,.64444,0,0,.575],56:[0,.64444,0,0,.575],57:[0,.64444,0,0,.575],58:[0,.44444,0,0,.31944],59:[.19444,.44444,0,0,.31944],60:[.08556,.58556,0,0,.89444],61:[-.10889,.39111,0,0,.89444],62:[.08556,.58556,0,0,.89444],63:[0,.69444,0,0,.54305],64:[0,.69444,0,0,.89444],65:[0,.68611,0,0,.86944],66:[0,.68611,0,0,.81805],67:[0,.68611,0,0,.83055],68:[0,.68611,0,0,.88194],69:[0,.68611,0,0,.75555],70:[0,.68611,0,0,.72361],71:[0,.68611,0,0,.90416],72:[0,.68611,0,0,.9],73:[0,.68611,0,0,.43611],74:[0,.68611,0,0,.59444],75:[0,.68611,0,0,.90138],76:[0,.68611,0,0,.69166],77:[0,.68611,0,0,1.09166],78:[0,.68611,0,0,.9],79:[0,.68611,0,0,.86388],80:[0,.68611,0,0,.78611],81:[.19444,.68611,0,0,.86388],82:[0,.68611,0,0,.8625],83:[0,.68611,0,0,.63889],84:[0,.68611,0,0,.8],85:[0,.68611,0,0,.88472],86:[0,.68611,.01597,0,.86944],87:[0,.68611,.01597,0,1.18888],88:[0,.68611,0,0,.86944],89:[0,.68611,.02875,0,.86944],90:[0,.68611,0,0,.70277],91:[.25,.75,0,0,.31944],92:[.25,.75,0,0,.575],93:[.25,.75,0,0,.31944],94:[0,.69444,0,0,.575],95:[.31,.13444,.03194,0,.575],97:[0,.44444,0,0,.55902],98:[0,.69444,0,0,.63889],99:[0,.44444,0,0,.51111],100:[0,.69444,0,0,.63889],101:[0,.44444,0,0,.52708],102:[0,.69444,.10903,0,.35139],103:[.19444,.44444,.01597,0,.575],104:[0,.69444,0,0,.63889],105:[0,.69444,0,0,.31944],106:[.19444,.69444,0,0,.35139],107:[0,.69444,0,0,.60694],108:[0,.69444,0,0,.31944],109:[0,.44444,0,0,.95833],110:[0,.44444,0,0,.63889],111:[0,.44444,0,0,.575],112:[.19444,.44444,0,0,.63889],113:[.19444,.44444,0,0,.60694],114:[0,.44444,0,0,.47361],115:[0,.44444,0,0,.45361],116:[0,.63492,0,0,.44722],117:[0,.44444,0,0,.63889],118:[0,.44444,.01597,0,.60694],119:[0,.44444,.01597,0,.83055],120:[0,.44444,0,0,.60694],121:[.19444,.44444,.01597,0,.60694],122:[0,.44444,0,0,.51111],123:[.25,.75,0,0,.575],124:[.25,.75,0,0,.31944],125:[.25,.75,0,0,.575],126:[.35,.34444,0,0,.575],160:[0,0,0,0,.25],163:[0,.69444,0,0,.86853],168:[0,.69444,0,0,.575],172:[0,.44444,0,0,.76666],176:[0,.69444,0,0,.86944],177:[.13333,.63333,0,0,.89444],184:[.17014,0,0,0,.51111],198:[0,.68611,0,0,1.04166],215:[.13333,.63333,0,0,.89444],216:[.04861,.73472,0,0,.89444],223:[0,.69444,0,0,.59722],230:[0,.44444,0,0,.83055],247:[.13333,.63333,0,0,.89444],248:[.09722,.54167,0,0,.575],305:[0,.44444,0,0,.31944],338:[0,.68611,0,0,1.16944],339:[0,.44444,0,0,.89444],567:[.19444,.44444,0,0,.35139],710:[0,.69444,0,0,.575],711:[0,.63194,0,0,.575],713:[0,.59611,0,0,.575],714:[0,.69444,0,0,.575],715:[0,.69444,0,0,.575],728:[0,.69444,0,0,.575],729:[0,.69444,0,0,.31944],730:[0,.69444,0,0,.86944],732:[0,.69444,0,0,.575],733:[0,.69444,0,0,.575],915:[0,.68611,0,0,.69166],916:[0,.68611,0,0,.95833],920:[0,.68611,0,0,.89444],923:[0,.68611,0,0,.80555],926:[0,.68611,0,0,.76666],928:[0,.68611,0,0,.9],931:[0,.68611,0,0,.83055],933:[0,.68611,0,0,.89444],934:[0,.68611,0,0,.83055],936:[0,.68611,0,0,.89444],937:[0,.68611,0,0,.83055],8211:[0,.44444,.03194,0,.575],8212:[0,.44444,.03194,0,1.14999],8216:[0,.69444,0,0,.31944],8217:[0,.69444,0,0,.31944],8220:[0,.69444,0,0,.60278],8221:[0,.69444,0,0,.60278],8224:[.19444,.69444,0,0,.51111],8225:[.19444,.69444,0,0,.51111],8242:[0,.55556,0,0,.34444],8407:[0,.72444,.15486,0,.575],8463:[0,.69444,0,0,.66759],8465:[0,.69444,0,0,.83055],8467:[0,.69444,0,0,.47361],8472:[.19444,.44444,0,0,.74027],8476:[0,.69444,0,0,.83055],8501:[0,.69444,0,0,.70277],8592:[-.10889,.39111,0,0,1.14999],8593:[.19444,.69444,0,0,.575],8594:[-.10889,.39111,0,0,1.14999],8595:[.19444,.69444,0,0,.575],8596:[-.10889,.39111,0,0,1.14999],8597:[.25,.75,0,0,.575],8598:[.19444,.69444,0,0,1.14999],8599:[.19444,.69444,0,0,1.14999],8600:[.19444,.69444,0,0,1.14999],8601:[.19444,.69444,0,0,1.14999],8636:[-.10889,.39111,0,0,1.14999],8637:[-.10889,.39111,0,0,1.14999],8640:[-.10889,.39111,0,0,1.14999],8641:[-.10889,.39111,0,0,1.14999],8656:[-.10889,.39111,0,0,1.14999],8657:[.19444,.69444,0,0,.70277],8658:[-.10889,.39111,0,0,1.14999],8659:[.19444,.69444,0,0,.70277],8660:[-.10889,.39111,0,0,1.14999],8661:[.25,.75,0,0,.70277],8704:[0,.69444,0,0,.63889],8706:[0,.69444,.06389,0,.62847],8707:[0,.69444,0,0,.63889],8709:[.05556,.75,0,0,.575],8711:[0,.68611,0,0,.95833],8712:[.08556,.58556,0,0,.76666],8715:[.08556,.58556,0,0,.76666],8722:[.13333,.63333,0,0,.89444],8723:[.13333,.63333,0,0,.89444],8725:[.25,.75,0,0,.575],8726:[.25,.75,0,0,.575],8727:[-.02778,.47222,0,0,.575],8728:[-.02639,.47361,0,0,.575],8729:[-.02639,.47361,0,0,.575],8730:[.18,.82,0,0,.95833],8733:[0,.44444,0,0,.89444],8734:[0,.44444,0,0,1.14999],8736:[0,.69224,0,0,.72222],8739:[.25,.75,0,0,.31944],8741:[.25,.75,0,0,.575],8743:[0,.55556,0,0,.76666],8744:[0,.55556,0,0,.76666],8745:[0,.55556,0,0,.76666],8746:[0,.55556,0,0,.76666],8747:[.19444,.69444,.12778,0,.56875],8764:[-.10889,.39111,0,0,.89444],8768:[.19444,.69444,0,0,.31944],8771:[.00222,.50222,0,0,.89444],8773:[.027,.638,0,0,.894],8776:[.02444,.52444,0,0,.89444],8781:[.00222,.50222,0,0,.89444],8801:[.00222,.50222,0,0,.89444],8804:[.19667,.69667,0,0,.89444],8805:[.19667,.69667,0,0,.89444],8810:[.08556,.58556,0,0,1.14999],8811:[.08556,.58556,0,0,1.14999],8826:[.08556,.58556,0,0,.89444],8827:[.08556,.58556,0,0,.89444],8834:[.08556,.58556,0,0,.89444],8835:[.08556,.58556,0,0,.89444],8838:[.19667,.69667,0,0,.89444],8839:[.19667,.69667,0,0,.89444],8846:[0,.55556,0,0,.76666],8849:[.19667,.69667,0,0,.89444],8850:[.19667,.69667,0,0,.89444],8851:[0,.55556,0,0,.76666],8852:[0,.55556,0,0,.76666],8853:[.13333,.63333,0,0,.89444],8854:[.13333,.63333,0,0,.89444],8855:[.13333,.63333,0,0,.89444],8856:[.13333,.63333,0,0,.89444],8857:[.13333,.63333,0,0,.89444],8866:[0,.69444,0,0,.70277],8867:[0,.69444,0,0,.70277],8868:[0,.69444,0,0,.89444],8869:[0,.69444,0,0,.89444],8900:[-.02639,.47361,0,0,.575],8901:[-.02639,.47361,0,0,.31944],8902:[-.02778,.47222,0,0,.575],8968:[.25,.75,0,0,.51111],8969:[.25,.75,0,0,.51111],8970:[.25,.75,0,0,.51111],8971:[.25,.75,0,0,.51111],8994:[-.13889,.36111,0,0,1.14999],8995:[-.13889,.36111,0,0,1.14999],9651:[.19444,.69444,0,0,1.02222],9657:[-.02778,.47222,0,0,.575],9661:[.19444,.69444,0,0,1.02222],9667:[-.02778,.47222,0,0,.575],9711:[.19444,.69444,0,0,1.14999],9824:[.12963,.69444,0,0,.89444],9825:[.12963,.69444,0,0,.89444],9826:[.12963,.69444,0,0,.89444],9827:[.12963,.69444,0,0,.89444],9837:[0,.75,0,0,.44722],9838:[.19444,.69444,0,0,.44722],9839:[.19444,.69444,0,0,.44722],10216:[.25,.75,0,0,.44722],10217:[.25,.75,0,0,.44722],10815:[0,.68611,0,0,.9],10927:[.19667,.69667,0,0,.89444],10928:[.19667,.69667,0,0,.89444],57376:[.19444,.69444,0,0,0]},"Main-BoldItalic":{32:[0,0,0,0,.25],33:[0,.69444,.11417,0,.38611],34:[0,.69444,.07939,0,.62055],35:[.19444,.69444,.06833,0,.94444],37:[.05556,.75,.12861,0,.94444],38:[0,.69444,.08528,0,.88555],39:[0,.69444,.12945,0,.35555],40:[.25,.75,.15806,0,.47333],41:[.25,.75,.03306,0,.47333],42:[0,.75,.14333,0,.59111],43:[.10333,.60333,.03306,0,.88555],44:[.19444,.14722,0,0,.35555],45:[0,.44444,.02611,0,.41444],46:[0,.14722,0,0,.35555],47:[.25,.75,.15806,0,.59111],48:[0,.64444,.13167,0,.59111],49:[0,.64444,.13167,0,.59111],50:[0,.64444,.13167,0,.59111],51:[0,.64444,.13167,0,.59111],52:[.19444,.64444,.13167,0,.59111],53:[0,.64444,.13167,0,.59111],54:[0,.64444,.13167,0,.59111],55:[.19444,.64444,.13167,0,.59111],56:[0,.64444,.13167,0,.59111],57:[0,.64444,.13167,0,.59111],58:[0,.44444,.06695,0,.35555],59:[.19444,.44444,.06695,0,.35555],61:[-.10889,.39111,.06833,0,.88555],63:[0,.69444,.11472,0,.59111],64:[0,.69444,.09208,0,.88555],65:[0,.68611,0,0,.86555],66:[0,.68611,.0992,0,.81666],67:[0,.68611,.14208,0,.82666],68:[0,.68611,.09062,0,.87555],69:[0,.68611,.11431,0,.75666],70:[0,.68611,.12903,0,.72722],71:[0,.68611,.07347,0,.89527],72:[0,.68611,.17208,0,.8961],73:[0,.68611,.15681,0,.47166],74:[0,.68611,.145,0,.61055],75:[0,.68611,.14208,0,.89499],76:[0,.68611,0,0,.69777],77:[0,.68611,.17208,0,1.07277],78:[0,.68611,.17208,0,.8961],79:[0,.68611,.09062,0,.85499],80:[0,.68611,.0992,0,.78721],81:[.19444,.68611,.09062,0,.85499],82:[0,.68611,.02559,0,.85944],83:[0,.68611,.11264,0,.64999],84:[0,.68611,.12903,0,.7961],85:[0,.68611,.17208,0,.88083],86:[0,.68611,.18625,0,.86555],87:[0,.68611,.18625,0,1.15999],88:[0,.68611,.15681,0,.86555],89:[0,.68611,.19803,0,.86555],90:[0,.68611,.14208,0,.70888],91:[.25,.75,.1875,0,.35611],93:[.25,.75,.09972,0,.35611],94:[0,.69444,.06709,0,.59111],95:[.31,.13444,.09811,0,.59111],97:[0,.44444,.09426,0,.59111],98:[0,.69444,.07861,0,.53222],99:[0,.44444,.05222,0,.53222],100:[0,.69444,.10861,0,.59111],101:[0,.44444,.085,0,.53222],102:[.19444,.69444,.21778,0,.4],103:[.19444,.44444,.105,0,.53222],104:[0,.69444,.09426,0,.59111],105:[0,.69326,.11387,0,.35555],106:[.19444,.69326,.1672,0,.35555],107:[0,.69444,.11111,0,.53222],108:[0,.69444,.10861,0,.29666],109:[0,.44444,.09426,0,.94444],110:[0,.44444,.09426,0,.64999],111:[0,.44444,.07861,0,.59111],112:[.19444,.44444,.07861,0,.59111],113:[.19444,.44444,.105,0,.53222],114:[0,.44444,.11111,0,.50167],115:[0,.44444,.08167,0,.48694],116:[0,.63492,.09639,0,.385],117:[0,.44444,.09426,0,.62055],118:[0,.44444,.11111,0,.53222],119:[0,.44444,.11111,0,.76777],120:[0,.44444,.12583,0,.56055],121:[.19444,.44444,.105,0,.56166],122:[0,.44444,.13889,0,.49055],126:[.35,.34444,.11472,0,.59111],160:[0,0,0,0,.25],168:[0,.69444,.11473,0,.59111],176:[0,.69444,0,0,.94888],184:[.17014,0,0,0,.53222],198:[0,.68611,.11431,0,1.02277],216:[.04861,.73472,.09062,0,.88555],223:[.19444,.69444,.09736,0,.665],230:[0,.44444,.085,0,.82666],248:[.09722,.54167,.09458,0,.59111],305:[0,.44444,.09426,0,.35555],338:[0,.68611,.11431,0,1.14054],339:[0,.44444,.085,0,.82666],567:[.19444,.44444,.04611,0,.385],710:[0,.69444,.06709,0,.59111],711:[0,.63194,.08271,0,.59111],713:[0,.59444,.10444,0,.59111],714:[0,.69444,.08528,0,.59111],715:[0,.69444,0,0,.59111],728:[0,.69444,.10333,0,.59111],729:[0,.69444,.12945,0,.35555],730:[0,.69444,0,0,.94888],732:[0,.69444,.11472,0,.59111],733:[0,.69444,.11472,0,.59111],915:[0,.68611,.12903,0,.69777],916:[0,.68611,0,0,.94444],920:[0,.68611,.09062,0,.88555],923:[0,.68611,0,0,.80666],926:[0,.68611,.15092,0,.76777],928:[0,.68611,.17208,0,.8961],931:[0,.68611,.11431,0,.82666],933:[0,.68611,.10778,0,.88555],934:[0,.68611,.05632,0,.82666],936:[0,.68611,.10778,0,.88555],937:[0,.68611,.0992,0,.82666],8211:[0,.44444,.09811,0,.59111],8212:[0,.44444,.09811,0,1.18221],8216:[0,.69444,.12945,0,.35555],8217:[0,.69444,.12945,0,.35555],8220:[0,.69444,.16772,0,.62055],8221:[0,.69444,.07939,0,.62055]},"Main-Italic":{32:[0,0,0,0,.25],33:[0,.69444,.12417,0,.30667],34:[0,.69444,.06961,0,.51444],35:[.19444,.69444,.06616,0,.81777],37:[.05556,.75,.13639,0,.81777],38:[0,.69444,.09694,0,.76666],39:[0,.69444,.12417,0,.30667],40:[.25,.75,.16194,0,.40889],41:[.25,.75,.03694,0,.40889],42:[0,.75,.14917,0,.51111],43:[.05667,.56167,.03694,0,.76666],44:[.19444,.10556,0,0,.30667],45:[0,.43056,.02826,0,.35778],46:[0,.10556,0,0,.30667],47:[.25,.75,.16194,0,.51111],48:[0,.64444,.13556,0,.51111],49:[0,.64444,.13556,0,.51111],50:[0,.64444,.13556,0,.51111],51:[0,.64444,.13556,0,.51111],52:[.19444,.64444,.13556,0,.51111],53:[0,.64444,.13556,0,.51111],54:[0,.64444,.13556,0,.51111],55:[.19444,.64444,.13556,0,.51111],56:[0,.64444,.13556,0,.51111],57:[0,.64444,.13556,0,.51111],58:[0,.43056,.0582,0,.30667],59:[.19444,.43056,.0582,0,.30667],61:[-.13313,.36687,.06616,0,.76666],63:[0,.69444,.1225,0,.51111],64:[0,.69444,.09597,0,.76666],65:[0,.68333,0,0,.74333],66:[0,.68333,.10257,0,.70389],67:[0,.68333,.14528,0,.71555],68:[0,.68333,.09403,0,.755],69:[0,.68333,.12028,0,.67833],70:[0,.68333,.13305,0,.65277],71:[0,.68333,.08722,0,.77361],72:[0,.68333,.16389,0,.74333],73:[0,.68333,.15806,0,.38555],74:[0,.68333,.14028,0,.525],75:[0,.68333,.14528,0,.76888],76:[0,.68333,0,0,.62722],77:[0,.68333,.16389,0,.89666],78:[0,.68333,.16389,0,.74333],79:[0,.68333,.09403,0,.76666],80:[0,.68333,.10257,0,.67833],81:[.19444,.68333,.09403,0,.76666],82:[0,.68333,.03868,0,.72944],83:[0,.68333,.11972,0,.56222],84:[0,.68333,.13305,0,.71555],85:[0,.68333,.16389,0,.74333],86:[0,.68333,.18361,0,.74333],87:[0,.68333,.18361,0,.99888],88:[0,.68333,.15806,0,.74333],89:[0,.68333,.19383,0,.74333],90:[0,.68333,.14528,0,.61333],91:[.25,.75,.1875,0,.30667],93:[.25,.75,.10528,0,.30667],94:[0,.69444,.06646,0,.51111],95:[.31,.12056,.09208,0,.51111],97:[0,.43056,.07671,0,.51111],98:[0,.69444,.06312,0,.46],99:[0,.43056,.05653,0,.46],100:[0,.69444,.10333,0,.51111],101:[0,.43056,.07514,0,.46],102:[.19444,.69444,.21194,0,.30667],103:[.19444,.43056,.08847,0,.46],104:[0,.69444,.07671,0,.51111],105:[0,.65536,.1019,0,.30667],106:[.19444,.65536,.14467,0,.30667],107:[0,.69444,.10764,0,.46],108:[0,.69444,.10333,0,.25555],109:[0,.43056,.07671,0,.81777],110:[0,.43056,.07671,0,.56222],111:[0,.43056,.06312,0,.51111],112:[.19444,.43056,.06312,0,.51111],113:[.19444,.43056,.08847,0,.46],114:[0,.43056,.10764,0,.42166],115:[0,.43056,.08208,0,.40889],116:[0,.61508,.09486,0,.33222],117:[0,.43056,.07671,0,.53666],118:[0,.43056,.10764,0,.46],119:[0,.43056,.10764,0,.66444],120:[0,.43056,.12042,0,.46389],121:[.19444,.43056,.08847,0,.48555],122:[0,.43056,.12292,0,.40889],126:[.35,.31786,.11585,0,.51111],160:[0,0,0,0,.25],168:[0,.66786,.10474,0,.51111],176:[0,.69444,0,0,.83129],184:[.17014,0,0,0,.46],198:[0,.68333,.12028,0,.88277],216:[.04861,.73194,.09403,0,.76666],223:[.19444,.69444,.10514,0,.53666],230:[0,.43056,.07514,0,.71555],248:[.09722,.52778,.09194,0,.51111],338:[0,.68333,.12028,0,.98499],339:[0,.43056,.07514,0,.71555],710:[0,.69444,.06646,0,.51111],711:[0,.62847,.08295,0,.51111],713:[0,.56167,.10333,0,.51111],714:[0,.69444,.09694,0,.51111],715:[0,.69444,0,0,.51111],728:[0,.69444,.10806,0,.51111],729:[0,.66786,.11752,0,.30667],730:[0,.69444,0,0,.83129],732:[0,.66786,.11585,0,.51111],733:[0,.69444,.1225,0,.51111],915:[0,.68333,.13305,0,.62722],916:[0,.68333,0,0,.81777],920:[0,.68333,.09403,0,.76666],923:[0,.68333,0,0,.69222],926:[0,.68333,.15294,0,.66444],928:[0,.68333,.16389,0,.74333],931:[0,.68333,.12028,0,.71555],933:[0,.68333,.11111,0,.76666],934:[0,.68333,.05986,0,.71555],936:[0,.68333,.11111,0,.76666],937:[0,.68333,.10257,0,.71555],8211:[0,.43056,.09208,0,.51111],8212:[0,.43056,.09208,0,1.02222],8216:[0,.69444,.12417,0,.30667],8217:[0,.69444,.12417,0,.30667],8220:[0,.69444,.1685,0,.51444],8221:[0,.69444,.06961,0,.51444],8463:[0,.68889,0,0,.54028]},"Main-Regular":{32:[0,0,0,0,.25],33:[0,.69444,0,0,.27778],34:[0,.69444,0,0,.5],35:[.19444,.69444,0,0,.83334],36:[.05556,.75,0,0,.5],37:[.05556,.75,0,0,.83334],38:[0,.69444,0,0,.77778],39:[0,.69444,0,0,.27778],40:[.25,.75,0,0,.38889],41:[.25,.75,0,0,.38889],42:[0,.75,0,0,.5],43:[.08333,.58333,0,0,.77778],44:[.19444,.10556,0,0,.27778],45:[0,.43056,0,0,.33333],46:[0,.10556,0,0,.27778],47:[.25,.75,0,0,.5],48:[0,.64444,0,0,.5],49:[0,.64444,0,0,.5],50:[0,.64444,0,0,.5],51:[0,.64444,0,0,.5],52:[0,.64444,0,0,.5],53:[0,.64444,0,0,.5],54:[0,.64444,0,0,.5],55:[0,.64444,0,0,.5],56:[0,.64444,0,0,.5],57:[0,.64444,0,0,.5],58:[0,.43056,0,0,.27778],59:[.19444,.43056,0,0,.27778],60:[.0391,.5391,0,0,.77778],61:[-.13313,.36687,0,0,.77778],62:[.0391,.5391,0,0,.77778],63:[0,.69444,0,0,.47222],64:[0,.69444,0,0,.77778],65:[0,.68333,0,0,.75],66:[0,.68333,0,0,.70834],67:[0,.68333,0,0,.72222],68:[0,.68333,0,0,.76389],69:[0,.68333,0,0,.68056],70:[0,.68333,0,0,.65278],71:[0,.68333,0,0,.78472],72:[0,.68333,0,0,.75],73:[0,.68333,0,0,.36111],74:[0,.68333,0,0,.51389],75:[0,.68333,0,0,.77778],76:[0,.68333,0,0,.625],77:[0,.68333,0,0,.91667],78:[0,.68333,0,0,.75],79:[0,.68333,0,0,.77778],80:[0,.68333,0,0,.68056],81:[.19444,.68333,0,0,.77778],82:[0,.68333,0,0,.73611],83:[0,.68333,0,0,.55556],84:[0,.68333,0,0,.72222],85:[0,.68333,0,0,.75],86:[0,.68333,.01389,0,.75],87:[0,.68333,.01389,0,1.02778],88:[0,.68333,0,0,.75],89:[0,.68333,.025,0,.75],90:[0,.68333,0,0,.61111],91:[.25,.75,0,0,.27778],92:[.25,.75,0,0,.5],93:[.25,.75,0,0,.27778],94:[0,.69444,0,0,.5],95:[.31,.12056,.02778,0,.5],97:[0,.43056,0,0,.5],98:[0,.69444,0,0,.55556],99:[0,.43056,0,0,.44445],100:[0,.69444,0,0,.55556],101:[0,.43056,0,0,.44445],102:[0,.69444,.07778,0,.30556],103:[.19444,.43056,.01389,0,.5],104:[0,.69444,0,0,.55556],105:[0,.66786,0,0,.27778],106:[.19444,.66786,0,0,.30556],107:[0,.69444,0,0,.52778],108:[0,.69444,0,0,.27778],109:[0,.43056,0,0,.83334],110:[0,.43056,0,0,.55556],111:[0,.43056,0,0,.5],112:[.19444,.43056,0,0,.55556],113:[.19444,.43056,0,0,.52778],114:[0,.43056,0,0,.39167],115:[0,.43056,0,0,.39445],116:[0,.61508,0,0,.38889],117:[0,.43056,0,0,.55556],118:[0,.43056,.01389,0,.52778],119:[0,.43056,.01389,0,.72222],120:[0,.43056,0,0,.52778],121:[.19444,.43056,.01389,0,.52778],122:[0,.43056,0,0,.44445],123:[.25,.75,0,0,.5],124:[.25,.75,0,0,.27778],125:[.25,.75,0,0,.5],126:[.35,.31786,0,0,.5],160:[0,0,0,0,.25],163:[0,.69444,0,0,.76909],167:[.19444,.69444,0,0,.44445],168:[0,.66786,0,0,.5],172:[0,.43056,0,0,.66667],176:[0,.69444,0,0,.75],177:[.08333,.58333,0,0,.77778],182:[.19444,.69444,0,0,.61111],184:[.17014,0,0,0,.44445],198:[0,.68333,0,0,.90278],215:[.08333,.58333,0,0,.77778],216:[.04861,.73194,0,0,.77778],223:[0,.69444,0,0,.5],230:[0,.43056,0,0,.72222],247:[.08333,.58333,0,0,.77778],248:[.09722,.52778,0,0,.5],305:[0,.43056,0,0,.27778],338:[0,.68333,0,0,1.01389],339:[0,.43056,0,0,.77778],567:[.19444,.43056,0,0,.30556],710:[0,.69444,0,0,.5],711:[0,.62847,0,0,.5],713:[0,.56778,0,0,.5],714:[0,.69444,0,0,.5],715:[0,.69444,0,0,.5],728:[0,.69444,0,0,.5],729:[0,.66786,0,0,.27778],730:[0,.69444,0,0,.75],732:[0,.66786,0,0,.5],733:[0,.69444,0,0,.5],915:[0,.68333,0,0,.625],916:[0,.68333,0,0,.83334],920:[0,.68333,0,0,.77778],923:[0,.68333,0,0,.69445],926:[0,.68333,0,0,.66667],928:[0,.68333,0,0,.75],931:[0,.68333,0,0,.72222],933:[0,.68333,0,0,.77778],934:[0,.68333,0,0,.72222],936:[0,.68333,0,0,.77778],937:[0,.68333,0,0,.72222],8211:[0,.43056,.02778,0,.5],8212:[0,.43056,.02778,0,1],8216:[0,.69444,0,0,.27778],8217:[0,.69444,0,0,.27778],8220:[0,.69444,0,0,.5],8221:[0,.69444,0,0,.5],8224:[.19444,.69444,0,0,.44445],8225:[.19444,.69444,0,0,.44445],8230:[0,.123,0,0,1.172],8242:[0,.55556,0,0,.275],8407:[0,.71444,.15382,0,.5],8463:[0,.68889,0,0,.54028],8465:[0,.69444,0,0,.72222],8467:[0,.69444,0,.11111,.41667],8472:[.19444,.43056,0,.11111,.63646],8476:[0,.69444,0,0,.72222],8501:[0,.69444,0,0,.61111],8592:[-.13313,.36687,0,0,1],8593:[.19444,.69444,0,0,.5],8594:[-.13313,.36687,0,0,1],8595:[.19444,.69444,0,0,.5],8596:[-.13313,.36687,0,0,1],8597:[.25,.75,0,0,.5],8598:[.19444,.69444,0,0,1],8599:[.19444,.69444,0,0,1],8600:[.19444,.69444,0,0,1],8601:[.19444,.69444,0,0,1],8614:[.011,.511,0,0,1],8617:[.011,.511,0,0,1.126],8618:[.011,.511,0,0,1.126],8636:[-.13313,.36687,0,0,1],8637:[-.13313,.36687,0,0,1],8640:[-.13313,.36687,0,0,1],8641:[-.13313,.36687,0,0,1],8652:[.011,.671,0,0,1],8656:[-.13313,.36687,0,0,1],8657:[.19444,.69444,0,0,.61111],8658:[-.13313,.36687,0,0,1],8659:[.19444,.69444,0,0,.61111],8660:[-.13313,.36687,0,0,1],8661:[.25,.75,0,0,.61111],8704:[0,.69444,0,0,.55556],8706:[0,.69444,.05556,.08334,.5309],8707:[0,.69444,0,0,.55556],8709:[.05556,.75,0,0,.5],8711:[0,.68333,0,0,.83334],8712:[.0391,.5391,0,0,.66667],8715:[.0391,.5391,0,0,.66667],8722:[.08333,.58333,0,0,.77778],8723:[.08333,.58333,0,0,.77778],8725:[.25,.75,0,0,.5],8726:[.25,.75,0,0,.5],8727:[-.03472,.46528,0,0,.5],8728:[-.05555,.44445,0,0,.5],8729:[-.05555,.44445,0,0,.5],8730:[.2,.8,0,0,.83334],8733:[0,.43056,0,0,.77778],8734:[0,.43056,0,0,1],8736:[0,.69224,0,0,.72222],8739:[.25,.75,0,0,.27778],8741:[.25,.75,0,0,.5],8743:[0,.55556,0,0,.66667],8744:[0,.55556,0,0,.66667],8745:[0,.55556,0,0,.66667],8746:[0,.55556,0,0,.66667],8747:[.19444,.69444,.11111,0,.41667],8764:[-.13313,.36687,0,0,.77778],8768:[.19444,.69444,0,0,.27778],8771:[-.03625,.46375,0,0,.77778],8773:[-.022,.589,0,0,.778],8776:[-.01688,.48312,0,0,.77778],8781:[-.03625,.46375,0,0,.77778],8784:[-.133,.673,0,0,.778],8801:[-.03625,.46375,0,0,.77778],8804:[.13597,.63597,0,0,.77778],8805:[.13597,.63597,0,0,.77778],8810:[.0391,.5391,0,0,1],8811:[.0391,.5391,0,0,1],8826:[.0391,.5391,0,0,.77778],8827:[.0391,.5391,0,0,.77778],8834:[.0391,.5391,0,0,.77778],8835:[.0391,.5391,0,0,.77778],8838:[.13597,.63597,0,0,.77778],8839:[.13597,.63597,0,0,.77778],8846:[0,.55556,0,0,.66667],8849:[.13597,.63597,0,0,.77778],8850:[.13597,.63597,0,0,.77778],8851:[0,.55556,0,0,.66667],8852:[0,.55556,0,0,.66667],8853:[.08333,.58333,0,0,.77778],8854:[.08333,.58333,0,0,.77778],8855:[.08333,.58333,0,0,.77778],8856:[.08333,.58333,0,0,.77778],8857:[.08333,.58333,0,0,.77778],8866:[0,.69444,0,0,.61111],8867:[0,.69444,0,0,.61111],8868:[0,.69444,0,0,.77778],8869:[0,.69444,0,0,.77778],8872:[.249,.75,0,0,.867],8900:[-.05555,.44445,0,0,.5],8901:[-.05555,.44445,0,0,.27778],8902:[-.03472,.46528,0,0,.5],8904:[.005,.505,0,0,.9],8942:[.03,.903,0,0,.278],8943:[-.19,.313,0,0,1.172],8945:[-.1,.823,0,0,1.282],8968:[.25,.75,0,0,.44445],8969:[.25,.75,0,0,.44445],8970:[.25,.75,0,0,.44445],8971:[.25,.75,0,0,.44445],8994:[-.14236,.35764,0,0,1],8995:[-.14236,.35764,0,0,1],9136:[.244,.744,0,0,.412],9137:[.244,.745,0,0,.412],9651:[.19444,.69444,0,0,.88889],9657:[-.03472,.46528,0,0,.5],9661:[.19444,.69444,0,0,.88889],9667:[-.03472,.46528,0,0,.5],9711:[.19444,.69444,0,0,1],9824:[.12963,.69444,0,0,.77778],9825:[.12963,.69444,0,0,.77778],9826:[.12963,.69444,0,0,.77778],9827:[.12963,.69444,0,0,.77778],9837:[0,.75,0,0,.38889],9838:[.19444,.69444,0,0,.38889],9839:[.19444,.69444,0,0,.38889],10216:[.25,.75,0,0,.38889],10217:[.25,.75,0,0,.38889],10222:[.244,.744,0,0,.412],10223:[.244,.745,0,0,.412],10229:[.011,.511,0,0,1.609],10230:[.011,.511,0,0,1.638],10231:[.011,.511,0,0,1.859],10232:[.024,.525,0,0,1.609],10233:[.024,.525,0,0,1.638],10234:[.024,.525,0,0,1.858],10236:[.011,.511,0,0,1.638],10815:[0,.68333,0,0,.75],10927:[.13597,.63597,0,0,.77778],10928:[.13597,.63597,0,0,.77778],57376:[.19444,.69444,0,0,0]},"Math-BoldItalic":{32:[0,0,0,0,.25],48:[0,.44444,0,0,.575],49:[0,.44444,0,0,.575],50:[0,.44444,0,0,.575],51:[.19444,.44444,0,0,.575],52:[.19444,.44444,0,0,.575],53:[.19444,.44444,0,0,.575],54:[0,.64444,0,0,.575],55:[.19444,.44444,0,0,.575],56:[0,.64444,0,0,.575],57:[.19444,.44444,0,0,.575],65:[0,.68611,0,0,.86944],66:[0,.68611,.04835,0,.8664],67:[0,.68611,.06979,0,.81694],68:[0,.68611,.03194,0,.93812],69:[0,.68611,.05451,0,.81007],70:[0,.68611,.15972,0,.68889],71:[0,.68611,0,0,.88673],72:[0,.68611,.08229,0,.98229],73:[0,.68611,.07778,0,.51111],74:[0,.68611,.10069,0,.63125],75:[0,.68611,.06979,0,.97118],76:[0,.68611,0,0,.75555],77:[0,.68611,.11424,0,1.14201],78:[0,.68611,.11424,0,.95034],79:[0,.68611,.03194,0,.83666],80:[0,.68611,.15972,0,.72309],81:[.19444,.68611,0,0,.86861],82:[0,.68611,.00421,0,.87235],83:[0,.68611,.05382,0,.69271],84:[0,.68611,.15972,0,.63663],85:[0,.68611,.11424,0,.80027],86:[0,.68611,.25555,0,.67778],87:[0,.68611,.15972,0,1.09305],88:[0,.68611,.07778,0,.94722],89:[0,.68611,.25555,0,.67458],90:[0,.68611,.06979,0,.77257],97:[0,.44444,0,0,.63287],98:[0,.69444,0,0,.52083],99:[0,.44444,0,0,.51342],100:[0,.69444,0,0,.60972],101:[0,.44444,0,0,.55361],102:[.19444,.69444,.11042,0,.56806],103:[.19444,.44444,.03704,0,.5449],104:[0,.69444,0,0,.66759],105:[0,.69326,0,0,.4048],106:[.19444,.69326,.0622,0,.47083],107:[0,.69444,.01852,0,.6037],108:[0,.69444,.0088,0,.34815],109:[0,.44444,0,0,1.0324],110:[0,.44444,0,0,.71296],111:[0,.44444,0,0,.58472],112:[.19444,.44444,0,0,.60092],113:[.19444,.44444,.03704,0,.54213],114:[0,.44444,.03194,0,.5287],115:[0,.44444,0,0,.53125],116:[0,.63492,0,0,.41528],117:[0,.44444,0,0,.68102],118:[0,.44444,.03704,0,.56666],119:[0,.44444,.02778,0,.83148],120:[0,.44444,0,0,.65903],121:[.19444,.44444,.03704,0,.59028],122:[0,.44444,.04213,0,.55509],160:[0,0,0,0,.25],915:[0,.68611,.15972,0,.65694],916:[0,.68611,0,0,.95833],920:[0,.68611,.03194,0,.86722],923:[0,.68611,0,0,.80555],926:[0,.68611,.07458,0,.84125],928:[0,.68611,.08229,0,.98229],931:[0,.68611,.05451,0,.88507],933:[0,.68611,.15972,0,.67083],934:[0,.68611,0,0,.76666],936:[0,.68611,.11653,0,.71402],937:[0,.68611,.04835,0,.8789],945:[0,.44444,0,0,.76064],946:[.19444,.69444,.03403,0,.65972],947:[.19444,.44444,.06389,0,.59003],948:[0,.69444,.03819,0,.52222],949:[0,.44444,0,0,.52882],950:[.19444,.69444,.06215,0,.50833],951:[.19444,.44444,.03704,0,.6],952:[0,.69444,.03194,0,.5618],953:[0,.44444,0,0,.41204],954:[0,.44444,0,0,.66759],955:[0,.69444,0,0,.67083],956:[.19444,.44444,0,0,.70787],957:[0,.44444,.06898,0,.57685],958:[.19444,.69444,.03021,0,.50833],959:[0,.44444,0,0,.58472],960:[0,.44444,.03704,0,.68241],961:[.19444,.44444,0,0,.6118],962:[.09722,.44444,.07917,0,.42361],963:[0,.44444,.03704,0,.68588],964:[0,.44444,.13472,0,.52083],965:[0,.44444,.03704,0,.63055],966:[.19444,.44444,0,0,.74722],967:[.19444,.44444,0,0,.71805],968:[.19444,.69444,.03704,0,.75833],969:[0,.44444,.03704,0,.71782],977:[0,.69444,0,0,.69155],981:[.19444,.69444,0,0,.7125],982:[0,.44444,.03194,0,.975],1009:[.19444,.44444,0,0,.6118],1013:[0,.44444,0,0,.48333],57649:[0,.44444,0,0,.39352],57911:[.19444,.44444,0,0,.43889]},"Math-Italic":{32:[0,0,0,0,.25],48:[0,.43056,0,0,.5],49:[0,.43056,0,0,.5],50:[0,.43056,0,0,.5],51:[.19444,.43056,0,0,.5],52:[.19444,.43056,0,0,.5],53:[.19444,.43056,0,0,.5],54:[0,.64444,0,0,.5],55:[.19444,.43056,0,0,.5],56:[0,.64444,0,0,.5],57:[.19444,.43056,0,0,.5],65:[0,.68333,0,.13889,.75],66:[0,.68333,.05017,.08334,.75851],67:[0,.68333,.07153,.08334,.71472],68:[0,.68333,.02778,.05556,.82792],69:[0,.68333,.05764,.08334,.7382],70:[0,.68333,.13889,.08334,.64306],71:[0,.68333,0,.08334,.78625],72:[0,.68333,.08125,.05556,.83125],73:[0,.68333,.07847,.11111,.43958],74:[0,.68333,.09618,.16667,.55451],75:[0,.68333,.07153,.05556,.84931],76:[0,.68333,0,.02778,.68056],77:[0,.68333,.10903,.08334,.97014],78:[0,.68333,.10903,.08334,.80347],79:[0,.68333,.02778,.08334,.76278],80:[0,.68333,.13889,.08334,.64201],81:[.19444,.68333,0,.08334,.79056],82:[0,.68333,.00773,.08334,.75929],83:[0,.68333,.05764,.08334,.6132],84:[0,.68333,.13889,.08334,.58438],85:[0,.68333,.10903,.02778,.68278],86:[0,.68333,.22222,0,.58333],87:[0,.68333,.13889,0,.94445],88:[0,.68333,.07847,.08334,.82847],89:[0,.68333,.22222,0,.58056],90:[0,.68333,.07153,.08334,.68264],97:[0,.43056,0,0,.52859],98:[0,.69444,0,0,.42917],99:[0,.43056,0,.05556,.43276],100:[0,.69444,0,.16667,.52049],101:[0,.43056,0,.05556,.46563],102:[.19444,.69444,.10764,.16667,.48959],103:[.19444,.43056,.03588,.02778,.47697],104:[0,.69444,0,0,.57616],105:[0,.65952,0,0,.34451],106:[.19444,.65952,.05724,0,.41181],107:[0,.69444,.03148,0,.5206],108:[0,.69444,.01968,.08334,.29838],109:[0,.43056,0,0,.87801],110:[0,.43056,0,0,.60023],111:[0,.43056,0,.05556,.48472],112:[.19444,.43056,0,.08334,.50313],113:[.19444,.43056,.03588,.08334,.44641],114:[0,.43056,.02778,.05556,.45116],115:[0,.43056,0,.05556,.46875],116:[0,.61508,0,.08334,.36111],117:[0,.43056,0,.02778,.57246],118:[0,.43056,.03588,.02778,.48472],119:[0,.43056,.02691,.08334,.71592],120:[0,.43056,0,.02778,.57153],121:[.19444,.43056,.03588,.05556,.49028],122:[0,.43056,.04398,.05556,.46505],160:[0,0,0,0,.25],915:[0,.68333,.13889,.08334,.61528],916:[0,.68333,0,.16667,.83334],920:[0,.68333,.02778,.08334,.76278],923:[0,.68333,0,.16667,.69445],926:[0,.68333,.07569,.08334,.74236],928:[0,.68333,.08125,.05556,.83125],931:[0,.68333,.05764,.08334,.77986],933:[0,.68333,.13889,.05556,.58333],934:[0,.68333,0,.08334,.66667],936:[0,.68333,.11,.05556,.61222],937:[0,.68333,.05017,.08334,.7724],945:[0,.43056,.0037,.02778,.6397],946:[.19444,.69444,.05278,.08334,.56563],947:[.19444,.43056,.05556,0,.51773],948:[0,.69444,.03785,.05556,.44444],949:[0,.43056,0,.08334,.46632],950:[.19444,.69444,.07378,.08334,.4375],951:[.19444,.43056,.03588,.05556,.49653],952:[0,.69444,.02778,.08334,.46944],953:[0,.43056,0,.05556,.35394],954:[0,.43056,0,0,.57616],955:[0,.69444,0,0,.58334],956:[.19444,.43056,0,.02778,.60255],957:[0,.43056,.06366,.02778,.49398],958:[.19444,.69444,.04601,.11111,.4375],959:[0,.43056,0,.05556,.48472],960:[0,.43056,.03588,0,.57003],961:[.19444,.43056,0,.08334,.51702],962:[.09722,.43056,.07986,.08334,.36285],963:[0,.43056,.03588,0,.57141],964:[0,.43056,.1132,.02778,.43715],965:[0,.43056,.03588,.02778,.54028],966:[.19444,.43056,0,.08334,.65417],967:[.19444,.43056,0,.05556,.62569],968:[.19444,.69444,.03588,.11111,.65139],969:[0,.43056,.03588,0,.62245],977:[0,.69444,0,.08334,.59144],981:[.19444,.69444,0,.08334,.59583],982:[0,.43056,.02778,0,.82813],1009:[.19444,.43056,0,.08334,.51702],1013:[0,.43056,0,.05556,.4059],57649:[0,.43056,0,.02778,.32246],57911:[.19444,.43056,0,.08334,.38403]},"SansSerif-Bold":{32:[0,0,0,0,.25],33:[0,.69444,0,0,.36667],34:[0,.69444,0,0,.55834],35:[.19444,.69444,0,0,.91667],36:[.05556,.75,0,0,.55],37:[.05556,.75,0,0,1.02912],38:[0,.69444,0,0,.83056],39:[0,.69444,0,0,.30556],40:[.25,.75,0,0,.42778],41:[.25,.75,0,0,.42778],42:[0,.75,0,0,.55],43:[.11667,.61667,0,0,.85556],44:[.10556,.13056,0,0,.30556],45:[0,.45833,0,0,.36667],46:[0,.13056,0,0,.30556],47:[.25,.75,0,0,.55],48:[0,.69444,0,0,.55],49:[0,.69444,0,0,.55],50:[0,.69444,0,0,.55],51:[0,.69444,0,0,.55],52:[0,.69444,0,0,.55],53:[0,.69444,0,0,.55],54:[0,.69444,0,0,.55],55:[0,.69444,0,0,.55],56:[0,.69444,0,0,.55],57:[0,.69444,0,0,.55],58:[0,.45833,0,0,.30556],59:[.10556,.45833,0,0,.30556],61:[-.09375,.40625,0,0,.85556],63:[0,.69444,0,0,.51945],64:[0,.69444,0,0,.73334],65:[0,.69444,0,0,.73334],66:[0,.69444,0,0,.73334],67:[0,.69444,0,0,.70278],68:[0,.69444,0,0,.79445],69:[0,.69444,0,0,.64167],70:[0,.69444,0,0,.61111],71:[0,.69444,0,0,.73334],72:[0,.69444,0,0,.79445],73:[0,.69444,0,0,.33056],74:[0,.69444,0,0,.51945],75:[0,.69444,0,0,.76389],76:[0,.69444,0,0,.58056],77:[0,.69444,0,0,.97778],78:[0,.69444,0,0,.79445],79:[0,.69444,0,0,.79445],80:[0,.69444,0,0,.70278],81:[.10556,.69444,0,0,.79445],82:[0,.69444,0,0,.70278],83:[0,.69444,0,0,.61111],84:[0,.69444,0,0,.73334],85:[0,.69444,0,0,.76389],86:[0,.69444,.01528,0,.73334],87:[0,.69444,.01528,0,1.03889],88:[0,.69444,0,0,.73334],89:[0,.69444,.0275,0,.73334],90:[0,.69444,0,0,.67223],91:[.25,.75,0,0,.34306],93:[.25,.75,0,0,.34306],94:[0,.69444,0,0,.55],95:[.35,.10833,.03056,0,.55],97:[0,.45833,0,0,.525],98:[0,.69444,0,0,.56111],99:[0,.45833,0,0,.48889],100:[0,.69444,0,0,.56111],101:[0,.45833,0,0,.51111],102:[0,.69444,.07639,0,.33611],103:[.19444,.45833,.01528,0,.55],104:[0,.69444,0,0,.56111],105:[0,.69444,0,0,.25556],106:[.19444,.69444,0,0,.28611],107:[0,.69444,0,0,.53056],108:[0,.69444,0,0,.25556],109:[0,.45833,0,0,.86667],110:[0,.45833,0,0,.56111],111:[0,.45833,0,0,.55],112:[.19444,.45833,0,0,.56111],113:[.19444,.45833,0,0,.56111],114:[0,.45833,.01528,0,.37222],115:[0,.45833,0,0,.42167],116:[0,.58929,0,0,.40417],117:[0,.45833,0,0,.56111],118:[0,.45833,.01528,0,.5],119:[0,.45833,.01528,0,.74445],120:[0,.45833,0,0,.5],121:[.19444,.45833,.01528,0,.5],122:[0,.45833,0,0,.47639],126:[.35,.34444,0,0,.55],160:[0,0,0,0,.25],168:[0,.69444,0,0,.55],176:[0,.69444,0,0,.73334],180:[0,.69444,0,0,.55],184:[.17014,0,0,0,.48889],305:[0,.45833,0,0,.25556],567:[.19444,.45833,0,0,.28611],710:[0,.69444,0,0,.55],711:[0,.63542,0,0,.55],713:[0,.63778,0,0,.55],728:[0,.69444,0,0,.55],729:[0,.69444,0,0,.30556],730:[0,.69444,0,0,.73334],732:[0,.69444,0,0,.55],733:[0,.69444,0,0,.55],915:[0,.69444,0,0,.58056],916:[0,.69444,0,0,.91667],920:[0,.69444,0,0,.85556],923:[0,.69444,0,0,.67223],926:[0,.69444,0,0,.73334],928:[0,.69444,0,0,.79445],931:[0,.69444,0,0,.79445],933:[0,.69444,0,0,.85556],934:[0,.69444,0,0,.79445],936:[0,.69444,0,0,.85556],937:[0,.69444,0,0,.79445],8211:[0,.45833,.03056,0,.55],8212:[0,.45833,.03056,0,1.10001],8216:[0,.69444,0,0,.30556],8217:[0,.69444,0,0,.30556],8220:[0,.69444,0,0,.55834],8221:[0,.69444,0,0,.55834]},"SansSerif-Italic":{32:[0,0,0,0,.25],33:[0,.69444,.05733,0,.31945],34:[0,.69444,.00316,0,.5],35:[.19444,.69444,.05087,0,.83334],36:[.05556,.75,.11156,0,.5],37:[.05556,.75,.03126,0,.83334],38:[0,.69444,.03058,0,.75834],39:[0,.69444,.07816,0,.27778],40:[.25,.75,.13164,0,.38889],41:[.25,.75,.02536,0,.38889],42:[0,.75,.11775,0,.5],43:[.08333,.58333,.02536,0,.77778],44:[.125,.08333,0,0,.27778],45:[0,.44444,.01946,0,.33333],46:[0,.08333,0,0,.27778],47:[.25,.75,.13164,0,.5],48:[0,.65556,.11156,0,.5],49:[0,.65556,.11156,0,.5],50:[0,.65556,.11156,0,.5],51:[0,.65556,.11156,0,.5],52:[0,.65556,.11156,0,.5],53:[0,.65556,.11156,0,.5],54:[0,.65556,.11156,0,.5],55:[0,.65556,.11156,0,.5],56:[0,.65556,.11156,0,.5],57:[0,.65556,.11156,0,.5],58:[0,.44444,.02502,0,.27778],59:[.125,.44444,.02502,0,.27778],61:[-.13,.37,.05087,0,.77778],63:[0,.69444,.11809,0,.47222],64:[0,.69444,.07555,0,.66667],65:[0,.69444,0,0,.66667],66:[0,.69444,.08293,0,.66667],67:[0,.69444,.11983,0,.63889],68:[0,.69444,.07555,0,.72223],69:[0,.69444,.11983,0,.59722],70:[0,.69444,.13372,0,.56945],71:[0,.69444,.11983,0,.66667],72:[0,.69444,.08094,0,.70834],73:[0,.69444,.13372,0,.27778],74:[0,.69444,.08094,0,.47222],75:[0,.69444,.11983,0,.69445],76:[0,.69444,0,0,.54167],77:[0,.69444,.08094,0,.875],78:[0,.69444,.08094,0,.70834],79:[0,.69444,.07555,0,.73611],80:[0,.69444,.08293,0,.63889],81:[.125,.69444,.07555,0,.73611],82:[0,.69444,.08293,0,.64584],83:[0,.69444,.09205,0,.55556],84:[0,.69444,.13372,0,.68056],85:[0,.69444,.08094,0,.6875],86:[0,.69444,.1615,0,.66667],87:[0,.69444,.1615,0,.94445],88:[0,.69444,.13372,0,.66667],89:[0,.69444,.17261,0,.66667],90:[0,.69444,.11983,0,.61111],91:[.25,.75,.15942,0,.28889],93:[.25,.75,.08719,0,.28889],94:[0,.69444,.0799,0,.5],95:[.35,.09444,.08616,0,.5],97:[0,.44444,.00981,0,.48056],98:[0,.69444,.03057,0,.51667],99:[0,.44444,.08336,0,.44445],100:[0,.69444,.09483,0,.51667],101:[0,.44444,.06778,0,.44445],102:[0,.69444,.21705,0,.30556],103:[.19444,.44444,.10836,0,.5],104:[0,.69444,.01778,0,.51667],105:[0,.67937,.09718,0,.23889],106:[.19444,.67937,.09162,0,.26667],107:[0,.69444,.08336,0,.48889],108:[0,.69444,.09483,0,.23889],109:[0,.44444,.01778,0,.79445],110:[0,.44444,.01778,0,.51667],111:[0,.44444,.06613,0,.5],112:[.19444,.44444,.0389,0,.51667],113:[.19444,.44444,.04169,0,.51667],114:[0,.44444,.10836,0,.34167],115:[0,.44444,.0778,0,.38333],116:[0,.57143,.07225,0,.36111],117:[0,.44444,.04169,0,.51667],118:[0,.44444,.10836,0,.46111],119:[0,.44444,.10836,0,.68334],120:[0,.44444,.09169,0,.46111],121:[.19444,.44444,.10836,0,.46111],122:[0,.44444,.08752,0,.43472],126:[.35,.32659,.08826,0,.5],160:[0,0,0,0,.25],168:[0,.67937,.06385,0,.5],176:[0,.69444,0,0,.73752],184:[.17014,0,0,0,.44445],305:[0,.44444,.04169,0,.23889],567:[.19444,.44444,.04169,0,.26667],710:[0,.69444,.0799,0,.5],711:[0,.63194,.08432,0,.5],713:[0,.60889,.08776,0,.5],714:[0,.69444,.09205,0,.5],715:[0,.69444,0,0,.5],728:[0,.69444,.09483,0,.5],729:[0,.67937,.07774,0,.27778],730:[0,.69444,0,0,.73752],732:[0,.67659,.08826,0,.5],733:[0,.69444,.09205,0,.5],915:[0,.69444,.13372,0,.54167],916:[0,.69444,0,0,.83334],920:[0,.69444,.07555,0,.77778],923:[0,.69444,0,0,.61111],926:[0,.69444,.12816,0,.66667],928:[0,.69444,.08094,0,.70834],931:[0,.69444,.11983,0,.72222],933:[0,.69444,.09031,0,.77778],934:[0,.69444,.04603,0,.72222],936:[0,.69444,.09031,0,.77778],937:[0,.69444,.08293,0,.72222],8211:[0,.44444,.08616,0,.5],8212:[0,.44444,.08616,0,1],8216:[0,.69444,.07816,0,.27778],8217:[0,.69444,.07816,0,.27778],8220:[0,.69444,.14205,0,.5],8221:[0,.69444,.00316,0,.5]},"SansSerif-Regular":{32:[0,0,0,0,.25],33:[0,.69444,0,0,.31945],34:[0,.69444,0,0,.5],35:[.19444,.69444,0,0,.83334],36:[.05556,.75,0,0,.5],37:[.05556,.75,0,0,.83334],38:[0,.69444,0,0,.75834],39:[0,.69444,0,0,.27778],40:[.25,.75,0,0,.38889],41:[.25,.75,0,0,.38889],42:[0,.75,0,0,.5],43:[.08333,.58333,0,0,.77778],44:[.125,.08333,0,0,.27778],45:[0,.44444,0,0,.33333],46:[0,.08333,0,0,.27778],47:[.25,.75,0,0,.5],48:[0,.65556,0,0,.5],49:[0,.65556,0,0,.5],50:[0,.65556,0,0,.5],51:[0,.65556,0,0,.5],52:[0,.65556,0,0,.5],53:[0,.65556,0,0,.5],54:[0,.65556,0,0,.5],55:[0,.65556,0,0,.5],56:[0,.65556,0,0,.5],57:[0,.65556,0,0,.5],58:[0,.44444,0,0,.27778],59:[.125,.44444,0,0,.27778],61:[-.13,.37,0,0,.77778],63:[0,.69444,0,0,.47222],64:[0,.69444,0,0,.66667],65:[0,.69444,0,0,.66667],66:[0,.69444,0,0,.66667],67:[0,.69444,0,0,.63889],68:[0,.69444,0,0,.72223],69:[0,.69444,0,0,.59722],70:[0,.69444,0,0,.56945],71:[0,.69444,0,0,.66667],72:[0,.69444,0,0,.70834],73:[0,.69444,0,0,.27778],74:[0,.69444,0,0,.47222],75:[0,.69444,0,0,.69445],76:[0,.69444,0,0,.54167],77:[0,.69444,0,0,.875],78:[0,.69444,0,0,.70834],79:[0,.69444,0,0,.73611],80:[0,.69444,0,0,.63889],81:[.125,.69444,0,0,.73611],82:[0,.69444,0,0,.64584],83:[0,.69444,0,0,.55556],84:[0,.69444,0,0,.68056],85:[0,.69444,0,0,.6875],86:[0,.69444,.01389,0,.66667],87:[0,.69444,.01389,0,.94445],88:[0,.69444,0,0,.66667],89:[0,.69444,.025,0,.66667],90:[0,.69444,0,0,.61111],91:[.25,.75,0,0,.28889],93:[.25,.75,0,0,.28889],94:[0,.69444,0,0,.5],95:[.35,.09444,.02778,0,.5],97:[0,.44444,0,0,.48056],98:[0,.69444,0,0,.51667],99:[0,.44444,0,0,.44445],100:[0,.69444,0,0,.51667],101:[0,.44444,0,0,.44445],102:[0,.69444,.06944,0,.30556],103:[.19444,.44444,.01389,0,.5],104:[0,.69444,0,0,.51667],105:[0,.67937,0,0,.23889],106:[.19444,.67937,0,0,.26667],107:[0,.69444,0,0,.48889],108:[0,.69444,0,0,.23889],109:[0,.44444,0,0,.79445],110:[0,.44444,0,0,.51667],111:[0,.44444,0,0,.5],112:[.19444,.44444,0,0,.51667],113:[.19444,.44444,0,0,.51667],114:[0,.44444,.01389,0,.34167],115:[0,.44444,0,0,.38333],116:[0,.57143,0,0,.36111],117:[0,.44444,0,0,.51667],118:[0,.44444,.01389,0,.46111],119:[0,.44444,.01389,0,.68334],120:[0,.44444,0,0,.46111],121:[.19444,.44444,.01389,0,.46111],122:[0,.44444,0,0,.43472],126:[.35,.32659,0,0,.5],160:[0,0,0,0,.25],168:[0,.67937,0,0,.5],176:[0,.69444,0,0,.66667],184:[.17014,0,0,0,.44445],305:[0,.44444,0,0,.23889],567:[.19444,.44444,0,0,.26667],710:[0,.69444,0,0,.5],711:[0,.63194,0,0,.5],713:[0,.60889,0,0,.5],714:[0,.69444,0,0,.5],715:[0,.69444,0,0,.5],728:[0,.69444,0,0,.5],729:[0,.67937,0,0,.27778],730:[0,.69444,0,0,.66667],732:[0,.67659,0,0,.5],733:[0,.69444,0,0,.5],915:[0,.69444,0,0,.54167],916:[0,.69444,0,0,.83334],920:[0,.69444,0,0,.77778],923:[0,.69444,0,0,.61111],926:[0,.69444,0,0,.66667],928:[0,.69444,0,0,.70834],931:[0,.69444,0,0,.72222],933:[0,.69444,0,0,.77778],934:[0,.69444,0,0,.72222],936:[0,.69444,0,0,.77778],937:[0,.69444,0,0,.72222],8211:[0,.44444,.02778,0,.5],8212:[0,.44444,.02778,0,1],8216:[0,.69444,0,0,.27778],8217:[0,.69444,0,0,.27778],8220:[0,.69444,0,0,.5],8221:[0,.69444,0,0,.5]},"Script-Regular":{32:[0,0,0,0,.25],65:[0,.7,.22925,0,.80253],66:[0,.7,.04087,0,.90757],67:[0,.7,.1689,0,.66619],68:[0,.7,.09371,0,.77443],69:[0,.7,.18583,0,.56162],70:[0,.7,.13634,0,.89544],71:[0,.7,.17322,0,.60961],72:[0,.7,.29694,0,.96919],73:[0,.7,.19189,0,.80907],74:[.27778,.7,.19189,0,1.05159],75:[0,.7,.31259,0,.91364],76:[0,.7,.19189,0,.87373],77:[0,.7,.15981,0,1.08031],78:[0,.7,.3525,0,.9015],79:[0,.7,.08078,0,.73787],80:[0,.7,.08078,0,1.01262],81:[0,.7,.03305,0,.88282],82:[0,.7,.06259,0,.85],83:[0,.7,.19189,0,.86767],84:[0,.7,.29087,0,.74697],85:[0,.7,.25815,0,.79996],86:[0,.7,.27523,0,.62204],87:[0,.7,.27523,0,.80532],88:[0,.7,.26006,0,.94445],89:[0,.7,.2939,0,.70961],90:[0,.7,.24037,0,.8212],160:[0,0,0,0,.25]},"Size1-Regular":{32:[0,0,0,0,.25],40:[.35001,.85,0,0,.45834],41:[.35001,.85,0,0,.45834],47:[.35001,.85,0,0,.57778],91:[.35001,.85,0,0,.41667],92:[.35001,.85,0,0,.57778],93:[.35001,.85,0,0,.41667],123:[.35001,.85,0,0,.58334],125:[.35001,.85,0,0,.58334],160:[0,0,0,0,.25],710:[0,.72222,0,0,.55556],732:[0,.72222,0,0,.55556],770:[0,.72222,0,0,.55556],771:[0,.72222,0,0,.55556],8214:[-99e-5,.601,0,0,.77778],8593:[1e-5,.6,0,0,.66667],8595:[1e-5,.6,0,0,.66667],8657:[1e-5,.6,0,0,.77778],8659:[1e-5,.6,0,0,.77778],8719:[.25001,.75,0,0,.94445],8720:[.25001,.75,0,0,.94445],8721:[.25001,.75,0,0,1.05556],8730:[.35001,.85,0,0,1],8739:[-.00599,.606,0,0,.33333],8741:[-.00599,.606,0,0,.55556],8747:[.30612,.805,.19445,0,.47222],8748:[.306,.805,.19445,0,.47222],8749:[.306,.805,.19445,0,.47222],8750:[.30612,.805,.19445,0,.47222],8896:[.25001,.75,0,0,.83334],8897:[.25001,.75,0,0,.83334],8898:[.25001,.75,0,0,.83334],8899:[.25001,.75,0,0,.83334],8968:[.35001,.85,0,0,.47222],8969:[.35001,.85,0,0,.47222],8970:[.35001,.85,0,0,.47222],8971:[.35001,.85,0,0,.47222],9168:[-99e-5,.601,0,0,.66667],10216:[.35001,.85,0,0,.47222],10217:[.35001,.85,0,0,.47222],10752:[.25001,.75,0,0,1.11111],10753:[.25001,.75,0,0,1.11111],10754:[.25001,.75,0,0,1.11111],10756:[.25001,.75,0,0,.83334],10758:[.25001,.75,0,0,.83334]},"Size2-Regular":{32:[0,0,0,0,.25],40:[.65002,1.15,0,0,.59722],41:[.65002,1.15,0,0,.59722],47:[.65002,1.15,0,0,.81111],91:[.65002,1.15,0,0,.47222],92:[.65002,1.15,0,0,.81111],93:[.65002,1.15,0,0,.47222],123:[.65002,1.15,0,0,.66667],125:[.65002,1.15,0,0,.66667],160:[0,0,0,0,.25],710:[0,.75,0,0,1],732:[0,.75,0,0,1],770:[0,.75,0,0,1],771:[0,.75,0,0,1],8719:[.55001,1.05,0,0,1.27778],8720:[.55001,1.05,0,0,1.27778],8721:[.55001,1.05,0,0,1.44445],8730:[.65002,1.15,0,0,1],8747:[.86225,1.36,.44445,0,.55556],8748:[.862,1.36,.44445,0,.55556],8749:[.862,1.36,.44445,0,.55556],8750:[.86225,1.36,.44445,0,.55556],8896:[.55001,1.05,0,0,1.11111],8897:[.55001,1.05,0,0,1.11111],8898:[.55001,1.05,0,0,1.11111],8899:[.55001,1.05,0,0,1.11111],8968:[.65002,1.15,0,0,.52778],8969:[.65002,1.15,0,0,.52778],8970:[.65002,1.15,0,0,.52778],8971:[.65002,1.15,0,0,.52778],10216:[.65002,1.15,0,0,.61111],10217:[.65002,1.15,0,0,.61111],10752:[.55001,1.05,0,0,1.51112],10753:[.55001,1.05,0,0,1.51112],10754:[.55001,1.05,0,0,1.51112],10756:[.55001,1.05,0,0,1.11111],10758:[.55001,1.05,0,0,1.11111]},"Size3-Regular":{32:[0,0,0,0,.25],40:[.95003,1.45,0,0,.73611],41:[.95003,1.45,0,0,.73611],47:[.95003,1.45,0,0,1.04445],91:[.95003,1.45,0,0,.52778],92:[.95003,1.45,0,0,1.04445],93:[.95003,1.45,0,0,.52778],123:[.95003,1.45,0,0,.75],125:[.95003,1.45,0,0,.75],160:[0,0,0,0,.25],710:[0,.75,0,0,1.44445],732:[0,.75,0,0,1.44445],770:[0,.75,0,0,1.44445],771:[0,.75,0,0,1.44445],8730:[.95003,1.45,0,0,1],8968:[.95003,1.45,0,0,.58334],8969:[.95003,1.45,0,0,.58334],8970:[.95003,1.45,0,0,.58334],8971:[.95003,1.45,0,0,.58334],10216:[.95003,1.45,0,0,.75],10217:[.95003,1.45,0,0,.75]},"Size4-Regular":{32:[0,0,0,0,.25],40:[1.25003,1.75,0,0,.79167],41:[1.25003,1.75,0,0,.79167],47:[1.25003,1.75,0,0,1.27778],91:[1.25003,1.75,0,0,.58334],92:[1.25003,1.75,0,0,1.27778],93:[1.25003,1.75,0,0,.58334],123:[1.25003,1.75,0,0,.80556],125:[1.25003,1.75,0,0,.80556],160:[0,0,0,0,.25],710:[0,.825,0,0,1.8889],732:[0,.825,0,0,1.8889],770:[0,.825,0,0,1.8889],771:[0,.825,0,0,1.8889],8730:[1.25003,1.75,0,0,1],8968:[1.25003,1.75,0,0,.63889],8969:[1.25003,1.75,0,0,.63889],8970:[1.25003,1.75,0,0,.63889],8971:[1.25003,1.75,0,0,.63889],9115:[.64502,1.155,0,0,.875],9116:[1e-5,.6,0,0,.875],9117:[.64502,1.155,0,0,.875],9118:[.64502,1.155,0,0,.875],9119:[1e-5,.6,0,0,.875],9120:[.64502,1.155,0,0,.875],9121:[.64502,1.155,0,0,.66667],9122:[-99e-5,.601,0,0,.66667],9123:[.64502,1.155,0,0,.66667],9124:[.64502,1.155,0,0,.66667],9125:[-99e-5,.601,0,0,.66667],9126:[.64502,1.155,0,0,.66667],9127:[1e-5,.9,0,0,.88889],9128:[.65002,1.15,0,0,.88889],9129:[.90001,0,0,0,.88889],9130:[0,.3,0,0,.88889],9131:[1e-5,.9,0,0,.88889],9132:[.65002,1.15,0,0,.88889],9133:[.90001,0,0,0,.88889],9143:[.88502,.915,0,0,1.05556],10216:[1.25003,1.75,0,0,.80556],10217:[1.25003,1.75,0,0,.80556],57344:[-.00499,.605,0,0,1.05556],57345:[-.00499,.605,0,0,1.05556],57680:[0,.12,0,0,.45],57681:[0,.12,0,0,.45],57682:[0,.12,0,0,.45],57683:[0,.12,0,0,.45]},"Typewriter-Regular":{32:[0,0,0,0,.525],33:[0,.61111,0,0,.525],34:[0,.61111,0,0,.525],35:[0,.61111,0,0,.525],36:[.08333,.69444,0,0,.525],37:[.08333,.69444,0,0,.525],38:[0,.61111,0,0,.525],39:[0,.61111,0,0,.525],40:[.08333,.69444,0,0,.525],41:[.08333,.69444,0,0,.525],42:[0,.52083,0,0,.525],43:[-.08056,.53055,0,0,.525],44:[.13889,.125,0,0,.525],45:[-.08056,.53055,0,0,.525],46:[0,.125,0,0,.525],47:[.08333,.69444,0,0,.525],48:[0,.61111,0,0,.525],49:[0,.61111,0,0,.525],50:[0,.61111,0,0,.525],51:[0,.61111,0,0,.525],52:[0,.61111,0,0,.525],53:[0,.61111,0,0,.525],54:[0,.61111,0,0,.525],55:[0,.61111,0,0,.525],56:[0,.61111,0,0,.525],57:[0,.61111,0,0,.525],58:[0,.43056,0,0,.525],59:[.13889,.43056,0,0,.525],60:[-.05556,.55556,0,0,.525],61:[-.19549,.41562,0,0,.525],62:[-.05556,.55556,0,0,.525],63:[0,.61111,0,0,.525],64:[0,.61111,0,0,.525],65:[0,.61111,0,0,.525],66:[0,.61111,0,0,.525],67:[0,.61111,0,0,.525],68:[0,.61111,0,0,.525],69:[0,.61111,0,0,.525],70:[0,.61111,0,0,.525],71:[0,.61111,0,0,.525],72:[0,.61111,0,0,.525],73:[0,.61111,0,0,.525],74:[0,.61111,0,0,.525],75:[0,.61111,0,0,.525],76:[0,.61111,0,0,.525],77:[0,.61111,0,0,.525],78:[0,.61111,0,0,.525],79:[0,.61111,0,0,.525],80:[0,.61111,0,0,.525],81:[.13889,.61111,0,0,.525],82:[0,.61111,0,0,.525],83:[0,.61111,0,0,.525],84:[0,.61111,0,0,.525],85:[0,.61111,0,0,.525],86:[0,.61111,0,0,.525],87:[0,.61111,0,0,.525],88:[0,.61111,0,0,.525],89:[0,.61111,0,0,.525],90:[0,.61111,0,0,.525],91:[.08333,.69444,0,0,.525],92:[.08333,.69444,0,0,.525],93:[.08333,.69444,0,0,.525],94:[0,.61111,0,0,.525],95:[.09514,0,0,0,.525],96:[0,.61111,0,0,.525],97:[0,.43056,0,0,.525],98:[0,.61111,0,0,.525],99:[0,.43056,0,0,.525],100:[0,.61111,0,0,.525],101:[0,.43056,0,0,.525],102:[0,.61111,0,0,.525],103:[.22222,.43056,0,0,.525],104:[0,.61111,0,0,.525],105:[0,.61111,0,0,.525],106:[.22222,.61111,0,0,.525],107:[0,.61111,0,0,.525],108:[0,.61111,0,0,.525],109:[0,.43056,0,0,.525],110:[0,.43056,0,0,.525],111:[0,.43056,0,0,.525],112:[.22222,.43056,0,0,.525],113:[.22222,.43056,0,0,.525],114:[0,.43056,0,0,.525],115:[0,.43056,0,0,.525],116:[0,.55358,0,0,.525],117:[0,.43056,0,0,.525],118:[0,.43056,0,0,.525],119:[0,.43056,0,0,.525],120:[0,.43056,0,0,.525],121:[.22222,.43056,0,0,.525],122:[0,.43056,0,0,.525],123:[.08333,.69444,0,0,.525],124:[.08333,.69444,0,0,.525],125:[.08333,.69444,0,0,.525],126:[0,.61111,0,0,.525],127:[0,.61111,0,0,.525],160:[0,0,0,0,.525],176:[0,.61111,0,0,.525],184:[.19445,0,0,0,.525],305:[0,.43056,0,0,.525],567:[.22222,.43056,0,0,.525],711:[0,.56597,0,0,.525],713:[0,.56555,0,0,.525],714:[0,.61111,0,0,.525],715:[0,.61111,0,0,.525],728:[0,.61111,0,0,.525],730:[0,.61111,0,0,.525],770:[0,.61111,0,0,.525],771:[0,.61111,0,0,.525],776:[0,.61111,0,0,.525],915:[0,.61111,0,0,.525],916:[0,.61111,0,0,.525],920:[0,.61111,0,0,.525],923:[0,.61111,0,0,.525],926:[0,.61111,0,0,.525],928:[0,.61111,0,0,.525],931:[0,.61111,0,0,.525],933:[0,.61111,0,0,.525],934:[0,.61111,0,0,.525],936:[0,.61111,0,0,.525],937:[0,.61111,0,0,.525],8216:[0,.61111,0,0,.525],8217:[0,.61111,0,0,.525],8242:[0,.61111,0,0,.525],9251:[.11111,.21944,0,0,.525]}};var sigmasAndXis={slant:[.25,.25,.25],space:[0,0,0],stretch:[0,0,0],shrink:[0,0,0],xHeight:[.431,.431,.431],quad:[1,1.171,1.472],extraSpace:[0,0,0],num1:[.677,.732,.925],num2:[.394,.384,.387],num3:[.444,.471,.504],denom1:[.686,.752,1.025],denom2:[.345,.344,.532],sup1:[.413,.503,.504],sup2:[.363,.431,.404],sup3:[.289,.286,.294],sub1:[.15,.143,.2],sub2:[.247,.286,.4],supDrop:[.386,.353,.494],subDrop:[.05,.071,.1],delim1:[2.39,1.7,1.98],delim2:[1.01,1.157,1.42],axisHeight:[.25,.25,.25],defaultRuleThickness:[.04,.049,.049],bigOpSpacing1:[.111,.111,.111],bigOpSpacing2:[.166,.166,.166],bigOpSpacing3:[.2,.2,.2],bigOpSpacing4:[.6,.611,.611],bigOpSpacing5:[.1,.143,.143],sqrtRuleThickness:[.04,.04,.04],ptPerEm:[10,10,10],doubleRuleSep:[.2,.2,.2],arrayRuleWidth:[.04,.04,.04],fboxsep:[.3,.3,.3],fboxrule:[.04,.04,.04]};var extraCharacterMap={"Å":"A","Ð":"D","Þ":"o","å":"a","ð":"d","þ":"o","А":"A","Б":"B","В":"B","Г":"F","Д":"A","Е":"E","Ж":"K","З":"3","И":"N","Й":"N","К":"K","Л":"N","М":"M","Н":"H","О":"O","П":"N","Р":"P","С":"C","Т":"T","У":"y","Ф":"O","Х":"X","Ц":"U","Ч":"h","Ш":"W","Щ":"W","Ъ":"B","Ы":"X","Ь":"B","Э":"3","Ю":"X","Я":"R","а":"a","б":"b","в":"a","г":"r","д":"y","е":"e","ж":"m","з":"e","и":"n","й":"n","к":"n","л":"n","м":"m","н":"n","о":"o","п":"n","р":"p","с":"c","т":"o","у":"y","ф":"b","х":"x","ц":"n","ч":"n","ш":"w","щ":"w","ъ":"a","ы":"m","ь":"a","э":"e","ю":"m","я":"r"};function setFontMetrics(e,t){fontMetricsData[e]=t}function getCharacterMetrics(e,t,r){if(!fontMetricsData[t]){throw new Error("Font metrics not found for font: "+t+".")}var n=e.charCodeAt(0);var a=fontMetricsData[t][n];if(!a&&e[0]in extraCharacterMap){n=extraCharacterMap[e[0]].charCodeAt(0);a=fontMetricsData[t][n]}if(!a&&r==="text"){if(supportedCodepoint(n)){a=fontMetricsData[t][77]}}if(a){return{depth:a[0],height:a[1],italic:a[2],skew:a[3],width:a[4]}}}var fontMetricsBySizeIndex={};function getGlobalMetrics(e){var t;if(e>=5){t=0}else if(e>=3){t=1}else{t=2}if(!fontMetricsBySizeIndex[t]){var r=fontMetricsBySizeIndex[t]={cssEmPerMu:sigmasAndXis.quad[t]/18};for(var n in sigmasAndXis){if(sigmasAndXis.hasOwnProperty(n)){r[n]=sigmasAndXis[n][t]}}}return fontMetricsBySizeIndex[t]}var sizeStyleMap=[[1,1,1],[2,1,1],[3,1,1],[4,2,1],[5,2,1],[6,3,1],[7,4,2],[8,6,3],[9,7,6],[10,8,7],[11,10,9]];var sizeMultipliers=[.5,.6,.7,.8,.9,1,1.2,1.44,1.728,2.074,2.488];var sizeAtStyle=function e(t,r){return r.size<2?t:sizeStyleMap[t-1][r.size-1]};class Options{constructor(e){this.style=void 0;this.color=void 0;this.size=void 0;this.textSize=void 0;this.phantom=void 0;this.font=void 0;this.fontFamily=void 0;this.fontWeight=void 0;this.fontShape=void 0;this.sizeMultiplier=void 0;this.maxSize=void 0;this.minRuleThickness=void 0;this._fontMetrics=void 0;this.style=e.style;this.color=e.color;this.size=e.size||Options.BASESIZE;this.textSize=e.textSize||this.size;this.phantom=!!e.phantom;this.font=e.font||"";this.fontFamily=e.fontFamily||"";this.fontWeight=e.fontWeight||"";this.fontShape=e.fontShape||"";this.sizeMultiplier=sizeMultipliers[this.size-1];this.maxSize=e.maxSize;this.minRuleThickness=e.minRuleThickness;this._fontMetrics=undefined}extend(e){var t={style:this.style,size:this.size,textSize:this.textSize,color:this.color,phantom:this.phantom,font:this.font,fontFamily:this.fontFamily,fontWeight:this.fontWeight,fontShape:this.fontShape,maxSize:this.maxSize,minRuleThickness:this.minRuleThickness};for(var r in e){if(e.hasOwnProperty(r)){t[r]=e[r]}}return new Options(t)}havingStyle(e){if(this.style===e){return this}else{return this.extend({style:e,size:sizeAtStyle(this.textSize,e)})}}havingCrampedStyle(){return this.havingStyle(this.style.cramp())}havingSize(e){if(this.size===e&&this.textSize===e){return this}else{return this.extend({style:this.style.text(),size:e,textSize:e,sizeMultiplier:sizeMultipliers[e-1]})}}havingBaseStyle(e){e=e||this.style.text();var t=sizeAtStyle(Options.BASESIZE,e);if(this.size===t&&this.textSize===Options.BASESIZE&&this.style===e){return this}else{return this.extend({style:e,size:t})}}havingBaseSizing(){var e;switch(this.style.id){case 4:case 5:e=3;break;case 6:case 7:e=1;break;default:e=6}return this.extend({style:this.style.text(),size:e})}withColor(e){return this.extend({color:e})}withPhantom(){return this.extend({phantom:true})}withFont(e){return this.extend({font:e})}withTextFontFamily(e){return this.extend({fontFamily:e,font:""})}withTextFontWeight(e){return this.extend({fontWeight:e,font:""})}withTextFontShape(e){return this.extend({fontShape:e,font:""})}sizingClasses(e){if(e.size!==this.size){return["sizing","reset-size"+e.size,"size"+this.size]}else{return[]}}baseSizingClasses(){if(this.size!==Options.BASESIZE){return["sizing","reset-size"+this.size,"size"+Options.BASESIZE]}else{return[]}}fontMetrics(){if(!this._fontMetrics){this._fontMetrics=getGlobalMetrics(this.size)}return this._fontMetrics}getColor(){if(this.phantom){return"transparent"}else{return this.color}}}Options.BASESIZE=6;var ptPerUnit={pt:1,mm:7227/2540,cm:7227/254,in:72.27,bp:803/800,pc:12,dd:1238/1157,cc:14856/1157,nd:685/642,nc:1370/107,sp:1/65536,px:803/800};var relativeUnit={ex:true,em:true,mu:true};var validUnit=function e(t){if(typeof t!=="string"){t=t.unit}return t in ptPerUnit||t in relativeUnit||t==="ex"};var calculateSize=function e(t,r){var n;if(t.unit in ptPerUnit){n=ptPerUnit[t.unit]/r.fontMetrics().ptPerEm/r.sizeMultiplier}else if(t.unit==="mu"){n=r.fontMetrics().cssEmPerMu}else{var a;if(r.style.isTight()){a=r.havingStyle(r.style.text())}else{a=r}if(t.unit==="ex"){n=a.fontMetrics().xHeight}else if(t.unit==="em"){n=a.fontMetrics().quad}else{throw new ParseError("Invalid unit: '"+t.unit+"'")}if(a!==r){n*=a.sizeMultiplier/r.sizeMultiplier}}return Math.min(t.number*n,r.maxSize)};var makeEm=function e(t){return+t.toFixed(4)+"em"};var createClass=function e(t){return t.filter((e=>e)).join(" ")};var initNode=function e(t,r,n){this.classes=t||[];this.attributes={};this.height=0;this.depth=0;this.maxFontSize=0;this.style=n||{};if(r){if(r.style.isTight()){this.classes.push("mtight")}var a=r.getColor();if(a){this.style.color=a}}};var toNode=function e(t){var r=document.createElement(t);r.className=createClass(this.classes);for(var n in this.style){if(this.style.hasOwnProperty(n)){r.style[n]=this.style[n]}}for(var a in this.attributes){if(this.attributes.hasOwnProperty(a)){r.setAttribute(a,this.attributes[a])}}for(var o=0;o<this.children.length;o++){r.appendChild(this.children[o].toNode())}return r};var toMarkup=function e(t){var r="<"+t;if(this.classes.length){r+=' class="'+utils.escape(createClass(this.classes))+'"'}var n="";for(var a in this.style){if(this.style.hasOwnProperty(a)){n+=utils.hyphenate(a)+":"+this.style[a]+";"}}if(n){r+=' style="'+utils.escape(n)+'"'}for(var o in this.attributes){if(this.attributes.hasOwnProperty(o)){r+=" "+o+'="'+utils.escape(this.attributes[o])+'"'}}r+=">";for(var i=0;i<this.children.length;i++){r+=this.children[i].toMarkup()}r+="</"+t+">";return r};class Span{constructor(e,t,r,n){this.children=void 0;this.attributes=void 0;this.classes=void 0;this.height=void 0;this.depth=void 0;this.width=void 0;this.maxFontSize=void 0;this.style=void 0;initNode.call(this,e,r,n);this.children=t||[]}setAttribute(e,t){this.attributes[e]=t}hasClass(e){return utils.contains(this.classes,e)}toNode(){return toNode.call(this,"span")}toMarkup(){return toMarkup.call(this,"span")}}class Anchor{constructor(e,t,r,n){this.children=void 0;this.attributes=void 0;this.classes=void 0;this.height=void 0;this.depth=void 0;this.maxFontSize=void 0;this.style=void 0;initNode.call(this,t,n);this.children=r||[];this.setAttribute("href",e)}setAttribute(e,t){this.attributes[e]=t}hasClass(e){return utils.contains(this.classes,e)}toNode(){return toNode.call(this,"a")}toMarkup(){return toMarkup.call(this,"a")}}class Img{constructor(e,t,r){this.src=void 0;this.alt=void 0;this.classes=void 0;this.height=void 0;this.depth=void 0;this.maxFontSize=void 0;this.style=void 0;this.alt=t;this.src=e;this.classes=["mord"];this.style=r}hasClass(e){return utils.contains(this.classes,e)}toNode(){var e=document.createElement("img");e.src=this.src;e.alt=this.alt;e.className="mord";for(var t in this.style){if(this.style.hasOwnProperty(t)){e.style[t]=this.style[t]}}return e}toMarkup(){var e="<img  src='"+this.src+" 'alt='"+this.alt+"' ";var t="";for(var r in this.style){if(this.style.hasOwnProperty(r)){t+=utils.hyphenate(r)+":"+this.style[r]+";"}}if(t){e+=' style="'+utils.escape(t)+'"'}e+="'/>";return e}}var iCombinations={"î":"ı̂","ï":"ı̈","í":"ı́","ì":"ı̀"};class SymbolNode{constructor(e,t,r,n,a,o,i,l){this.text=void 0;this.height=void 0;this.depth=void 0;this.italic=void 0;this.skew=void 0;this.width=void 0;this.maxFontSize=void 0;this.classes=void 0;this.style=void 0;this.text=e;this.height=t||0;this.depth=r||0;this.italic=n||0;this.skew=a||0;this.width=o||0;this.classes=i||[];this.style=l||{};this.maxFontSize=0;var s=scriptFromCodepoint(this.text.charCodeAt(0));if(s){this.classes.push(s+"_fallback")}if(/[îïíì]/.test(this.text)){this.text=iCombinations[this.text]}}hasClass(e){return utils.contains(this.classes,e)}toNode(){var e=document.createTextNode(this.text);var t=null;if(this.italic>0){t=document.createElement("span");t.style.marginRight=makeEm(this.italic)}if(this.classes.length>0){t=t||document.createElement("span");t.className=createClass(this.classes)}for(var r in this.style){if(this.style.hasOwnProperty(r)){t=t||document.createElement("span");t.style[r]=this.style[r]}}if(t){t.appendChild(e);return t}else{return e}}toMarkup(){var e=false;var t="<span";if(this.classes.length){e=true;t+=' class="';t+=utils.escape(createClass(this.classes));t+='"'}var r="";if(this.italic>0){r+="margin-right:"+this.italic+"em;"}for(var n in this.style){if(this.style.hasOwnProperty(n)){r+=utils.hyphenate(n)+":"+this.style[n]+";"}}if(r){e=true;t+=' style="'+utils.escape(r)+'"'}var a=utils.escape(this.text);if(e){t+=">";t+=a;t+="</span>";return t}else{return a}}}class SvgNode{constructor(e,t){this.children=void 0;this.attributes=void 0;this.children=e||[];this.attributes=t||{}}toNode(){var e="http://www.w3.org/2000/svg";var t=document.createElementNS(e,"svg");for(var r in this.attributes){if(Object.prototype.hasOwnProperty.call(this.attributes,r)){t.setAttribute(r,this.attributes[r])}}for(var n=0;n<this.children.length;n++){t.appendChild(this.children[n].toNode())}return t}toMarkup(){var e='<svg xmlns="http://www.w3.org/2000/svg"';for(var t in this.attributes){if(Object.prototype.hasOwnProperty.call(this.attributes,t)){e+=" "+t+"='"+this.attributes[t]+"'"}}e+=">";for(var r=0;r<this.children.length;r++){e+=this.children[r].toMarkup()}e+="</svg>";return e}}class PathNode{constructor(e,t){this.pathName=void 0;this.alternate=void 0;this.pathName=e;this.alternate=t}toNode(){var e="http://www.w3.org/2000/svg";var t=document.createElementNS(e,"path");if(this.alternate){t.setAttribute("d",this.alternate)}else{t.setAttribute("d",path[this.pathName])}return t}toMarkup(){if(this.alternate){return"<path d='"+this.alternate+"'/>"}else{return"<path d='"+path[this.pathName]+"'/>"}}}class LineNode{constructor(e){this.attributes=void 0;this.attributes=e||{}}toNode(){var e="http://www.w3.org/2000/svg";var t=document.createElementNS(e,"line");for(var r in this.attributes){if(Object.prototype.hasOwnProperty.call(this.attributes,r)){t.setAttribute(r,this.attributes[r])}}return t}toMarkup(){var e="<line";for(var t in this.attributes){if(Object.prototype.hasOwnProperty.call(this.attributes,t)){e+=" "+t+"='"+this.attributes[t]+"'"}}e+="/>";return e}}function assertSymbolDomNode(e){if(e instanceof SymbolNode){return e}else{throw new Error("Expected symbolNode but got "+String(e)+".")}}function assertSpan(e){if(e instanceof Span){return e}else{throw new Error("Expected span<HtmlDomNode> but got "+String(e)+".")}}var ATOMS={bin:1,close:1,inner:1,open:1,punct:1,rel:1};var NON_ATOMS={"accent-token":1,mathord:1,"op-token":1,spacing:1,textord:1};var symbols={math:{},text:{}};function defineSymbol(e,t,r,n,a,o){symbols[e][a]={font:t,group:r,replace:n};if(o&&n){symbols[e][n]=symbols[e][a]}}var math="math";var text="text";var main="main";var ams="ams";var accent="accent-token";var bin="bin";var close="close";var inner="inner";var mathord="mathord";var op="op-token";var open="open";var punct="punct";var rel="rel";var spacing="spacing";var textord="textord";defineSymbol(math,main,rel,"≡","\\equiv",true);defineSymbol(math,main,rel,"≺","\\prec",true);defineSymbol(math,main,rel,"≻","\\succ",true);defineSymbol(math,main,rel,"∼","\\sim",true);defineSymbol(math,main,rel,"⊥","\\perp");defineSymbol(math,main,rel,"⪯","\\preceq",true);defineSymbol(math,main,rel,"⪰","\\succeq",true);defineSymbol(math,main,rel,"≃","\\simeq",true);defineSymbol(math,main,rel,"∣","\\mid",true);defineSymbol(math,main,rel,"≪","\\ll",true);defineSymbol(math,main,rel,"≫","\\gg",true);defineSymbol(math,main,rel,"≍","\\asymp",true);defineSymbol(math,main,rel,"∥","\\parallel");defineSymbol(math,main,rel,"⋈","\\bowtie",true);defineSymbol(math,main,rel,"⌣","\\smile",true);defineSymbol(math,main,rel,"⊑","\\sqsubseteq",true);defineSymbol(math,main,rel,"⊒","\\sqsupseteq",true);defineSymbol(math,main,rel,"≐","\\doteq",true);defineSymbol(math,main,rel,"⌢","\\frown",true);defineSymbol(math,main,rel,"∋","\\ni",true);defineSymbol(math,main,rel,"∝","\\propto",true);defineSymbol(math,main,rel,"⊢","\\vdash",true);defineSymbol(math,main,rel,"⊣","\\dashv",true);defineSymbol(math,main,rel,"∋","\\owns");defineSymbol(math,main,punct,".","\\ldotp");defineSymbol(math,main,punct,"⋅","\\cdotp");defineSymbol(math,main,textord,"#","\\#");defineSymbol(text,main,textord,"#","\\#");defineSymbol(math,main,textord,"&","\\&");defineSymbol(text,main,textord,"&","\\&");defineSymbol(math,main,textord,"ℵ","\\aleph",true);defineSymbol(math,main,textord,"∀","\\forall",true);defineSymbol(math,main,textord,"ℏ","\\hbar",true);defineSymbol(math,main,textord,"∃","\\exists",true);defineSymbol(math,main,textord,"∇","\\nabla",true);defineSymbol(math,main,textord,"♭","\\flat",true);defineSymbol(math,main,textord,"ℓ","\\ell",true);defineSymbol(math,main,textord,"♮","\\natural",true);defineSymbol(math,main,textord,"♣","\\clubsuit",true);defineSymbol(math,main,textord,"℘","\\wp",true);defineSymbol(math,main,textord,"♯","\\sharp",true);defineSymbol(math,main,textord,"♢","\\diamondsuit",true);defineSymbol(math,main,textord,"ℜ","\\Re",true);defineSymbol(math,main,textord,"♡","\\heartsuit",true);defineSymbol(math,main,textord,"ℑ","\\Im",true);defineSymbol(math,main,textord,"♠","\\spadesuit",true);defineSymbol(math,main,textord,"§","\\S",true);defineSymbol(text,main,textord,"§","\\S");defineSymbol(math,main,textord,"¶","\\P",true);defineSymbol(text,main,textord,"¶","\\P");defineSymbol(math,main,textord,"†","\\dag");defineSymbol(text,main,textord,"†","\\dag");defineSymbol(text,main,textord,"†","\\textdagger");defineSymbol(math,main,textord,"‡","\\ddag");defineSymbol(text,main,textord,"‡","\\ddag");defineSymbol(text,main,textord,"‡","\\textdaggerdbl");defineSymbol(math,main,close,"⎱","\\rmoustache",true);defineSymbol(math,main,open,"⎰","\\lmoustache",true);defineSymbol(math,main,close,"⟯","\\rgroup",true);defineSymbol(math,main,open,"⟮","\\lgroup",true);defineSymbol(math,main,bin,"∓","\\mp",true);defineSymbol(math,main,bin,"⊖","\\ominus",true);defineSymbol(math,main,bin,"⊎","\\uplus",true);defineSymbol(math,main,bin,"⊓","\\sqcap",true);defineSymbol(math,main,bin,"∗","\\ast");defineSymbol(math,main,bin,"⊔","\\sqcup",true);defineSymbol(math,main,bin,"◯","\\bigcirc",true);defineSymbol(math,main,bin,"∙","\\bullet",true);defineSymbol(math,main,bin,"‡","\\ddagger");defineSymbol(math,main,bin,"≀","\\wr",true);defineSymbol(math,main,bin,"⨿","\\amalg");defineSymbol(math,main,bin,"&","\\And");defineSymbol(math,main,rel,"⟵","\\longleftarrow",true);defineSymbol(math,main,rel,"⇐","\\Leftarrow",true);defineSymbol(math,main,rel,"⟸","\\Longleftarrow",true);defineSymbol(math,main,rel,"⟶","\\longrightarrow",true);defineSymbol(math,main,rel,"⇒","\\Rightarrow",true);defineSymbol(math,main,rel,"⟹","\\Longrightarrow",true);defineSymbol(math,main,rel,"↔","\\leftrightarrow",true);defineSymbol(math,main,rel,"⟷","\\longleftrightarrow",true);defineSymbol(math,main,rel,"⇔","\\Leftrightarrow",true);defineSymbol(math,main,rel,"⟺","\\Longleftrightarrow",true);defineSymbol(math,main,rel,"↦","\\mapsto",true);defineSymbol(math,main,rel,"⟼","\\longmapsto",true);defineSymbol(math,main,rel,"↗","\\nearrow",true);defineSymbol(math,main,rel,"↩","\\hookleftarrow",true);defineSymbol(math,main,rel,"↪","\\hookrightarrow",true);defineSymbol(math,main,rel,"↘","\\searrow",true);defineSymbol(math,main,rel,"↼","\\leftharpoonup",true);defineSymbol(math,main,rel,"⇀","\\rightharpoonup",true);defineSymbol(math,main,rel,"↙","\\swarrow",true);defineSymbol(math,main,rel,"↽","\\leftharpoondown",true);defineSymbol(math,main,rel,"⇁","\\rightharpoondown",true);defineSymbol(math,main,rel,"↖","\\nwarrow",true);defineSymbol(math,main,rel,"⇌","\\rightleftharpoons",true);defineSymbol(math,ams,rel,"≮","\\nless",true);defineSymbol(math,ams,rel,"","\\@nleqslant");defineSymbol(math,ams,rel,"","\\@nleqq");defineSymbol(math,ams,rel,"⪇","\\lneq",true);defineSymbol(math,ams,rel,"≨","\\lneqq",true);defineSymbol(math,ams,rel,"","\\@lvertneqq");defineSymbol(math,ams,rel,"⋦","\\lnsim",true);defineSymbol(math,ams,rel,"⪉","\\lnapprox",true);defineSymbol(math,ams,rel,"⊀","\\nprec",true);defineSymbol(math,ams,rel,"⋠","\\npreceq",true);defineSymbol(math,ams,rel,"⋨","\\precnsim",true);defineSymbol(math,ams,rel,"⪹","\\precnapprox",true);defineSymbol(math,ams,rel,"≁","\\nsim",true);defineSymbol(math,ams,rel,"","\\@nshortmid");defineSymbol(math,ams,rel,"∤","\\nmid",true);defineSymbol(math,ams,rel,"⊬","\\nvdash",true);defineSymbol(math,ams,rel,"⊭","\\nvDash",true);defineSymbol(math,ams,rel,"⋪","\\ntriangleleft");defineSymbol(math,ams,rel,"⋬","\\ntrianglelefteq",true);defineSymbol(math,ams,rel,"⊊","\\subsetneq",true);defineSymbol(math,ams,rel,"","\\@varsubsetneq");defineSymbol(math,ams,rel,"⫋","\\subsetneqq",true);defineSymbol(math,ams,rel,"","\\@varsubsetneqq");defineSymbol(math,ams,rel,"≯","\\ngtr",true);defineSymbol(math,ams,rel,"","\\@ngeqslant");defineSymbol(math,ams,rel,"","\\@ngeqq");defineSymbol(math,ams,rel,"⪈","\\gneq",true);defineSymbol(math,ams,rel,"≩","\\gneqq",true);defineSymbol(math,ams,rel,"","\\@gvertneqq");defineSymbol(math,ams,rel,"⋧","\\gnsim",true);defineSymbol(math,ams,rel,"⪊","\\gnapprox",true);defineSymbol(math,ams,rel,"⊁","\\nsucc",true);defineSymbol(math,ams,rel,"⋡","\\nsucceq",true);defineSymbol(math,ams,rel,"⋩","\\succnsim",true);defineSymbol(math,ams,rel,"⪺","\\succnapprox",true);defineSymbol(math,ams,rel,"≆","\\ncong",true);defineSymbol(math,ams,rel,"","\\@nshortparallel");defineSymbol(math,ams,rel,"∦","\\nparallel",true);defineSymbol(math,ams,rel,"⊯","\\nVDash",true);defineSymbol(math,ams,rel,"⋫","\\ntriangleright");defineSymbol(math,ams,rel,"⋭","\\ntrianglerighteq",true);defineSymbol(math,ams,rel,"","\\@nsupseteqq");defineSymbol(math,ams,rel,"⊋","\\supsetneq",true);defineSymbol(math,ams,rel,"","\\@varsupsetneq");defineSymbol(math,ams,rel,"⫌","\\supsetneqq",true);defineSymbol(math,ams,rel,"","\\@varsupsetneqq");defineSymbol(math,ams,rel,"⊮","\\nVdash",true);defineSymbol(math,ams,rel,"⪵","\\precneqq",true);defineSymbol(math,ams,rel,"⪶","\\succneqq",true);defineSymbol(math,ams,rel,"","\\@nsubseteqq");defineSymbol(math,ams,bin,"⊴","\\unlhd");defineSymbol(math,ams,bin,"⊵","\\unrhd");defineSymbol(math,ams,rel,"↚","\\nleftarrow",true);defineSymbol(math,ams,rel,"↛","\\nrightarrow",true);defineSymbol(math,ams,rel,"⇍","\\nLeftarrow",true);defineSymbol(math,ams,rel,"⇏","\\nRightarrow",true);defineSymbol(math,ams,rel,"↮","\\nleftrightarrow",true);defineSymbol(math,ams,rel,"⇎","\\nLeftrightarrow",true);defineSymbol(math,ams,rel,"△","\\vartriangle");defineSymbol(math,ams,textord,"ℏ","\\hslash");defineSymbol(math,ams,textord,"▽","\\triangledown");defineSymbol(math,ams,textord,"◊","\\lozenge");defineSymbol(math,ams,textord,"Ⓢ","\\circledS");defineSymbol(math,ams,textord,"®","\\circledR");defineSymbol(text,ams,textord,"®","\\circledR");defineSymbol(math,ams,textord,"∡","\\measuredangle",true);defineSymbol(math,ams,textord,"∄","\\nexists");defineSymbol(math,ams,textord,"℧","\\mho");defineSymbol(math,ams,textord,"Ⅎ","\\Finv",true);defineSymbol(math,ams,textord,"⅁","\\Game",true);defineSymbol(math,ams,textord,"‵","\\backprime");defineSymbol(math,ams,textord,"▲","\\blacktriangle");defineSymbol(math,ams,textord,"▼","\\blacktriangledown");defineSymbol(math,ams,textord,"■","\\blacksquare");defineSymbol(math,ams,textord,"⧫","\\blacklozenge");defineSymbol(math,ams,textord,"★","\\bigstar");defineSymbol(math,ams,textord,"∢","\\sphericalangle",true);defineSymbol(math,ams,textord,"∁","\\complement",true);defineSymbol(math,ams,textord,"ð","\\eth",true);defineSymbol(text,main,textord,"ð","ð");defineSymbol(math,ams,textord,"╱","\\diagup");defineSymbol(math,ams,textord,"╲","\\diagdown");defineSymbol(math,ams,textord,"□","\\square");defineSymbol(math,ams,textord,"□","\\Box");defineSymbol(math,ams,textord,"◊","\\Diamond");defineSymbol(math,ams,textord,"¥","\\yen",true);defineSymbol(text,ams,textord,"¥","\\yen",true);defineSymbol(math,ams,textord,"✓","\\checkmark",true);defineSymbol(text,ams,textord,"✓","\\checkmark");defineSymbol(math,ams,textord,"ℶ","\\beth",true);defineSymbol(math,ams,textord,"ℸ","\\daleth",true);defineSymbol(math,ams,textord,"ℷ","\\gimel",true);defineSymbol(math,ams,textord,"ϝ","\\digamma",true);defineSymbol(math,ams,textord,"ϰ","\\varkappa");defineSymbol(math,ams,open,"┌","\\@ulcorner",true);defineSymbol(math,ams,close,"┐","\\@urcorner",true);defineSymbol(math,ams,open,"└","\\@llcorner",true);defineSymbol(math,ams,close,"┘","\\@lrcorner",true);defineSymbol(math,ams,rel,"≦","\\leqq",true);defineSymbol(math,ams,rel,"⩽","\\leqslant",true);defineSymbol(math,ams,rel,"⪕","\\eqslantless",true);defineSymbol(math,ams,rel,"≲","\\lesssim",true);defineSymbol(math,ams,rel,"⪅","\\lessapprox",true);defineSymbol(math,ams,rel,"≊","\\approxeq",true);defineSymbol(math,ams,bin,"⋖","\\lessdot");defineSymbol(math,ams,rel,"⋘","\\lll",true);defineSymbol(math,ams,rel,"≶","\\lessgtr",true);defineSymbol(math,ams,rel,"⋚","\\lesseqgtr",true);defineSymbol(math,ams,rel,"⪋","\\lesseqqgtr",true);defineSymbol(math,ams,rel,"≑","\\doteqdot");defineSymbol(math,ams,rel,"≓","\\risingdotseq",true);defineSymbol(math,ams,rel,"≒","\\fallingdotseq",true);defineSymbol(math,ams,rel,"∽","\\backsim",true);defineSymbol(math,ams,rel,"⋍","\\backsimeq",true);defineSymbol(math,ams,rel,"⫅","\\subseteqq",true);defineSymbol(math,ams,rel,"⋐","\\Subset",true);defineSymbol(math,ams,rel,"⊏","\\sqsubset",true);defineSymbol(math,ams,rel,"≼","\\preccurlyeq",true);defineSymbol(math,ams,rel,"⋞","\\curlyeqprec",true);defineSymbol(math,ams,rel,"≾","\\precsim",true);defineSymbol(math,ams,rel,"⪷","\\precapprox",true);defineSymbol(math,ams,rel,"⊲","\\vartriangleleft");defineSymbol(math,ams,rel,"⊴","\\trianglelefteq");defineSymbol(math,ams,rel,"⊨","\\vDash",true);defineSymbol(math,ams,rel,"⊪","\\Vvdash",true);defineSymbol(math,ams,rel,"⌣","\\smallsmile");defineSymbol(math,ams,rel,"⌢","\\smallfrown");defineSymbol(math,ams,rel,"≏","\\bumpeq",true);defineSymbol(math,ams,rel,"≎","\\Bumpeq",true);defineSymbol(math,ams,rel,"≧","\\geqq",true);defineSymbol(math,ams,rel,"⩾","\\geqslant",true);defineSymbol(math,ams,rel,"⪖","\\eqslantgtr",true);defineSymbol(math,ams,rel,"≳","\\gtrsim",true);defineSymbol(math,ams,rel,"⪆","\\gtrapprox",true);defineSymbol(math,ams,bin,"⋗","\\gtrdot");defineSymbol(math,ams,rel,"⋙","\\ggg",true);defineSymbol(math,ams,rel,"≷","\\gtrless",true);defineSymbol(math,ams,rel,"⋛","\\gtreqless",true);defineSymbol(math,ams,rel,"⪌","\\gtreqqless",true);defineSymbol(math,ams,rel,"≖","\\eqcirc",true);defineSymbol(math,ams,rel,"≗","\\circeq",true);defineSymbol(math,ams,rel,"≜","\\triangleq",true);defineSymbol(math,ams,rel,"∼","\\thicksim");defineSymbol(math,ams,rel,"≈","\\thickapprox");defineSymbol(math,ams,rel,"⫆","\\supseteqq",true);defineSymbol(math,ams,rel,"⋑","\\Supset",true);defineSymbol(math,ams,rel,"⊐","\\sqsupset",true);defineSymbol(math,ams,rel,"≽","\\succcurlyeq",true);defineSymbol(math,ams,rel,"⋟","\\curlyeqsucc",true);defineSymbol(math,ams,rel,"≿","\\succsim",true);defineSymbol(math,ams,rel,"⪸","\\succapprox",true);defineSymbol(math,ams,rel,"⊳","\\vartriangleright");defineSymbol(math,ams,rel,"⊵","\\trianglerighteq");defineSymbol(math,ams,rel,"⊩","\\Vdash",true);defineSymbol(math,ams,rel,"∣","\\shortmid");defineSymbol(math,ams,rel,"∥","\\shortparallel");defineSymbol(math,ams,rel,"≬","\\between",true);defineSymbol(math,ams,rel,"⋔","\\pitchfork",true);defineSymbol(math,ams,rel,"∝","\\varpropto");defineSymbol(math,ams,rel,"◀","\\blacktriangleleft");defineSymbol(math,ams,rel,"∴","\\therefore",true);defineSymbol(math,ams,rel,"∍","\\backepsilon");defineSymbol(math,ams,rel,"▶","\\blacktriangleright");defineSymbol(math,ams,rel,"∵","\\because",true);defineSymbol(math,ams,rel,"⋘","\\llless");defineSymbol(math,ams,rel,"⋙","\\gggtr");defineSymbol(math,ams,bin,"⊲","\\lhd");defineSymbol(math,ams,bin,"⊳","\\rhd");defineSymbol(math,ams,rel,"≂","\\eqsim",true);defineSymbol(math,main,rel,"⋈","\\Join");defineSymbol(math,ams,rel,"≑","\\Doteq",true);defineSymbol(math,ams,bin,"∔","\\dotplus",true);defineSymbol(math,ams,bin,"∖","\\smallsetminus");defineSymbol(math,ams,bin,"⋒","\\Cap",true);defineSymbol(math,ams,bin,"⋓","\\Cup",true);defineSymbol(math,ams,bin,"⩞","\\doublebarwedge",true);defineSymbol(math,ams,bin,"⊟","\\boxminus",true);defineSymbol(math,ams,bin,"⊞","\\boxplus",true);defineSymbol(math,ams,bin,"⋇","\\divideontimes",true);defineSymbol(math,ams,bin,"⋉","\\ltimes",true);defineSymbol(math,ams,bin,"⋊","\\rtimes",true);defineSymbol(math,ams,bin,"⋋","\\leftthreetimes",true);defineSymbol(math,ams,bin,"⋌","\\rightthreetimes",true);defineSymbol(math,ams,bin,"⋏","\\curlywedge",true);defineSymbol(math,ams,bin,"⋎","\\curlyvee",true);defineSymbol(math,ams,bin,"⊝","\\circleddash",true);defineSymbol(math,ams,bin,"⊛","\\circledast",true);defineSymbol(math,ams,bin,"⋅","\\centerdot");defineSymbol(math,ams,bin,"⊺","\\intercal",true);defineSymbol(math,ams,bin,"⋒","\\doublecap");defineSymbol(math,ams,bin,"⋓","\\doublecup");defineSymbol(math,ams,bin,"⊠","\\boxtimes",true);defineSymbol(math,ams,rel,"⇢","\\dashrightarrow",true);defineSymbol(math,ams,rel,"⇠","\\dashleftarrow",true);defineSymbol(math,ams,rel,"⇇","\\leftleftarrows",true);defineSymbol(math,ams,rel,"⇆","\\leftrightarrows",true);defineSymbol(math,ams,rel,"⇚","\\Lleftarrow",true);defineSymbol(math,ams,rel,"↞","\\twoheadleftarrow",true);defineSymbol(math,ams,rel,"↢","\\leftarrowtail",true);defineSymbol(math,ams,rel,"↫","\\looparrowleft",true);defineSymbol(math,ams,rel,"⇋","\\leftrightharpoons",true);defineSymbol(math,ams,rel,"↶","\\curvearrowleft",true);defineSymbol(math,ams,rel,"↺","\\circlearrowleft",true);defineSymbol(math,ams,rel,"↰","\\Lsh",true);defineSymbol(math,ams,rel,"⇈","\\upuparrows",true);defineSymbol(math,ams,rel,"↿","\\upharpoonleft",true);defineSymbol(math,ams,rel,"⇃","\\downharpoonleft",true);defineSymbol(math,main,rel,"⊶","\\origof",true);defineSymbol(math,main,rel,"⊷","\\imageof",true);defineSymbol(math,ams,rel,"⊸","\\multimap",true);defineSymbol(math,ams,rel,"↭","\\leftrightsquigarrow",true);defineSymbol(math,ams,rel,"⇉","\\rightrightarrows",true);defineSymbol(math,ams,rel,"⇄","\\rightleftarrows",true);defineSymbol(math,ams,rel,"↠","\\twoheadrightarrow",true);defineSymbol(math,ams,rel,"↣","\\rightarrowtail",true);defineSymbol(math,ams,rel,"↬","\\looparrowright",true);defineSymbol(math,ams,rel,"↷","\\curvearrowright",true);defineSymbol(math,ams,rel,"↻","\\circlearrowright",true);defineSymbol(math,ams,rel,"↱","\\Rsh",true);defineSymbol(math,ams,rel,"⇊","\\downdownarrows",true);defineSymbol(math,ams,rel,"↾","\\upharpoonright",true);defineSymbol(math,ams,rel,"⇂","\\downharpoonright",true);defineSymbol(math,ams,rel,"⇝","\\rightsquigarrow",true);defineSymbol(math,ams,rel,"⇝","\\leadsto");defineSymbol(math,ams,rel,"⇛","\\Rrightarrow",true);defineSymbol(math,ams,rel,"↾","\\restriction");defineSymbol(math,main,textord,"‘","`");defineSymbol(math,main,textord,"$","\\$");defineSymbol(text,main,textord,"$","\\$");defineSymbol(text,main,textord,"$","\\textdollar");defineSymbol(math,main,textord,"%","\\%");defineSymbol(text,main,textord,"%","\\%");defineSymbol(math,main,textord,"_","\\_");defineSymbol(text,main,textord,"_","\\_");defineSymbol(text,main,textord,"_","\\textunderscore");defineSymbol(math,main,textord,"∠","\\angle",true);defineSymbol(math,main,textord,"∞","\\infty",true);defineSymbol(math,main,textord,"′","\\prime");defineSymbol(math,main,textord,"△","\\triangle");defineSymbol(math,main,textord,"Γ","\\Gamma",true);defineSymbol(math,main,textord,"Δ","\\Delta",true);defineSymbol(math,main,textord,"Θ","\\Theta",true);defineSymbol(math,main,textord,"Λ","\\Lambda",true);defineSymbol(math,main,textord,"Ξ","\\Xi",true);defineSymbol(math,main,textord,"Π","\\Pi",true);defineSymbol(math,main,textord,"Σ","\\Sigma",true);defineSymbol(math,main,textord,"Υ","\\Upsilon",true);defineSymbol(math,main,textord,"Φ","\\Phi",true);defineSymbol(math,main,textord,"Ψ","\\Psi",true);defineSymbol(math,main,textord,"Ω","\\Omega",true);defineSymbol(math,main,textord,"A","Α");defineSymbol(math,main,textord,"B","Β");defineSymbol(math,main,textord,"E","Ε");defineSymbol(math,main,textord,"Z","Ζ");defineSymbol(math,main,textord,"H","Η");defineSymbol(math,main,textord,"I","Ι");defineSymbol(math,main,textord,"K","Κ");defineSymbol(math,main,textord,"M","Μ");defineSymbol(math,main,textord,"N","Ν");defineSymbol(math,main,textord,"O","Ο");defineSymbol(math,main,textord,"P","Ρ");defineSymbol(math,main,textord,"T","Τ");defineSymbol(math,main,textord,"X","Χ");defineSymbol(math,main,textord,"¬","\\neg",true);defineSymbol(math,main,textord,"¬","\\lnot");defineSymbol(math,main,textord,"⊤","\\top");defineSymbol(math,main,textord,"⊥","\\bot");defineSymbol(math,main,textord,"∅","\\emptyset");defineSymbol(math,ams,textord,"∅","\\varnothing");defineSymbol(math,main,mathord,"α","\\alpha",true);defineSymbol(math,main,mathord,"β","\\beta",true);defineSymbol(math,main,mathord,"γ","\\gamma",true);defineSymbol(math,main,mathord,"δ","\\delta",true);defineSymbol(math,main,mathord,"ϵ","\\epsilon",true);defineSymbol(math,main,mathord,"ζ","\\zeta",true);defineSymbol(math,main,mathord,"η","\\eta",true);defineSymbol(math,main,mathord,"θ","\\theta",true);defineSymbol(math,main,mathord,"ι","\\iota",true);defineSymbol(math,main,mathord,"κ","\\kappa",true);defineSymbol(math,main,mathord,"λ","\\lambda",true);defineSymbol(math,main,mathord,"μ","\\mu",true);defineSymbol(math,main,mathord,"ν","\\nu",true);defineSymbol(math,main,mathord,"ξ","\\xi",true);defineSymbol(math,main,mathord,"ο","\\omicron",true);defineSymbol(math,main,mathord,"π","\\pi",true);defineSymbol(math,main,mathord,"ρ","\\rho",true);defineSymbol(math,main,mathord,"σ","\\sigma",true);defineSymbol(math,main,mathord,"τ","\\tau",true);defineSymbol(math,main,mathord,"υ","\\upsilon",true);defineSymbol(math,main,mathord,"ϕ","\\phi",true);defineSymbol(math,main,mathord,"χ","\\chi",true);defineSymbol(math,main,mathord,"ψ","\\psi",true);defineSymbol(math,main,mathord,"ω","\\omega",true);defineSymbol(math,main,mathord,"ε","\\varepsilon",true);defineSymbol(math,main,mathord,"ϑ","\\vartheta",true);defineSymbol(math,main,mathord,"ϖ","\\varpi",true);defineSymbol(math,main,mathord,"ϱ","\\varrho",true);defineSymbol(math,main,mathord,"ς","\\varsigma",true);defineSymbol(math,main,mathord,"φ","\\varphi",true);defineSymbol(math,main,bin,"∗","*",true);defineSymbol(math,main,bin,"+","+");defineSymbol(math,main,bin,"−","-",true);defineSymbol(math,main,bin,"⋅","\\cdot",true);defineSymbol(math,main,bin,"∘","\\circ",true);defineSymbol(math,main,bin,"÷","\\div",true);defineSymbol(math,main,bin,"±","\\pm",true);defineSymbol(math,main,bin,"×","\\times",true);defineSymbol(math,main,bin,"∩","\\cap",true);defineSymbol(math,main,bin,"∪","\\cup",true);defineSymbol(math,main,bin,"∖","\\setminus",true);defineSymbol(math,main,bin,"∧","\\land");defineSymbol(math,main,bin,"∨","\\lor");defineSymbol(math,main,bin,"∧","\\wedge",true);defineSymbol(math,main,bin,"∨","\\vee",true);defineSymbol(math,main,textord,"√","\\surd");defineSymbol(math,main,open,"⟨","\\langle",true);defineSymbol(math,main,open,"∣","\\lvert");defineSymbol(math,main,open,"∥","\\lVert");defineSymbol(math,main,close,"?","?");defineSymbol(math,main,close,"!","!");defineSymbol(math,main,close,"⟩","\\rangle",true);defineSymbol(math,main,close,"∣","\\rvert");defineSymbol(math,main,close,"∥","\\rVert");defineSymbol(math,main,rel,"=","=");defineSymbol(math,main,rel,":",":");defineSymbol(math,main,rel,"≈","\\approx",true);defineSymbol(math,main,rel,"≅","\\cong",true);defineSymbol(math,main,rel,"≥","\\ge");defineSymbol(math,main,rel,"≥","\\geq",true);defineSymbol(math,main,rel,"←","\\gets");defineSymbol(math,main,rel,">","\\gt",true);defineSymbol(math,main,rel,"∈","\\in",true);defineSymbol(math,main,rel,"","\\@not");defineSymbol(math,main,rel,"⊂","\\subset",true);defineSymbol(math,main,rel,"⊃","\\supset",true);defineSymbol(math,main,rel,"⊆","\\subseteq",true);defineSymbol(math,main,rel,"⊇","\\supseteq",true);defineSymbol(math,ams,rel,"⊈","\\nsubseteq",true);defineSymbol(math,ams,rel,"⊉","\\nsupseteq",true);defineSymbol(math,main,rel,"⊨","\\models");defineSymbol(math,main,rel,"←","\\leftarrow",true);defineSymbol(math,main,rel,"≤","\\le");defineSymbol(math,main,rel,"≤","\\leq",true);defineSymbol(math,main,rel,"<","\\lt",true);defineSymbol(math,main,rel,"→","\\rightarrow",true);defineSymbol(math,main,rel,"→","\\to");defineSymbol(math,ams,rel,"≱","\\ngeq",true);defineSymbol(math,ams,rel,"≰","\\nleq",true);defineSymbol(math,main,spacing," ","\\ ");defineSymbol(math,main,spacing," ","\\space");defineSymbol(math,main,spacing," ","\\nobreakspace");defineSymbol(text,main,spacing," ","\\ ");defineSymbol(text,main,spacing," "," ");defineSymbol(text,main,spacing," ","\\space");defineSymbol(text,main,spacing," ","\\nobreakspace");defineSymbol(math,main,spacing,null,"\\nobreak");defineSymbol(math,main,spacing,null,"\\allowbreak");defineSymbol(math,main,punct,",",",");defineSymbol(math,main,punct,";",";");defineSymbol(math,ams,bin,"⊼","\\barwedge",true);defineSymbol(math,ams,bin,"⊻","\\veebar",true);defineSymbol(math,main,bin,"⊙","\\odot",true);defineSymbol(math,main,bin,"⊕","\\oplus",true);defineSymbol(math,main,bin,"⊗","\\otimes",true);defineSymbol(math,main,textord,"∂","\\partial",true);defineSymbol(math,main,bin,"⊘","\\oslash",true);defineSymbol(math,ams,bin,"⊚","\\circledcirc",true);defineSymbol(math,ams,bin,"⊡","\\boxdot",true);defineSymbol(math,main,bin,"△","\\bigtriangleup");defineSymbol(math,main,bin,"▽","\\bigtriangledown");defineSymbol(math,main,bin,"†","\\dagger");defineSymbol(math,main,bin,"⋄","\\diamond");defineSymbol(math,main,bin,"⋆","\\star");defineSymbol(math,main,bin,"◃","\\triangleleft");defineSymbol(math,main,bin,"▹","\\triangleright");defineSymbol(math,main,open,"{","\\{");defineSymbol(text,main,textord,"{","\\{");defineSymbol(text,main,textord,"{","\\textbraceleft");defineSymbol(math,main,close,"}","\\}");defineSymbol(text,main,textord,"}","\\}");defineSymbol(text,main,textord,"}","\\textbraceright");defineSymbol(math,main,open,"{","\\lbrace");defineSymbol(math,main,close,"}","\\rbrace");defineSymbol(math,main,open,"[","\\lbrack",true);defineSymbol(text,main,textord,"[","\\lbrack",true);defineSymbol(math,main,close,"]","\\rbrack",true);defineSymbol(text,main,textord,"]","\\rbrack",true);defineSymbol(math,main,open,"(","\\lparen",true);defineSymbol(math,main,close,")","\\rparen",true);defineSymbol(text,main,textord,"<","\\textless",true);defineSymbol(text,main,textord,">","\\textgreater",true);defineSymbol(math,main,open,"⌊","\\lfloor",true);defineSymbol(math,main,close,"⌋","\\rfloor",true);defineSymbol(math,main,open,"⌈","\\lceil",true);defineSymbol(math,main,close,"⌉","\\rceil",true);defineSymbol(math,main,textord,"\\","\\backslash");defineSymbol(math,main,textord,"∣","|");defineSymbol(math,main,textord,"∣","\\vert");defineSymbol(text,main,textord,"|","\\textbar",true);defineSymbol(math,main,textord,"∥","\\|");defineSymbol(math,main,textord,"∥","\\Vert");defineSymbol(text,main,textord,"∥","\\textbardbl");defineSymbol(text,main,textord,"~","\\textasciitilde");defineSymbol(text,main,textord,"\\","\\textbackslash");defineSymbol(text,main,textord,"^","\\textasciicircum");defineSymbol(math,main,rel,"↑","\\uparrow",true);defineSymbol(math,main,rel,"⇑","\\Uparrow",true);defineSymbol(math,main,rel,"↓","\\downarrow",true);defineSymbol(math,main,rel,"⇓","\\Downarrow",true);defineSymbol(math,main,rel,"↕","\\updownarrow",true);defineSymbol(math,main,rel,"⇕","\\Updownarrow",true);defineSymbol(math,main,op,"∐","\\coprod");defineSymbol(math,main,op,"⋁","\\bigvee");defineSymbol(math,main,op,"⋀","\\bigwedge");defineSymbol(math,main,op,"⨄","\\biguplus");defineSymbol(math,main,op,"⋂","\\bigcap");defineSymbol(math,main,op,"⋃","\\bigcup");defineSymbol(math,main,op,"∫","\\int");defineSymbol(math,main,op,"∫","\\intop");defineSymbol(math,main,op,"∬","\\iint");defineSymbol(math,main,op,"∭","\\iiint");defineSymbol(math,main,op,"∏","\\prod");defineSymbol(math,main,op,"∑","\\sum");defineSymbol(math,main,op,"⨂","\\bigotimes");defineSymbol(math,main,op,"⨁","\\bigoplus");defineSymbol(math,main,op,"⨀","\\bigodot");defineSymbol(math,main,op,"∮","\\oint");defineSymbol(math,main,op,"∯","\\oiint");defineSymbol(math,main,op,"∰","\\oiiint");defineSymbol(math,main,op,"⨆","\\bigsqcup");defineSymbol(math,main,op,"∫","\\smallint");defineSymbol(text,main,inner,"…","\\textellipsis");defineSymbol(math,main,inner,"…","\\mathellipsis");defineSymbol(text,main,inner,"…","\\ldots",true);defineSymbol(math,main,inner,"…","\\ldots",true);defineSymbol(math,main,inner,"⋯","\\@cdots",true);defineSymbol(math,main,inner,"⋱","\\ddots",true);defineSymbol(math,main,textord,"⋮","\\varvdots");defineSymbol(math,main,accent,"ˊ","\\acute");defineSymbol(math,main,accent,"ˋ","\\grave");defineSymbol(math,main,accent,"¨","\\ddot");defineSymbol(math,main,accent,"~","\\tilde");defineSymbol(math,main,accent,"ˉ","\\bar");defineSymbol(math,main,accent,"˘","\\breve");defineSymbol(math,main,accent,"ˇ","\\check");defineSymbol(math,main,accent,"^","\\hat");defineSymbol(math,main,accent,"⃗","\\vec");defineSymbol(math,main,accent,"˙","\\dot");defineSymbol(math,main,accent,"˚","\\mathring");defineSymbol(math,main,mathord,"","\\@imath");defineSymbol(math,main,mathord,"","\\@jmath");defineSymbol(math,main,textord,"ı","ı");defineSymbol(math,main,textord,"ȷ","ȷ");defineSymbol(text,main,textord,"ı","\\i",true);defineSymbol(text,main,textord,"ȷ","\\j",true);defineSymbol(text,main,textord,"ß","\\ss",true);defineSymbol(text,main,textord,"æ","\\ae",true);defineSymbol(text,main,textord,"œ","\\oe",true);defineSymbol(text,main,textord,"ø","\\o",true);defineSymbol(text,main,textord,"Æ","\\AE",true);defineSymbol(text,main,textord,"Œ","\\OE",true);defineSymbol(text,main,textord,"Ø","\\O",true);defineSymbol(text,main,accent,"ˊ","\\'");defineSymbol(text,main,accent,"ˋ","\\`");defineSymbol(text,main,accent,"ˆ","\\^");defineSymbol(text,main,accent,"˜","\\~");defineSymbol(text,main,accent,"ˉ","\\=");defineSymbol(text,main,accent,"˘","\\u");defineSymbol(text,main,accent,"˙","\\.");defineSymbol(text,main,accent,"¸","\\c");defineSymbol(text,main,accent,"˚","\\r");defineSymbol(text,main,accent,"ˇ","\\v");defineSymbol(text,main,accent,"¨",'\\"');defineSymbol(text,main,accent,"˝","\\H");defineSymbol(text,main,accent,"◯","\\textcircled");var ligatures={"--":true,"---":true,"``":true,"''":true};defineSymbol(text,main,textord,"–","--",true);defineSymbol(text,main,textord,"–","\\textendash");defineSymbol(text,main,textord,"—","---",true);defineSymbol(text,main,textord,"—","\\textemdash");defineSymbol(text,main,textord,"‘","`",true);defineSymbol(text,main,textord,"‘","\\textquoteleft");defineSymbol(text,main,textord,"’","'",true);defineSymbol(text,main,textord,"’","\\textquoteright");defineSymbol(text,main,textord,"“","``",true);defineSymbol(text,main,textord,"“","\\textquotedblleft");defineSymbol(text,main,textord,"”","''",true);defineSymbol(text,main,textord,"”","\\textquotedblright");defineSymbol(math,main,textord,"°","\\degree",true);defineSymbol(text,main,textord,"°","\\degree");defineSymbol(text,main,textord,"°","\\textdegree",true);defineSymbol(math,main,textord,"£","\\pounds");defineSymbol(math,main,textord,"£","\\mathsterling",true);defineSymbol(text,main,textord,"£","\\pounds");defineSymbol(text,main,textord,"£","\\textsterling",true);defineSymbol(math,ams,textord,"✠","\\maltese");defineSymbol(text,ams,textord,"✠","\\maltese");var mathTextSymbols='0123456789/@."';for(var i=0;i<mathTextSymbols.length;i++){var ch=mathTextSymbols.charAt(i);defineSymbol(math,main,textord,ch,ch)}var textSymbols='0123456789!@*()-=+";:?/.,';for(var _i=0;_i<textSymbols.length;_i++){var _ch=textSymbols.charAt(_i);defineSymbol(text,main,textord,_ch,_ch)}var letters="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";for(var _i2=0;_i2<letters.length;_i2++){var _ch2=letters.charAt(_i2);defineSymbol(math,main,mathord,_ch2,_ch2);defineSymbol(text,main,textord,_ch2,_ch2)}defineSymbol(math,ams,textord,"C","ℂ");defineSymbol(text,ams,textord,"C","ℂ");defineSymbol(math,ams,textord,"H","ℍ");defineSymbol(text,ams,textord,"H","ℍ");defineSymbol(math,ams,textord,"N","ℕ");defineSymbol(text,ams,textord,"N","ℕ");defineSymbol(math,ams,textord,"P","ℙ");defineSymbol(text,ams,textord,"P","ℙ");defineSymbol(math,ams,textord,"Q","ℚ");defineSymbol(text,ams,textord,"Q","ℚ");defineSymbol(math,ams,textord,"R","ℝ");defineSymbol(text,ams,textord,"R","ℝ");defineSymbol(math,ams,textord,"Z","ℤ");defineSymbol(text,ams,textord,"Z","ℤ");defineSymbol(math,main,mathord,"h","ℎ");defineSymbol(text,main,mathord,"h","ℎ");var wideChar="";for(var _i3=0;_i3<letters.length;_i3++){var _ch3=letters.charAt(_i3);wideChar=String.fromCharCode(55349,56320+_i3);defineSymbol(math,main,mathord,_ch3,wideChar);defineSymbol(text,main,textord,_ch3,wideChar);wideChar=String.fromCharCode(55349,56372+_i3);defineSymbol(math,main,mathord,_ch3,wideChar);defineSymbol(text,main,textord,_ch3,wideChar);wideChar=String.fromCharCode(55349,56424+_i3);defineSymbol(math,main,mathord,_ch3,wideChar);defineSymbol(text,main,textord,_ch3,wideChar);wideChar=String.fromCharCode(55349,56580+_i3);defineSymbol(math,main,mathord,_ch3,wideChar);defineSymbol(text,main,textord,_ch3,wideChar);wideChar=String.fromCharCode(55349,56736+_i3);defineSymbol(math,main,mathord,_ch3,wideChar);defineSymbol(text,main,textord,_ch3,wideChar);wideChar=String.fromCharCode(55349,56788+_i3);defineSymbol(math,main,mathord,_ch3,wideChar);defineSymbol(text,main,textord,_ch3,wideChar);wideChar=String.fromCharCode(55349,56840+_i3);defineSymbol(math,main,mathord,_ch3,wideChar);defineSymbol(text,main,textord,_ch3,wideChar);wideChar=String.fromCharCode(55349,56944+_i3);defineSymbol(math,main,mathord,_ch3,wideChar);defineSymbol(text,main,textord,_ch3,wideChar);if(_i3<26){wideChar=String.fromCharCode(55349,56632+_i3);defineSymbol(math,main,mathord,_ch3,wideChar);defineSymbol(text,main,textord,_ch3,wideChar);wideChar=String.fromCharCode(55349,56476+_i3);defineSymbol(math,main,mathord,_ch3,wideChar);defineSymbol(text,main,textord,_ch3,wideChar)}}wideChar=String.fromCharCode(55349,56668);defineSymbol(math,main,mathord,"k",wideChar);defineSymbol(text,main,textord,"k",wideChar);for(var _i4=0;_i4<10;_i4++){var _ch4=_i4.toString();wideChar=String.fromCharCode(55349,57294+_i4);defineSymbol(math,main,mathord,_ch4,wideChar);defineSymbol(text,main,textord,_ch4,wideChar);wideChar=String.fromCharCode(55349,57314+_i4);defineSymbol(math,main,mathord,_ch4,wideChar);defineSymbol(text,main,textord,_ch4,wideChar);wideChar=String.fromCharCode(55349,57324+_i4);defineSymbol(math,main,mathord,_ch4,wideChar);defineSymbol(text,main,textord,_ch4,wideChar);wideChar=String.fromCharCode(55349,57334+_i4);defineSymbol(math,main,mathord,_ch4,wideChar);defineSymbol(text,main,textord,_ch4,wideChar)}var extraLatin="ÐÞþ";for(var _i5=0;_i5<extraLatin.length;_i5++){var _ch5=extraLatin.charAt(_i5);defineSymbol(math,main,mathord,_ch5,_ch5);defineSymbol(text,main,textord,_ch5,_ch5)}var wideLatinLetterData=[["mathbf","textbf","Main-Bold"],["mathbf","textbf","Main-Bold"],["mathnormal","textit","Math-Italic"],["mathnormal","textit","Math-Italic"],["boldsymbol","boldsymbol","Main-BoldItalic"],["boldsymbol","boldsymbol","Main-BoldItalic"],["mathscr","textscr","Script-Regular"],["","",""],["","",""],["","",""],["mathfrak","textfrak","Fraktur-Regular"],["mathfrak","textfrak","Fraktur-Regular"],["mathbb","textbb","AMS-Regular"],["mathbb","textbb","AMS-Regular"],["","",""],["","",""],["mathsf","textsf","SansSerif-Regular"],["mathsf","textsf","SansSerif-Regular"],["mathboldsf","textboldsf","SansSerif-Bold"],["mathboldsf","textboldsf","SansSerif-Bold"],["mathitsf","textitsf","SansSerif-Italic"],["mathitsf","textitsf","SansSerif-Italic"],["","",""],["","",""],["mathtt","texttt","Typewriter-Regular"],["mathtt","texttt","Typewriter-Regular"]];var wideNumeralData=[["mathbf","textbf","Main-Bold"],["","",""],["mathsf","textsf","SansSerif-Regular"],["mathboldsf","textboldsf","SansSerif-Bold"],["mathtt","texttt","Typewriter-Regular"]];var wideCharacterFont=function e(t,r){var n=t.charCodeAt(0);var a=t.charCodeAt(1);var o=(n-55296)*1024+(a-56320)+65536;var i=r==="math"?0:1;if(119808<=o&&o<120484){var l=Math.floor((o-119808)/26);return[wideLatinLetterData[l][2],wideLatinLetterData[l][i]]}else if(120782<=o&&o<=120831){var s=Math.floor((o-120782)/10);return[wideNumeralData[s][2],wideNumeralData[s][i]]}else if(o===120485||o===120486){return[wideLatinLetterData[0][2],wideLatinLetterData[0][i]]}else if(120486<o&&o<120782){return["",""]}else{throw new ParseError("Unsupported character: "+t)}};var lookupSymbol=function e(t,r,n){if(symbols[n][t]&&symbols[n][t].replace){t=symbols[n][t].replace}return{value:t,metrics:getCharacterMetrics(t,r,n)}};var makeSymbol=function e(t,r,n,a,o){var i=lookupSymbol(t,r,n);var l=i.metrics;t=i.value;var s;if(l){var m=l.italic;if(n==="text"||a&&a.font==="mathit"){m=0}s=new SymbolNode(t,l.height,l.depth,m,l.skew,l.width,o)}else{typeof console!=="undefined"&&console.warn("No character metrics "+("for '"+t+"' in style '"+r+"' and mode '"+n+"'"));s=new SymbolNode(t,0,0,0,0,0,o)}if(a){s.maxFontSize=a.sizeMultiplier;if(a.style.isTight()){s.classes.push("mtight")}var u=a.getColor();if(u){s.style.color=u}}return s};var mathsym=function e(t,r,n,a){if(a===void 0){a=[]}if(n.font==="boldsymbol"&&lookupSymbol(t,"Main-Bold",r).metrics){return makeSymbol(t,"Main-Bold",r,n,a.concat(["mathbf"]))}else if(t==="\\"||symbols[r][t].font==="main"){return makeSymbol(t,"Main-Regular",r,n,a)}else{return makeSymbol(t,"AMS-Regular",r,n,a.concat(["amsrm"]))}};var boldsymbol=function e(t,r,n,a,o){if(o!=="textord"&&lookupSymbol(t,"Math-BoldItalic",r).metrics){return{fontName:"Math-BoldItalic",fontClass:"boldsymbol"}}else{return{fontName:"Main-Bold",fontClass:"mathbf"}}};var makeOrd=function e(t,r,n){var a=t.mode;var o=t.text;var i=["mord"];var l=a==="math"||a==="text"&&r.font;var s=l?r.font:r.fontFamily;if(o.charCodeAt(0)===55349){var[m,u]=wideCharacterFont(o,a);return makeSymbol(o,m,a,r,i.concat(u))}else if(s){var c;var d;if(s==="boldsymbol"){var p=boldsymbol(o,a,r,i,n);c=p.fontName;d=[p.fontClass]}else if(l){c=fontMap[s].fontName;d=[s]}else{c=retrieveTextFontName(s,r.fontWeight,r.fontShape);d=[s,r.fontWeight,r.fontShape]}if(lookupSymbol(o,c,a).metrics){return makeSymbol(o,c,a,r,i.concat(d))}else if(ligatures.hasOwnProperty(o)&&c.slice(0,10)==="Typewriter"){var h=[];for(var f=0;f<o.length;f++){h.push(makeSymbol(o[f],c,a,r,i.concat(d)))}return makeFragment(h)}}if(n==="mathord"){return makeSymbol(o,"Math-Italic",a,r,i.concat(["mathnormal"]))}else if(n==="textord"){var b=symbols[a][o]&&symbols[a][o].font;if(b==="ams"){var g=retrieveTextFontName("amsrm",r.fontWeight,r.fontShape);return makeSymbol(o,g,a,r,i.concat("amsrm",r.fontWeight,r.fontShape))}else if(b==="main"||!b){var y=retrieveTextFontName("textrm",r.fontWeight,r.fontShape);return makeSymbol(o,y,a,r,i.concat(r.fontWeight,r.fontShape))}else{var x=retrieveTextFontName(b,r.fontWeight,r.fontShape);return makeSymbol(o,x,a,r,i.concat(x,r.fontWeight,r.fontShape))}}else{throw new Error("unexpected type: "+n+" in makeOrd")}};var canCombine=(e,t)=>{if(createClass(e.classes)!==createClass(t.classes)||e.skew!==t.skew||e.maxFontSize!==t.maxFontSize){return false}if(e.classes.length===1){var r=e.classes[0];if(r==="mbin"||r==="mord"){return false}}for(var n in e.style){if(e.style.hasOwnProperty(n)&&e.style[n]!==t.style[n]){return false}}for(var a in t.style){if(t.style.hasOwnProperty(a)&&e.style[a]!==t.style[a]){return false}}return true};var tryCombineChars=e=>{for(var t=0;t<e.length-1;t++){var r=e[t];var n=e[t+1];if(r instanceof SymbolNode&&n instanceof SymbolNode&&canCombine(r,n)){r.text+=n.text;r.height=Math.max(r.height,n.height);r.depth=Math.max(r.depth,n.depth);r.italic=n.italic;e.splice(t+1,1);t--}}return e};var sizeElementFromChildren=function e(t){var r=0;var n=0;var a=0;for(var o=0;o<t.children.length;o++){var i=t.children[o];if(i.height>r){r=i.height}if(i.depth>n){n=i.depth}if(i.maxFontSize>a){a=i.maxFontSize}}t.height=r;t.depth=n;t.maxFontSize=a};var makeSpan$2=function e(t,r,n,a){var o=new Span(t,r,n,a);sizeElementFromChildren(o);return o};var makeSvgSpan=(e,t,r,n)=>new Span(e,t,r,n);var makeLineSpan=function e(t,r,n){var a=makeSpan$2([t],[],r);a.height=Math.max(n||r.fontMetrics().defaultRuleThickness,r.minRuleThickness);a.style.borderBottomWidth=makeEm(a.height);a.maxFontSize=1;return a};var makeAnchor=function e(t,r,n,a){var o=new Anchor(t,r,n,a);sizeElementFromChildren(o);return o};var makeFragment=function e(t){var r=new DocumentFragment(t);sizeElementFromChildren(r);return r};var wrapFragment=function e(t,r){if(t instanceof DocumentFragment){return makeSpan$2([],[t],r)}return t};var getVListChildrenAndDepth=function e(t){if(t.positionType==="individualShift"){var r=t.children;var n=[r[0]];var a=-r[0].shift-r[0].elem.depth;var o=a;for(var i=1;i<r.length;i++){var l=-r[i].shift-o-r[i].elem.depth;var s=l-(r[i-1].elem.height+r[i-1].elem.depth);o=o+l;n.push({type:"kern",size:s});n.push(r[i])}return{children:n,depth:a}}var m;if(t.positionType==="top"){var u=t.positionData;for(var c=0;c<t.children.length;c++){var d=t.children[c];u-=d.type==="kern"?d.size:d.elem.height+d.elem.depth}m=u}else if(t.positionType==="bottom"){m=-t.positionData}else{var p=t.children[0];if(p.type!=="elem"){throw new Error('First child must have type "elem".')}if(t.positionType==="shift"){m=-p.elem.depth-t.positionData}else if(t.positionType==="firstBaseline"){m=-p.elem.depth}else{throw new Error("Invalid positionType "+t.positionType+".")}}return{children:t.children,depth:m}};var makeVList=function e(t,r){var{children:n,depth:a}=getVListChildrenAndDepth(t);var o=0;for(var i=0;i<n.length;i++){var l=n[i];if(l.type==="elem"){var s=l.elem;o=Math.max(o,s.maxFontSize,s.height)}}o+=2;var m=makeSpan$2(["pstrut"],[]);m.style.height=makeEm(o);var u=[];var c=a;var d=a;var p=a;for(var h=0;h<n.length;h++){var f=n[h];if(f.type==="kern"){p+=f.size}else{var b=f.elem;var g=f.wrapperClasses||[];var y=f.wrapperStyle||{};var x=makeSpan$2(g,[m,b],undefined,y);x.style.top=makeEm(-o-p-b.depth);if(f.marginLeft){x.style.marginLeft=f.marginLeft}if(f.marginRight){x.style.marginRight=f.marginRight}u.push(x);p+=b.height+b.depth}c=Math.min(c,p);d=Math.max(d,p)}var $=makeSpan$2(["vlist"],u);$.style.height=makeEm(d);var v;if(c<0){var S=makeSpan$2([],[]);var w=makeSpan$2(["vlist"],[S]);w.style.height=makeEm(-c);var R=makeSpan$2(["vlist-s"],[new SymbolNode("​")]);v=[makeSpan$2(["vlist-r"],[$,R]),makeSpan$2(["vlist-r"],[w])]}else{v=[makeSpan$2(["vlist-r"],[$])]}var M=makeSpan$2(["vlist-t"],v);if(v.length===2){M.classes.push("vlist-t2")}M.height=d;M.depth=-c;return M};var makeGlue=(e,t)=>{var r=makeSpan$2(["mspace"],[],t);var n=calculateSize(e,t);r.style.marginRight=makeEm(n);return r};var retrieveTextFontName=function e(t,r,n){var a="";switch(t){case"amsrm":a="AMS";break;case"textrm":a="Main";break;case"textsf":a="SansSerif";break;case"texttt":a="Typewriter";break;default:a=t}var o;if(r==="textbf"&&n==="textit"){o="BoldItalic"}else if(r==="textbf"){o="Bold"}else if(r==="textit"){o="Italic"}else{o="Regular"}return a+"-"+o};var fontMap={mathbf:{variant:"bold",fontName:"Main-Bold"},mathrm:{variant:"normal",fontName:"Main-Regular"},textit:{variant:"italic",fontName:"Main-Italic"},mathit:{variant:"italic",fontName:"Main-Italic"},mathnormal:{variant:"italic",fontName:"Math-Italic"},mathbb:{variant:"double-struck",fontName:"AMS-Regular"},mathcal:{variant:"script",fontName:"Caligraphic-Regular"},mathfrak:{variant:"fraktur",fontName:"Fraktur-Regular"},mathscr:{variant:"script",fontName:"Script-Regular"},mathsf:{variant:"sans-serif",fontName:"SansSerif-Regular"},mathtt:{variant:"monospace",fontName:"Typewriter-Regular"}};var svgData={vec:["vec",.471,.714],oiintSize1:["oiintSize1",.957,.499],oiintSize2:["oiintSize2",1.472,.659],oiiintSize1:["oiiintSize1",1.304,.499],oiiintSize2:["oiiintSize2",1.98,.659]};var staticSvg=function e(t,r){var[n,a,o]=svgData[t];var i=new PathNode(n);var l=new SvgNode([i],{width:makeEm(a),height:makeEm(o),style:"width:"+makeEm(a),viewBox:"0 0 "+1e3*a+" "+1e3*o,preserveAspectRatio:"xMinYMin"});var s=makeSvgSpan(["overlay"],[l],r);s.height=o;s.style.height=makeEm(o);s.style.width=makeEm(a);return s};var buildCommon={fontMap:fontMap,makeSymbol:makeSymbol,mathsym:mathsym,makeSpan:makeSpan$2,makeSvgSpan:makeSvgSpan,makeLineSpan:makeLineSpan,makeAnchor:makeAnchor,makeFragment:makeFragment,wrapFragment:wrapFragment,makeVList:makeVList,makeOrd:makeOrd,makeGlue:makeGlue,staticSvg:staticSvg,svgData:svgData,tryCombineChars:tryCombineChars};var thinspace={number:3,unit:"mu"};var mediumspace={number:4,unit:"mu"};var thickspace={number:5,unit:"mu"};var spacings={mord:{mop:thinspace,mbin:mediumspace,mrel:thickspace,minner:thinspace},mop:{mord:thinspace,mop:thinspace,mrel:thickspace,minner:thinspace},mbin:{mord:mediumspace,mop:mediumspace,mopen:mediumspace,minner:mediumspace},mrel:{mord:thickspace,mop:thickspace,mopen:thickspace,minner:thickspace},mopen:{},mclose:{mop:thinspace,mbin:mediumspace,mrel:thickspace,minner:thinspace},mpunct:{mord:thinspace,mop:thinspace,mrel:thickspace,mopen:thinspace,mclose:thinspace,mpunct:thinspace,minner:thinspace},minner:{mord:thinspace,mop:thinspace,mbin:mediumspace,mrel:thickspace,mopen:thinspace,mpunct:thinspace,minner:thinspace}};var tightSpacings={mord:{mop:thinspace},mop:{mord:thinspace,mop:thinspace},mbin:{},mrel:{},mopen:{},mclose:{mop:thinspace},mpunct:{},minner:{mop:thinspace}};var _functions={};var _htmlGroupBuilders={};var _mathmlGroupBuilders={};function defineFunction(e){var{type:t,names:r,props:n,handler:a,htmlBuilder:o,mathmlBuilder:i}=e;var l={type:t,numArgs:n.numArgs,argTypes:n.argTypes,allowedInArgument:!!n.allowedInArgument,allowedInText:!!n.allowedInText,allowedInMath:n.allowedInMath===undefined?true:n.allowedInMath,numOptionalArgs:n.numOptionalArgs||0,infix:!!n.infix,primitive:!!n.primitive,handler:a};for(var s=0;s<r.length;++s){_functions[r[s]]=l}if(t){if(o){_htmlGroupBuilders[t]=o}if(i){_mathmlGroupBuilders[t]=i}}}function defineFunctionBuilders(e){var{type:t,htmlBuilder:r,mathmlBuilder:n}=e;defineFunction({type:t,names:[],props:{numArgs:0},handler(){throw new Error("Should never be called.")},htmlBuilder:r,mathmlBuilder:n})}var normalizeArgument=function e(t){return t.type==="ordgroup"&&t.body.length===1?t.body[0]:t};var ordargument=function e(t){return t.type==="ordgroup"?t.body:[t]};var makeSpan$1=buildCommon.makeSpan;var binLeftCanceller=["leftmost","mbin","mopen","mrel","mop","mpunct"];var binRightCanceller=["rightmost","mrel","mclose","mpunct"];var styleMap$1={display:Style$1.DISPLAY,text:Style$1.TEXT,script:Style$1.SCRIPT,scriptscript:Style$1.SCRIPTSCRIPT};var DomEnum={mord:"mord",mop:"mop",mbin:"mbin",mrel:"mrel",mopen:"mopen",mclose:"mclose",mpunct:"mpunct",minner:"minner"};var buildExpression$1=function e(t,r,n,a){if(a===void 0){a=[null,null]}var o=[];for(var i=0;i<t.length;i++){var l=buildGroup$1(t[i],r);if(l instanceof DocumentFragment){var s=l.children;o.push(...s)}else{o.push(l)}}buildCommon.tryCombineChars(o);if(!n){return o}var m=r;if(t.length===1){var u=t[0];if(u.type==="sizing"){m=r.havingSize(u.size)}else if(u.type==="styling"){m=r.havingStyle(styleMap$1[u.style])}}var c=makeSpan$1([a[0]||"leftmost"],[],r);var d=makeSpan$1([a[1]||"rightmost"],[],r);var p=n==="root";traverseNonSpaceNodes(o,((e,t)=>{var r=t.classes[0];var n=e.classes[0];if(r==="mbin"&&utils.contains(binRightCanceller,n)){t.classes[0]="mord"}else if(n==="mbin"&&utils.contains(binLeftCanceller,r)){e.classes[0]="mord"}}),{node:c},d,p);traverseNonSpaceNodes(o,((e,t)=>{var r=getTypeOfDomTree(t);var n=getTypeOfDomTree(e);var a=r&&n?e.hasClass("mtight")?tightSpacings[r][n]:spacings[r][n]:null;if(a){return buildCommon.makeGlue(a,m)}}),{node:c},d,p);return o};var traverseNonSpaceNodes=function e(t,r,n,a,o){if(a){t.push(a)}var i=0;for(;i<t.length;i++){var l=t[i];var s=checkPartialGroup(l);if(s){e(s.children,r,n,null,o);continue}var m=!l.hasClass("mspace");if(m){var u=r(l,n.node);if(u){if(n.insertAfter){n.insertAfter(u)}else{t.unshift(u);i++}}}if(m){n.node=l}else if(o&&l.hasClass("newline")){n.node=makeSpan$1(["leftmost"])}n.insertAfter=(e=>r=>{t.splice(e+1,0,r);i++})(i)}if(a){t.pop()}};var checkPartialGroup=function e(t){if(t instanceof DocumentFragment||t instanceof Anchor||t instanceof Span&&t.hasClass("enclosing")){return t}return null};var getOutermostNode=function e(t,r){var n=checkPartialGroup(t);if(n){var a=n.children;if(a.length){if(r==="right"){return e(a[a.length-1],"right")}else if(r==="left"){return e(a[0],"left")}}}return t};var getTypeOfDomTree=function e(t,r){if(!t){return null}if(r){t=getOutermostNode(t,r)}return DomEnum[t.classes[0]]||null};var makeNullDelimiter=function e(t,r){var n=["nulldelimiter"].concat(t.baseSizingClasses());return makeSpan$1(r.concat(n))};var buildGroup$1=function e(t,r,n){if(!t){return makeSpan$1()}if(_htmlGroupBuilders[t.type]){var a=_htmlGroupBuilders[t.type](t,r);if(n&&r.size!==n.size){a=makeSpan$1(r.sizingClasses(n),[a],r);var o=r.sizeMultiplier/n.sizeMultiplier;a.height*=o;a.depth*=o}return a}else{throw new ParseError("Got group of unknown type: '"+t.type+"'")}};function buildHTMLUnbreakable(e,t){var r=makeSpan$1(["base"],e,t);var n=makeSpan$1(["strut"]);n.style.height=makeEm(r.height+r.depth);if(r.depth){n.style.verticalAlign=makeEm(-r.depth)}r.children.unshift(n);return r}function buildHTML(e,t){var r=null;if(e.length===1&&e[0].type==="tag"){r=e[0].tag;e=e[0].body}var n=buildExpression$1(e,t,"root");var a;if(n.length===2&&n[1].hasClass("tag")){a=n.pop()}var o=[];var i=[];for(var l=0;l<n.length;l++){i.push(n[l]);if(n[l].hasClass("mbin")||n[l].hasClass("mrel")||n[l].hasClass("allowbreak")){var s=false;while(l<n.length-1&&n[l+1].hasClass("mspace")&&!n[l+1].hasClass("newline")){l++;i.push(n[l]);if(n[l].hasClass("nobreak")){s=true}}if(!s){o.push(buildHTMLUnbreakable(i,t));i=[]}}else if(n[l].hasClass("newline")){i.pop();if(i.length>0){o.push(buildHTMLUnbreakable(i,t));i=[]}o.push(n[l])}}if(i.length>0){o.push(buildHTMLUnbreakable(i,t))}var m;if(r){m=buildHTMLUnbreakable(buildExpression$1(r,t,true));m.classes=["tag"];o.push(m)}else if(a){o.push(a)}var u=makeSpan$1(["katex-html"],o);u.setAttribute("aria-hidden","true");if(m){var c=m.children[0];c.style.height=makeEm(u.height+u.depth);if(u.depth){c.style.verticalAlign=makeEm(-u.depth)}}return u}function newDocumentFragment(e){return new DocumentFragment(e)}class MathNode{constructor(e,t,r){this.type=void 0;this.attributes=void 0;this.children=void 0;this.classes=void 0;this.type=e;this.attributes={};this.children=t||[];this.classes=r||[]}setAttribute(e,t){this.attributes[e]=t}getAttribute(e){return this.attributes[e]}toNode(){var e=document.createElementNS("http://www.w3.org/1998/Math/MathML",this.type);for(var t in this.attributes){if(Object.prototype.hasOwnProperty.call(this.attributes,t)){e.setAttribute(t,this.attributes[t])}}if(this.classes.length>0){e.className=createClass(this.classes)}for(var r=0;r<this.children.length;r++){e.appendChild(this.children[r].toNode())}return e}toMarkup(){var e="<"+this.type;for(var t in this.attributes){if(Object.prototype.hasOwnProperty.call(this.attributes,t)){e+=" "+t+'="';e+=utils.escape(this.attributes[t]);e+='"'}}if(this.classes.length>0){e+=' class ="'+utils.escape(createClass(this.classes))+'"'}e+=">";for(var r=0;r<this.children.length;r++){e+=this.children[r].toMarkup()}e+="</"+this.type+">";return e}toText(){return this.children.map((e=>e.toText())).join("")}}class TextNode{constructor(e){this.text=void 0;this.text=e}toNode(){return document.createTextNode(this.text)}toMarkup(){return utils.escape(this.toText())}toText(){return this.text}}class SpaceNode{constructor(e){this.width=void 0;this.character=void 0;this.width=e;if(e>=.05555&&e<=.05556){this.character=" "}else if(e>=.1666&&e<=.1667){this.character=" "}else if(e>=.2222&&e<=.2223){this.character=" "}else if(e>=.2777&&e<=.2778){this.character="  "}else if(e>=-.05556&&e<=-.05555){this.character=" ⁣"}else if(e>=-.1667&&e<=-.1666){this.character=" ⁣"}else if(e>=-.2223&&e<=-.2222){this.character=" ⁣"}else if(e>=-.2778&&e<=-.2777){this.character=" ⁣"}else{this.character=null}}toNode(){if(this.character){return document.createTextNode(this.character)}else{var e=document.createElementNS("http://www.w3.org/1998/Math/MathML","mspace");e.setAttribute("width",makeEm(this.width));return e}}toMarkup(){if(this.character){return"<mtext>"+this.character+"</mtext>"}else{return'<mspace width="'+makeEm(this.width)+'"/>'}}toText(){if(this.character){return this.character}else{return" "}}}var mathMLTree={MathNode:MathNode,TextNode:TextNode,SpaceNode:SpaceNode,newDocumentFragment:newDocumentFragment};var makeText=function e(t,r,n){if(symbols[r][t]&&symbols[r][t].replace&&t.charCodeAt(0)!==55349&&!(ligatures.hasOwnProperty(t)&&n&&(n.fontFamily&&n.fontFamily.slice(4,6)==="tt"||n.font&&n.font.slice(4,6)==="tt"))){t=symbols[r][t].replace}return new mathMLTree.TextNode(t)};var makeRow=function e(t){if(t.length===1){return t[0]}else{return new mathMLTree.MathNode("mrow",t)}};var getVariant=function e(t,r){if(r.fontFamily==="texttt"){return"monospace"}else if(r.fontFamily==="textsf"){if(r.fontShape==="textit"&&r.fontWeight==="textbf"){return"sans-serif-bold-italic"}else if(r.fontShape==="textit"){return"sans-serif-italic"}else if(r.fontWeight==="textbf"){return"bold-sans-serif"}else{return"sans-serif"}}else if(r.fontShape==="textit"&&r.fontWeight==="textbf"){return"bold-italic"}else if(r.fontShape==="textit"){return"italic"}else if(r.fontWeight==="textbf"){return"bold"}var n=r.font;if(!n||n==="mathnormal"){return null}var a=t.mode;if(n==="mathit"){return"italic"}else if(n==="boldsymbol"){return t.type==="textord"?"bold":"bold-italic"}else if(n==="mathbf"){return"bold"}else if(n==="mathbb"){return"double-struck"}else if(n==="mathfrak"){return"fraktur"}else if(n==="mathscr"||n==="mathcal"){return"script"}else if(n==="mathsf"){return"sans-serif"}else if(n==="mathtt"){return"monospace"}var o=t.text;if(utils.contains(["\\imath","\\jmath"],o)){return null}if(symbols[a][o]&&symbols[a][o].replace){o=symbols[a][o].replace}var i=buildCommon.fontMap[n].fontName;if(getCharacterMetrics(o,i,a)){return buildCommon.fontMap[n].variant}return null};var buildExpression=function e(t,r,n){if(t.length===1){var a=buildGroup(t[0],r);if(n&&a instanceof MathNode&&a.type==="mo"){a.setAttribute("lspace","0em");a.setAttribute("rspace","0em")}return[a]}var o=[];var i;for(var l=0;l<t.length;l++){var s=buildGroup(t[l],r);if(s instanceof MathNode&&i instanceof MathNode){if(s.type==="mtext"&&i.type==="mtext"&&s.getAttribute("mathvariant")===i.getAttribute("mathvariant")){i.children.push(...s.children);continue}else if(s.type==="mn"&&i.type==="mn"){i.children.push(...s.children);continue}else if(s.type==="mi"&&s.children.length===1&&i.type==="mn"){var m=s.children[0];if(m instanceof TextNode&&m.text==="."){i.children.push(...s.children);continue}}else if(i.type==="mi"&&i.children.length===1){var u=i.children[0];if(u instanceof TextNode&&u.text==="̸"&&(s.type==="mo"||s.type==="mi"||s.type==="mn")){var c=s.children[0];if(c instanceof TextNode&&c.text.length>0){c.text=c.text.slice(0,1)+"̸"+c.text.slice(1);o.pop()}}}}o.push(s);i=s}return o};var buildExpressionRow=function e(t,r,n){return makeRow(buildExpression(t,r,n))};var buildGroup=function e(t,r){if(!t){return new mathMLTree.MathNode("mrow")}if(_mathmlGroupBuilders[t.type]){var n=_mathmlGroupBuilders[t.type](t,r);return n}else{throw new ParseError("Got group of unknown type: '"+t.type+"'")}};function buildMathML(e,t,r,n,a){var o=buildExpression(e,r);var i;if(o.length===1&&o[0]instanceof MathNode&&utils.contains(["mrow","mtable"],o[0].type)){i=o[0]}else{i=new mathMLTree.MathNode("mrow",o)}var l=new mathMLTree.MathNode("annotation",[new mathMLTree.TextNode(t)]);l.setAttribute("encoding","application/x-tex");var s=new mathMLTree.MathNode("semantics",[i,l]);var m=new mathMLTree.MathNode("math",[s]);m.setAttribute("xmlns","http://www.w3.org/1998/Math/MathML");if(n){m.setAttribute("display","block")}var u=a?"katex":"katex-mathml";return buildCommon.makeSpan([u],[m])}var optionsFromSettings=function e(t){return new Options({style:t.displayMode?Style$1.DISPLAY:Style$1.TEXT,maxSize:t.maxSize,minRuleThickness:t.minRuleThickness})};var displayWrap=function e(t,r){if(r.displayMode){var n=["katex-display"];if(r.leqno){n.push("leqno")}if(r.fleqn){n.push("fleqn")}t=buildCommon.makeSpan(n,[t])}return t};var buildTree=function e(t,r,n){var a=optionsFromSettings(n);var o;if(n.output==="mathml"){return buildMathML(t,r,a,n.displayMode,true)}else if(n.output==="html"){var i=buildHTML(t,a);o=buildCommon.makeSpan(["katex"],[i])}else{var l=buildMathML(t,r,a,n.displayMode,false);var s=buildHTML(t,a);o=buildCommon.makeSpan(["katex"],[l,s])}return displayWrap(o,n)};var buildHTMLTree=function e(t,r,n){var a=optionsFromSettings(n);var o=buildHTML(t,a);var i=buildCommon.makeSpan(["katex"],[o]);return displayWrap(i,n)};var stretchyCodePoint={widehat:"^",widecheck:"ˇ",widetilde:"~",utilde:"~",overleftarrow:"←",underleftarrow:"←",xleftarrow:"←",overrightarrow:"→",underrightarrow:"→",xrightarrow:"→",underbrace:"⏟",overbrace:"⏞",overgroup:"⏠",undergroup:"⏡",overleftrightarrow:"↔",underleftrightarrow:"↔",xleftrightarrow:"↔",Overrightarrow:"⇒",xRightarrow:"⇒",overleftharpoon:"↼",xleftharpoonup:"↼",overrightharpoon:"⇀",xrightharpoonup:"⇀",xLeftarrow:"⇐",xLeftrightarrow:"⇔",xhookleftarrow:"↩",xhookrightarrow:"↪",xmapsto:"↦",xrightharpoondown:"⇁",xleftharpoondown:"↽",xrightleftharpoons:"⇌",xleftrightharpoons:"⇋",xtwoheadleftarrow:"↞",xtwoheadrightarrow:"↠",xlongequal:"=",xtofrom:"⇄",xrightleftarrows:"⇄",xrightequilibrium:"⇌",xleftequilibrium:"⇋","\\cdrightarrow":"→","\\cdleftarrow":"←","\\cdlongequal":"="};var mathMLnode=function e(t){var r=new mathMLTree.MathNode("mo",[new mathMLTree.TextNode(stretchyCodePoint[t.replace(/^\\/,"")])]);r.setAttribute("stretchy","true");return r};var katexImagesData={overrightarrow:[["rightarrow"],.888,522,"xMaxYMin"],overleftarrow:[["leftarrow"],.888,522,"xMinYMin"],underrightarrow:[["rightarrow"],.888,522,"xMaxYMin"],underleftarrow:[["leftarrow"],.888,522,"xMinYMin"],xrightarrow:[["rightarrow"],1.469,522,"xMaxYMin"],"\\cdrightarrow":[["rightarrow"],3,522,"xMaxYMin"],xleftarrow:[["leftarrow"],1.469,522,"xMinYMin"],"\\cdleftarrow":[["leftarrow"],3,522,"xMinYMin"],Overrightarrow:[["doublerightarrow"],.888,560,"xMaxYMin"],xRightarrow:[["doublerightarrow"],1.526,560,"xMaxYMin"],xLeftarrow:[["doubleleftarrow"],1.526,560,"xMinYMin"],overleftharpoon:[["leftharpoon"],.888,522,"xMinYMin"],xleftharpoonup:[["leftharpoon"],.888,522,"xMinYMin"],xleftharpoondown:[["leftharpoondown"],.888,522,"xMinYMin"],overrightharpoon:[["rightharpoon"],.888,522,"xMaxYMin"],xrightharpoonup:[["rightharpoon"],.888,522,"xMaxYMin"],xrightharpoondown:[["rightharpoondown"],.888,522,"xMaxYMin"],xlongequal:[["longequal"],.888,334,"xMinYMin"],"\\cdlongequal":[["longequal"],3,334,"xMinYMin"],xtwoheadleftarrow:[["twoheadleftarrow"],.888,334,"xMinYMin"],xtwoheadrightarrow:[["twoheadrightarrow"],.888,334,"xMaxYMin"],overleftrightarrow:[["leftarrow","rightarrow"],.888,522],overbrace:[["leftbrace","midbrace","rightbrace"],1.6,548],underbrace:[["leftbraceunder","midbraceunder","rightbraceunder"],1.6,548],underleftrightarrow:[["leftarrow","rightarrow"],.888,522],xleftrightarrow:[["leftarrow","rightarrow"],1.75,522],xLeftrightarrow:[["doubleleftarrow","doublerightarrow"],1.75,560],xrightleftharpoons:[["leftharpoondownplus","rightharpoonplus"],1.75,716],xleftrightharpoons:[["leftharpoonplus","rightharpoondownplus"],1.75,716],xhookleftarrow:[["leftarrow","righthook"],1.08,522],xhookrightarrow:[["lefthook","rightarrow"],1.08,522],overlinesegment:[["leftlinesegment","rightlinesegment"],.888,522],underlinesegment:[["leftlinesegment","rightlinesegment"],.888,522],overgroup:[["leftgroup","rightgroup"],.888,342],undergroup:[["leftgroupunder","rightgroupunder"],.888,342],xmapsto:[["leftmapsto","rightarrow"],1.5,522],xtofrom:[["leftToFrom","rightToFrom"],1.75,528],xrightleftarrows:[["baraboveleftarrow","rightarrowabovebar"],1.75,901],xrightequilibrium:[["baraboveshortleftharpoon","rightharpoonaboveshortbar"],1.75,716],xleftequilibrium:[["shortbaraboveleftharpoon","shortrightharpoonabovebar"],1.75,716]};var groupLength=function e(t){if(t.type==="ordgroup"){return t.body.length}else{return 1}};var svgSpan=function e(t,r){function n(){var e=4e5;var n=t.label.slice(1);if(utils.contains(["widehat","widecheck","widetilde","utilde"],n)){var a=t;var o=groupLength(a.base);var i;var l;var s;if(o>5){if(n==="widehat"||n==="widecheck"){i=420;e=2364;s=.42;l=n+"4"}else{i=312;e=2340;s=.34;l="tilde4"}}else{var m=[1,1,2,2,3,3][o];if(n==="widehat"||n==="widecheck"){e=[0,1062,2364,2364,2364][m];i=[0,239,300,360,420][m];s=[0,.24,.3,.3,.36,.42][m];l=n+m}else{e=[0,600,1033,2339,2340][m];i=[0,260,286,306,312][m];s=[0,.26,.286,.3,.306,.34][m];l="tilde"+m}}var u=new PathNode(l);var c=new SvgNode([u],{width:"100%",height:makeEm(s),viewBox:"0 0 "+e+" "+i,preserveAspectRatio:"none"});return{span:buildCommon.makeSvgSpan([],[c],r),minWidth:0,height:s}}else{var d=[];var p=katexImagesData[n];var[h,f,b]=p;var g=b/1e3;var y=h.length;var x;var $;if(y===1){var v=p[3];x=["hide-tail"];$=[v]}else if(y===2){x=["halfarrow-left","halfarrow-right"];$=["xMinYMin","xMaxYMin"]}else if(y===3){x=["brace-left","brace-center","brace-right"];$=["xMinYMin","xMidYMin","xMaxYMin"]}else{throw new Error("Correct katexImagesData or update code here to support\n                    "+y+" children.")}for(var S=0;S<y;S++){var w=new PathNode(h[S]);var R=new SvgNode([w],{width:"400em",height:makeEm(g),viewBox:"0 0 "+e+" "+b,preserveAspectRatio:$[S]+" slice"});var M=buildCommon.makeSvgSpan([x[S]],[R],r);if(y===1){return{span:M,minWidth:f,height:g}}else{M.style.height=makeEm(g);d.push(M)}}return{span:buildCommon.makeSpan(["stretchy"],d,r),minWidth:f,height:g}}}var{span:a,minWidth:o,height:i}=n();a.height=i;a.style.height=makeEm(i);if(o>0){a.style.minWidth=makeEm(o)}return a};var encloseSpan=function e(t,r,n,a,o){var i;var l=t.height+t.depth+n+a;if(/fbox|color|angl/.test(r)){i=buildCommon.makeSpan(["stretchy",r],[],o);if(r==="fbox"){var s=o.color&&o.getColor();if(s){i.style.borderColor=s}}}else{var m=[];if(/^[bx]cancel$/.test(r)){m.push(new LineNode({x1:"0",y1:"0",x2:"100%",y2:"100%","stroke-width":"0.046em"}))}if(/^x?cancel$/.test(r)){m.push(new LineNode({x1:"0",y1:"100%",x2:"100%",y2:"0","stroke-width":"0.046em"}))}var u=new SvgNode(m,{width:"100%",height:makeEm(l)});i=buildCommon.makeSvgSpan([],[u],o)}i.height=l;i.style.height=makeEm(l);return i};var stretchy={encloseSpan:encloseSpan,mathMLnode:mathMLnode,svgSpan:svgSpan};function assertNodeType(e,t){if(!e||e.type!==t){throw new Error("Expected node of type "+t+", but got "+(e?"node of type "+e.type:String(e)))}return e}function assertSymbolNodeType(e){var t=checkSymbolNodeType(e);if(!t){throw new Error("Expected node of symbol group type, but got "+(e?"node of type "+e.type:String(e)))}return t}function checkSymbolNodeType(e){if(e&&(e.type==="atom"||NON_ATOMS.hasOwnProperty(e.type))){return e}return null}var htmlBuilder$a=(e,t)=>{var r;var n;var a;if(e&&e.type==="supsub"){n=assertNodeType(e.base,"accent");r=n.base;e.base=r;a=assertSpan(buildGroup$1(e,t));e.base=n}else{n=assertNodeType(e,"accent");r=n.base}var o=buildGroup$1(r,t.havingCrampedStyle());var i=n.isShifty&&utils.isCharacterBox(r);var l=0;if(i){var s=utils.getBaseElem(r);var m=buildGroup$1(s,t.havingCrampedStyle());l=assertSymbolDomNode(m).skew}var u=n.label==="\\c";var c=u?o.height+o.depth:Math.min(o.height,t.fontMetrics().xHeight);var d;if(!n.isStretchy){var p;var h;if(n.label==="\\vec"){p=buildCommon.staticSvg("vec",t);h=buildCommon.svgData.vec[1]}else{p=buildCommon.makeOrd({mode:n.mode,text:n.label},t,"textord");p=assertSymbolDomNode(p);p.italic=0;h=p.width;if(u){c+=p.depth}}d=buildCommon.makeSpan(["accent-body"],[p]);var f=n.label==="\\textcircled";if(f){d.classes.push("accent-full");c=o.height}var b=l;if(!f){b-=h/2}d.style.left=makeEm(b);if(n.label==="\\textcircled"){d.style.top=".2em"}d=buildCommon.makeVList({positionType:"firstBaseline",children:[{type:"elem",elem:o},{type:"kern",size:-c},{type:"elem",elem:d}]},t)}else{d=stretchy.svgSpan(n,t);d=buildCommon.makeVList({positionType:"firstBaseline",children:[{type:"elem",elem:o},{type:"elem",elem:d,wrapperClasses:["svg-align"],wrapperStyle:l>0?{width:"calc(100% - "+makeEm(2*l)+")",marginLeft:makeEm(2*l)}:undefined}]},t)}var g=buildCommon.makeSpan(["mord","accent"],[d],t);if(a){a.children[0]=g;a.height=Math.max(g.height,a.height);a.classes[0]="mord";return a}else{return g}};var mathmlBuilder$9=(e,t)=>{var r=e.isStretchy?stretchy.mathMLnode(e.label):new mathMLTree.MathNode("mo",[makeText(e.label,e.mode)]);var n=new mathMLTree.MathNode("mover",[buildGroup(e.base,t),r]);n.setAttribute("accent","true");return n};var NON_STRETCHY_ACCENT_REGEX=new RegExp(["\\acute","\\grave","\\ddot","\\tilde","\\bar","\\breve","\\check","\\hat","\\vec","\\dot","\\mathring"].map((e=>"\\"+e)).join("|"));defineFunction({type:"accent",names:["\\acute","\\grave","\\ddot","\\tilde","\\bar","\\breve","\\check","\\hat","\\vec","\\dot","\\mathring","\\widecheck","\\widehat","\\widetilde","\\overrightarrow","\\overleftarrow","\\Overrightarrow","\\overleftrightarrow","\\overgroup","\\overlinesegment","\\overleftharpoon","\\overrightharpoon"],props:{numArgs:1},handler:(e,t)=>{var r=normalizeArgument(t[0]);var n=!NON_STRETCHY_ACCENT_REGEX.test(e.funcName);var a=!n||e.funcName==="\\widehat"||e.funcName==="\\widetilde"||e.funcName==="\\widecheck";return{type:"accent",mode:e.parser.mode,label:e.funcName,isStretchy:n,isShifty:a,base:r}},htmlBuilder:htmlBuilder$a,mathmlBuilder:mathmlBuilder$9});defineFunction({type:"accent",names:["\\'","\\`","\\^","\\~","\\=","\\u","\\.",'\\"',"\\c","\\r","\\H","\\v","\\textcircled"],props:{numArgs:1,allowedInText:true,allowedInMath:true,argTypes:["primitive"]},handler:(e,t)=>{var r=t[0];var n=e.parser.mode;if(n==="math"){e.parser.settings.reportNonstrict("mathVsTextAccents","LaTeX's accent "+e.funcName+" works only in text mode");n="text"}return{type:"accent",mode:n,label:e.funcName,isStretchy:false,isShifty:true,base:r}},htmlBuilder:htmlBuilder$a,mathmlBuilder:mathmlBuilder$9});defineFunction({type:"accentUnder",names:["\\underleftarrow","\\underrightarrow","\\underleftrightarrow","\\undergroup","\\underlinesegment","\\utilde"],props:{numArgs:1},handler:(e,t)=>{var{parser:r,funcName:n}=e;var a=t[0];return{type:"accentUnder",mode:r.mode,label:n,base:a}},htmlBuilder:(e,t)=>{var r=buildGroup$1(e.base,t);var n=stretchy.svgSpan(e,t);var a=e.label==="\\utilde"?.12:0;var o=buildCommon.makeVList({positionType:"top",positionData:r.height,children:[{type:"elem",elem:n,wrapperClasses:["svg-align"]},{type:"kern",size:a},{type:"elem",elem:r}]},t);return buildCommon.makeSpan(["mord","accentunder"],[o],t)},mathmlBuilder:(e,t)=>{var r=stretchy.mathMLnode(e.label);var n=new mathMLTree.MathNode("munder",[buildGroup(e.base,t),r]);n.setAttribute("accentunder","true");return n}});var paddedNode=e=>{var t=new mathMLTree.MathNode("mpadded",e?[e]:[]);t.setAttribute("width","+0.6em");t.setAttribute("lspace","0.3em");return t};defineFunction({type:"xArrow",names:["\\xleftarrow","\\xrightarrow","\\xLeftarrow","\\xRightarrow","\\xleftrightarrow","\\xLeftrightarrow","\\xhookleftarrow","\\xhookrightarrow","\\xmapsto","\\xrightharpoondown","\\xrightharpoonup","\\xleftharpoondown","\\xleftharpoonup","\\xrightleftharpoons","\\xleftrightharpoons","\\xlongequal","\\xtwoheadrightarrow","\\xtwoheadleftarrow","\\xtofrom","\\xrightleftarrows","\\xrightequilibrium","\\xleftequilibrium","\\\\cdrightarrow","\\\\cdleftarrow","\\\\cdlongequal"],props:{numArgs:1,numOptionalArgs:1},handler(e,t,r){var{parser:n,funcName:a}=e;return{type:"xArrow",mode:n.mode,label:a,body:t[0],below:r[0]}},htmlBuilder(e,t){var r=t.style;var n=t.havingStyle(r.sup());var a=buildCommon.wrapFragment(buildGroup$1(e.body,n,t),t);var o=e.label.slice(0,2)==="\\x"?"x":"cd";a.classes.push(o+"-arrow-pad");var i;if(e.below){n=t.havingStyle(r.sub());i=buildCommon.wrapFragment(buildGroup$1(e.below,n,t),t);i.classes.push(o+"-arrow-pad")}var l=stretchy.svgSpan(e,t);var s=-t.fontMetrics().axisHeight+.5*l.height;var m=-t.fontMetrics().axisHeight-.5*l.height-.111;if(a.depth>.25||e.label==="\\xleftequilibrium"){m-=a.depth}var u;if(i){var c=-t.fontMetrics().axisHeight+i.height+.5*l.height+.111;u=buildCommon.makeVList({positionType:"individualShift",children:[{type:"elem",elem:a,shift:m},{type:"elem",elem:l,shift:s},{type:"elem",elem:i,shift:c}]},t)}else{u=buildCommon.makeVList({positionType:"individualShift",children:[{type:"elem",elem:a,shift:m},{type:"elem",elem:l,shift:s}]},t)}u.children[0].children[0].children[1].classes.push("svg-align");return buildCommon.makeSpan(["mrel","x-arrow"],[u],t)},mathmlBuilder(e,t){var r=stretchy.mathMLnode(e.label);r.setAttribute("minsize",e.label.charAt(0)==="x"?"1.75em":"3.0em");var n;if(e.body){var a=paddedNode(buildGroup(e.body,t));if(e.below){var o=paddedNode(buildGroup(e.below,t));n=new mathMLTree.MathNode("munderover",[r,o,a])}else{n=new mathMLTree.MathNode("mover",[r,a])}}else if(e.below){var i=paddedNode(buildGroup(e.below,t));n=new mathMLTree.MathNode("munder",[r,i])}else{n=paddedNode();n=new mathMLTree.MathNode("mover",[r,n])}return n}});var makeSpan=buildCommon.makeSpan;function htmlBuilder$9(e,t){var r=buildExpression$1(e.body,t,true);return makeSpan([e.mclass],r,t)}function mathmlBuilder$8(e,t){var r;var n=buildExpression(e.body,t);if(e.mclass==="minner"){r=new mathMLTree.MathNode("mpadded",n)}else if(e.mclass==="mord"){if(e.isCharacterBox){r=n[0];r.type="mi"}else{r=new mathMLTree.MathNode("mi",n)}}else{if(e.isCharacterBox){r=n[0];r.type="mo"}else{r=new mathMLTree.MathNode("mo",n)}if(e.mclass==="mbin"){r.attributes.lspace="0.22em";r.attributes.rspace="0.22em"}else if(e.mclass==="mpunct"){r.attributes.lspace="0em";r.attributes.rspace="0.17em"}else if(e.mclass==="mopen"||e.mclass==="mclose"){r.attributes.lspace="0em";r.attributes.rspace="0em"}else if(e.mclass==="minner"){r.attributes.lspace="0.0556em";r.attributes.width="+0.1111em"}}return r}defineFunction({type:"mclass",names:["\\mathord","\\mathbin","\\mathrel","\\mathopen","\\mathclose","\\mathpunct","\\mathinner"],props:{numArgs:1,primitive:true},handler(e,t){var{parser:r,funcName:n}=e;var a=t[0];return{type:"mclass",mode:r.mode,mclass:"m"+n.slice(5),body:ordargument(a),isCharacterBox:utils.isCharacterBox(a)}},htmlBuilder:htmlBuilder$9,mathmlBuilder:mathmlBuilder$8});var binrelClass=e=>{var t=e.type==="ordgroup"&&e.body.length?e.body[0]:e;if(t.type==="atom"&&(t.family==="bin"||t.family==="rel")){return"m"+t.family}else{return"mord"}};defineFunction({type:"mclass",names:["\\@binrel"],props:{numArgs:2},handler(e,t){var{parser:r}=e;return{type:"mclass",mode:r.mode,mclass:binrelClass(t[0]),body:ordargument(t[1]),isCharacterBox:utils.isCharacterBox(t[1])}}});defineFunction({type:"mclass",names:["\\stackrel","\\overset","\\underset"],props:{numArgs:2},handler(e,t){var{parser:r,funcName:n}=e;var a=t[1];var o=t[0];var i;if(n!=="\\stackrel"){i=binrelClass(a)}else{i="mrel"}var l={type:"op",mode:a.mode,limits:true,alwaysHandleSupSub:true,parentIsSupSub:false,symbol:false,suppressBaseShift:n!=="\\stackrel",body:ordargument(a)};var s={type:"supsub",mode:o.mode,base:l,sup:n==="\\underset"?null:o,sub:n==="\\underset"?o:null};return{type:"mclass",mode:r.mode,mclass:i,body:[s],isCharacterBox:utils.isCharacterBox(s)}},htmlBuilder:htmlBuilder$9,mathmlBuilder:mathmlBuilder$8});defineFunction({type:"pmb",names:["\\pmb"],props:{numArgs:1,allowedInText:true},handler(e,t){var{parser:r}=e;return{type:"pmb",mode:r.mode,mclass:binrelClass(t[0]),body:ordargument(t[0])}},htmlBuilder(e,t){var r=buildExpression$1(e.body,t,true);var n=buildCommon.makeSpan([e.mclass],r,t);n.style.textShadow="0.02em 0.01em 0.04px";return n},mathmlBuilder(e,t){var r=buildExpression(e.body,t);var n=new mathMLTree.MathNode("mstyle",r);n.setAttribute("style","text-shadow: 0.02em 0.01em 0.04px");return n}});var cdArrowFunctionName={">":"\\\\cdrightarrow","<":"\\\\cdleftarrow","=":"\\\\cdlongequal",A:"\\uparrow",V:"\\downarrow","|":"\\Vert",".":"no arrow"};var newCell=()=>({type:"styling",body:[],mode:"math",style:"display"});var isStartOfArrow=e=>e.type==="textord"&&e.text==="@";var isLabelEnd=(e,t)=>(e.type==="mathord"||e.type==="atom")&&e.text===t;function cdArrow(e,t,r){var n=cdArrowFunctionName[e];switch(n){case"\\\\cdrightarrow":case"\\\\cdleftarrow":return r.callFunction(n,[t[0]],[t[1]]);case"\\uparrow":case"\\downarrow":{var a=r.callFunction("\\\\cdleft",[t[0]],[]);var o={type:"atom",text:n,mode:"math",family:"rel"};var i=r.callFunction("\\Big",[o],[]);var l=r.callFunction("\\\\cdright",[t[1]],[]);var s={type:"ordgroup",mode:"math",body:[a,i,l]};return r.callFunction("\\\\cdparent",[s],[])}case"\\\\cdlongequal":return r.callFunction("\\\\cdlongequal",[],[]);case"\\Vert":{var m={type:"textord",text:"\\Vert",mode:"math"};return r.callFunction("\\Big",[m],[])}default:return{type:"textord",text:" ",mode:"math"}}}function parseCD(e){var t=[];e.gullet.beginGroup();e.gullet.macros.set("\\cr","\\\\\\relax");e.gullet.beginGroup();while(true){t.push(e.parseExpression(false,"\\\\"));e.gullet.endGroup();e.gullet.beginGroup();var r=e.fetch().text;if(r==="&"||r==="\\\\"){e.consume()}else if(r==="\\end"){if(t[t.length-1].length===0){t.pop()}break}else{throw new ParseError("Expected \\\\ or \\cr or \\end",e.nextToken)}}var n=[];var a=[n];for(var o=0;o<t.length;o++){var i=t[o];var l=newCell();for(var s=0;s<i.length;s++){if(!isStartOfArrow(i[s])){l.body.push(i[s])}else{n.push(l);s+=1;var m=assertSymbolNodeType(i[s]).text;var u=new Array(2);u[0]={type:"ordgroup",mode:"math",body:[]};u[1]={type:"ordgroup",mode:"math",body:[]};if("=|.".indexOf(m)>-1);else if("<>AV".indexOf(m)>-1){for(var c=0;c<2;c++){var d=true;for(var p=s+1;p<i.length;p++){if(isLabelEnd(i[p],m)){d=false;s=p;break}if(isStartOfArrow(i[p])){throw new ParseError("Missing a "+m+" character to complete a CD arrow.",i[p])}u[c].body.push(i[p])}if(d){throw new ParseError("Missing a "+m+" character to complete a CD arrow.",i[s])}}}else{throw new ParseError('Expected one of "<>AV=|." after @',i[s])}var h=cdArrow(m,u,e);var f={type:"styling",body:[h],mode:"math",style:"display"};n.push(f);l=newCell()}}if(o%2===0){n.push(l)}else{n.shift()}n=[];a.push(n)}e.gullet.endGroup();e.gullet.endGroup();var b=new Array(a[0].length).fill({type:"align",align:"c",pregap:.25,postgap:.25});return{type:"array",mode:"math",body:a,arraystretch:1,addJot:true,rowGaps:[null],cols:b,colSeparationType:"CD",hLinesBeforeRow:new Array(a.length+1).fill([])}}defineFunction({type:"cdlabel",names:["\\\\cdleft","\\\\cdright"],props:{numArgs:1},handler(e,t){var{parser:r,funcName:n}=e;return{type:"cdlabel",mode:r.mode,side:n.slice(4),label:t[0]}},htmlBuilder(e,t){var r=t.havingStyle(t.style.sup());var n=buildCommon.wrapFragment(buildGroup$1(e.label,r,t),t);n.classes.push("cd-label-"+e.side);n.style.bottom=makeEm(.8-n.depth);n.height=0;n.depth=0;return n},mathmlBuilder(e,t){var r=new mathMLTree.MathNode("mrow",[buildGroup(e.label,t)]);r=new mathMLTree.MathNode("mpadded",[r]);r.setAttribute("width","0");if(e.side==="left"){r.setAttribute("lspace","-1width")}r.setAttribute("voffset","0.7em");r=new mathMLTree.MathNode("mstyle",[r]);r.setAttribute("displaystyle","false");r.setAttribute("scriptlevel","1");return r}});defineFunction({type:"cdlabelparent",names:["\\\\cdparent"],props:{numArgs:1},handler(e,t){var{parser:r}=e;return{type:"cdlabelparent",mode:r.mode,fragment:t[0]}},htmlBuilder(e,t){var r=buildCommon.wrapFragment(buildGroup$1(e.fragment,t),t);r.classes.push("cd-vert-arrow");return r},mathmlBuilder(e,t){return new mathMLTree.MathNode("mrow",[buildGroup(e.fragment,t)])}});defineFunction({type:"textord",names:["\\@char"],props:{numArgs:1,allowedInText:true},handler(e,t){var{parser:r}=e;var n=assertNodeType(t[0],"ordgroup");var a=n.body;var o="";for(var i=0;i<a.length;i++){var l=assertNodeType(a[i],"textord");o+=l.text}var s=parseInt(o);var m;if(isNaN(s)){throw new ParseError("\\@char has non-numeric argument "+o)}else if(s<0||s>=1114111){throw new ParseError("\\@char with invalid code point "+o)}else if(s<=65535){m=String.fromCharCode(s)}else{s-=65536;m=String.fromCharCode((s>>10)+55296,(s&1023)+56320)}return{type:"textord",mode:r.mode,text:m}}});var htmlBuilder$8=(e,t)=>{var r=buildExpression$1(e.body,t.withColor(e.color),false);return buildCommon.makeFragment(r)};var mathmlBuilder$7=(e,t)=>{var r=buildExpression(e.body,t.withColor(e.color));var n=new mathMLTree.MathNode("mstyle",r);n.setAttribute("mathcolor",e.color);return n};defineFunction({type:"color",names:["\\textcolor"],props:{numArgs:2,allowedInText:true,argTypes:["color","original"]},handler(e,t){var{parser:r}=e;var n=assertNodeType(t[0],"color-token").color;var a=t[1];return{type:"color",mode:r.mode,color:n,body:ordargument(a)}},htmlBuilder:htmlBuilder$8,mathmlBuilder:mathmlBuilder$7});defineFunction({type:"color",names:["\\color"],props:{numArgs:1,allowedInText:true,argTypes:["color"]},handler(e,t){var{parser:r,breakOnTokenText:n}=e;var a=assertNodeType(t[0],"color-token").color;r.gullet.macros.set("\\current@color",a);var o=r.parseExpression(true,n);return{type:"color",mode:r.mode,color:a,body:o}},htmlBuilder:htmlBuilder$8,mathmlBuilder:mathmlBuilder$7});defineFunction({type:"cr",names:["\\\\"],props:{numArgs:0,numOptionalArgs:0,allowedInText:true},handler(e,t,r){var{parser:n}=e;var a=n.gullet.future().text==="["?n.parseSizeGroup(true):null;var o=!n.settings.displayMode||!n.settings.useStrictBehavior("newLineInDisplayMode","In LaTeX, \\\\ or \\newline "+"does nothing in display mode");return{type:"cr",mode:n.mode,newLine:o,size:a&&assertNodeType(a,"size").value}},htmlBuilder(e,t){var r=buildCommon.makeSpan(["mspace"],[],t);if(e.newLine){r.classes.push("newline");if(e.size){r.style.marginTop=makeEm(calculateSize(e.size,t))}}return r},mathmlBuilder(e,t){var r=new mathMLTree.MathNode("mspace");if(e.newLine){r.setAttribute("linebreak","newline");if(e.size){r.setAttribute("height",makeEm(calculateSize(e.size,t)))}}return r}});var globalMap={"\\global":"\\global","\\long":"\\\\globallong","\\\\globallong":"\\\\globallong","\\def":"\\gdef","\\gdef":"\\gdef","\\edef":"\\xdef","\\xdef":"\\xdef","\\let":"\\\\globallet","\\futurelet":"\\\\globalfuture"};var checkControlSequence=e=>{var t=e.text;if(/^(?:[\\{}$&#^_]|EOF)$/.test(t)){throw new ParseError("Expected a control sequence",e)}return t};var getRHS=e=>{var t=e.gullet.popToken();if(t.text==="="){t=e.gullet.popToken();if(t.text===" "){t=e.gullet.popToken()}}return t};var letCommand=(e,t,r,n)=>{var a=e.gullet.macros.get(r.text);if(a==null){r.noexpand=true;a={tokens:[r],numArgs:0,unexpandable:!e.gullet.isExpandable(r.text)}}e.gullet.macros.set(t,a,n)};defineFunction({type:"internal",names:["\\global","\\long","\\\\globallong"],props:{numArgs:0,allowedInText:true},handler(e){var{parser:t,funcName:r}=e;t.consumeSpaces();var n=t.fetch();if(globalMap[n.text]){if(r==="\\global"||r==="\\\\globallong"){n.text=globalMap[n.text]}return assertNodeType(t.parseFunction(),"internal")}throw new ParseError("Invalid token after macro prefix",n)}});defineFunction({type:"internal",names:["\\def","\\gdef","\\edef","\\xdef"],props:{numArgs:0,allowedInText:true,primitive:true},handler(e){var{parser:t,funcName:r}=e;var n=t.gullet.popToken();var a=n.text;if(/^(?:[\\{}$&#^_]|EOF)$/.test(a)){throw new ParseError("Expected a control sequence",n)}var o=0;var i;var l=[[]];while(t.gullet.future().text!=="{"){n=t.gullet.popToken();if(n.text==="#"){if(t.gullet.future().text==="{"){i=t.gullet.future();l[o].push("{");break}n=t.gullet.popToken();if(!/^[1-9]$/.test(n.text)){throw new ParseError('Invalid argument number "'+n.text+'"')}if(parseInt(n.text)!==o+1){throw new ParseError('Argument number "'+n.text+'" out of order')}o++;l.push([])}else if(n.text==="EOF"){throw new ParseError("Expected a macro definition")}else{l[o].push(n.text)}}var{tokens:s}=t.gullet.consumeArg();if(i){s.unshift(i)}if(r==="\\edef"||r==="\\xdef"){s=t.gullet.expandTokens(s);s.reverse()}t.gullet.macros.set(a,{tokens:s,numArgs:o,delimiters:l},r===globalMap[r]);return{type:"internal",mode:t.mode}}});defineFunction({type:"internal",names:["\\let","\\\\globallet"],props:{numArgs:0,allowedInText:true,primitive:true},handler(e){var{parser:t,funcName:r}=e;var n=checkControlSequence(t.gullet.popToken());t.gullet.consumeSpaces();var a=getRHS(t);letCommand(t,n,a,r==="\\\\globallet");return{type:"internal",mode:t.mode}}});defineFunction({type:"internal",names:["\\futurelet","\\\\globalfuture"],props:{numArgs:0,allowedInText:true,primitive:true},handler(e){var{parser:t,funcName:r}=e;var n=checkControlSequence(t.gullet.popToken());var a=t.gullet.popToken();var o=t.gullet.popToken();letCommand(t,n,o,r==="\\\\globalfuture");t.gullet.pushToken(o);t.gullet.pushToken(a);return{type:"internal",mode:t.mode}}});var getMetrics=function e(t,r,n){var a=symbols.math[t]&&symbols.math[t].replace;var o=getCharacterMetrics(a||t,r,n);if(!o){throw new Error("Unsupported symbol "+t+" and font size "+r+".")}return o};var styleWrap=function e(t,r,n,a){var o=n.havingBaseStyle(r);var i=buildCommon.makeSpan(a.concat(o.sizingClasses(n)),[t],n);var l=o.sizeMultiplier/n.sizeMultiplier;i.height*=l;i.depth*=l;i.maxFontSize=o.sizeMultiplier;return i};var centerSpan=function e(t,r,n){var a=r.havingBaseStyle(n);var o=(1-r.sizeMultiplier/a.sizeMultiplier)*r.fontMetrics().axisHeight;t.classes.push("delimcenter");t.style.top=makeEm(o);t.height-=o;t.depth+=o};var makeSmallDelim=function e(t,r,n,a,o,i){var l=buildCommon.makeSymbol(t,"Main-Regular",o,a);var s=styleWrap(l,r,a,i);if(n){centerSpan(s,a,r)}return s};var mathrmSize=function e(t,r,n,a){return buildCommon.makeSymbol(t,"Size"+r+"-Regular",n,a)};var makeLargeDelim=function e(t,r,n,a,o,i){var l=mathrmSize(t,r,o,a);var s=styleWrap(buildCommon.makeSpan(["delimsizing","size"+r],[l],a),Style$1.TEXT,a,i);if(n){centerSpan(s,a,Style$1.TEXT)}return s};var makeGlyphSpan=function e(t,r,n){var a;if(r==="Size1-Regular"){a="delim-size1"}else{a="delim-size4"}var o=buildCommon.makeSpan(["delimsizinginner",a],[buildCommon.makeSpan([],[buildCommon.makeSymbol(t,r,n)])]);return{type:"elem",elem:o}};var makeInner=function e(t,r,n){var a=fontMetricsData["Size4-Regular"][t.charCodeAt(0)]?fontMetricsData["Size4-Regular"][t.charCodeAt(0)][4]:fontMetricsData["Size1-Regular"][t.charCodeAt(0)][4];var o=new PathNode("inner",innerPath(t,Math.round(1e3*r)));var i=new SvgNode([o],{width:makeEm(a),height:makeEm(r),style:"width:"+makeEm(a),viewBox:"0 0 "+1e3*a+" "+Math.round(1e3*r),preserveAspectRatio:"xMinYMin"});var l=buildCommon.makeSvgSpan([],[i],n);l.height=r;l.style.height=makeEm(r);l.style.width=makeEm(a);return{type:"elem",elem:l}};var lapInEms=.008;var lap={type:"kern",size:-1*lapInEms};var verts=["|","\\lvert","\\rvert","\\vert"];var doubleVerts=["\\|","\\lVert","\\rVert","\\Vert"];var makeStackedDelim=function e(t,r,n,a,o,i){var l;var s;var m;var u;var c="";var d=0;l=m=u=t;s=null;var p="Size1-Regular";if(t==="\\uparrow"){m=u="⏐"}else if(t==="\\Uparrow"){m=u="‖"}else if(t==="\\downarrow"){l=m="⏐"}else if(t==="\\Downarrow"){l=m="‖"}else if(t==="\\updownarrow"){l="\\uparrow";m="⏐";u="\\downarrow"}else if(t==="\\Updownarrow"){l="\\Uparrow";m="‖";u="\\Downarrow"}else if(utils.contains(verts,t)){m="∣";c="vert";d=333}else if(utils.contains(doubleVerts,t)){m="∥";c="doublevert";d=556}else if(t==="["||t==="\\lbrack"){l="⎡";m="⎢";u="⎣";p="Size4-Regular";c="lbrack";d=667}else if(t==="]"||t==="\\rbrack"){l="⎤";m="⎥";u="⎦";p="Size4-Regular";c="rbrack";d=667}else if(t==="\\lfloor"||t==="⌊"){m=l="⎢";u="⎣";p="Size4-Regular";c="lfloor";d=667}else if(t==="\\lceil"||t==="⌈"){l="⎡";m=u="⎢";p="Size4-Regular";c="lceil";d=667}else if(t==="\\rfloor"||t==="⌋"){m=l="⎥";u="⎦";p="Size4-Regular";c="rfloor";d=667}else if(t==="\\rceil"||t==="⌉"){l="⎤";m=u="⎥";p="Size4-Regular";c="rceil";d=667}else if(t==="("||t==="\\lparen"){l="⎛";m="⎜";u="⎝";p="Size4-Regular";c="lparen";d=875}else if(t===")"||t==="\\rparen"){l="⎞";m="⎟";u="⎠";p="Size4-Regular";c="rparen";d=875}else if(t==="\\{"||t==="\\lbrace"){l="⎧";s="⎨";u="⎩";m="⎪";p="Size4-Regular"}else if(t==="\\}"||t==="\\rbrace"){l="⎫";s="⎬";u="⎭";m="⎪";p="Size4-Regular"}else if(t==="\\lgroup"||t==="⟮"){l="⎧";u="⎩";m="⎪";p="Size4-Regular"}else if(t==="\\rgroup"||t==="⟯"){l="⎫";u="⎭";m="⎪";p="Size4-Regular"}else if(t==="\\lmoustache"||t==="⎰"){l="⎧";u="⎭";m="⎪";p="Size4-Regular"}else if(t==="\\rmoustache"||t==="⎱"){l="⎫";u="⎩";m="⎪";p="Size4-Regular"}var h=getMetrics(l,p,o);var f=h.height+h.depth;var b=getMetrics(m,p,o);var g=b.height+b.depth;var y=getMetrics(u,p,o);var x=y.height+y.depth;var $=0;var v=1;if(s!==null){var S=getMetrics(s,p,o);$=S.height+S.depth;v=2}var w=f+x+$;var R=Math.max(0,Math.ceil((r-w)/(v*g)));var M=w+R*v*g;var A=a.fontMetrics().axisHeight;if(n){A*=a.sizeMultiplier}var T=M/2-A;var k=[];if(c.length>0){var N=M-f-x;var E=Math.round(M*1e3);var O=tallDelim(c,Math.round(N*1e3));var C=new PathNode(c,O);var L=(d/1e3).toFixed(3)+"em";var I=(E/1e3).toFixed(3)+"em";var B=new SvgNode([C],{width:L,height:I,viewBox:"0 0 "+d+" "+E});var z=buildCommon.makeSvgSpan([],[B],a);z.height=E/1e3;z.style.width=L;z.style.height=I;k.push({type:"elem",elem:z})}else{k.push(makeGlyphSpan(u,p,o));k.push(lap);if(s===null){var _=M-f-x+2*lapInEms;k.push(makeInner(m,_,a))}else{var P=(M-f-x-$)/2+2*lapInEms;k.push(makeInner(m,P,a));k.push(lap);k.push(makeGlyphSpan(s,p,o));k.push(lap);k.push(makeInner(m,P,a))}k.push(lap);k.push(makeGlyphSpan(l,p,o))}var q=a.havingBaseStyle(Style$1.TEXT);var D=buildCommon.makeVList({positionType:"bottom",positionData:T,children:k},q);return styleWrap(buildCommon.makeSpan(["delimsizing","mult"],[D],q),Style$1.TEXT,a,i)};var vbPad=80;var emPad=.08;var sqrtSvg=function e(t,r,n,a,o){var i=sqrtPath(t,a,n);var l=new PathNode(t,i);var s=new SvgNode([l],{width:"400em",height:makeEm(r),viewBox:"0 0 400000 "+n,preserveAspectRatio:"xMinYMin slice"});return buildCommon.makeSvgSpan(["hide-tail"],[s],o)};var makeSqrtImage=function e(t,r){var n=r.havingBaseSizing();var a=traverseSequence("\\surd",t*n.sizeMultiplier,stackLargeDelimiterSequence,n);var o=n.sizeMultiplier;var i=Math.max(0,r.minRuleThickness-r.fontMetrics().sqrtRuleThickness);var l;var s=0;var m=0;var u=0;var c;if(a.type==="small"){u=1e3+1e3*i+vbPad;if(t<1){o=1}else if(t<1.4){o=.7}s=(1+i+emPad)/o;m=(1+i)/o;l=sqrtSvg("sqrtMain",s,u,i,r);l.style.minWidth="0.853em";c=.833/o}else if(a.type==="large"){u=(1e3+vbPad)*sizeToMaxHeight[a.size];m=(sizeToMaxHeight[a.size]+i)/o;s=(sizeToMaxHeight[a.size]+i+emPad)/o;l=sqrtSvg("sqrtSize"+a.size,s,u,i,r);l.style.minWidth="1.02em";c=1/o}else{s=t+i+emPad;m=t+i;u=Math.floor(1e3*t+i)+vbPad;l=sqrtSvg("sqrtTall",s,u,i,r);l.style.minWidth="0.742em";c=1.056}l.height=m;l.style.height=makeEm(s);return{span:l,advanceWidth:c,ruleWidth:(r.fontMetrics().sqrtRuleThickness+i)*o}};var stackLargeDelimiters=["(","\\lparen",")","\\rparen","[","\\lbrack","]","\\rbrack","\\{","\\lbrace","\\}","\\rbrace","\\lfloor","\\rfloor","⌊","⌋","\\lceil","\\rceil","⌈","⌉","\\surd"];var stackAlwaysDelimiters=["\\uparrow","\\downarrow","\\updownarrow","\\Uparrow","\\Downarrow","\\Updownarrow","|","\\|","\\vert","\\Vert","\\lvert","\\rvert","\\lVert","\\rVert","\\lgroup","\\rgroup","⟮","⟯","\\lmoustache","\\rmoustache","⎰","⎱"];var stackNeverDelimiters=["<",">","\\langle","\\rangle","/","\\backslash","\\lt","\\gt"];var sizeToMaxHeight=[0,1.2,1.8,2.4,3];var makeSizedDelim=function e(t,r,n,a,o){if(t==="<"||t==="\\lt"||t==="⟨"){t="\\langle"}else if(t===">"||t==="\\gt"||t==="⟩"){t="\\rangle"}if(utils.contains(stackLargeDelimiters,t)||utils.contains(stackNeverDelimiters,t)){return makeLargeDelim(t,r,false,n,a,o)}else if(utils.contains(stackAlwaysDelimiters,t)){return makeStackedDelim(t,sizeToMaxHeight[r],false,n,a,o)}else{throw new ParseError("Illegal delimiter: '"+t+"'")}};var stackNeverDelimiterSequence=[{type:"small",style:Style$1.SCRIPTSCRIPT},{type:"small",style:Style$1.SCRIPT},{type:"small",style:Style$1.TEXT},{type:"large",size:1},{type:"large",size:2},{type:"large",size:3},{type:"large",size:4}];var stackAlwaysDelimiterSequence=[{type:"small",style:Style$1.SCRIPTSCRIPT},{type:"small",style:Style$1.SCRIPT},{type:"small",style:Style$1.TEXT},{type:"stack"}];var stackLargeDelimiterSequence=[{type:"small",style:Style$1.SCRIPTSCRIPT},{type:"small",style:Style$1.SCRIPT},{type:"small",style:Style$1.TEXT},{type:"large",size:1},{type:"large",size:2},{type:"large",size:3},{type:"large",size:4},{type:"stack"}];var delimTypeToFont=function e(t){if(t.type==="small"){return"Main-Regular"}else if(t.type==="large"){return"Size"+t.size+"-Regular"}else if(t.type==="stack"){return"Size4-Regular"}else{throw new Error("Add support for delim type '"+t.type+"' here.")}};var traverseSequence=function e(t,r,n,a){var o=Math.min(2,3-a.style.size);for(var i=o;i<n.length;i++){if(n[i].type==="stack"){break}var l=getMetrics(t,delimTypeToFont(n[i]),"math");var s=l.height+l.depth;if(n[i].type==="small"){var m=a.havingBaseStyle(n[i].style);s*=m.sizeMultiplier}if(s>r){return n[i]}}return n[n.length-1]};var makeCustomSizedDelim=function e(t,r,n,a,o,i){if(t==="<"||t==="\\lt"||t==="⟨"){t="\\langle"}else if(t===">"||t==="\\gt"||t==="⟩"){t="\\rangle"}var l;if(utils.contains(stackNeverDelimiters,t)){l=stackNeverDelimiterSequence}else if(utils.contains(stackLargeDelimiters,t)){l=stackLargeDelimiterSequence}else{l=stackAlwaysDelimiterSequence}var s=traverseSequence(t,r,l,a);if(s.type==="small"){return makeSmallDelim(t,s.style,n,a,o,i)}else if(s.type==="large"){return makeLargeDelim(t,s.size,n,a,o,i)}else{return makeStackedDelim(t,r,n,a,o,i)}};var makeLeftRightDelim=function e(t,r,n,a,o,i){var l=a.fontMetrics().axisHeight*a.sizeMultiplier;var s=901;var m=5/a.fontMetrics().ptPerEm;var u=Math.max(r-l,n+l);var c=Math.max(u/500*s,2*u-m);return makeCustomSizedDelim(t,c,true,a,o,i)};var delimiter={sqrtImage:makeSqrtImage,sizedDelim:makeSizedDelim,sizeToMaxHeight:sizeToMaxHeight,customSizedDelim:makeCustomSizedDelim,leftRightDelim:makeLeftRightDelim};var delimiterSizes={"\\bigl":{mclass:"mopen",size:1},"\\Bigl":{mclass:"mopen",size:2},"\\biggl":{mclass:"mopen",size:3},"\\Biggl":{mclass:"mopen",size:4},"\\bigr":{mclass:"mclose",size:1},"\\Bigr":{mclass:"mclose",size:2},"\\biggr":{mclass:"mclose",size:3},"\\Biggr":{mclass:"mclose",size:4},"\\bigm":{mclass:"mrel",size:1},"\\Bigm":{mclass:"mrel",size:2},"\\biggm":{mclass:"mrel",size:3},"\\Biggm":{mclass:"mrel",size:4},"\\big":{mclass:"mord",size:1},"\\Big":{mclass:"mord",size:2},"\\bigg":{mclass:"mord",size:3},"\\Bigg":{mclass:"mord",size:4}};var delimiters=["(","\\lparen",")","\\rparen","[","\\lbrack","]","\\rbrack","\\{","\\lbrace","\\}","\\rbrace","\\lfloor","\\rfloor","⌊","⌋","\\lceil","\\rceil","⌈","⌉","<",">","\\langle","⟨","\\rangle","⟩","\\lt","\\gt","\\lvert","\\rvert","\\lVert","\\rVert","\\lgroup","\\rgroup","⟮","⟯","\\lmoustache","\\rmoustache","⎰","⎱","/","\\backslash","|","\\vert","\\|","\\Vert","\\uparrow","\\Uparrow","\\downarrow","\\Downarrow","\\updownarrow","\\Updownarrow","."];function checkDelimiter(e,t){var r=checkSymbolNodeType(e);if(r&&utils.contains(delimiters,r.text)){return r}else if(r){throw new ParseError("Invalid delimiter '"+r.text+"' after '"+t.funcName+"'",e)}else{throw new ParseError("Invalid delimiter type '"+e.type+"'",e)}}defineFunction({type:"delimsizing",names:["\\bigl","\\Bigl","\\biggl","\\Biggl","\\bigr","\\Bigr","\\biggr","\\Biggr","\\bigm","\\Bigm","\\biggm","\\Biggm","\\big","\\Big","\\bigg","\\Bigg"],props:{numArgs:1,argTypes:["primitive"]},handler:(e,t)=>{var r=checkDelimiter(t[0],e);return{type:"delimsizing",mode:e.parser.mode,size:delimiterSizes[e.funcName].size,mclass:delimiterSizes[e.funcName].mclass,delim:r.text}},htmlBuilder:(e,t)=>{if(e.delim==="."){return buildCommon.makeSpan([e.mclass])}return delimiter.sizedDelim(e.delim,e.size,t,e.mode,[e.mclass])},mathmlBuilder:e=>{var t=[];if(e.delim!=="."){t.push(makeText(e.delim,e.mode))}var r=new mathMLTree.MathNode("mo",t);if(e.mclass==="mopen"||e.mclass==="mclose"){r.setAttribute("fence","true")}else{r.setAttribute("fence","false")}r.setAttribute("stretchy","true");var n=makeEm(delimiter.sizeToMaxHeight[e.size]);r.setAttribute("minsize",n);r.setAttribute("maxsize",n);return r}});function assertParsed(e){if(!e.body){throw new Error("Bug: The leftright ParseNode wasn't fully parsed.")}}defineFunction({type:"leftright-right",names:["\\right"],props:{numArgs:1,primitive:true},handler:(e,t)=>{var r=e.parser.gullet.macros.get("\\current@color");if(r&&typeof r!=="string"){throw new ParseError("\\current@color set to non-string in \\right")}return{type:"leftright-right",mode:e.parser.mode,delim:checkDelimiter(t[0],e).text,color:r}}});defineFunction({type:"leftright",names:["\\left"],props:{numArgs:1,primitive:true},handler:(e,t)=>{var r=checkDelimiter(t[0],e);var n=e.parser;++n.leftrightDepth;var a=n.parseExpression(false);--n.leftrightDepth;n.expect("\\right",false);var o=assertNodeType(n.parseFunction(),"leftright-right");return{type:"leftright",mode:n.mode,body:a,left:r.text,right:o.delim,rightColor:o.color}},htmlBuilder:(e,t)=>{assertParsed(e);var r=buildExpression$1(e.body,t,true,["mopen","mclose"]);var n=0;var a=0;var o=false;for(var i=0;i<r.length;i++){if(r[i].isMiddle){o=true}else{n=Math.max(r[i].height,n);a=Math.max(r[i].depth,a)}}n*=t.sizeMultiplier;a*=t.sizeMultiplier;var l;if(e.left==="."){l=makeNullDelimiter(t,["mopen"])}else{l=delimiter.leftRightDelim(e.left,n,a,t,e.mode,["mopen"])}r.unshift(l);if(o){for(var s=1;s<r.length;s++){var m=r[s];var u=m.isMiddle;if(u){r[s]=delimiter.leftRightDelim(u.delim,n,a,u.options,e.mode,[])}}}var c;if(e.right==="."){c=makeNullDelimiter(t,["mclose"])}else{var d=e.rightColor?t.withColor(e.rightColor):t;c=delimiter.leftRightDelim(e.right,n,a,d,e.mode,["mclose"])}r.push(c);return buildCommon.makeSpan(["minner"],r,t)},mathmlBuilder:(e,t)=>{assertParsed(e);var r=buildExpression(e.body,t);if(e.left!=="."){var n=new mathMLTree.MathNode("mo",[makeText(e.left,e.mode)]);n.setAttribute("fence","true");r.unshift(n)}if(e.right!=="."){var a=new mathMLTree.MathNode("mo",[makeText(e.right,e.mode)]);a.setAttribute("fence","true");if(e.rightColor){a.setAttribute("mathcolor",e.rightColor)}r.push(a)}return makeRow(r)}});defineFunction({type:"middle",names:["\\middle"],props:{numArgs:1,primitive:true},handler:(e,t)=>{var r=checkDelimiter(t[0],e);if(!e.parser.leftrightDepth){throw new ParseError("\\middle without preceding \\left",r)}return{type:"middle",mode:e.parser.mode,delim:r.text}},htmlBuilder:(e,t)=>{var r;if(e.delim==="."){r=makeNullDelimiter(t,[])}else{r=delimiter.sizedDelim(e.delim,1,t,e.mode,[]);var n={delim:e.delim,options:t};r.isMiddle=n}return r},mathmlBuilder:(e,t)=>{var r=e.delim==="\\vert"||e.delim==="|"?makeText("|","text"):makeText(e.delim,e.mode);var n=new mathMLTree.MathNode("mo",[r]);n.setAttribute("fence","true");n.setAttribute("lspace","0.05em");n.setAttribute("rspace","0.05em");return n}});var htmlBuilder$7=(e,t)=>{var r=buildCommon.wrapFragment(buildGroup$1(e.body,t),t);var n=e.label.slice(1);var a=t.sizeMultiplier;var o;var i=0;var l=utils.isCharacterBox(e.body);if(n==="sout"){o=buildCommon.makeSpan(["stretchy","sout"]);o.height=t.fontMetrics().defaultRuleThickness/a;i=-.5*t.fontMetrics().xHeight}else if(n==="phase"){var s=calculateSize({number:.6,unit:"pt"},t);var m=calculateSize({number:.35,unit:"ex"},t);var u=t.havingBaseSizing();a=a/u.sizeMultiplier;var c=r.height+r.depth+s+m;r.style.paddingLeft=makeEm(c/2+s);var d=Math.floor(1e3*c*a);var p=phasePath(d);var h=new SvgNode([new PathNode("phase",p)],{width:"400em",height:makeEm(d/1e3),viewBox:"0 0 400000 "+d,preserveAspectRatio:"xMinYMin slice"});o=buildCommon.makeSvgSpan(["hide-tail"],[h],t);o.style.height=makeEm(c);i=r.depth+s+m}else{if(/cancel/.test(n)){if(!l){r.classes.push("cancel-pad")}}else if(n==="angl"){r.classes.push("anglpad")}else{r.classes.push("boxpad")}var f=0;var b=0;var g=0;if(/box/.test(n)){g=Math.max(t.fontMetrics().fboxrule,t.minRuleThickness);f=t.fontMetrics().fboxsep+(n==="colorbox"?0:g);b=f}else if(n==="angl"){g=Math.max(t.fontMetrics().defaultRuleThickness,t.minRuleThickness);f=4*g;b=Math.max(0,.25-r.depth)}else{f=l?.2:0;b=f}o=stretchy.encloseSpan(r,n,f,b,t);if(/fbox|boxed|fcolorbox/.test(n)){o.style.borderStyle="solid";o.style.borderWidth=makeEm(g)}else if(n==="angl"&&g!==.049){o.style.borderTopWidth=makeEm(g);o.style.borderRightWidth=makeEm(g)}i=r.depth+b;if(e.backgroundColor){o.style.backgroundColor=e.backgroundColor;if(e.borderColor){o.style.borderColor=e.borderColor}}}var y;if(e.backgroundColor){y=buildCommon.makeVList({positionType:"individualShift",children:[{type:"elem",elem:o,shift:i},{type:"elem",elem:r,shift:0}]},t)}else{var x=/cancel|phase/.test(n)?["svg-align"]:[];y=buildCommon.makeVList({positionType:"individualShift",children:[{type:"elem",elem:r,shift:0},{type:"elem",elem:o,shift:i,wrapperClasses:x}]},t)}if(/cancel/.test(n)){y.height=r.height;y.depth=r.depth}if(/cancel/.test(n)&&!l){return buildCommon.makeSpan(["mord","cancel-lap"],[y],t)}else{return buildCommon.makeSpan(["mord"],[y],t)}};var mathmlBuilder$6=(e,t)=>{var r=0;var n=new mathMLTree.MathNode(e.label.indexOf("colorbox")>-1?"mpadded":"menclose",[buildGroup(e.body,t)]);switch(e.label){case"\\cancel":n.setAttribute("notation","updiagonalstrike");break;case"\\bcancel":n.setAttribute("notation","downdiagonalstrike");break;case"\\phase":n.setAttribute("notation","phasorangle");break;case"\\sout":n.setAttribute("notation","horizontalstrike");break;case"\\fbox":n.setAttribute("notation","box");break;case"\\angl":n.setAttribute("notation","actuarial");break;case"\\fcolorbox":case"\\colorbox":r=t.fontMetrics().fboxsep*t.fontMetrics().ptPerEm;n.setAttribute("width","+"+2*r+"pt");n.setAttribute("height","+"+2*r+"pt");n.setAttribute("lspace",r+"pt");n.setAttribute("voffset",r+"pt");if(e.label==="\\fcolorbox"){var a=Math.max(t.fontMetrics().fboxrule,t.minRuleThickness);n.setAttribute("style","border: "+a+"em solid "+String(e.borderColor))}break;case"\\xcancel":n.setAttribute("notation","updiagonalstrike downdiagonalstrike");break}if(e.backgroundColor){n.setAttribute("mathbackground",e.backgroundColor)}return n};defineFunction({type:"enclose",names:["\\colorbox"],props:{numArgs:2,allowedInText:true,argTypes:["color","text"]},handler(e,t,r){var{parser:n,funcName:a}=e;var o=assertNodeType(t[0],"color-token").color;var i=t[1];return{type:"enclose",mode:n.mode,label:a,backgroundColor:o,body:i}},htmlBuilder:htmlBuilder$7,mathmlBuilder:mathmlBuilder$6});defineFunction({type:"enclose",names:["\\fcolorbox"],props:{numArgs:3,allowedInText:true,argTypes:["color","color","text"]},handler(e,t,r){var{parser:n,funcName:a}=e;var o=assertNodeType(t[0],"color-token").color;var i=assertNodeType(t[1],"color-token").color;var l=t[2];return{type:"enclose",mode:n.mode,label:a,backgroundColor:i,borderColor:o,body:l}},htmlBuilder:htmlBuilder$7,mathmlBuilder:mathmlBuilder$6});defineFunction({type:"enclose",names:["\\fbox"],props:{numArgs:1,argTypes:["hbox"],allowedInText:true},handler(e,t){var{parser:r}=e;return{type:"enclose",mode:r.mode,label:"\\fbox",body:t[0]}}});defineFunction({type:"enclose",names:["\\cancel","\\bcancel","\\xcancel","\\sout","\\phase"],props:{numArgs:1},handler(e,t){var{parser:r,funcName:n}=e;var a=t[0];return{type:"enclose",mode:r.mode,label:n,body:a}},htmlBuilder:htmlBuilder$7,mathmlBuilder:mathmlBuilder$6});defineFunction({type:"enclose",names:["\\angl"],props:{numArgs:1,argTypes:["hbox"],allowedInText:false},handler(e,t){var{parser:r}=e;return{type:"enclose",mode:r.mode,label:"\\angl",body:t[0]}}});var _environments={};function defineEnvironment(e){var{type:t,names:r,props:n,handler:a,htmlBuilder:o,mathmlBuilder:i}=e;var l={type:t,numArgs:n.numArgs||0,allowedInText:false,numOptionalArgs:0,handler:a};for(var s=0;s<r.length;++s){_environments[r[s]]=l}if(o){_htmlGroupBuilders[t]=o}if(i){_mathmlGroupBuilders[t]=i}}var _macros={};function defineMacro(e,t){_macros[e]=t}function getHLines(e){var t=[];e.consumeSpaces();var r=e.fetch().text;if(r==="\\relax"){e.consume();e.consumeSpaces();r=e.fetch().text}while(r==="\\hline"||r==="\\hdashline"){e.consume();t.push(r==="\\hdashline");e.consumeSpaces();r=e.fetch().text}return t}var validateAmsEnvironmentContext=e=>{var t=e.parser.settings;if(!t.displayMode){throw new ParseError("{"+e.envName+"} can be used only in"+" display mode.")}};function getAutoTag(e){if(e.indexOf("ed")===-1){return e.indexOf("*")===-1}}function parseArray(e,t,r){var{hskipBeforeAndAfter:n,addJot:a,cols:o,arraystretch:i,colSeparationType:l,autoTag:s,singleRow:m,emptySingleRow:u,maxNumCols:c,leqno:d}=t;e.gullet.beginGroup();if(!m){e.gullet.macros.set("\\cr","\\\\\\relax")}if(!i){var p=e.gullet.expandMacroAsText("\\arraystretch");if(p==null){i=1}else{i=parseFloat(p);if(!i||i<0){throw new ParseError("Invalid \\arraystretch: "+p)}}}e.gullet.beginGroup();var h=[];var f=[h];var b=[];var g=[];var y=s!=null?[]:undefined;function x(){if(s){e.gullet.macros.set("\\@eqnsw","1",true)}}function $(){if(y){if(e.gullet.macros.get("\\df@tag")){y.push(e.subparse([new Token("\\df@tag")]));e.gullet.macros.set("\\df@tag",undefined,true)}else{y.push(Boolean(s)&&e.gullet.macros.get("\\@eqnsw")==="1")}}}x();g.push(getHLines(e));while(true){var v=e.parseExpression(false,m?"\\end":"\\\\");e.gullet.endGroup();e.gullet.beginGroup();v={type:"ordgroup",mode:e.mode,body:v};if(r){v={type:"styling",mode:e.mode,style:r,body:[v]}}h.push(v);var S=e.fetch().text;if(S==="&"){if(c&&h.length===c){if(m||l){throw new ParseError("Too many tab characters: &",e.nextToken)}else{e.settings.reportNonstrict("textEnv","Too few columns "+"specified in the {array} column argument.")}}e.consume()}else if(S==="\\end"){$();if(h.length===1&&v.type==="styling"&&v.body[0].body.length===0&&(f.length>1||!u)){f.pop()}if(g.length<f.length+1){g.push([])}break}else if(S==="\\\\"){e.consume();var w=void 0;if(e.gullet.future().text!==" "){w=e.parseSizeGroup(true)}b.push(w?w.value:null);$();g.push(getHLines(e));h=[];f.push(h);x()}else{throw new ParseError("Expected & or \\\\ or \\cr or \\end",e.nextToken)}}e.gullet.endGroup();e.gullet.endGroup();return{type:"array",mode:e.mode,addJot:a,arraystretch:i,body:f,cols:o,rowGaps:b,hskipBeforeAndAfter:n,hLinesBeforeRow:g,colSeparationType:l,tags:y,leqno:d}}function dCellStyle(e){if(e.slice(0,1)==="d"){return"display"}else{return"text"}}var htmlBuilder$6=function e(t,r){var n;var a;var o=t.body.length;var i=t.hLinesBeforeRow;var l=0;var s=new Array(o);var m=[];var u=Math.max(r.fontMetrics().arrayRuleWidth,r.minRuleThickness);var c=1/r.fontMetrics().ptPerEm;var d=5*c;if(t.colSeparationType&&t.colSeparationType==="small"){var p=r.havingStyle(Style$1.SCRIPT).sizeMultiplier;d=.2778*(p/r.sizeMultiplier)}var h=t.colSeparationType==="CD"?calculateSize({number:3,unit:"ex"},r):12*c;var f=3*c;var b=t.arraystretch*h;var g=.7*b;var y=.3*b;var x=0;function $(e){for(var t=0;t<e.length;++t){if(t>0){x+=.25}m.push({pos:x,isDashed:e[t]})}}$(i[0]);for(n=0;n<t.body.length;++n){var v=t.body[n];var S=g;var w=y;if(l<v.length){l=v.length}var R=new Array(v.length);for(a=0;a<v.length;++a){var M=buildGroup$1(v[a],r);if(w<M.depth){w=M.depth}if(S<M.height){S=M.height}R[a]=M}var A=t.rowGaps[n];var T=0;if(A){T=calculateSize(A,r);if(T>0){T+=y;if(w<T){w=T}T=0}}if(t.addJot){w+=f}R.height=S;R.depth=w;x+=S;R.pos=x;x+=w+T;s[n]=R;$(i[n+1])}var k=x/2+r.fontMetrics().axisHeight;var N=t.cols||[];var E=[];var O;var C;var L=[];if(t.tags&&t.tags.some((e=>e))){for(n=0;n<o;++n){var I=s[n];var B=I.pos-k;var z=t.tags[n];var _=void 0;if(z===true){_=buildCommon.makeSpan(["eqn-num"],[],r)}else if(z===false){_=buildCommon.makeSpan([],[],r)}else{_=buildCommon.makeSpan([],buildExpression$1(z,r,true),r)}_.depth=I.depth;_.height=I.height;L.push({type:"elem",elem:_,shift:B})}}for(a=0,C=0;a<l||C<N.length;++a,++C){var P=N[C]||{};var q=true;while(P.type==="separator"){if(!q){O=buildCommon.makeSpan(["arraycolsep"],[]);O.style.width=makeEm(r.fontMetrics().doubleRuleSep);E.push(O)}if(P.separator==="|"||P.separator===":"){var D=P.separator==="|"?"solid":"dashed";var F=buildCommon.makeSpan(["vertical-separator"],[],r);F.style.height=makeEm(x);F.style.borderRightWidth=makeEm(u);F.style.borderRightStyle=D;F.style.margin="0 "+makeEm(-u/2);var U=x-k;if(U){F.style.verticalAlign=makeEm(-U)}E.push(F)}else{throw new ParseError("Invalid separator type: "+P.separator)}C++;P=N[C]||{};q=false}if(a>=l){continue}var G=void 0;if(a>0||t.hskipBeforeAndAfter){G=utils.deflt(P.pregap,d);if(G!==0){O=buildCommon.makeSpan(["arraycolsep"],[]);O.style.width=makeEm(G);E.push(O)}}var V=[];for(n=0;n<o;++n){var H=s[n];var j=H[a];if(!j){continue}var W=H.pos-k;j.depth=H.depth;j.height=H.height;V.push({type:"elem",elem:j,shift:W})}V=buildCommon.makeVList({positionType:"individualShift",children:V},r);V=buildCommon.makeSpan(["col-align-"+(P.align||"c")],[V]);E.push(V);if(a<l-1||t.hskipBeforeAndAfter){G=utils.deflt(P.postgap,d);if(G!==0){O=buildCommon.makeSpan(["arraycolsep"],[]);O.style.width=makeEm(G);E.push(O)}}}s=buildCommon.makeSpan(["mtable"],E);if(m.length>0){var Z=buildCommon.makeLineSpan("hline",r,u);var X=buildCommon.makeLineSpan("hdashline",r,u);var Y=[{type:"elem",elem:s,shift:0}];while(m.length>0){var K=m.pop();var J=K.pos-k;if(K.isDashed){Y.push({type:"elem",elem:X,shift:J})}else{Y.push({type:"elem",elem:Z,shift:J})}}s=buildCommon.makeVList({positionType:"individualShift",children:Y},r)}if(L.length===0){return buildCommon.makeSpan(["mord"],[s],r)}else{var Q=buildCommon.makeVList({positionType:"individualShift",children:L},r);Q=buildCommon.makeSpan(["tag"],[Q],r);return buildCommon.makeFragment([s,Q])}};var alignMap={c:"center ",l:"left ",r:"right "};var mathmlBuilder$5=function e(t,r){var n=[];var a=new mathMLTree.MathNode("mtd",[],["mtr-glue"]);var o=new mathMLTree.MathNode("mtd",[],["mml-eqn-num"]);for(var i=0;i<t.body.length;i++){var l=t.body[i];var s=[];for(var m=0;m<l.length;m++){s.push(new mathMLTree.MathNode("mtd",[buildGroup(l[m],r)]))}if(t.tags&&t.tags[i]){s.unshift(a);s.push(a);if(t.leqno){s.unshift(o)}else{s.push(o)}}n.push(new mathMLTree.MathNode("mtr",s))}var u=new mathMLTree.MathNode("mtable",n);var c=t.arraystretch===.5?.1:.16+t.arraystretch-1+(t.addJot?.09:0);u.setAttribute("rowspacing",makeEm(c));var d="";var p="";if(t.cols&&t.cols.length>0){var h=t.cols;var f="";var b=false;var g=0;var y=h.length;if(h[0].type==="separator"){d+="top ";g=1}if(h[h.length-1].type==="separator"){d+="bottom ";y-=1}for(var x=g;x<y;x++){if(h[x].type==="align"){p+=alignMap[h[x].align];if(b){f+="none "}b=true}else if(h[x].type==="separator"){if(b){f+=h[x].separator==="|"?"solid ":"dashed ";b=false}}}u.setAttribute("columnalign",p.trim());if(/[sd]/.test(f)){u.setAttribute("columnlines",f.trim())}}if(t.colSeparationType==="align"){var $=t.cols||[];var v="";for(var S=1;S<$.length;S++){v+=S%2?"0em ":"1em "}u.setAttribute("columnspacing",v.trim())}else if(t.colSeparationType==="alignat"||t.colSeparationType==="gather"){u.setAttribute("columnspacing","0em")}else if(t.colSeparationType==="small"){u.setAttribute("columnspacing","0.2778em")}else if(t.colSeparationType==="CD"){u.setAttribute("columnspacing","0.5em")}else{u.setAttribute("columnspacing","1em")}var w="";var R=t.hLinesBeforeRow;d+=R[0].length>0?"left ":"";d+=R[R.length-1].length>0?"right ":"";for(var M=1;M<R.length-1;M++){w+=R[M].length===0?"none ":R[M][0]?"dashed ":"solid "}if(/[sd]/.test(w)){u.setAttribute("rowlines",w.trim())}if(d!==""){u=new mathMLTree.MathNode("menclose",[u]);u.setAttribute("notation",d.trim())}if(t.arraystretch&&t.arraystretch<1){u=new mathMLTree.MathNode("mstyle",[u]);u.setAttribute("scriptlevel","1")}return u};var alignedHandler=function e(t,r){if(t.envName.indexOf("ed")===-1){validateAmsEnvironmentContext(t)}var n=[];var a=t.envName.indexOf("at")>-1?"alignat":"align";var o=t.envName==="split";var i=parseArray(t.parser,{cols:n,addJot:true,autoTag:o?undefined:getAutoTag(t.envName),emptySingleRow:true,colSeparationType:a,maxNumCols:o?2:undefined,leqno:t.parser.settings.leqno},"display");var l;var s=0;var m={type:"ordgroup",mode:t.mode,body:[]};if(r[0]&&r[0].type==="ordgroup"){var u="";for(var c=0;c<r[0].body.length;c++){var d=assertNodeType(r[0].body[c],"textord");u+=d.text}l=Number(u);s=l*2}var p=!s;i.body.forEach((function(e){for(var t=1;t<e.length;t+=2){var r=assertNodeType(e[t],"styling");var n=assertNodeType(r.body[0],"ordgroup");n.body.unshift(m)}if(!p){var a=e.length/2;if(l<a){throw new ParseError("Too many math in a row: "+("expected "+l+", but got "+a),e[0])}}else if(s<e.length){s=e.length}}));for(var h=0;h<s;++h){var f="r";var b=0;if(h%2===1){f="l"}else if(h>0&&p){b=1}n[h]={type:"align",align:f,pregap:b,postgap:0}}i.colSeparationType=p?"align":"alignat";return i};defineEnvironment({type:"array",names:["array","darray"],props:{numArgs:1},handler(e,t){var r=checkSymbolNodeType(t[0]);var n=r?[t[0]]:assertNodeType(t[0],"ordgroup").body;var a=n.map((function(e){var t=assertSymbolNodeType(e);var r=t.text;if("lcr".indexOf(r)!==-1){return{type:"align",align:r}}else if(r==="|"){return{type:"separator",separator:"|"}}else if(r===":"){return{type:"separator",separator:":"}}throw new ParseError("Unknown column alignment: "+r,e)}));var o={cols:a,hskipBeforeAndAfter:true,maxNumCols:a.length};return parseArray(e.parser,o,dCellStyle(e.envName))},htmlBuilder:htmlBuilder$6,mathmlBuilder:mathmlBuilder$5});defineEnvironment({type:"array",names:["matrix","pmatrix","bmatrix","Bmatrix","vmatrix","Vmatrix","matrix*","pmatrix*","bmatrix*","Bmatrix*","vmatrix*","Vmatrix*"],props:{numArgs:0},handler(e){var t={matrix:null,pmatrix:["(",")"],bmatrix:["[","]"],Bmatrix:["\\{","\\}"],vmatrix:["|","|"],Vmatrix:["\\Vert","\\Vert"]}[e.envName.replace("*","")];var r="c";var n={hskipBeforeAndAfter:false,cols:[{type:"align",align:r}]};if(e.envName.charAt(e.envName.length-1)==="*"){var a=e.parser;a.consumeSpaces();if(a.fetch().text==="["){a.consume();a.consumeSpaces();r=a.fetch().text;if("lcr".indexOf(r)===-1){throw new ParseError("Expected l or c or r",a.nextToken)}a.consume();a.consumeSpaces();a.expect("]");a.consume();n.cols=[{type:"align",align:r}]}}var o=parseArray(e.parser,n,dCellStyle(e.envName));var i=Math.max(0,...o.body.map((e=>e.length)));o.cols=new Array(i).fill({type:"align",align:r});return t?{type:"leftright",mode:e.mode,body:[o],left:t[0],right:t[1],rightColor:undefined}:o},htmlBuilder:htmlBuilder$6,mathmlBuilder:mathmlBuilder$5});defineEnvironment({type:"array",names:["smallmatrix"],props:{numArgs:0},handler(e){var t={arraystretch:.5};var r=parseArray(e.parser,t,"script");r.colSeparationType="small";return r},htmlBuilder:htmlBuilder$6,mathmlBuilder:mathmlBuilder$5});defineEnvironment({type:"array",names:["subarray"],props:{numArgs:1},handler(e,t){var r=checkSymbolNodeType(t[0]);var n=r?[t[0]]:assertNodeType(t[0],"ordgroup").body;var a=n.map((function(e){var t=assertSymbolNodeType(e);var r=t.text;if("lc".indexOf(r)!==-1){return{type:"align",align:r}}throw new ParseError("Unknown column alignment: "+r,e)}));if(a.length>1){throw new ParseError("{subarray} can contain only one column")}var o={cols:a,hskipBeforeAndAfter:false,arraystretch:.5};o=parseArray(e.parser,o,"script");if(o.body.length>0&&o.body[0].length>1){throw new ParseError("{subarray} can contain only one column")}return o},htmlBuilder:htmlBuilder$6,mathmlBuilder:mathmlBuilder$5});defineEnvironment({type:"array",names:["cases","dcases","rcases","drcases"],props:{numArgs:0},handler(e){var t={arraystretch:1.2,cols:[{type:"align",align:"l",pregap:0,postgap:1},{type:"align",align:"l",pregap:0,postgap:0}]};var r=parseArray(e.parser,t,dCellStyle(e.envName));return{type:"leftright",mode:e.mode,body:[r],left:e.envName.indexOf("r")>-1?".":"\\{",right:e.envName.indexOf("r")>-1?"\\}":".",rightColor:undefined}},htmlBuilder:htmlBuilder$6,mathmlBuilder:mathmlBuilder$5});defineEnvironment({type:"array",names:["align","align*","aligned","split"],props:{numArgs:0},handler:alignedHandler,htmlBuilder:htmlBuilder$6,mathmlBuilder:mathmlBuilder$5});defineEnvironment({type:"array",names:["gathered","gather","gather*"],props:{numArgs:0},handler(e){if(utils.contains(["gather","gather*"],e.envName)){validateAmsEnvironmentContext(e)}var t={cols:[{type:"align",align:"c"}],addJot:true,colSeparationType:"gather",autoTag:getAutoTag(e.envName),emptySingleRow:true,leqno:e.parser.settings.leqno};return parseArray(e.parser,t,"display")},htmlBuilder:htmlBuilder$6,mathmlBuilder:mathmlBuilder$5});defineEnvironment({type:"array",names:["alignat","alignat*","alignedat"],props:{numArgs:1},handler:alignedHandler,htmlBuilder:htmlBuilder$6,mathmlBuilder:mathmlBuilder$5});defineEnvironment({type:"array",names:["equation","equation*"],props:{numArgs:0},handler(e){validateAmsEnvironmentContext(e);var t={autoTag:getAutoTag(e.envName),emptySingleRow:true,singleRow:true,maxNumCols:1,leqno:e.parser.settings.leqno};return parseArray(e.parser,t,"display")},htmlBuilder:htmlBuilder$6,mathmlBuilder:mathmlBuilder$5});defineEnvironment({type:"array",names:["CD"],props:{numArgs:0},handler(e){validateAmsEnvironmentContext(e);return parseCD(e.parser)},htmlBuilder:htmlBuilder$6,mathmlBuilder:mathmlBuilder$5});defineMacro("\\nonumber","\\gdef\\@eqnsw{0}");defineMacro("\\notag","\\nonumber");defineFunction({type:"text",names:["\\hline","\\hdashline"],props:{numArgs:0,allowedInText:true,allowedInMath:true},handler(e,t){throw new ParseError(e.funcName+" valid only within array environment")}});var environments=_environments;defineFunction({type:"environment",names:["\\begin","\\end"],props:{numArgs:1,argTypes:["text"]},handler(e,t){var{parser:r,funcName:n}=e;var a=t[0];if(a.type!=="ordgroup"){throw new ParseError("Invalid environment name",a)}var o="";for(var i=0;i<a.body.length;++i){o+=assertNodeType(a.body[i],"textord").text}if(n==="\\begin"){if(!environments.hasOwnProperty(o)){throw new ParseError("No such environment: "+o,a)}var l=environments[o];var{args:s,optArgs:m}=r.parseArguments("\\begin{"+o+"}",l);var u={mode:r.mode,envName:o,parser:r};var c=l.handler(u,s,m);r.expect("\\end",false);var d=r.nextToken;var p=assertNodeType(r.parseFunction(),"environment");if(p.name!==o){throw new ParseError("Mismatch: \\begin{"+o+"} matched by \\end{"+p.name+"}",d)}return c}return{type:"environment",mode:r.mode,name:o,nameGroup:a}}});var htmlBuilder$5=(e,t)=>{var r=e.font;var n=t.withFont(r);return buildGroup$1(e.body,n)};var mathmlBuilder$4=(e,t)=>{var r=e.font;var n=t.withFont(r);return buildGroup(e.body,n)};var fontAliases={"\\Bbb":"\\mathbb","\\bold":"\\mathbf","\\frak":"\\mathfrak","\\bm":"\\boldsymbol"};defineFunction({type:"font",names:["\\mathrm","\\mathit","\\mathbf","\\mathnormal","\\mathbb","\\mathcal","\\mathfrak","\\mathscr","\\mathsf","\\mathtt","\\Bbb","\\bold","\\frak"],props:{numArgs:1,allowedInArgument:true},handler:(e,t)=>{var{parser:r,funcName:n}=e;var a=normalizeArgument(t[0]);var o=n;if(o in fontAliases){o=fontAliases[o]}return{type:"font",mode:r.mode,font:o.slice(1),body:a}},htmlBuilder:htmlBuilder$5,mathmlBuilder:mathmlBuilder$4});defineFunction({type:"mclass",names:["\\boldsymbol","\\bm"],props:{numArgs:1},handler:(e,t)=>{var{parser:r}=e;var n=t[0];var a=utils.isCharacterBox(n);return{type:"mclass",mode:r.mode,mclass:binrelClass(n),body:[{type:"font",mode:r.mode,font:"boldsymbol",body:n}],isCharacterBox:a}}});defineFunction({type:"font",names:["\\rm","\\sf","\\tt","\\bf","\\it","\\cal"],props:{numArgs:0,allowedInText:true},handler:(e,t)=>{var{parser:r,funcName:n,breakOnTokenText:a}=e;var{mode:o}=r;var i=r.parseExpression(true,a);var l="math"+n.slice(1);return{type:"font",mode:o,font:l,body:{type:"ordgroup",mode:r.mode,body:i}}},htmlBuilder:htmlBuilder$5,mathmlBuilder:mathmlBuilder$4});var adjustStyle=(e,t)=>{var r=t;if(e==="display"){r=r.id>=Style$1.SCRIPT.id?r.text():Style$1.DISPLAY}else if(e==="text"&&r.size===Style$1.DISPLAY.size){r=Style$1.TEXT}else if(e==="script"){r=Style$1.SCRIPT}else if(e==="scriptscript"){r=Style$1.SCRIPTSCRIPT}return r};var htmlBuilder$4=(e,t)=>{var r=adjustStyle(e.size,t.style);var n=r.fracNum();var a=r.fracDen();var o;o=t.havingStyle(n);var i=buildGroup$1(e.numer,o,t);if(e.continued){var l=8.5/t.fontMetrics().ptPerEm;var s=3.5/t.fontMetrics().ptPerEm;i.height=i.height<l?l:i.height;i.depth=i.depth<s?s:i.depth}o=t.havingStyle(a);var m=buildGroup$1(e.denom,o,t);var u;var c;var d;if(e.hasBarLine){if(e.barSize){c=calculateSize(e.barSize,t);u=buildCommon.makeLineSpan("frac-line",t,c)}else{u=buildCommon.makeLineSpan("frac-line",t)}c=u.height;d=u.height}else{u=null;c=0;d=t.fontMetrics().defaultRuleThickness}var p;var h;var f;if(r.size===Style$1.DISPLAY.size||e.size==="display"){p=t.fontMetrics().num1;if(c>0){h=3*d}else{h=7*d}f=t.fontMetrics().denom1}else{if(c>0){p=t.fontMetrics().num2;h=d}else{p=t.fontMetrics().num3;h=3*d}f=t.fontMetrics().denom2}var b;if(!u){var g=p-i.depth-(m.height-f);if(g<h){p+=.5*(h-g);f+=.5*(h-g)}b=buildCommon.makeVList({positionType:"individualShift",children:[{type:"elem",elem:m,shift:f},{type:"elem",elem:i,shift:-p}]},t)}else{var y=t.fontMetrics().axisHeight;if(p-i.depth-(y+.5*c)<h){p+=h-(p-i.depth-(y+.5*c))}if(y-.5*c-(m.height-f)<h){f+=h-(y-.5*c-(m.height-f))}var x=-(y-.5*c);b=buildCommon.makeVList({positionType:"individualShift",children:[{type:"elem",elem:m,shift:f},{type:"elem",elem:u,shift:x},{type:"elem",elem:i,shift:-p}]},t)}o=t.havingStyle(r);b.height*=o.sizeMultiplier/t.sizeMultiplier;b.depth*=o.sizeMultiplier/t.sizeMultiplier;var $;if(r.size===Style$1.DISPLAY.size){$=t.fontMetrics().delim1}else if(r.size===Style$1.SCRIPTSCRIPT.size){$=t.havingStyle(Style$1.SCRIPT).fontMetrics().delim2}else{$=t.fontMetrics().delim2}var v;var S;if(e.leftDelim==null){v=makeNullDelimiter(t,["mopen"])}else{v=delimiter.customSizedDelim(e.leftDelim,$,true,t.havingStyle(r),e.mode,["mopen"])}if(e.continued){S=buildCommon.makeSpan([])}else if(e.rightDelim==null){S=makeNullDelimiter(t,["mclose"])}else{S=delimiter.customSizedDelim(e.rightDelim,$,true,t.havingStyle(r),e.mode,["mclose"])}return buildCommon.makeSpan(["mord"].concat(o.sizingClasses(t)),[v,buildCommon.makeSpan(["mfrac"],[b]),S],t)};var mathmlBuilder$3=(e,t)=>{var r=new mathMLTree.MathNode("mfrac",[buildGroup(e.numer,t),buildGroup(e.denom,t)]);if(!e.hasBarLine){r.setAttribute("linethickness","0px")}else if(e.barSize){var n=calculateSize(e.barSize,t);r.setAttribute("linethickness",makeEm(n))}var a=adjustStyle(e.size,t.style);if(a.size!==t.style.size){r=new mathMLTree.MathNode("mstyle",[r]);var o=a.size===Style$1.DISPLAY.size?"true":"false";r.setAttribute("displaystyle",o);r.setAttribute("scriptlevel","0")}if(e.leftDelim!=null||e.rightDelim!=null){var i=[];if(e.leftDelim!=null){var l=new mathMLTree.MathNode("mo",[new mathMLTree.TextNode(e.leftDelim.replace("\\",""))]);l.setAttribute("fence","true");i.push(l)}i.push(r);if(e.rightDelim!=null){var s=new mathMLTree.MathNode("mo",[new mathMLTree.TextNode(e.rightDelim.replace("\\",""))]);s.setAttribute("fence","true");i.push(s)}return makeRow(i)}return r};defineFunction({type:"genfrac",names:["\\dfrac","\\frac","\\tfrac","\\dbinom","\\binom","\\tbinom","\\\\atopfrac","\\\\bracefrac","\\\\brackfrac"],props:{numArgs:2,allowedInArgument:true},handler:(e,t)=>{var{parser:r,funcName:n}=e;var a=t[0];var o=t[1];var i;var l=null;var s=null;var m="auto";switch(n){case"\\dfrac":case"\\frac":case"\\tfrac":i=true;break;case"\\\\atopfrac":i=false;break;case"\\dbinom":case"\\binom":case"\\tbinom":i=false;l="(";s=")";break;case"\\\\bracefrac":i=false;l="\\{";s="\\}";break;case"\\\\brackfrac":i=false;l="[";s="]";break;default:throw new Error("Unrecognized genfrac command")}switch(n){case"\\dfrac":case"\\dbinom":m="display";break;case"\\tfrac":case"\\tbinom":m="text";break}return{type:"genfrac",mode:r.mode,continued:false,numer:a,denom:o,hasBarLine:i,leftDelim:l,rightDelim:s,size:m,barSize:null}},htmlBuilder:htmlBuilder$4,mathmlBuilder:mathmlBuilder$3});defineFunction({type:"genfrac",names:["\\cfrac"],props:{numArgs:2},handler:(e,t)=>{var{parser:r,funcName:n}=e;var a=t[0];var o=t[1];return{type:"genfrac",mode:r.mode,continued:true,numer:a,denom:o,hasBarLine:true,leftDelim:null,rightDelim:null,size:"display",barSize:null}}});defineFunction({type:"infix",names:["\\over","\\choose","\\atop","\\brace","\\brack"],props:{numArgs:0,infix:true},handler(e){var{parser:t,funcName:r,token:n}=e;var a;switch(r){case"\\over":a="\\frac";break;case"\\choose":a="\\binom";break;case"\\atop":a="\\\\atopfrac";break;case"\\brace":a="\\\\bracefrac";break;case"\\brack":a="\\\\brackfrac";break;default:throw new Error("Unrecognized infix genfrac command")}return{type:"infix",mode:t.mode,replaceWith:a,token:n}}});var stylArray=["display","text","script","scriptscript"];var delimFromValue=function e(t){var r=null;if(t.length>0){r=t;r=r==="."?null:r}return r};defineFunction({type:"genfrac",names:["\\genfrac"],props:{numArgs:6,allowedInArgument:true,argTypes:["math","math","size","text","math","math"]},handler(e,t){var{parser:r}=e;var n=t[4];var a=t[5];var o=normalizeArgument(t[0]);var i=o.type==="atom"&&o.family==="open"?delimFromValue(o.text):null;var l=normalizeArgument(t[1]);var s=l.type==="atom"&&l.family==="close"?delimFromValue(l.text):null;var m=assertNodeType(t[2],"size");var u;var c=null;if(m.isBlank){u=true}else{c=m.value;u=c.number>0}var d="auto";var p=t[3];if(p.type==="ordgroup"){if(p.body.length>0){var h=assertNodeType(p.body[0],"textord");d=stylArray[Number(h.text)]}}else{p=assertNodeType(p,"textord");d=stylArray[Number(p.text)]}return{type:"genfrac",mode:r.mode,numer:n,denom:a,continued:false,hasBarLine:u,barSize:c,leftDelim:i,rightDelim:s,size:d}},htmlBuilder:htmlBuilder$4,mathmlBuilder:mathmlBuilder$3});defineFunction({type:"infix",names:["\\above"],props:{numArgs:1,argTypes:["size"],infix:true},handler(e,t){var{parser:r,funcName:n,token:a}=e;return{type:"infix",mode:r.mode,replaceWith:"\\\\abovefrac",size:assertNodeType(t[0],"size").value,token:a}}});defineFunction({type:"genfrac",names:["\\\\abovefrac"],props:{numArgs:3,argTypes:["math","size","math"]},handler:(e,t)=>{var{parser:r,funcName:n}=e;var a=t[0];var o=assert(assertNodeType(t[1],"infix").size);var i=t[2];var l=o.number>0;return{type:"genfrac",mode:r.mode,numer:a,denom:i,continued:false,hasBarLine:l,barSize:o,leftDelim:null,rightDelim:null,size:"auto"}},htmlBuilder:htmlBuilder$4,mathmlBuilder:mathmlBuilder$3});var htmlBuilder$3=(e,t)=>{var r=t.style;var n;var a;if(e.type==="supsub"){n=e.sup?buildGroup$1(e.sup,t.havingStyle(r.sup()),t):buildGroup$1(e.sub,t.havingStyle(r.sub()),t);a=assertNodeType(e.base,"horizBrace")}else{a=assertNodeType(e,"horizBrace")}var o=buildGroup$1(a.base,t.havingBaseStyle(Style$1.DISPLAY));var i=stretchy.svgSpan(a,t);var l;if(a.isOver){l=buildCommon.makeVList({positionType:"firstBaseline",children:[{type:"elem",elem:o},{type:"kern",size:.1},{type:"elem",elem:i}]},t);l.children[0].children[0].children[1].classes.push("svg-align")}else{l=buildCommon.makeVList({positionType:"bottom",positionData:o.depth+.1+i.height,children:[{type:"elem",elem:i},{type:"kern",size:.1},{type:"elem",elem:o}]},t);l.children[0].children[0].children[0].classes.push("svg-align")}if(n){var s=buildCommon.makeSpan(["mord",a.isOver?"mover":"munder"],[l],t);if(a.isOver){l=buildCommon.makeVList({positionType:"firstBaseline",children:[{type:"elem",elem:s},{type:"kern",size:.2},{type:"elem",elem:n}]},t)}else{l=buildCommon.makeVList({positionType:"bottom",positionData:s.depth+.2+n.height+n.depth,children:[{type:"elem",elem:n},{type:"kern",size:.2},{type:"elem",elem:s}]},t)}}return buildCommon.makeSpan(["mord",a.isOver?"mover":"munder"],[l],t)};var mathmlBuilder$2=(e,t)=>{var r=stretchy.mathMLnode(e.label);return new mathMLTree.MathNode(e.isOver?"mover":"munder",[buildGroup(e.base,t),r])};defineFunction({type:"horizBrace",names:["\\overbrace","\\underbrace"],props:{numArgs:1},handler(e,t){var{parser:r,funcName:n}=e;return{type:"horizBrace",mode:r.mode,label:n,isOver:/^\\over/.test(n),base:t[0]}},htmlBuilder:htmlBuilder$3,mathmlBuilder:mathmlBuilder$2});defineFunction({type:"href",names:["\\href"],props:{numArgs:2,argTypes:["url","original"],allowedInText:true},handler:(e,t)=>{var{parser:r}=e;var n=t[1];var a=assertNodeType(t[0],"url").url;if(!r.settings.isTrusted({command:"\\href",url:a})){return r.formatUnsupportedCmd("\\href")}return{type:"href",mode:r.mode,href:a,body:ordargument(n)}},htmlBuilder:(e,t)=>{var r=buildExpression$1(e.body,t,false);return buildCommon.makeAnchor(e.href,[],r,t)},mathmlBuilder:(e,t)=>{var r=buildExpressionRow(e.body,t);if(!(r instanceof MathNode)){r=new MathNode("mrow",[r])}r.setAttribute("href",e.href);return r}});defineFunction({type:"href",names:["\\url"],props:{numArgs:1,argTypes:["url"],allowedInText:true},handler:(e,t)=>{var{parser:r}=e;var n=assertNodeType(t[0],"url").url;if(!r.settings.isTrusted({command:"\\url",url:n})){return r.formatUnsupportedCmd("\\url")}var a=[];for(var o=0;o<n.length;o++){var i=n[o];if(i==="~"){i="\\textasciitilde"}a.push({type:"textord",mode:"text",text:i})}var l={type:"text",mode:r.mode,font:"\\texttt",body:a};return{type:"href",mode:r.mode,href:n,body:ordargument(l)}}});defineFunction({type:"hbox",names:["\\hbox"],props:{numArgs:1,argTypes:["text"],allowedInText:true,primitive:true},handler(e,t){var{parser:r}=e;return{type:"hbox",mode:r.mode,body:ordargument(t[0])}},htmlBuilder(e,t){var r=buildExpression$1(e.body,t,false);return buildCommon.makeFragment(r)},mathmlBuilder(e,t){return new mathMLTree.MathNode("mrow",buildExpression(e.body,t))}});defineFunction({type:"html",names:["\\htmlClass","\\htmlId","\\htmlStyle","\\htmlData"],props:{numArgs:2,argTypes:["raw","original"],allowedInText:true},handler:(e,t)=>{var{parser:r,funcName:n,token:a}=e;var o=assertNodeType(t[0],"raw").string;var i=t[1];if(r.settings.strict){r.settings.reportNonstrict("htmlExtension","HTML extension is disabled on strict mode")}var l;var s={};switch(n){case"\\htmlClass":s.class=o;l={command:"\\htmlClass",class:o};break;case"\\htmlId":s.id=o;l={command:"\\htmlId",id:o};break;case"\\htmlStyle":s.style=o;l={command:"\\htmlStyle",style:o};break;case"\\htmlData":{var m=o.split(",");for(var u=0;u<m.length;u++){var c=m[u].split("=");if(c.length!==2){throw new ParseError("Error parsing key-value for \\htmlData")}s["data-"+c[0].trim()]=c[1].trim()}l={command:"\\htmlData",attributes:s};break}default:throw new Error("Unrecognized html command")}if(!r.settings.isTrusted(l)){return r.formatUnsupportedCmd(n)}return{type:"html",mode:r.mode,attributes:s,body:ordargument(i)}},htmlBuilder:(e,t)=>{var r=buildExpression$1(e.body,t,false);var n=["enclosing"];if(e.attributes.class){n.push(...e.attributes.class.trim().split(/\s+/))}var a=buildCommon.makeSpan(n,r,t);for(var o in e.attributes){if(o!=="class"&&e.attributes.hasOwnProperty(o)){a.setAttribute(o,e.attributes[o])}}return a},mathmlBuilder:(e,t)=>buildExpressionRow(e.body,t)});defineFunction({type:"htmlmathml",names:["\\html@mathml"],props:{numArgs:2,allowedInText:true},handler:(e,t)=>{var{parser:r}=e;return{type:"htmlmathml",mode:r.mode,html:ordargument(t[0]),mathml:ordargument(t[1])}},htmlBuilder:(e,t)=>{var r=buildExpression$1(e.html,t,false);return buildCommon.makeFragment(r)},mathmlBuilder:(e,t)=>buildExpressionRow(e.mathml,t)});var sizeData=function e(t){if(/^[-+]? *(\d+(\.\d*)?|\.\d+)$/.test(t)){return{number:+t,unit:"bp"}}else{var r=/([-+]?) *(\d+(?:\.\d*)?|\.\d+) *([a-z]{2})/.exec(t);if(!r){throw new ParseError("Invalid size: '"+t+"' in \\includegraphics")}var n={number:+(r[1]+r[2]),unit:r[3]};if(!validUnit(n)){throw new ParseError("Invalid unit: '"+n.unit+"' in \\includegraphics.")}return n}};defineFunction({type:"includegraphics",names:["\\includegraphics"],props:{numArgs:1,numOptionalArgs:1,argTypes:["raw","url"],allowedInText:false},handler:(e,t,r)=>{var{parser:n}=e;var a={number:0,unit:"em"};var o={number:.9,unit:"em"};var i={number:0,unit:"em"};var l="";if(r[0]){var s=assertNodeType(r[0],"raw").string;var m=s.split(",");for(var u=0;u<m.length;u++){var c=m[u].split("=");if(c.length===2){var d=c[1].trim();switch(c[0].trim()){case"alt":l=d;break;case"width":a=sizeData(d);break;case"height":o=sizeData(d);break;case"totalheight":i=sizeData(d);break;default:throw new ParseError("Invalid key: '"+c[0]+"' in \\includegraphics.")}}}}var p=assertNodeType(t[0],"url").url;if(l===""){l=p;l=l.replace(/^.*[\\/]/,"");l=l.substring(0,l.lastIndexOf("."))}if(!n.settings.isTrusted({command:"\\includegraphics",url:p})){return n.formatUnsupportedCmd("\\includegraphics")}return{type:"includegraphics",mode:n.mode,alt:l,width:a,height:o,totalheight:i,src:p}},htmlBuilder:(e,t)=>{var r=calculateSize(e.height,t);var n=0;if(e.totalheight.number>0){n=calculateSize(e.totalheight,t)-r}var a=0;if(e.width.number>0){a=calculateSize(e.width,t)}var o={height:makeEm(r+n)};if(a>0){o.width=makeEm(a)}if(n>0){o.verticalAlign=makeEm(-n)}var i=new Img(e.src,e.alt,o);i.height=r;i.depth=n;return i},mathmlBuilder:(e,t)=>{var r=new mathMLTree.MathNode("mglyph",[]);r.setAttribute("alt",e.alt);var n=calculateSize(e.height,t);var a=0;if(e.totalheight.number>0){a=calculateSize(e.totalheight,t)-n;r.setAttribute("valign",makeEm(-a))}r.setAttribute("height",makeEm(n+a));if(e.width.number>0){var o=calculateSize(e.width,t);r.setAttribute("width",makeEm(o))}r.setAttribute("src",e.src);return r}});defineFunction({type:"kern",names:["\\kern","\\mkern","\\hskip","\\mskip"],props:{numArgs:1,argTypes:["size"],primitive:true,allowedInText:true},handler(e,t){var{parser:r,funcName:n}=e;var a=assertNodeType(t[0],"size");if(r.settings.strict){var o=n[1]==="m";var i=a.value.unit==="mu";if(o){if(!i){r.settings.reportNonstrict("mathVsTextUnits","LaTeX's "+n+" supports only mu units, "+("not "+a.value.unit+" units"))}if(r.mode!=="math"){r.settings.reportNonstrict("mathVsTextUnits","LaTeX's "+n+" works only in math mode")}}else{if(i){r.settings.reportNonstrict("mathVsTextUnits","LaTeX's "+n+" doesn't support mu units")}}}return{type:"kern",mode:r.mode,dimension:a.value}},htmlBuilder(e,t){return buildCommon.makeGlue(e.dimension,t)},mathmlBuilder(e,t){var r=calculateSize(e.dimension,t);return new mathMLTree.SpaceNode(r)}});defineFunction({type:"lap",names:["\\mathllap","\\mathrlap","\\mathclap"],props:{numArgs:1,allowedInText:true},handler:(e,t)=>{var{parser:r,funcName:n}=e;var a=t[0];return{type:"lap",mode:r.mode,alignment:n.slice(5),body:a}},htmlBuilder:(e,t)=>{var r;if(e.alignment==="clap"){r=buildCommon.makeSpan([],[buildGroup$1(e.body,t)]);r=buildCommon.makeSpan(["inner"],[r],t)}else{r=buildCommon.makeSpan(["inner"],[buildGroup$1(e.body,t)])}var n=buildCommon.makeSpan(["fix"],[]);var a=buildCommon.makeSpan([e.alignment],[r,n],t);var o=buildCommon.makeSpan(["strut"]);o.style.height=makeEm(a.height+a.depth);if(a.depth){o.style.verticalAlign=makeEm(-a.depth)}a.children.unshift(o);a=buildCommon.makeSpan(["thinbox"],[a],t);return buildCommon.makeSpan(["mord","vbox"],[a],t)},mathmlBuilder:(e,t)=>{var r=new mathMLTree.MathNode("mpadded",[buildGroup(e.body,t)]);if(e.alignment!=="rlap"){var n=e.alignment==="llap"?"-1":"-0.5";r.setAttribute("lspace",n+"width")}r.setAttribute("width","0px");return r}});defineFunction({type:"styling",names:["\\(","$"],props:{numArgs:0,allowedInText:true,allowedInMath:false},handler(e,t){var{funcName:r,parser:n}=e;var a=n.mode;n.switchMode("math");var o=r==="\\("?"\\)":"$";var i=n.parseExpression(false,o);n.expect(o);n.switchMode(a);return{type:"styling",mode:n.mode,style:"text",body:i}}});defineFunction({type:"text",names:["\\)","\\]"],props:{numArgs:0,allowedInText:true,allowedInMath:false},handler(e,t){throw new ParseError("Mismatched "+e.funcName)}});var chooseMathStyle=(e,t)=>{switch(t.style.size){case Style$1.DISPLAY.size:return e.display;case Style$1.TEXT.size:return e.text;case Style$1.SCRIPT.size:return e.script;case Style$1.SCRIPTSCRIPT.size:return e.scriptscript;default:return e.text}};defineFunction({type:"mathchoice",names:["\\mathchoice"],props:{numArgs:4,primitive:true},handler:(e,t)=>{var{parser:r}=e;return{type:"mathchoice",mode:r.mode,display:ordargument(t[0]),text:ordargument(t[1]),script:ordargument(t[2]),scriptscript:ordargument(t[3])}},htmlBuilder:(e,t)=>{var r=chooseMathStyle(e,t);var n=buildExpression$1(r,t,false);return buildCommon.makeFragment(n)},mathmlBuilder:(e,t)=>{var r=chooseMathStyle(e,t);return buildExpressionRow(r,t)}});var assembleSupSub=(e,t,r,n,a,o,i)=>{e=buildCommon.makeSpan([],[e]);var l=r&&utils.isCharacterBox(r);var s;var m;if(t){var u=buildGroup$1(t,n.havingStyle(a.sup()),n);m={elem:u,kern:Math.max(n.fontMetrics().bigOpSpacing1,n.fontMetrics().bigOpSpacing3-u.depth)}}if(r){var c=buildGroup$1(r,n.havingStyle(a.sub()),n);s={elem:c,kern:Math.max(n.fontMetrics().bigOpSpacing2,n.fontMetrics().bigOpSpacing4-c.height)}}var d;if(m&&s){var p=n.fontMetrics().bigOpSpacing5+s.elem.height+s.elem.depth+s.kern+e.depth+i;d=buildCommon.makeVList({positionType:"bottom",positionData:p,children:[{type:"kern",size:n.fontMetrics().bigOpSpacing5},{type:"elem",elem:s.elem,marginLeft:makeEm(-o)},{type:"kern",size:s.kern},{type:"elem",elem:e},{type:"kern",size:m.kern},{type:"elem",elem:m.elem,marginLeft:makeEm(o)},{type:"kern",size:n.fontMetrics().bigOpSpacing5}]},n)}else if(s){var h=e.height-i;d=buildCommon.makeVList({positionType:"top",positionData:h,children:[{type:"kern",size:n.fontMetrics().bigOpSpacing5},{type:"elem",elem:s.elem,marginLeft:makeEm(-o)},{type:"kern",size:s.kern},{type:"elem",elem:e}]},n)}else if(m){var f=e.depth+i;d=buildCommon.makeVList({positionType:"bottom",positionData:f,children:[{type:"elem",elem:e},{type:"kern",size:m.kern},{type:"elem",elem:m.elem,marginLeft:makeEm(o)},{type:"kern",size:n.fontMetrics().bigOpSpacing5}]},n)}else{return e}var b=[d];if(s&&o!==0&&!l){var g=buildCommon.makeSpan(["mspace"],[],n);g.style.marginRight=makeEm(o);b.unshift(g)}return buildCommon.makeSpan(["mop","op-limits"],b,n)};var noSuccessor=["\\smallint"];var htmlBuilder$2=(e,t)=>{var r;var n;var a=false;var o;if(e.type==="supsub"){r=e.sup;n=e.sub;o=assertNodeType(e.base,"op");a=true}else{o=assertNodeType(e,"op")}var i=t.style;var l=false;if(i.size===Style$1.DISPLAY.size&&o.symbol&&!utils.contains(noSuccessor,o.name)){l=true}var s;if(o.symbol){var m=l?"Size2-Regular":"Size1-Regular";var u="";if(o.name==="\\oiint"||o.name==="\\oiiint"){u=o.name.slice(1);o.name=u==="oiint"?"\\iint":"\\iiint"}s=buildCommon.makeSymbol(o.name,m,"math",t,["mop","op-symbol",l?"large-op":"small-op"]);if(u.length>0){var c=s.italic;var d=buildCommon.staticSvg(u+"Size"+(l?"2":"1"),t);s=buildCommon.makeVList({positionType:"individualShift",children:[{type:"elem",elem:s,shift:0},{type:"elem",elem:d,shift:l?.08:0}]},t);o.name="\\"+u;s.classes.unshift("mop");s.italic=c}}else if(o.body){var p=buildExpression$1(o.body,t,true);if(p.length===1&&p[0]instanceof SymbolNode){s=p[0];s.classes[0]="mop"}else{s=buildCommon.makeSpan(["mop"],p,t)}}else{var h=[];for(var f=1;f<o.name.length;f++){h.push(buildCommon.mathsym(o.name[f],o.mode,t))}s=buildCommon.makeSpan(["mop"],h,t)}var b=0;var g=0;if((s instanceof SymbolNode||o.name==="\\oiint"||o.name==="\\oiiint")&&!o.suppressBaseShift){b=(s.height-s.depth)/2-t.fontMetrics().axisHeight;g=s.italic}if(a){return assembleSupSub(s,r,n,t,i,g,b)}else{if(b){s.style.position="relative";s.style.top=makeEm(b)}return s}};var mathmlBuilder$1=(e,t)=>{var r;if(e.symbol){r=new MathNode("mo",[makeText(e.name,e.mode)]);if(utils.contains(noSuccessor,e.name)){r.setAttribute("largeop","false")}}else if(e.body){r=new MathNode("mo",buildExpression(e.body,t))}else{r=new MathNode("mi",[new TextNode(e.name.slice(1))]);var n=new MathNode("mo",[makeText("⁡","text")]);if(e.parentIsSupSub){r=new MathNode("mrow",[r,n])}else{r=newDocumentFragment([r,n])}}return r};var singleCharBigOps={"∏":"\\prod","∐":"\\coprod","∑":"\\sum","⋀":"\\bigwedge","⋁":"\\bigvee","⋂":"\\bigcap","⋃":"\\bigcup","⨀":"\\bigodot","⨁":"\\bigoplus","⨂":"\\bigotimes","⨄":"\\biguplus","⨆":"\\bigsqcup"};defineFunction({type:"op",names:["\\coprod","\\bigvee","\\bigwedge","\\biguplus","\\bigcap","\\bigcup","\\intop","\\prod","\\sum","\\bigotimes","\\bigoplus","\\bigodot","\\bigsqcup","\\smallint","∏","∐","∑","⋀","⋁","⋂","⋃","⨀","⨁","⨂","⨄","⨆"],props:{numArgs:0},handler:(e,t)=>{var{parser:r,funcName:n}=e;var a=n;if(a.length===1){a=singleCharBigOps[a]}return{type:"op",mode:r.mode,limits:true,parentIsSupSub:false,symbol:true,name:a}},htmlBuilder:htmlBuilder$2,mathmlBuilder:mathmlBuilder$1});defineFunction({type:"op",names:["\\mathop"],props:{numArgs:1,primitive:true},handler:(e,t)=>{var{parser:r}=e;var n=t[0];return{type:"op",mode:r.mode,limits:false,parentIsSupSub:false,symbol:false,body:ordargument(n)}},htmlBuilder:htmlBuilder$2,mathmlBuilder:mathmlBuilder$1});var singleCharIntegrals={"∫":"\\int","∬":"\\iint","∭":"\\iiint","∮":"\\oint","∯":"\\oiint","∰":"\\oiiint"};defineFunction({type:"op",names:["\\arcsin","\\arccos","\\arctan","\\arctg","\\arcctg","\\arg","\\ch","\\cos","\\cosec","\\cosh","\\cot","\\cotg","\\coth","\\csc","\\ctg","\\cth","\\deg","\\dim","\\exp","\\hom","\\ker","\\lg","\\ln","\\log","\\sec","\\sin","\\sinh","\\sh","\\tan","\\tanh","\\tg","\\th"],props:{numArgs:0},handler(e){var{parser:t,funcName:r}=e;return{type:"op",mode:t.mode,limits:false,parentIsSupSub:false,symbol:false,name:r}},htmlBuilder:htmlBuilder$2,mathmlBuilder:mathmlBuilder$1});defineFunction({type:"op",names:["\\det","\\gcd","\\inf","\\lim","\\max","\\min","\\Pr","\\sup"],props:{numArgs:0},handler(e){var{parser:t,funcName:r}=e;return{type:"op",mode:t.mode,limits:true,parentIsSupSub:false,symbol:false,name:r}},htmlBuilder:htmlBuilder$2,mathmlBuilder:mathmlBuilder$1});defineFunction({type:"op",names:["\\int","\\iint","\\iiint","\\oint","\\oiint","\\oiiint","∫","∬","∭","∮","∯","∰"],props:{numArgs:0},handler(e){var{parser:t,funcName:r}=e;var n=r;if(n.length===1){n=singleCharIntegrals[n]}return{type:"op",mode:t.mode,limits:false,parentIsSupSub:false,symbol:true,name:n}},htmlBuilder:htmlBuilder$2,mathmlBuilder:mathmlBuilder$1});var htmlBuilder$1=(e,t)=>{var r;var n;var a=false;var o;if(e.type==="supsub"){r=e.sup;n=e.sub;o=assertNodeType(e.base,"operatorname");a=true}else{o=assertNodeType(e,"operatorname")}var i;if(o.body.length>0){var l=o.body.map((e=>{var t=e.text;if(typeof t==="string"){return{type:"textord",mode:e.mode,text:t}}else{return e}}));var s=buildExpression$1(l,t.withFont("mathrm"),true);for(var m=0;m<s.length;m++){var u=s[m];if(u instanceof SymbolNode){u.text=u.text.replace(/\u2212/,"-").replace(/\u2217/,"*")}}i=buildCommon.makeSpan(["mop"],s,t)}else{i=buildCommon.makeSpan(["mop"],[],t)}if(a){return assembleSupSub(i,r,n,t,t.style,0,0)}else{return i}};var mathmlBuilder=(e,t)=>{var r=buildExpression(e.body,t.withFont("mathrm"));var n=true;for(var a=0;a<r.length;a++){var o=r[a];if(o instanceof mathMLTree.SpaceNode);else if(o instanceof mathMLTree.MathNode){switch(o.type){case"mi":case"mn":case"ms":case"mspace":case"mtext":break;case"mo":{var i=o.children[0];if(o.children.length===1&&i instanceof mathMLTree.TextNode){i.text=i.text.replace(/\u2212/,"-").replace(/\u2217/,"*")}else{n=false}break}default:n=false}}else{n=false}}if(n){var l=r.map((e=>e.toText())).join("");r=[new mathMLTree.TextNode(l)]}var s=new mathMLTree.MathNode("mi",r);s.setAttribute("mathvariant","normal");var m=new mathMLTree.MathNode("mo",[makeText("⁡","text")]);if(e.parentIsSupSub){return new mathMLTree.MathNode("mrow",[s,m])}else{return mathMLTree.newDocumentFragment([s,m])}};defineFunction({type:"operatorname",names:["\\operatorname@","\\operatornamewithlimits"],props:{numArgs:1},handler:(e,t)=>{var{parser:r,funcName:n}=e;var a=t[0];return{type:"operatorname",mode:r.mode,body:ordargument(a),alwaysHandleSupSub:n==="\\operatornamewithlimits",limits:false,parentIsSupSub:false}},htmlBuilder:htmlBuilder$1,mathmlBuilder:mathmlBuilder});defineMacro("\\operatorname","\\@ifstar\\operatornamewithlimits\\operatorname@");defineFunctionBuilders({type:"ordgroup",htmlBuilder(e,t){if(e.semisimple){return buildCommon.makeFragment(buildExpression$1(e.body,t,false))}return buildCommon.makeSpan(["mord"],buildExpression$1(e.body,t,true),t)},mathmlBuilder(e,t){return buildExpressionRow(e.body,t,true)}});defineFunction({type:"overline",names:["\\overline"],props:{numArgs:1},handler(e,t){var{parser:r}=e;var n=t[0];return{type:"overline",mode:r.mode,body:n}},htmlBuilder(e,t){var r=buildGroup$1(e.body,t.havingCrampedStyle());var n=buildCommon.makeLineSpan("overline-line",t);var a=t.fontMetrics().defaultRuleThickness;var o=buildCommon.makeVList({positionType:"firstBaseline",children:[{type:"elem",elem:r},{type:"kern",size:3*a},{type:"elem",elem:n},{type:"kern",size:a}]},t);return buildCommon.makeSpan(["mord","overline"],[o],t)},mathmlBuilder(e,t){var r=new mathMLTree.MathNode("mo",[new mathMLTree.TextNode("‾")]);r.setAttribute("stretchy","true");var n=new mathMLTree.MathNode("mover",[buildGroup(e.body,t),r]);n.setAttribute("accent","true");return n}});defineFunction({type:"phantom",names:["\\phantom"],props:{numArgs:1,allowedInText:true},handler:(e,t)=>{var{parser:r}=e;var n=t[0];return{type:"phantom",mode:r.mode,body:ordargument(n)}},htmlBuilder:(e,t)=>{var r=buildExpression$1(e.body,t.withPhantom(),false);return buildCommon.makeFragment(r)},mathmlBuilder:(e,t)=>{var r=buildExpression(e.body,t);return new mathMLTree.MathNode("mphantom",r)}});defineFunction({type:"hphantom",names:["\\hphantom"],props:{numArgs:1,allowedInText:true},handler:(e,t)=>{var{parser:r}=e;var n=t[0];return{type:"hphantom",mode:r.mode,body:n}},htmlBuilder:(e,t)=>{var r=buildCommon.makeSpan([],[buildGroup$1(e.body,t.withPhantom())]);r.height=0;r.depth=0;if(r.children){for(var n=0;n<r.children.length;n++){r.children[n].height=0;r.children[n].depth=0}}r=buildCommon.makeVList({positionType:"firstBaseline",children:[{type:"elem",elem:r}]},t);return buildCommon.makeSpan(["mord"],[r],t)},mathmlBuilder:(e,t)=>{var r=buildExpression(ordargument(e.body),t);var n=new mathMLTree.MathNode("mphantom",r);var a=new mathMLTree.MathNode("mpadded",[n]);a.setAttribute("height","0px");a.setAttribute("depth","0px");return a}});defineFunction({type:"vphantom",names:["\\vphantom"],props:{numArgs:1,allowedInText:true},handler:(e,t)=>{var{parser:r}=e;var n=t[0];return{type:"vphantom",mode:r.mode,body:n}},htmlBuilder:(e,t)=>{var r=buildCommon.makeSpan(["inner"],[buildGroup$1(e.body,t.withPhantom())]);var n=buildCommon.makeSpan(["fix"],[]);return buildCommon.makeSpan(["mord","rlap"],[r,n],t)},mathmlBuilder:(e,t)=>{var r=buildExpression(ordargument(e.body),t);var n=new mathMLTree.MathNode("mphantom",r);var a=new mathMLTree.MathNode("mpadded",[n]);a.setAttribute("width","0px");return a}});defineFunction({type:"raisebox",names:["\\raisebox"],props:{numArgs:2,argTypes:["size","hbox"],allowedInText:true},handler(e,t){var{parser:r}=e;var n=assertNodeType(t[0],"size").value;var a=t[1];return{type:"raisebox",mode:r.mode,dy:n,body:a}},htmlBuilder(e,t){var r=buildGroup$1(e.body,t);var n=calculateSize(e.dy,t);return buildCommon.makeVList({positionType:"shift",positionData:-n,children:[{type:"elem",elem:r}]},t)},mathmlBuilder(e,t){var r=new mathMLTree.MathNode("mpadded",[buildGroup(e.body,t)]);var n=e.dy.number+e.dy.unit;r.setAttribute("voffset",n);return r}});defineFunction({type:"internal",names:["\\relax"],props:{numArgs:0,allowedInText:true},handler(e){var{parser:t}=e;return{type:"internal",mode:t.mode}}});defineFunction({type:"rule",names:["\\rule"],props:{numArgs:2,numOptionalArgs:1,argTypes:["size","size","size"]},handler(e,t,r){var{parser:n}=e;var a=r[0];var o=assertNodeType(t[0],"size");var i=assertNodeType(t[1],"size");return{type:"rule",mode:n.mode,shift:a&&assertNodeType(a,"size").value,width:o.value,height:i.value}},htmlBuilder(e,t){var r=buildCommon.makeSpan(["mord","rule"],[],t);var n=calculateSize(e.width,t);var a=calculateSize(e.height,t);var o=e.shift?calculateSize(e.shift,t):0;r.style.borderRightWidth=makeEm(n);r.style.borderTopWidth=makeEm(a);r.style.bottom=makeEm(o);r.width=n;r.height=a+o;r.depth=-o;r.maxFontSize=a*1.125*t.sizeMultiplier;return r},mathmlBuilder(e,t){var r=calculateSize(e.width,t);var n=calculateSize(e.height,t);var a=e.shift?calculateSize(e.shift,t):0;var o=t.color&&t.getColor()||"black";var i=new mathMLTree.MathNode("mspace");i.setAttribute("mathbackground",o);i.setAttribute("width",makeEm(r));i.setAttribute("height",makeEm(n));var l=new mathMLTree.MathNode("mpadded",[i]);if(a>=0){l.setAttribute("height",makeEm(a))}else{l.setAttribute("height",makeEm(a));l.setAttribute("depth",makeEm(-a))}l.setAttribute("voffset",makeEm(a));return l}});function sizingGroup(e,t,r){var n=buildExpression$1(e,t,false);var a=t.sizeMultiplier/r.sizeMultiplier;for(var o=0;o<n.length;o++){var i=n[o].classes.indexOf("sizing");if(i<0){Array.prototype.push.apply(n[o].classes,t.sizingClasses(r))}else if(n[o].classes[i+1]==="reset-size"+t.size){n[o].classes[i+1]="reset-size"+r.size}n[o].height*=a;n[o].depth*=a}return buildCommon.makeFragment(n)}var sizeFuncs=["\\tiny","\\sixptsize","\\scriptsize","\\footnotesize","\\small","\\normalsize","\\large","\\Large","\\LARGE","\\huge","\\Huge"];var htmlBuilder=(e,t)=>{var r=t.havingSize(e.size);return sizingGroup(e.body,r,t)};defineFunction({type:"sizing",names:sizeFuncs,props:{numArgs:0,allowedInText:true},handler:(e,t)=>{var{breakOnTokenText:r,funcName:n,parser:a}=e;var o=a.parseExpression(false,r);return{type:"sizing",mode:a.mode,size:sizeFuncs.indexOf(n)+1,body:o}},htmlBuilder:htmlBuilder,mathmlBuilder:(e,t)=>{var r=t.havingSize(e.size);var n=buildExpression(e.body,r);var a=new mathMLTree.MathNode("mstyle",n);a.setAttribute("mathsize",makeEm(r.sizeMultiplier));return a}});defineFunction({type:"smash",names:["\\smash"],props:{numArgs:1,numOptionalArgs:1,allowedInText:true},handler:(e,t,r)=>{var{parser:n}=e;var a=false;var o=false;var i=r[0]&&assertNodeType(r[0],"ordgroup");if(i){var l="";for(var s=0;s<i.body.length;++s){var m=i.body[s];l=m.text;if(l==="t"){a=true}else if(l==="b"){o=true}else{a=false;o=false;break}}}else{a=true;o=true}var u=t[0];return{type:"smash",mode:n.mode,body:u,smashHeight:a,smashDepth:o}},htmlBuilder:(e,t)=>{var r=buildCommon.makeSpan([],[buildGroup$1(e.body,t)]);if(!e.smashHeight&&!e.smashDepth){return r}if(e.smashHeight){r.height=0;if(r.children){for(var n=0;n<r.children.length;n++){r.children[n].height=0}}}if(e.smashDepth){r.depth=0;if(r.children){for(var a=0;a<r.children.length;a++){r.children[a].depth=0}}}var o=buildCommon.makeVList({positionType:"firstBaseline",children:[{type:"elem",elem:r}]},t);return buildCommon.makeSpan(["mord"],[o],t)},mathmlBuilder:(e,t)=>{var r=new mathMLTree.MathNode("mpadded",[buildGroup(e.body,t)]);if(e.smashHeight){r.setAttribute("height","0px")}if(e.smashDepth){r.setAttribute("depth","0px")}return r}});defineFunction({type:"sqrt",names:["\\sqrt"],props:{numArgs:1,numOptionalArgs:1},handler(e,t,r){var{parser:n}=e;var a=r[0];var o=t[0];return{type:"sqrt",mode:n.mode,body:o,index:a}},htmlBuilder(e,t){var r=buildGroup$1(e.body,t.havingCrampedStyle());if(r.height===0){r.height=t.fontMetrics().xHeight}r=buildCommon.wrapFragment(r,t);var n=t.fontMetrics();var a=n.defaultRuleThickness;var o=a;if(t.style.id<Style$1.TEXT.id){o=t.fontMetrics().xHeight}var i=a+o/4;var l=r.height+r.depth+i+a;var{span:s,ruleWidth:m,advanceWidth:u}=delimiter.sqrtImage(l,t);var c=s.height-m;if(c>r.height+r.depth+i){i=(i+c-r.height-r.depth)/2}var d=s.height-r.height-i-m;r.style.paddingLeft=makeEm(u);var p=buildCommon.makeVList({positionType:"firstBaseline",children:[{type:"elem",elem:r,wrapperClasses:["svg-align"]},{type:"kern",size:-(r.height+d)},{type:"elem",elem:s},{type:"kern",size:m}]},t);if(!e.index){return buildCommon.makeSpan(["mord","sqrt"],[p],t)}else{var h=t.havingStyle(Style$1.SCRIPTSCRIPT);var f=buildGroup$1(e.index,h,t);var b=.6*(p.height-p.depth);var g=buildCommon.makeVList({positionType:"shift",positionData:-b,children:[{type:"elem",elem:f}]},t);var y=buildCommon.makeSpan(["root"],[g]);return buildCommon.makeSpan(["mord","sqrt"],[y,p],t)}},mathmlBuilder(e,t){var{body:r,index:n}=e;return n?new mathMLTree.MathNode("mroot",[buildGroup(r,t),buildGroup(n,t)]):new mathMLTree.MathNode("msqrt",[buildGroup(r,t)])}});var styleMap={display:Style$1.DISPLAY,text:Style$1.TEXT,script:Style$1.SCRIPT,scriptscript:Style$1.SCRIPTSCRIPT};defineFunction({type:"styling",names:["\\displaystyle","\\textstyle","\\scriptstyle","\\scriptscriptstyle"],props:{numArgs:0,allowedInText:true,primitive:true},handler(e,t){var{breakOnTokenText:r,funcName:n,parser:a}=e;var o=a.parseExpression(true,r);var i=n.slice(1,n.length-5);return{type:"styling",mode:a.mode,style:i,body:o}},htmlBuilder(e,t){var r=styleMap[e.style];var n=t.havingStyle(r).withFont("");return sizingGroup(e.body,n,t)},mathmlBuilder(e,t){var r=styleMap[e.style];var n=t.havingStyle(r);var a=buildExpression(e.body,n);var o=new mathMLTree.MathNode("mstyle",a);var i={display:["0","true"],text:["0","false"],script:["1","false"],scriptscript:["2","false"]};var l=i[e.style];o.setAttribute("scriptlevel",l[0]);o.setAttribute("displaystyle",l[1]);return o}});var htmlBuilderDelegate=function e(t,r){var n=t.base;if(!n){return null}else if(n.type==="op"){var a=n.limits&&(r.style.size===Style$1.DISPLAY.size||n.alwaysHandleSupSub);return a?htmlBuilder$2:null}else if(n.type==="operatorname"){var o=n.alwaysHandleSupSub&&(r.style.size===Style$1.DISPLAY.size||n.limits);return o?htmlBuilder$1:null}else if(n.type==="accent"){return utils.isCharacterBox(n.base)?htmlBuilder$a:null}else if(n.type==="horizBrace"){var i=!t.sub;return i===n.isOver?htmlBuilder$3:null}else{return null}};defineFunctionBuilders({type:"supsub",htmlBuilder(e,t){var r=htmlBuilderDelegate(e,t);if(r){return r(e,t)}var{base:n,sup:a,sub:o}=e;var i=buildGroup$1(n,t);var l;var s;var m=t.fontMetrics();var u=0;var c=0;var d=n&&utils.isCharacterBox(n);if(a){var p=t.havingStyle(t.style.sup());l=buildGroup$1(a,p,t);if(!d){u=i.height-p.fontMetrics().supDrop*p.sizeMultiplier/t.sizeMultiplier}}if(o){var h=t.havingStyle(t.style.sub());s=buildGroup$1(o,h,t);if(!d){c=i.depth+h.fontMetrics().subDrop*h.sizeMultiplier/t.sizeMultiplier}}var f;if(t.style===Style$1.DISPLAY){f=m.sup1}else if(t.style.cramped){f=m.sup3}else{f=m.sup2}var b=t.sizeMultiplier;var g=makeEm(.5/m.ptPerEm/b);var y=null;if(s){var x=e.base&&e.base.type==="op"&&e.base.name&&(e.base.name==="\\oiint"||e.base.name==="\\oiiint");if(i instanceof SymbolNode||x){y=makeEm(-i.italic)}}var $;if(l&&s){u=Math.max(u,f,l.depth+.25*m.xHeight);c=Math.max(c,m.sub2);var v=m.defaultRuleThickness;var S=4*v;if(u-l.depth-(s.height-c)<S){c=S-(u-l.depth)+s.height;var w=.8*m.xHeight-(u-l.depth);if(w>0){u+=w;c-=w}}var R=[{type:"elem",elem:s,shift:c,marginRight:g,marginLeft:y},{type:"elem",elem:l,shift:-u,marginRight:g}];$=buildCommon.makeVList({positionType:"individualShift",children:R},t)}else if(s){c=Math.max(c,m.sub1,s.height-.8*m.xHeight);var M=[{type:"elem",elem:s,marginLeft:y,marginRight:g}];$=buildCommon.makeVList({positionType:"shift",positionData:c,children:M},t)}else if(l){u=Math.max(u,f,l.depth+.25*m.xHeight);$=buildCommon.makeVList({positionType:"shift",positionData:-u,children:[{type:"elem",elem:l,marginRight:g}]},t)}else{throw new Error("supsub must have either sup or sub.")}var A=getTypeOfDomTree(i,"right")||"mord";return buildCommon.makeSpan([A],[i,buildCommon.makeSpan(["msupsub"],[$])],t)},mathmlBuilder(e,t){var r=false;var n;var a;if(e.base&&e.base.type==="horizBrace"){a=!!e.sup;if(a===e.base.isOver){r=true;n=e.base.isOver}}if(e.base&&(e.base.type==="op"||e.base.type==="operatorname")){e.base.parentIsSupSub=true}var o=[buildGroup(e.base,t)];if(e.sub){o.push(buildGroup(e.sub,t))}if(e.sup){o.push(buildGroup(e.sup,t))}var i;if(r){i=n?"mover":"munder"}else if(!e.sub){var l=e.base;if(l&&l.type==="op"&&l.limits&&(t.style===Style$1.DISPLAY||l.alwaysHandleSupSub)){i="mover"}else if(l&&l.type==="operatorname"&&l.alwaysHandleSupSub&&(l.limits||t.style===Style$1.DISPLAY)){i="mover"}else{i="msup"}}else if(!e.sup){var s=e.base;if(s&&s.type==="op"&&s.limits&&(t.style===Style$1.DISPLAY||s.alwaysHandleSupSub)){i="munder"}else if(s&&s.type==="operatorname"&&s.alwaysHandleSupSub&&(s.limits||t.style===Style$1.DISPLAY)){i="munder"}else{i="msub"}}else{var m=e.base;if(m&&m.type==="op"&&m.limits&&t.style===Style$1.DISPLAY){i="munderover"}else if(m&&m.type==="operatorname"&&m.alwaysHandleSupSub&&(t.style===Style$1.DISPLAY||m.limits)){i="munderover"}else{i="msubsup"}}return new mathMLTree.MathNode(i,o)}});defineFunctionBuilders({type:"atom",htmlBuilder(e,t){return buildCommon.mathsym(e.text,e.mode,t,["m"+e.family])},mathmlBuilder(e,t){var r=new mathMLTree.MathNode("mo",[makeText(e.text,e.mode)]);if(e.family==="bin"){var n=getVariant(e,t);if(n==="bold-italic"){r.setAttribute("mathvariant",n)}}else if(e.family==="punct"){r.setAttribute("separator","true")}else if(e.family==="open"||e.family==="close"){r.setAttribute("stretchy","false")}return r}});var defaultVariant={mi:"italic",mn:"normal",mtext:"normal"};defineFunctionBuilders({type:"mathord",htmlBuilder(e,t){return buildCommon.makeOrd(e,t,"mathord")},mathmlBuilder(e,t){var r=new mathMLTree.MathNode("mi",[makeText(e.text,e.mode,t)]);var n=getVariant(e,t)||"italic";if(n!==defaultVariant[r.type]){r.setAttribute("mathvariant",n)}return r}});defineFunctionBuilders({type:"textord",htmlBuilder(e,t){return buildCommon.makeOrd(e,t,"textord")},mathmlBuilder(e,t){var r=makeText(e.text,e.mode,t);var n=getVariant(e,t)||"normal";var a;if(e.mode==="text"){a=new mathMLTree.MathNode("mtext",[r])}else if(/[0-9]/.test(e.text)){a=new mathMLTree.MathNode("mn",[r])}else if(e.text==="\\prime"){a=new mathMLTree.MathNode("mo",[r])}else{a=new mathMLTree.MathNode("mi",[r])}if(n!==defaultVariant[a.type]){a.setAttribute("mathvariant",n)}return a}});var cssSpace={"\\nobreak":"nobreak","\\allowbreak":"allowbreak"};var regularSpace={" ":{},"\\ ":{},"~":{className:"nobreak"},"\\space":{},"\\nobreakspace":{className:"nobreak"}};defineFunctionBuilders({type:"spacing",htmlBuilder(e,t){if(regularSpace.hasOwnProperty(e.text)){var r=regularSpace[e.text].className||"";if(e.mode==="text"){var n=buildCommon.makeOrd(e,t,"textord");n.classes.push(r);return n}else{return buildCommon.makeSpan(["mspace",r],[buildCommon.mathsym(e.text,e.mode,t)],t)}}else if(cssSpace.hasOwnProperty(e.text)){return buildCommon.makeSpan(["mspace",cssSpace[e.text]],[],t)}else{throw new ParseError('Unknown type of space "'+e.text+'"')}},mathmlBuilder(e,t){var r;if(regularSpace.hasOwnProperty(e.text)){r=new mathMLTree.MathNode("mtext",[new mathMLTree.TextNode(" ")])}else if(cssSpace.hasOwnProperty(e.text)){return new mathMLTree.MathNode("mspace")}else{throw new ParseError('Unknown type of space "'+e.text+'"')}return r}});var pad=()=>{var e=new mathMLTree.MathNode("mtd",[]);e.setAttribute("width","50%");return e};defineFunctionBuilders({type:"tag",mathmlBuilder(e,t){var r=new mathMLTree.MathNode("mtable",[new mathMLTree.MathNode("mtr",[pad(),new mathMLTree.MathNode("mtd",[buildExpressionRow(e.body,t)]),pad(),new mathMLTree.MathNode("mtd",[buildExpressionRow(e.tag,t)])])]);r.setAttribute("width","100%");return r}});var textFontFamilies={"\\text":undefined,"\\textrm":"textrm","\\textsf":"textsf","\\texttt":"texttt","\\textnormal":"textrm"};var textFontWeights={"\\textbf":"textbf","\\textmd":"textmd"};var textFontShapes={"\\textit":"textit","\\textup":"textup"};var optionsWithFont=(e,t)=>{var r=e.font;if(!r){return t}else if(textFontFamilies[r]){return t.withTextFontFamily(textFontFamilies[r])}else if(textFontWeights[r]){return t.withTextFontWeight(textFontWeights[r])}else{return t.withTextFontShape(textFontShapes[r])}};defineFunction({type:"text",names:["\\text","\\textrm","\\textsf","\\texttt","\\textnormal","\\textbf","\\textmd","\\textit","\\textup"],props:{numArgs:1,argTypes:["text"],allowedInArgument:true,allowedInText:true},handler(e,t){var{parser:r,funcName:n}=e;var a=t[0];return{type:"text",mode:r.mode,body:ordargument(a),font:n}},htmlBuilder(e,t){var r=optionsWithFont(e,t);var n=buildExpression$1(e.body,r,true);return buildCommon.makeSpan(["mord","text"],n,r)},mathmlBuilder(e,t){var r=optionsWithFont(e,t);return buildExpressionRow(e.body,r)}});defineFunction({type:"underline",names:["\\underline"],props:{numArgs:1,allowedInText:true},handler(e,t){var{parser:r}=e;return{type:"underline",mode:r.mode,body:t[0]}},htmlBuilder(e,t){var r=buildGroup$1(e.body,t);var n=buildCommon.makeLineSpan("underline-line",t);var a=t.fontMetrics().defaultRuleThickness;var o=buildCommon.makeVList({positionType:"top",positionData:r.height,children:[{type:"kern",size:a},{type:"elem",elem:n},{type:"kern",size:3*a},{type:"elem",elem:r}]},t);return buildCommon.makeSpan(["mord","underline"],[o],t)},mathmlBuilder(e,t){var r=new mathMLTree.MathNode("mo",[new mathMLTree.TextNode("‾")]);r.setAttribute("stretchy","true");var n=new mathMLTree.MathNode("munder",[buildGroup(e.body,t),r]);n.setAttribute("accentunder","true");return n}});defineFunction({type:"vcenter",names:["\\vcenter"],props:{numArgs:1,argTypes:["original"],allowedInText:false},handler(e,t){var{parser:r}=e;return{type:"vcenter",mode:r.mode,body:t[0]}},htmlBuilder(e,t){var r=buildGroup$1(e.body,t);var n=t.fontMetrics().axisHeight;var a=.5*(r.height-n-(r.depth+n));return buildCommon.makeVList({positionType:"shift",positionData:a,children:[{type:"elem",elem:r}]},t)},mathmlBuilder(e,t){return new mathMLTree.MathNode("mpadded",[buildGroup(e.body,t)],["vcenter"])}});defineFunction({type:"verb",names:["\\verb"],props:{numArgs:0,allowedInText:true},handler(e,t,r){throw new ParseError("\\verb ended by end of line instead of matching delimiter")},htmlBuilder(e,t){var r=makeVerb(e);var n=[];var a=t.havingStyle(t.style.text());for(var o=0;o<r.length;o++){var i=r[o];if(i==="~"){i="\\textasciitilde"}n.push(buildCommon.makeSymbol(i,"Typewriter-Regular",e.mode,a,["mord","texttt"]))}return buildCommon.makeSpan(["mord","text"].concat(a.sizingClasses(t)),buildCommon.tryCombineChars(n),a)},mathmlBuilder(e,t){var r=new mathMLTree.TextNode(makeVerb(e));var n=new mathMLTree.MathNode("mtext",[r]);n.setAttribute("mathvariant","monospace");return n}});var makeVerb=e=>e.body.replace(/ /g,e.star?"␣":" ");var functions$1=_functions;var spaceRegexString="[ \r\n\t]";var controlWordRegexString="\\\\[a-zA-Z@]+";var controlSymbolRegexString="\\\\[^\ud800-\udfff]";var controlWordWhitespaceRegexString="("+controlWordRegexString+")"+spaceRegexString+"*";var controlSpaceRegexString="\\\\(\n|[ \r\t]+\n?)[ \r\t]*";var combiningDiacriticalMarkString="[̀-ͯ]";var combiningDiacriticalMarksEndRegex=new RegExp(combiningDiacriticalMarkString+"+$");var tokenRegexString="("+spaceRegexString+"+)|"+(controlSpaceRegexString+"|")+"([!-\\[\\]-‧‪-퟿豈-￿]"+(combiningDiacriticalMarkString+"*")+"|[\ud800-\udbff][\udc00-\udfff]"+(combiningDiacriticalMarkString+"*")+"|\\\\verb\\*([^]).*?\\4"+"|\\\\verb([^*a-zA-Z]).*?\\5"+("|"+controlWordWhitespaceRegexString)+("|"+controlSymbolRegexString+")");class Lexer{constructor(e,t){this.input=void 0;this.settings=void 0;this.tokenRegex=void 0;this.catcodes=void 0;this.input=e;this.settings=t;this.tokenRegex=new RegExp(tokenRegexString,"g");this.catcodes={"%":14,"~":13}}setCatcode(e,t){this.catcodes[e]=t}lex(){var e=this.input;var t=this.tokenRegex.lastIndex;if(t===e.length){return new Token("EOF",new SourceLocation(this,t,t))}var r=this.tokenRegex.exec(e);if(r===null||r.index!==t){throw new ParseError("Unexpected character: '"+e[t]+"'",new Token(e[t],new SourceLocation(this,t,t+1)))}var n=r[6]||r[3]||(r[2]?"\\ ":" ");if(this.catcodes[n]===14){var a=e.indexOf("\n",this.tokenRegex.lastIndex);if(a===-1){this.tokenRegex.lastIndex=e.length;this.settings.reportNonstrict("commentAtEnd","% comment has no terminating newline; LaTeX would "+"fail because of commenting the end of math mode (e.g. $)")}else{this.tokenRegex.lastIndex=a+1}return this.lex()}return new Token(n,new SourceLocation(this,t,this.tokenRegex.lastIndex))}}class Namespace{constructor(e,t){if(e===void 0){e={}}if(t===void 0){t={}}this.current=void 0;this.builtins=void 0;this.undefStack=void 0;this.current=t;this.builtins=e;this.undefStack=[]}beginGroup(){this.undefStack.push({})}endGroup(){if(this.undefStack.length===0){throw new ParseError("Unbalanced namespace destruction: attempt "+"to pop global namespace; please report this as a bug")}var e=this.undefStack.pop();for(var t in e){if(e.hasOwnProperty(t)){if(e[t]==null){delete this.current[t]}else{this.current[t]=e[t]}}}}endGroups(){while(this.undefStack.length>0){this.endGroup()}}has(e){return this.current.hasOwnProperty(e)||this.builtins.hasOwnProperty(e)}get(e){if(this.current.hasOwnProperty(e)){return this.current[e]}else{return this.builtins[e]}}set(e,t,r){if(r===void 0){r=false}if(r){for(var n=0;n<this.undefStack.length;n++){delete this.undefStack[n][e]}if(this.undefStack.length>0){this.undefStack[this.undefStack.length-1][e]=t}}else{var a=this.undefStack[this.undefStack.length-1];if(a&&!a.hasOwnProperty(e)){a[e]=this.current[e]}}if(t==null){delete this.current[e]}else{this.current[e]=t}}}var macros=_macros;defineMacro("\\noexpand",(function(e){var t=e.popToken();if(e.isExpandable(t.text)){t.noexpand=true;t.treatAsRelax=true}return{tokens:[t],numArgs:0}}));defineMacro("\\expandafter",(function(e){var t=e.popToken();e.expandOnce(true);return{tokens:[t],numArgs:0}}));defineMacro("\\@firstoftwo",(function(e){var t=e.consumeArgs(2);return{tokens:t[0],numArgs:0}}));defineMacro("\\@secondoftwo",(function(e){var t=e.consumeArgs(2);return{tokens:t[1],numArgs:0}}));defineMacro("\\@ifnextchar",(function(e){var t=e.consumeArgs(3);e.consumeSpaces();var r=e.future();if(t[0].length===1&&t[0][0].text===r.text){return{tokens:t[1],numArgs:0}}else{return{tokens:t[2],numArgs:0}}}));defineMacro("\\@ifstar","\\@ifnextchar *{\\@firstoftwo{#1}}");defineMacro("\\TextOrMath",(function(e){var t=e.consumeArgs(2);if(e.mode==="text"){return{tokens:t[0],numArgs:0}}else{return{tokens:t[1],numArgs:0}}}));var digitToNumber={0:0,1:1,2:2,3:3,4:4,5:5,6:6,7:7,8:8,9:9,a:10,A:10,b:11,B:11,c:12,C:12,d:13,D:13,e:14,E:14,f:15,F:15};defineMacro("\\char",(function(e){var t=e.popToken();var r;var n="";if(t.text==="'"){r=8;t=e.popToken()}else if(t.text==='"'){r=16;t=e.popToken()}else if(t.text==="`"){t=e.popToken();if(t.text[0]==="\\"){n=t.text.charCodeAt(1)}else if(t.text==="EOF"){throw new ParseError("\\char` missing argument")}else{n=t.text.charCodeAt(0)}}else{r=10}if(r){n=digitToNumber[t.text];if(n==null||n>=r){throw new ParseError("Invalid base-"+r+" digit "+t.text)}var a;while((a=digitToNumber[e.future().text])!=null&&a<r){n*=r;n+=a;e.popToken()}}return"\\@char{"+n+"}"}));var newcommand=(e,t,r)=>{var n=e.consumeArg().tokens;if(n.length!==1){throw new ParseError("\\newcommand's first argument must be a macro name")}var a=n[0].text;var o=e.isDefined(a);if(o&&!t){throw new ParseError("\\newcommand{"+a+"} attempting to redefine "+(a+"; use \\renewcommand"))}if(!o&&!r){throw new ParseError("\\renewcommand{"+a+"} when command "+a+" "+"does not yet exist; use \\newcommand")}var i=0;n=e.consumeArg().tokens;if(n.length===1&&n[0].text==="["){var l="";var s=e.expandNextToken();while(s.text!=="]"&&s.text!=="EOF"){l+=s.text;s=e.expandNextToken()}if(!l.match(/^\s*[0-9]+\s*$/)){throw new ParseError("Invalid number of arguments: "+l)}i=parseInt(l);n=e.consumeArg().tokens}e.macros.set(a,{tokens:n,numArgs:i});return""};defineMacro("\\newcommand",(e=>newcommand(e,false,true)));defineMacro("\\renewcommand",(e=>newcommand(e,true,false)));defineMacro("\\providecommand",(e=>newcommand(e,true,true)));defineMacro("\\message",(e=>{var t=e.consumeArgs(1)[0];console.log(t.reverse().map((e=>e.text)).join(""));return""}));defineMacro("\\errmessage",(e=>{var t=e.consumeArgs(1)[0];console.error(t.reverse().map((e=>e.text)).join(""));return""}));defineMacro("\\show",(e=>{var t=e.popToken();var r=t.text;console.log(t,e.macros.get(r),functions$1[r],symbols.math[r],symbols.text[r]);return""}));defineMacro("\\bgroup","{");defineMacro("\\egroup","}");defineMacro("~","\\nobreakspace");defineMacro("\\lq","`");defineMacro("\\rq","'");defineMacro("\\aa","\\r a");defineMacro("\\AA","\\r A");defineMacro("\\textcopyright","\\html@mathml{\\textcircled{c}}{\\char`©}");defineMacro("\\copyright","\\TextOrMath{\\textcopyright}{\\text{\\textcopyright}}");defineMacro("\\textregistered","\\html@mathml{\\textcircled{\\scriptsize R}}{\\char`®}");defineMacro("ℬ","\\mathscr{B}");defineMacro("ℰ","\\mathscr{E}");defineMacro("ℱ","\\mathscr{F}");defineMacro("ℋ","\\mathscr{H}");defineMacro("ℐ","\\mathscr{I}");defineMacro("ℒ","\\mathscr{L}");defineMacro("ℳ","\\mathscr{M}");defineMacro("ℛ","\\mathscr{R}");defineMacro("ℭ","\\mathfrak{C}");defineMacro("ℌ","\\mathfrak{H}");defineMacro("ℨ","\\mathfrak{Z}");defineMacro("\\Bbbk","\\Bbb{k}");defineMacro("·","\\cdotp");defineMacro("\\llap","\\mathllap{\\textrm{#1}}");defineMacro("\\rlap","\\mathrlap{\\textrm{#1}}");defineMacro("\\clap","\\mathclap{\\textrm{#1}}");defineMacro("\\mathstrut","\\vphantom{(}");defineMacro("\\underbar","\\underline{\\text{#1}}");defineMacro("\\not",'\\html@mathml{\\mathrel{\\mathrlap\\@not}}{\\char"338}');defineMacro("\\neq","\\html@mathml{\\mathrel{\\not=}}{\\mathrel{\\char`≠}}");defineMacro("\\ne","\\neq");defineMacro("≠","\\neq");defineMacro("\\notin","\\html@mathml{\\mathrel{{\\in}\\mathllap{/\\mskip1mu}}}"+"{\\mathrel{\\char`∉}}");defineMacro("∉","\\notin");defineMacro("≘","\\html@mathml{"+"\\mathrel{=\\kern{-1em}\\raisebox{0.4em}{$\\scriptsize\\frown$}}"+"}{\\mathrel{\\char`≘}}");defineMacro("≙","\\html@mathml{\\stackrel{\\tiny\\wedge}{=}}{\\mathrel{\\char`≘}}");defineMacro("≚","\\html@mathml{\\stackrel{\\tiny\\vee}{=}}{\\mathrel{\\char`≚}}");defineMacro("≛","\\html@mathml{\\stackrel{\\scriptsize\\star}{=}}"+"{\\mathrel{\\char`≛}}");defineMacro("≝","\\html@mathml{\\stackrel{\\tiny\\mathrm{def}}{=}}"+"{\\mathrel{\\char`≝}}");defineMacro("≞","\\html@mathml{\\stackrel{\\tiny\\mathrm{m}}{=}}"+"{\\mathrel{\\char`≞}}");defineMacro("≟","\\html@mathml{\\stackrel{\\tiny?}{=}}{\\mathrel{\\char`≟}}");defineMacro("⟂","\\perp");defineMacro("‼","\\mathclose{!\\mkern-0.8mu!}");defineMacro("∌","\\notni");defineMacro("⌜","\\ulcorner");defineMacro("⌝","\\urcorner");defineMacro("⌞","\\llcorner");defineMacro("⌟","\\lrcorner");defineMacro("©","\\copyright");defineMacro("®","\\textregistered");defineMacro("️","\\textregistered");defineMacro("\\ulcorner",'\\html@mathml{\\@ulcorner}{\\mathop{\\char"231c}}');defineMacro("\\urcorner",'\\html@mathml{\\@urcorner}{\\mathop{\\char"231d}}');defineMacro("\\llcorner",'\\html@mathml{\\@llcorner}{\\mathop{\\char"231e}}');defineMacro("\\lrcorner",'\\html@mathml{\\@lrcorner}{\\mathop{\\char"231f}}');defineMacro("\\vdots","\\mathord{\\varvdots\\rule{0pt}{15pt}}");defineMacro("⋮","\\vdots");defineMacro("\\varGamma","\\mathit{\\Gamma}");defineMacro("\\varDelta","\\mathit{\\Delta}");defineMacro("\\varTheta","\\mathit{\\Theta}");defineMacro("\\varLambda","\\mathit{\\Lambda}");defineMacro("\\varXi","\\mathit{\\Xi}");defineMacro("\\varPi","\\mathit{\\Pi}");defineMacro("\\varSigma","\\mathit{\\Sigma}");defineMacro("\\varUpsilon","\\mathit{\\Upsilon}");defineMacro("\\varPhi","\\mathit{\\Phi}");defineMacro("\\varPsi","\\mathit{\\Psi}");defineMacro("\\varOmega","\\mathit{\\Omega}");defineMacro("\\substack","\\begin{subarray}{c}#1\\end{subarray}");defineMacro("\\colon","\\nobreak\\mskip2mu\\mathpunct{}"+"\\mathchoice{\\mkern-3mu}{\\mkern-3mu}{}{}{:}\\mskip6mu\\relax");defineMacro("\\boxed","\\fbox{$\\displaystyle{#1}$}");defineMacro("\\iff","\\DOTSB\\;\\Longleftrightarrow\\;");defineMacro("\\implies","\\DOTSB\\;\\Longrightarrow\\;");defineMacro("\\impliedby","\\DOTSB\\;\\Longleftarrow\\;");var dotsByToken={",":"\\dotsc","\\not":"\\dotsb","+":"\\dotsb","=":"\\dotsb","<":"\\dotsb",">":"\\dotsb","-":"\\dotsb","*":"\\dotsb",":":"\\dotsb","\\DOTSB":"\\dotsb","\\coprod":"\\dotsb","\\bigvee":"\\dotsb","\\bigwedge":"\\dotsb","\\biguplus":"\\dotsb","\\bigcap":"\\dotsb","\\bigcup":"\\dotsb","\\prod":"\\dotsb","\\sum":"\\dotsb","\\bigotimes":"\\dotsb","\\bigoplus":"\\dotsb","\\bigodot":"\\dotsb","\\bigsqcup":"\\dotsb","\\And":"\\dotsb","\\longrightarrow":"\\dotsb","\\Longrightarrow":"\\dotsb","\\longleftarrow":"\\dotsb","\\Longleftarrow":"\\dotsb","\\longleftrightarrow":"\\dotsb","\\Longleftrightarrow":"\\dotsb","\\mapsto":"\\dotsb","\\longmapsto":"\\dotsb","\\hookrightarrow":"\\dotsb","\\doteq":"\\dotsb","\\mathbin":"\\dotsb","\\mathrel":"\\dotsb","\\relbar":"\\dotsb","\\Relbar":"\\dotsb","\\xrightarrow":"\\dotsb","\\xleftarrow":"\\dotsb","\\DOTSI":"\\dotsi","\\int":"\\dotsi","\\oint":"\\dotsi","\\iint":"\\dotsi","\\iiint":"\\dotsi","\\iiiint":"\\dotsi","\\idotsint":"\\dotsi","\\DOTSX":"\\dotsx"};defineMacro("\\dots",(function(e){var t="\\dotso";var r=e.expandAfterFuture().text;if(r in dotsByToken){t=dotsByToken[r]}else if(r.slice(0,4)==="\\not"){t="\\dotsb"}else if(r in symbols.math){if(utils.contains(["bin","rel"],symbols.math[r].group)){t="\\dotsb"}}return t}));var spaceAfterDots={")":true,"]":true,"\\rbrack":true,"\\}":true,"\\rbrace":true,"\\rangle":true,"\\rceil":true,"\\rfloor":true,"\\rgroup":true,"\\rmoustache":true,"\\right":true,"\\bigr":true,"\\biggr":true,"\\Bigr":true,"\\Biggr":true,$:true,";":true,".":true,",":true};defineMacro("\\dotso",(function(e){var t=e.future().text;if(t in spaceAfterDots){return"\\ldots\\,"}else{return"\\ldots"}}));defineMacro("\\dotsc",(function(e){var t=e.future().text;if(t in spaceAfterDots&&t!==","){return"\\ldots\\,"}else{return"\\ldots"}}));defineMacro("\\cdots",(function(e){var t=e.future().text;if(t in spaceAfterDots){return"\\@cdots\\,"}else{return"\\@cdots"}}));defineMacro("\\dotsb","\\cdots");defineMacro("\\dotsm","\\cdots");defineMacro("\\dotsi","\\!\\cdots");defineMacro("\\dotsx","\\ldots\\,");defineMacro("\\DOTSI","\\relax");defineMacro("\\DOTSB","\\relax");defineMacro("\\DOTSX","\\relax");defineMacro("\\tmspace","\\TextOrMath{\\kern#1#3}{\\mskip#1#2}\\relax");defineMacro("\\,","\\tmspace+{3mu}{.1667em}");defineMacro("\\thinspace","\\,");defineMacro("\\>","\\mskip{4mu}");defineMacro("\\:","\\tmspace+{4mu}{.2222em}");defineMacro("\\medspace","\\:");defineMacro("\\;","\\tmspace+{5mu}{.2777em}");defineMacro("\\thickspace","\\;");defineMacro("\\!","\\tmspace-{3mu}{.1667em}");defineMacro("\\negthinspace","\\!");defineMacro("\\negmedspace","\\tmspace-{4mu}{.2222em}");defineMacro("\\negthickspace","\\tmspace-{5mu}{.277em}");defineMacro("\\enspace","\\kern.5em ");defineMacro("\\enskip","\\hskip.5em\\relax");defineMacro("\\quad","\\hskip1em\\relax");defineMacro("\\qquad","\\hskip2em\\relax");defineMacro("\\tag","\\@ifstar\\tag@literal\\tag@paren");defineMacro("\\tag@paren","\\tag@literal{({#1})}");defineMacro("\\tag@literal",(e=>{if(e.macros.get("\\df@tag")){throw new ParseError("Multiple \\tag")}return"\\gdef\\df@tag{\\text{#1}}"}));defineMacro("\\bmod","\\mathchoice{\\mskip1mu}{\\mskip1mu}{\\mskip5mu}{\\mskip5mu}"+"\\mathbin{\\rm mod}"+"\\mathchoice{\\mskip1mu}{\\mskip1mu}{\\mskip5mu}{\\mskip5mu}");defineMacro("\\pod","\\allowbreak"+"\\mathchoice{\\mkern18mu}{\\mkern8mu}{\\mkern8mu}{\\mkern8mu}(#1)");defineMacro("\\pmod","\\pod{{\\rm mod}\\mkern6mu#1}");defineMacro("\\mod","\\allowbreak"+"\\mathchoice{\\mkern18mu}{\\mkern12mu}{\\mkern12mu}{\\mkern12mu}"+"{\\rm mod}\\,\\,#1");defineMacro("\\newline","\\\\\\relax");defineMacro("\\TeX","\\textrm{\\html@mathml{"+"T\\kern-.1667em\\raisebox{-.5ex}{E}\\kern-.125emX"+"}{TeX}}");var latexRaiseA=makeEm(fontMetricsData["Main-Regular"]["T".charCodeAt(0)][1]-.7*fontMetricsData["Main-Regular"]["A".charCodeAt(0)][1]);defineMacro("\\LaTeX","\\textrm{\\html@mathml{"+("L\\kern-.36em\\raisebox{"+latexRaiseA+"}{\\scriptstyle A}")+"\\kern-.15em\\TeX}{LaTeX}}");defineMacro("\\KaTeX","\\textrm{\\html@mathml{"+("K\\kern-.17em\\raisebox{"+latexRaiseA+"}{\\scriptstyle A}")+"\\kern-.15em\\TeX}{KaTeX}}");defineMacro("\\hspace","\\@ifstar\\@hspacer\\@hspace");defineMacro("\\@hspace","\\hskip #1\\relax");defineMacro("\\@hspacer","\\rule{0pt}{0pt}\\hskip #1\\relax");defineMacro("\\ordinarycolon",":");defineMacro("\\vcentcolon","\\mathrel{\\mathop\\ordinarycolon}");defineMacro("\\dblcolon","\\html@mathml{"+"\\mathrel{\\vcentcolon\\mathrel{\\mkern-.9mu}\\vcentcolon}}"+'{\\mathop{\\char"2237}}');defineMacro("\\coloneqq","\\html@mathml{"+"\\mathrel{\\vcentcolon\\mathrel{\\mkern-1.2mu}=}}"+'{\\mathop{\\char"2254}}');defineMacro("\\Coloneqq","\\html@mathml{"+"\\mathrel{\\dblcolon\\mathrel{\\mkern-1.2mu}=}}"+'{\\mathop{\\char"2237\\char"3d}}');defineMacro("\\coloneq","\\html@mathml{"+"\\mathrel{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}}}"+'{\\mathop{\\char"3a\\char"2212}}');defineMacro("\\Coloneq","\\html@mathml{"+"\\mathrel{\\dblcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}}}"+'{\\mathop{\\char"2237\\char"2212}}');defineMacro("\\eqqcolon","\\html@mathml{"+"\\mathrel{=\\mathrel{\\mkern-1.2mu}\\vcentcolon}}"+'{\\mathop{\\char"2255}}');defineMacro("\\Eqqcolon","\\html@mathml{"+"\\mathrel{=\\mathrel{\\mkern-1.2mu}\\dblcolon}}"+'{\\mathop{\\char"3d\\char"2237}}');defineMacro("\\eqcolon","\\html@mathml{"+"\\mathrel{\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\vcentcolon}}"+'{\\mathop{\\char"2239}}');defineMacro("\\Eqcolon","\\html@mathml{"+"\\mathrel{\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\dblcolon}}"+'{\\mathop{\\char"2212\\char"2237}}');defineMacro("\\colonapprox","\\html@mathml{"+"\\mathrel{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\approx}}"+'{\\mathop{\\char"3a\\char"2248}}');defineMacro("\\Colonapprox","\\html@mathml{"+"\\mathrel{\\dblcolon\\mathrel{\\mkern-1.2mu}\\approx}}"+'{\\mathop{\\char"2237\\char"2248}}');defineMacro("\\colonsim","\\html@mathml{"+"\\mathrel{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\sim}}"+'{\\mathop{\\char"3a\\char"223c}}');defineMacro("\\Colonsim","\\html@mathml{"+"\\mathrel{\\dblcolon\\mathrel{\\mkern-1.2mu}\\sim}}"+'{\\mathop{\\char"2237\\char"223c}}');defineMacro("∷","\\dblcolon");defineMacro("∹","\\eqcolon");defineMacro("≔","\\coloneqq");defineMacro("≕","\\eqqcolon");defineMacro("⩴","\\Coloneqq");defineMacro("\\ratio","\\vcentcolon");defineMacro("\\coloncolon","\\dblcolon");defineMacro("\\colonequals","\\coloneqq");defineMacro("\\coloncolonequals","\\Coloneqq");defineMacro("\\equalscolon","\\eqqcolon");defineMacro("\\equalscoloncolon","\\Eqqcolon");defineMacro("\\colonminus","\\coloneq");defineMacro("\\coloncolonminus","\\Coloneq");defineMacro("\\minuscolon","\\eqcolon");defineMacro("\\minuscoloncolon","\\Eqcolon");defineMacro("\\coloncolonapprox","\\Colonapprox");defineMacro("\\coloncolonsim","\\Colonsim");defineMacro("\\simcolon","\\mathrel{\\sim\\mathrel{\\mkern-1.2mu}\\vcentcolon}");defineMacro("\\simcoloncolon","\\mathrel{\\sim\\mathrel{\\mkern-1.2mu}\\dblcolon}");defineMacro("\\approxcolon","\\mathrel{\\approx\\mathrel{\\mkern-1.2mu}\\vcentcolon}");defineMacro("\\approxcoloncolon","\\mathrel{\\approx\\mathrel{\\mkern-1.2mu}\\dblcolon}");defineMacro("\\notni","\\html@mathml{\\not\\ni}{\\mathrel{\\char`∌}}");defineMacro("\\limsup","\\DOTSB\\operatorname*{lim\\,sup}");defineMacro("\\liminf","\\DOTSB\\operatorname*{lim\\,inf}");defineMacro("\\injlim","\\DOTSB\\operatorname*{inj\\,lim}");defineMacro("\\projlim","\\DOTSB\\operatorname*{proj\\,lim}");defineMacro("\\varlimsup","\\DOTSB\\operatorname*{\\overline{lim}}");defineMacro("\\varliminf","\\DOTSB\\operatorname*{\\underline{lim}}");defineMacro("\\varinjlim","\\DOTSB\\operatorname*{\\underrightarrow{lim}}");defineMacro("\\varprojlim","\\DOTSB\\operatorname*{\\underleftarrow{lim}}");defineMacro("\\gvertneqq","\\html@mathml{\\@gvertneqq}{≩}");defineMacro("\\lvertneqq","\\html@mathml{\\@lvertneqq}{≨}");defineMacro("\\ngeqq","\\html@mathml{\\@ngeqq}{≱}");defineMacro("\\ngeqslant","\\html@mathml{\\@ngeqslant}{≱}");defineMacro("\\nleqq","\\html@mathml{\\@nleqq}{≰}");defineMacro("\\nleqslant","\\html@mathml{\\@nleqslant}{≰}");defineMacro("\\nshortmid","\\html@mathml{\\@nshortmid}{∤}");defineMacro("\\nshortparallel","\\html@mathml{\\@nshortparallel}{∦}");defineMacro("\\nsubseteqq","\\html@mathml{\\@nsubseteqq}{⊈}");defineMacro("\\nsupseteqq","\\html@mathml{\\@nsupseteqq}{⊉}");defineMacro("\\varsubsetneq","\\html@mathml{\\@varsubsetneq}{⊊}");defineMacro("\\varsubsetneqq","\\html@mathml{\\@varsubsetneqq}{⫋}");defineMacro("\\varsupsetneq","\\html@mathml{\\@varsupsetneq}{⊋}");defineMacro("\\varsupsetneqq","\\html@mathml{\\@varsupsetneqq}{⫌}");defineMacro("\\imath","\\html@mathml{\\@imath}{ı}");defineMacro("\\jmath","\\html@mathml{\\@jmath}{ȷ}");defineMacro("\\llbracket","\\html@mathml{"+"\\mathopen{[\\mkern-3.2mu[}}"+"{\\mathopen{\\char`⟦}}");defineMacro("\\rrbracket","\\html@mathml{"+"\\mathclose{]\\mkern-3.2mu]}}"+"{\\mathclose{\\char`⟧}}");defineMacro("⟦","\\llbracket");defineMacro("⟧","\\rrbracket");defineMacro("\\lBrace","\\html@mathml{"+"\\mathopen{\\{\\mkern-3.2mu[}}"+"{\\mathopen{\\char`⦃}}");defineMacro("\\rBrace","\\html@mathml{"+"\\mathclose{]\\mkern-3.2mu\\}}}"+"{\\mathclose{\\char`⦄}}");defineMacro("⦃","\\lBrace");defineMacro("⦄","\\rBrace");defineMacro("\\minuso","\\mathbin{\\html@mathml{"+"{\\mathrlap{\\mathchoice{\\kern{0.145em}}{\\kern{0.145em}}"+"{\\kern{0.1015em}}{\\kern{0.0725em}}\\circ}{-}}}"+"{\\char`⦵}}");defineMacro("⦵","\\minuso");defineMacro("\\darr","\\downarrow");defineMacro("\\dArr","\\Downarrow");defineMacro("\\Darr","\\Downarrow");defineMacro("\\lang","\\langle");defineMacro("\\rang","\\rangle");defineMacro("\\uarr","\\uparrow");defineMacro("\\uArr","\\Uparrow");defineMacro("\\Uarr","\\Uparrow");defineMacro("\\N","\\mathbb{N}");defineMacro("\\R","\\mathbb{R}");defineMacro("\\Z","\\mathbb{Z}");defineMacro("\\alef","\\aleph");defineMacro("\\alefsym","\\aleph");defineMacro("\\Alpha","\\mathrm{A}");defineMacro("\\Beta","\\mathrm{B}");defineMacro("\\bull","\\bullet");defineMacro("\\Chi","\\mathrm{X}");defineMacro("\\clubs","\\clubsuit");defineMacro("\\cnums","\\mathbb{C}");defineMacro("\\Complex","\\mathbb{C}");defineMacro("\\Dagger","\\ddagger");defineMacro("\\diamonds","\\diamondsuit");defineMacro("\\empty","\\emptyset");defineMacro("\\Epsilon","\\mathrm{E}");defineMacro("\\Eta","\\mathrm{H}");defineMacro("\\exist","\\exists");defineMacro("\\harr","\\leftrightarrow");defineMacro("\\hArr","\\Leftrightarrow");defineMacro("\\Harr","\\Leftrightarrow");defineMacro("\\hearts","\\heartsuit");defineMacro("\\image","\\Im");defineMacro("\\infin","\\infty");defineMacro("\\Iota","\\mathrm{I}");defineMacro("\\isin","\\in");defineMacro("\\Kappa","\\mathrm{K}");defineMacro("\\larr","\\leftarrow");defineMacro("\\lArr","\\Leftarrow");defineMacro("\\Larr","\\Leftarrow");defineMacro("\\lrarr","\\leftrightarrow");defineMacro("\\lrArr","\\Leftrightarrow");defineMacro("\\Lrarr","\\Leftrightarrow");defineMacro("\\Mu","\\mathrm{M}");defineMacro("\\natnums","\\mathbb{N}");defineMacro("\\Nu","\\mathrm{N}");defineMacro("\\Omicron","\\mathrm{O}");defineMacro("\\plusmn","\\pm");defineMacro("\\rarr","\\rightarrow");defineMacro("\\rArr","\\Rightarrow");defineMacro("\\Rarr","\\Rightarrow");defineMacro("\\real","\\Re");defineMacro("\\reals","\\mathbb{R}");defineMacro("\\Reals","\\mathbb{R}");defineMacro("\\Rho","\\mathrm{P}");defineMacro("\\sdot","\\cdot");defineMacro("\\sect","\\S");defineMacro("\\spades","\\spadesuit");defineMacro("\\sub","\\subset");defineMacro("\\sube","\\subseteq");defineMacro("\\supe","\\supseteq");defineMacro("\\Tau","\\mathrm{T}");defineMacro("\\thetasym","\\vartheta");defineMacro("\\weierp","\\wp");defineMacro("\\Zeta","\\mathrm{Z}");defineMacro("\\argmin","\\DOTSB\\operatorname*{arg\\,min}");defineMacro("\\argmax","\\DOTSB\\operatorname*{arg\\,max}");defineMacro("\\plim","\\DOTSB\\mathop{\\operatorname{plim}}\\limits");defineMacro("\\bra","\\mathinner{\\langle{#1}|}");defineMacro("\\ket","\\mathinner{|{#1}\\rangle}");defineMacro("\\braket","\\mathinner{\\langle{#1}\\rangle}");defineMacro("\\Bra","\\left\\langle#1\\right|");defineMacro("\\Ket","\\left|#1\\right\\rangle");var braketHelper=e=>t=>{var r=t.consumeArg().tokens;var n=t.consumeArg().tokens;var a=t.consumeArg().tokens;var o=t.consumeArg().tokens;var i=t.macros.get("|");var l=t.macros.get("\\|");t.macros.beginGroup();var s=t=>r=>{if(e){r.macros.set("|",i);if(a.length){r.macros.set("\\|",l)}}var o=t;if(!t&&a.length){var s=r.future();if(s.text==="|"){r.popToken();o=true}}return{tokens:o?a:n,numArgs:0}};t.macros.set("|",s(false));if(a.length){t.macros.set("\\|",s(true))}var m=t.consumeArg().tokens;var u=t.expandTokens([...o,...m,...r]);t.macros.endGroup();return{tokens:u.reverse(),numArgs:0}};defineMacro("\\bra@ket",braketHelper(false));defineMacro("\\bra@set",braketHelper(true));defineMacro("\\Braket","\\bra@ket{\\left\\langle}"+"{\\,\\middle\\vert\\,}{\\,\\middle\\vert\\,}{\\right\\rangle}");defineMacro("\\Set","\\bra@set{\\left\\{\\:}"+"{\\;\\middle\\vert\\;}{\\;\\middle\\Vert\\;}{\\:\\right\\}}");defineMacro("\\set","\\bra@set{\\{\\,}{\\mid}{}{\\,\\}}");defineMacro("\\angln","{\\angl n}");defineMacro("\\blue","\\textcolor{##6495ed}{#1}");defineMacro("\\orange","\\textcolor{##ffa500}{#1}");defineMacro("\\pink","\\textcolor{##ff00af}{#1}");defineMacro("\\red","\\textcolor{##df0030}{#1}");defineMacro("\\green","\\textcolor{##28ae7b}{#1}");defineMacro("\\gray","\\textcolor{gray}{#1}");defineMacro("\\purple","\\textcolor{##9d38bd}{#1}");defineMacro("\\blueA","\\textcolor{##ccfaff}{#1}");defineMacro("\\blueB","\\textcolor{##80f6ff}{#1}");defineMacro("\\blueC","\\textcolor{##63d9ea}{#1}");defineMacro("\\blueD","\\textcolor{##11accd}{#1}");defineMacro("\\blueE","\\textcolor{##0c7f99}{#1}");defineMacro("\\tealA","\\textcolor{##94fff5}{#1}");defineMacro("\\tealB","\\textcolor{##26edd5}{#1}");defineMacro("\\tealC","\\textcolor{##01d1c1}{#1}");defineMacro("\\tealD","\\textcolor{##01a995}{#1}");defineMacro("\\tealE","\\textcolor{##208170}{#1}");defineMacro("\\greenA","\\textcolor{##b6ffb0}{#1}");defineMacro("\\greenB","\\textcolor{##8af281}{#1}");defineMacro("\\greenC","\\textcolor{##74cf70}{#1}");defineMacro("\\greenD","\\textcolor{##1fab54}{#1}");defineMacro("\\greenE","\\textcolor{##0d923f}{#1}");defineMacro("\\goldA","\\textcolor{##ffd0a9}{#1}");defineMacro("\\goldB","\\textcolor{##ffbb71}{#1}");defineMacro("\\goldC","\\textcolor{##ff9c39}{#1}");defineMacro("\\goldD","\\textcolor{##e07d10}{#1}");defineMacro("\\goldE","\\textcolor{##a75a05}{#1}");defineMacro("\\redA","\\textcolor{##fca9a9}{#1}");defineMacro("\\redB","\\textcolor{##ff8482}{#1}");defineMacro("\\redC","\\textcolor{##f9685d}{#1}");defineMacro("\\redD","\\textcolor{##e84d39}{#1}");defineMacro("\\redE","\\textcolor{##bc2612}{#1}");defineMacro("\\maroonA","\\textcolor{##ffbde0}{#1}");defineMacro("\\maroonB","\\textcolor{##ff92c6}{#1}");defineMacro("\\maroonC","\\textcolor{##ed5fa6}{#1}");defineMacro("\\maroonD","\\textcolor{##ca337c}{#1}");defineMacro("\\maroonE","\\textcolor{##9e034e}{#1}");defineMacro("\\purpleA","\\textcolor{##ddd7ff}{#1}");defineMacro("\\purpleB","\\textcolor{##c6b9fc}{#1}");defineMacro("\\purpleC","\\textcolor{##aa87ff}{#1}");defineMacro("\\purpleD","\\textcolor{##7854ab}{#1}");defineMacro("\\purpleE","\\textcolor{##543b78}{#1}");defineMacro("\\mintA","\\textcolor{##f5f9e8}{#1}");defineMacro("\\mintB","\\textcolor{##edf2df}{#1}");defineMacro("\\mintC","\\textcolor{##e0e5cc}{#1}");defineMacro("\\grayA","\\textcolor{##f6f7f7}{#1}");defineMacro("\\grayB","\\textcolor{##f0f1f2}{#1}");defineMacro("\\grayC","\\textcolor{##e3e5e6}{#1}");defineMacro("\\grayD","\\textcolor{##d6d8da}{#1}");defineMacro("\\grayE","\\textcolor{##babec2}{#1}");defineMacro("\\grayF","\\textcolor{##888d93}{#1}");defineMacro("\\grayG","\\textcolor{##626569}{#1}");defineMacro("\\grayH","\\textcolor{##3b3e40}{#1}");defineMacro("\\grayI","\\textcolor{##21242c}{#1}");defineMacro("\\kaBlue","\\textcolor{##314453}{#1}");defineMacro("\\kaGreen","\\textcolor{##71B307}{#1}");var implicitCommands={"^":true,_:true,"\\limits":true,"\\nolimits":true};class MacroExpander{constructor(e,t,r){this.settings=void 0;this.expansionCount=void 0;this.lexer=void 0;this.macros=void 0;this.stack=void 0;this.mode=void 0;this.settings=t;this.expansionCount=0;this.feed(e);this.macros=new Namespace(macros,t.macros);this.mode=r;this.stack=[]}feed(e){this.lexer=new Lexer(e,this.settings)}switchMode(e){this.mode=e}beginGroup(){this.macros.beginGroup()}endGroup(){this.macros.endGroup()}endGroups(){this.macros.endGroups()}future(){if(this.stack.length===0){this.pushToken(this.lexer.lex())}return this.stack[this.stack.length-1]}popToken(){this.future();return this.stack.pop()}pushToken(e){this.stack.push(e)}pushTokens(e){this.stack.push(...e)}scanArgument(e){var t;var r;var n;if(e){this.consumeSpaces();if(this.future().text!=="["){return null}t=this.popToken();({tokens:n,end:r}=this.consumeArg(["]"]))}else{({tokens:n,start:t,end:r}=this.consumeArg())}this.pushToken(new Token("EOF",r.loc));this.pushTokens(n);return t.range(r,"")}consumeSpaces(){for(;;){var e=this.future();if(e.text===" "){this.stack.pop()}else{break}}}consumeArg(e){var t=[];var r=e&&e.length>0;if(!r){this.consumeSpaces()}var n=this.future();var a;var o=0;var i=0;do{a=this.popToken();t.push(a);if(a.text==="{"){++o}else if(a.text==="}"){--o;if(o===-1){throw new ParseError("Extra }",a)}}else if(a.text==="EOF"){throw new ParseError("Unexpected end of input in a macro argument"+", expected '"+(e&&r?e[i]:"}")+"'",a)}if(e&&r){if((o===0||o===1&&e[i]==="{")&&a.text===e[i]){++i;if(i===e.length){t.splice(-i,i);break}}else{i=0}}}while(o!==0||r);if(n.text==="{"&&t[t.length-1].text==="}"){t.pop();t.shift()}t.reverse();return{tokens:t,start:n,end:a}}consumeArgs(e,t){if(t){if(t.length!==e+1){throw new ParseError("The length of delimiters doesn't match the number of args!")}var r=t[0];for(var n=0;n<r.length;n++){var a=this.popToken();if(r[n]!==a.text){throw new ParseError("Use of the macro doesn't match its definition",a)}}}var o=[];for(var i=0;i<e;i++){o.push(this.consumeArg(t&&t[i+1]).tokens)}return o}expandOnce(e){var t=this.popToken();var r=t.text;var n=!t.noexpand?this._getExpansion(r):null;if(n==null||e&&n.unexpandable){if(e&&n==null&&r[0]==="\\"&&!this.isDefined(r)){throw new ParseError("Undefined control sequence: "+r)}this.pushToken(t);return t}this.expansionCount++;if(this.expansionCount>this.settings.maxExpand){throw new ParseError("Too many expansions: infinite loop or "+"need to increase maxExpand setting")}var a=n.tokens;var o=this.consumeArgs(n.numArgs,n.delimiters);if(n.numArgs){a=a.slice();for(var i=a.length-1;i>=0;--i){var l=a[i];if(l.text==="#"){if(i===0){throw new ParseError("Incomplete placeholder at end of macro body",l)}l=a[--i];if(l.text==="#"){a.splice(i+1,1)}else if(/^[1-9]$/.test(l.text)){a.splice(i,2,...o[+l.text-1])}else{throw new ParseError("Not a valid argument number",l)}}}}this.pushTokens(a);return a}expandAfterFuture(){this.expandOnce();return this.future()}expandNextToken(){for(;;){var e=this.expandOnce();if(e instanceof Token){if(e.treatAsRelax){e.text="\\relax"}return this.stack.pop()}}throw new Error}expandMacro(e){return this.macros.has(e)?this.expandTokens([new Token(e)]):undefined}expandTokens(e){var t=[];var r=this.stack.length;this.pushTokens(e);while(this.stack.length>r){var n=this.expandOnce(true);if(n instanceof Token){if(n.treatAsRelax){n.noexpand=false;n.treatAsRelax=false}t.push(this.stack.pop())}}return t}expandMacroAsText(e){var t=this.expandMacro(e);if(t){return t.map((e=>e.text)).join("")}else{return t}}_getExpansion(e){var t=this.macros.get(e);if(t==null){return t}if(e.length===1){var r=this.lexer.catcodes[e];if(r!=null&&r!==13){return}}var n=typeof t==="function"?t(this):t;if(typeof n==="string"){var a=0;if(n.indexOf("#")!==-1){var o=n.replace(/##/g,"");while(o.indexOf("#"+(a+1))!==-1){++a}}var i=new Lexer(n,this.settings);var l=[];var s=i.lex();while(s.text!=="EOF"){l.push(s);s=i.lex()}l.reverse();var m={tokens:l,numArgs:a};return m}return n}isDefined(e){return this.macros.has(e)||functions$1.hasOwnProperty(e)||symbols.math.hasOwnProperty(e)||symbols.text.hasOwnProperty(e)||implicitCommands.hasOwnProperty(e)}isExpandable(e){var t=this.macros.get(e);return t!=null?typeof t==="string"||typeof t==="function"||!t.unexpandable:functions$1.hasOwnProperty(e)&&!functions$1[e].primitive}}var unicodeSubRegEx=/^[₊₋₌₍₎₀₁₂₃₄₅₆₇₈₉ₐₑₕᵢⱼₖₗₘₙₒₚᵣₛₜᵤᵥₓᵦᵧᵨᵩᵪ]/;var uSubsAndSups=Object.freeze({"₊":"+","₋":"-","₌":"=","₍":"(","₎":")","₀":"0","₁":"1","₂":"2","₃":"3","₄":"4","₅":"5","₆":"6","₇":"7","₈":"8","₉":"9","ₐ":"a","ₑ":"e","ₕ":"h","ᵢ":"i","ⱼ":"j","ₖ":"k","ₗ":"l","ₘ":"m","ₙ":"n","ₒ":"o","ₚ":"p","ᵣ":"r","ₛ":"s","ₜ":"t","ᵤ":"u","ᵥ":"v","ₓ":"x","ᵦ":"β","ᵧ":"γ","ᵨ":"ρ","ᵩ":"ϕ","ᵪ":"χ","⁺":"+","⁻":"-","⁼":"=","⁽":"(","⁾":")","⁰":"0","¹":"1","²":"2","³":"3","⁴":"4","⁵":"5","⁶":"6","⁷":"7","⁸":"8","⁹":"9","ᴬ":"A","ᴮ":"B","ᴰ":"D","ᴱ":"E","ᴳ":"G","ᴴ":"H","ᴵ":"I","ᴶ":"J","ᴷ":"K","ᴸ":"L","ᴹ":"M","ᴺ":"N","ᴼ":"O","ᴾ":"P","ᴿ":"R","ᵀ":"T","ᵁ":"U","ⱽ":"V","ᵂ":"W","ᵃ":"a","ᵇ":"b","ᶜ":"c","ᵈ":"d","ᵉ":"e","ᶠ":"f","ᵍ":"g","ʰ":"h","ⁱ":"i","ʲ":"j","ᵏ":"k","ˡ":"l","ᵐ":"m","ⁿ":"n","ᵒ":"o","ᵖ":"p","ʳ":"r","ˢ":"s","ᵗ":"t","ᵘ":"u","ᵛ":"v","ʷ":"w","ˣ":"x","ʸ":"y","ᶻ":"z","ᵝ":"β","ᵞ":"γ","ᵟ":"δ","ᵠ":"ϕ","ᵡ":"χ","ᶿ":"θ"});var unicodeAccents={"́":{text:"\\'",math:"\\acute"},"̀":{text:"\\`",math:"\\grave"},"̈":{text:'\\"',math:"\\ddot"},"̃":{text:"\\~",math:"\\tilde"},"̄":{text:"\\=",math:"\\bar"},"̆":{text:"\\u",math:"\\breve"},"̌":{text:"\\v",math:"\\check"},"̂":{text:"\\^",math:"\\hat"},"̇":{text:"\\.",math:"\\dot"},"̊":{text:"\\r",math:"\\mathring"},"̋":{text:"\\H"},"̧":{text:"\\c"}};var unicodeSymbols={"á":"á","à":"à","ä":"ä","ǟ":"ǟ","ã":"ã","ā":"ā","ă":"ă","ắ":"ắ","ằ":"ằ","ẵ":"ẵ","ǎ":"ǎ","â":"â","ấ":"ấ","ầ":"ầ","ẫ":"ẫ","ȧ":"ȧ","ǡ":"ǡ","å":"å","ǻ":"ǻ","ḃ":"ḃ","ć":"ć","ḉ":"ḉ","č":"č","ĉ":"ĉ","ċ":"ċ","ç":"ç","ď":"ď","ḋ":"ḋ","ḑ":"ḑ","é":"é","è":"è","ë":"ë","ẽ":"ẽ","ē":"ē","ḗ":"ḗ","ḕ":"ḕ","ĕ":"ĕ","ḝ":"ḝ","ě":"ě","ê":"ê","ế":"ế","ề":"ề","ễ":"ễ","ė":"ė","ȩ":"ȩ","ḟ":"ḟ","ǵ":"ǵ","ḡ":"ḡ","ğ":"ğ","ǧ":"ǧ","ĝ":"ĝ","ġ":"ġ","ģ":"ģ","ḧ":"ḧ","ȟ":"ȟ","ĥ":"ĥ","ḣ":"ḣ","ḩ":"ḩ","í":"í","ì":"ì","ï":"ï","ḯ":"ḯ","ĩ":"ĩ","ī":"ī","ĭ":"ĭ","ǐ":"ǐ","î":"î","ǰ":"ǰ","ĵ":"ĵ","ḱ":"ḱ","ǩ":"ǩ","ķ":"ķ","ĺ":"ĺ","ľ":"ľ","ļ":"ļ","ḿ":"ḿ","ṁ":"ṁ","ń":"ń","ǹ":"ǹ","ñ":"ñ","ň":"ň","ṅ":"ṅ","ņ":"ņ","ó":"ó","ò":"ò","ö":"ö","ȫ":"ȫ","õ":"õ","ṍ":"ṍ","ṏ":"ṏ","ȭ":"ȭ","ō":"ō","ṓ":"ṓ","ṑ":"ṑ","ŏ":"ŏ","ǒ":"ǒ","ô":"ô","ố":"ố","ồ":"ồ","ỗ":"ỗ","ȯ":"ȯ","ȱ":"ȱ","ő":"ő","ṕ":"ṕ","ṗ":"ṗ","ŕ":"ŕ","ř":"ř","ṙ":"ṙ","ŗ":"ŗ","ś":"ś","ṥ":"ṥ","š":"š","ṧ":"ṧ","ŝ":"ŝ","ṡ":"ṡ","ş":"ş","ẗ":"ẗ","ť":"ť","ṫ":"ṫ","ţ":"ţ","ú":"ú","ù":"ù","ü":"ü","ǘ":"ǘ","ǜ":"ǜ","ǖ":"ǖ","ǚ":"ǚ","ũ":"ũ","ṹ":"ṹ","ū":"ū","ṻ":"ṻ","ŭ":"ŭ","ǔ":"ǔ","û":"û","ů":"ů","ű":"ű","ṽ":"ṽ","ẃ":"ẃ","ẁ":"ẁ","ẅ":"ẅ","ŵ":"ŵ","ẇ":"ẇ","ẘ":"ẘ","ẍ":"ẍ","ẋ":"ẋ","ý":"ý","ỳ":"ỳ","ÿ":"ÿ","ỹ":"ỹ","ȳ":"ȳ","ŷ":"ŷ","ẏ":"ẏ","ẙ":"ẙ","ź":"ź","ž":"ž","ẑ":"ẑ","ż":"ż","Á":"Á","À":"À","Ä":"Ä","Ǟ":"Ǟ","Ã":"Ã","Ā":"Ā","Ă":"Ă","Ắ":"Ắ","Ằ":"Ằ","Ẵ":"Ẵ","Ǎ":"Ǎ","Â":"Â","Ấ":"Ấ","Ầ":"Ầ","Ẫ":"Ẫ","Ȧ":"Ȧ","Ǡ":"Ǡ","Å":"Å","Ǻ":"Ǻ","Ḃ":"Ḃ","Ć":"Ć","Ḉ":"Ḉ","Č":"Č","Ĉ":"Ĉ","Ċ":"Ċ","Ç":"Ç","Ď":"Ď","Ḋ":"Ḋ","Ḑ":"Ḑ","É":"É","È":"È","Ë":"Ë","Ẽ":"Ẽ","Ē":"Ē","Ḗ":"Ḗ","Ḕ":"Ḕ","Ĕ":"Ĕ","Ḝ":"Ḝ","Ě":"Ě","Ê":"Ê","Ế":"Ế","Ề":"Ề","Ễ":"Ễ","Ė":"Ė","Ȩ":"Ȩ","Ḟ":"Ḟ","Ǵ":"Ǵ","Ḡ":"Ḡ","Ğ":"Ğ","Ǧ":"Ǧ","Ĝ":"Ĝ","Ġ":"Ġ","Ģ":"Ģ","Ḧ":"Ḧ","Ȟ":"Ȟ","Ĥ":"Ĥ","Ḣ":"Ḣ","Ḩ":"Ḩ","Í":"Í","Ì":"Ì","Ï":"Ï","Ḯ":"Ḯ","Ĩ":"Ĩ","Ī":"Ī","Ĭ":"Ĭ","Ǐ":"Ǐ","Î":"Î","İ":"İ","Ĵ":"Ĵ","Ḱ":"Ḱ","Ǩ":"Ǩ","Ķ":"Ķ","Ĺ":"Ĺ","Ľ":"Ľ","Ļ":"Ļ","Ḿ":"Ḿ","Ṁ":"Ṁ","Ń":"Ń","Ǹ":"Ǹ","Ñ":"Ñ","Ň":"Ň","Ṅ":"Ṅ","Ņ":"Ņ","Ó":"Ó","Ò":"Ò","Ö":"Ö","Ȫ":"Ȫ","Õ":"Õ","Ṍ":"Ṍ","Ṏ":"Ṏ","Ȭ":"Ȭ","Ō":"Ō","Ṓ":"Ṓ","Ṑ":"Ṑ","Ŏ":"Ŏ","Ǒ":"Ǒ","Ô":"Ô","Ố":"Ố","Ồ":"Ồ","Ỗ":"Ỗ","Ȯ":"Ȯ","Ȱ":"Ȱ","Ő":"Ő","Ṕ":"Ṕ","Ṗ":"Ṗ","Ŕ":"Ŕ","Ř":"Ř","Ṙ":"Ṙ","Ŗ":"Ŗ","Ś":"Ś","Ṥ":"Ṥ","Š":"Š","Ṧ":"Ṧ","Ŝ":"Ŝ","Ṡ":"Ṡ","Ş":"Ş","Ť":"Ť","Ṫ":"Ṫ","Ţ":"Ţ","Ú":"Ú","Ù":"Ù","Ü":"Ü","Ǘ":"Ǘ","Ǜ":"Ǜ","Ǖ":"Ǖ","Ǚ":"Ǚ","Ũ":"Ũ","Ṹ":"Ṹ","Ū":"Ū","Ṻ":"Ṻ","Ŭ":"Ŭ","Ǔ":"Ǔ","Û":"Û","Ů":"Ů","Ű":"Ű","Ṽ":"Ṽ","Ẃ":"Ẃ","Ẁ":"Ẁ","Ẅ":"Ẅ","Ŵ":"Ŵ","Ẇ":"Ẇ","Ẍ":"Ẍ","Ẋ":"Ẋ","Ý":"Ý","Ỳ":"Ỳ","Ÿ":"Ÿ","Ỹ":"Ỹ","Ȳ":"Ȳ","Ŷ":"Ŷ","Ẏ":"Ẏ","Ź":"Ź","Ž":"Ž","Ẑ":"Ẑ","Ż":"Ż","ά":"ά","ὰ":"ὰ","ᾱ":"ᾱ","ᾰ":"ᾰ","έ":"έ","ὲ":"ὲ","ή":"ή","ὴ":"ὴ","ί":"ί","ὶ":"ὶ","ϊ":"ϊ","ΐ":"ΐ","ῒ":"ῒ","ῑ":"ῑ","ῐ":"ῐ","ό":"ό","ὸ":"ὸ","ύ":"ύ","ὺ":"ὺ","ϋ":"ϋ","ΰ":"ΰ","ῢ":"ῢ","ῡ":"ῡ","ῠ":"ῠ","ώ":"ώ","ὼ":"ὼ","Ύ":"Ύ","Ὺ":"Ὺ","Ϋ":"Ϋ","Ῡ":"Ῡ","Ῠ":"Ῠ","Ώ":"Ώ","Ὼ":"Ὼ"};class Parser{constructor(e,t){this.mode=void 0;this.gullet=void 0;this.settings=void 0;this.leftrightDepth=void 0;this.nextToken=void 0;this.mode="math";this.gullet=new MacroExpander(e,t,this.mode);this.settings=t;this.leftrightDepth=0}expect(e,t){if(t===void 0){t=true}if(this.fetch().text!==e){throw new ParseError("Expected '"+e+"', got '"+this.fetch().text+"'",this.fetch())}if(t){this.consume()}}consume(){this.nextToken=null}fetch(){if(this.nextToken==null){this.nextToken=this.gullet.expandNextToken()}return this.nextToken}switchMode(e){this.mode=e;this.gullet.switchMode(e)}parse(){if(!this.settings.globalGroup){this.gullet.beginGroup()}if(this.settings.colorIsTextColor){this.gullet.macros.set("\\color","\\textcolor")}try{var e=this.parseExpression(false);this.expect("EOF");if(!this.settings.globalGroup){this.gullet.endGroup()}return e}finally{this.gullet.endGroups()}}subparse(e){var t=this.nextToken;this.consume();this.gullet.pushToken(new Token("}"));this.gullet.pushTokens(e);var r=this.parseExpression(false);this.expect("}");this.nextToken=t;return r}parseExpression(e,t){var r=[];while(true){if(this.mode==="math"){this.consumeSpaces()}var n=this.fetch();if(Parser.endOfExpression.indexOf(n.text)!==-1){break}if(t&&n.text===t){break}if(e&&functions$1[n.text]&&functions$1[n.text].infix){break}var a=this.parseAtom(t);if(!a){break}else if(a.type==="internal"){continue}r.push(a)}if(this.mode==="text"){this.formLigatures(r)}return this.handleInfixNodes(r)}handleInfixNodes(e){var t=-1;var r;for(var n=0;n<e.length;n++){if(e[n].type==="infix"){if(t!==-1){throw new ParseError("only one infix operator per group",e[n].token)}t=n;r=e[n].replaceWith}}if(t!==-1&&r){var a;var o;var i=e.slice(0,t);var l=e.slice(t+1);if(i.length===1&&i[0].type==="ordgroup"){a=i[0]}else{a={type:"ordgroup",mode:this.mode,body:i}}if(l.length===1&&l[0].type==="ordgroup"){o=l[0]}else{o={type:"ordgroup",mode:this.mode,body:l}}var s;if(r==="\\\\abovefrac"){s=this.callFunction(r,[a,e[t],o],[])}else{s=this.callFunction(r,[a,o],[])}return[s]}else{return e}}handleSupSubscript(e){var t=this.fetch();var r=t.text;this.consume();this.consumeSpaces();var n=this.parseGroup(e);if(!n){throw new ParseError("Expected group after '"+r+"'",t)}return n}formatUnsupportedCmd(e){var t=[];for(var r=0;r<e.length;r++){t.push({type:"textord",mode:"text",text:e[r]})}var n={type:"text",mode:this.mode,body:t};var a={type:"color",mode:this.mode,color:this.settings.errorColor,body:[n]};return a}parseAtom(e){var t=this.parseGroup("atom",e);if(this.mode==="text"){return t}var r;var n;while(true){this.consumeSpaces();var a=this.fetch();if(a.text==="\\limits"||a.text==="\\nolimits"){if(t&&t.type==="op"){var o=a.text==="\\limits";t.limits=o;t.alwaysHandleSupSub=true}else if(t&&t.type==="operatorname"){if(t.alwaysHandleSupSub){t.limits=a.text==="\\limits"}}else{throw new ParseError("Limit controls must follow a math operator",a)}this.consume()}else if(a.text==="^"){if(r){throw new ParseError("Double superscript",a)}r=this.handleSupSubscript("superscript")}else if(a.text==="_"){if(n){throw new ParseError("Double subscript",a)}n=this.handleSupSubscript("subscript")}else if(a.text==="'"){if(r){throw new ParseError("Double superscript",a)}var i={type:"textord",mode:this.mode,text:"\\prime"};var l=[i];this.consume();while(this.fetch().text==="'"){l.push(i);this.consume()}if(this.fetch().text==="^"){l.push(this.handleSupSubscript("superscript"))}r={type:"ordgroup",mode:this.mode,body:l}}else if(uSubsAndSups[a.text]){var s=uSubsAndSups[a.text];var m=unicodeSubRegEx.test(a.text);this.consume();while(true){var u=this.fetch().text;if(!uSubsAndSups[u]){break}if(unicodeSubRegEx.test(u)!==m){break}this.consume();s+=uSubsAndSups[u]}var c=new Parser(s,this.settings).parse();if(m){n={type:"ordgroup",mode:"math",body:c}}else{r={type:"ordgroup",mode:"math",body:c}}}else{break}}if(r||n){return{type:"supsub",mode:this.mode,base:t,sup:r,sub:n}}else{return t}}parseFunction(e,t){var r=this.fetch();var n=r.text;var a=functions$1[n];if(!a){return null}this.consume();if(t&&t!=="atom"&&!a.allowedInArgument){throw new ParseError("Got function '"+n+"' with no arguments"+(t?" as "+t:""),r)}else if(this.mode==="text"&&!a.allowedInText){throw new ParseError("Can't use function '"+n+"' in text mode",r)}else if(this.mode==="math"&&a.allowedInMath===false){throw new ParseError("Can't use function '"+n+"' in math mode",r)}var{args:o,optArgs:i}=this.parseArguments(n,a);return this.callFunction(n,o,i,r,e)}callFunction(e,t,r,n,a){var o={funcName:e,parser:this,token:n,breakOnTokenText:a};var i=functions$1[e];if(i&&i.handler){return i.handler(o,t,r)}else{throw new ParseError("No function handler for "+e)}}parseArguments(e,t){var r=t.numArgs+t.numOptionalArgs;if(r===0){return{args:[],optArgs:[]}}var n=[];var a=[];for(var o=0;o<r;o++){var i=t.argTypes&&t.argTypes[o];var l=o<t.numOptionalArgs;if(t.primitive&&i==null||t.type==="sqrt"&&o===1&&a[0]==null){i="primitive"}var s=this.parseGroupOfType("argument to '"+e+"'",i,l);if(l){a.push(s)}else if(s!=null){n.push(s)}else{throw new ParseError("Null argument, please report this as a bug")}}return{args:n,optArgs:a}}parseGroupOfType(e,t,r){switch(t){case"color":return this.parseColorGroup(r);case"size":return this.parseSizeGroup(r);case"url":return this.parseUrlGroup(r);case"math":case"text":return this.parseArgumentGroup(r,t);case"hbox":{var n=this.parseArgumentGroup(r,"text");return n!=null?{type:"styling",mode:n.mode,body:[n],style:"text"}:null}case"raw":{var a=this.parseStringGroup("raw",r);return a!=null?{type:"raw",mode:"text",string:a.text}:null}case"primitive":{if(r){throw new ParseError("A primitive argument cannot be optional")}var o=this.parseGroup(e);if(o==null){throw new ParseError("Expected group as "+e,this.fetch())}return o}case"original":case null:case undefined:return this.parseArgumentGroup(r);default:throw new ParseError("Unknown group type as "+e,this.fetch())}}consumeSpaces(){while(this.fetch().text===" "){this.consume()}}parseStringGroup(e,t){var r=this.gullet.scanArgument(t);if(r==null){return null}var n="";var a;while((a=this.fetch()).text!=="EOF"){n+=a.text;this.consume()}this.consume();r.text=n;return r}parseRegexGroup(e,t){var r=this.fetch();var n=r;var a="";var o;while((o=this.fetch()).text!=="EOF"&&e.test(a+o.text)){n=o;a+=n.text;this.consume()}if(a===""){throw new ParseError("Invalid "+t+": '"+r.text+"'",r)}return r.range(n,a)}parseColorGroup(e){var t=this.parseStringGroup("color",e);if(t==null){return null}var r=/^(#[a-f0-9]{3}|#?[a-f0-9]{6}|[a-z]+)$/i.exec(t.text);if(!r){throw new ParseError("Invalid color: '"+t.text+"'",t)}var n=r[0];if(/^[0-9a-f]{6}$/i.test(n)){n="#"+n}return{type:"color-token",mode:this.mode,color:n}}parseSizeGroup(e){var t;var r=false;this.gullet.consumeSpaces();if(!e&&this.gullet.future().text!=="{"){t=this.parseRegexGroup(/^[-+]? *(?:$|\d+|\d+\.\d*|\.\d*) *[a-z]{0,2} *$/,"size")}else{t=this.parseStringGroup("size",e)}if(!t){return null}if(!e&&t.text.length===0){t.text="0pt";r=true}var n=/([-+]?) *(\d+(?:\.\d*)?|\.\d+) *([a-z]{2})/.exec(t.text);if(!n){throw new ParseError("Invalid size: '"+t.text+"'",t)}var a={number:+(n[1]+n[2]),unit:n[3]};if(!validUnit(a)){throw new ParseError("Invalid unit: '"+a.unit+"'",t)}return{type:"size",mode:this.mode,value:a,isBlank:r}}parseUrlGroup(e){this.gullet.lexer.setCatcode("%",13);this.gullet.lexer.setCatcode("~",12);var t=this.parseStringGroup("url",e);this.gullet.lexer.setCatcode("%",14);this.gullet.lexer.setCatcode("~",13);if(t==null){return null}var r=t.text.replace(/\\([#$%&~_^{}])/g,"$1");return{type:"url",mode:this.mode,url:r}}parseArgumentGroup(e,t){var r=this.gullet.scanArgument(e);if(r==null){return null}var n=this.mode;if(t){this.switchMode(t)}this.gullet.beginGroup();var a=this.parseExpression(false,"EOF");this.expect("EOF");this.gullet.endGroup();var o={type:"ordgroup",mode:this.mode,loc:r.loc,body:a};if(t){this.switchMode(n)}return o}parseGroup(e,t){var r=this.fetch();var n=r.text;var a;if(n==="{"||n==="\\begingroup"){this.consume();var o=n==="{"?"}":"\\endgroup";this.gullet.beginGroup();var i=this.parseExpression(false,o);var l=this.fetch();this.expect(o);this.gullet.endGroup();a={type:"ordgroup",mode:this.mode,loc:SourceLocation.range(r,l),body:i,semisimple:n==="\\begingroup"||undefined}}else{a=this.parseFunction(t,e)||this.parseSymbol();if(a==null&&n[0]==="\\"&&!implicitCommands.hasOwnProperty(n)){if(this.settings.throwOnError){throw new ParseError("Undefined control sequence: "+n,r)}a=this.formatUnsupportedCmd(n);this.consume()}}return a}formLigatures(e){var t=e.length-1;for(var r=0;r<t;++r){var n=e[r];var a=n.text;if(a==="-"&&e[r+1].text==="-"){if(r+1<t&&e[r+2].text==="-"){e.splice(r,3,{type:"textord",mode:"text",loc:SourceLocation.range(n,e[r+2]),text:"---"});t-=2}else{e.splice(r,2,{type:"textord",mode:"text",loc:SourceLocation.range(n,e[r+1]),text:"--"});t-=1}}if((a==="'"||a==="`")&&e[r+1].text===a){e.splice(r,2,{type:"textord",mode:"text",loc:SourceLocation.range(n,e[r+1]),text:a+a});t-=1}}}parseSymbol(){var e=this.fetch();var t=e.text;if(/^\\verb[^a-zA-Z]/.test(t)){this.consume();var r=t.slice(5);var n=r.charAt(0)==="*";if(n){r=r.slice(1)}if(r.length<2||r.charAt(0)!==r.slice(-1)){throw new ParseError("\\verb assertion failed --\n                    please report what input caused this bug")}r=r.slice(1,-1);return{type:"verb",mode:"text",body:r,star:n}}if(unicodeSymbols.hasOwnProperty(t[0])&&!symbols[this.mode][t[0]]){if(this.settings.strict&&this.mode==="math"){this.settings.reportNonstrict("unicodeTextInMathMode",'Accented Unicode text character "'+t[0]+'" used in '+"math mode",e)}t=unicodeSymbols[t[0]]+t.slice(1)}var a=combiningDiacriticalMarksEndRegex.exec(t);if(a){t=t.substring(0,a.index);if(t==="i"){t="ı"}else if(t==="j"){t="ȷ"}}var o;if(symbols[this.mode][t]){if(this.settings.strict&&this.mode==="math"&&extraLatin.indexOf(t)>=0){this.settings.reportNonstrict("unicodeTextInMathMode",'Latin-1/Unicode text character "'+t[0]+'" used in '+"math mode",e)}var i=symbols[this.mode][t].group;var l=SourceLocation.range(e);var s;if(ATOMS.hasOwnProperty(i)){var m=i;s={type:"atom",mode:this.mode,family:m,loc:l,text:t}}else{s={type:i,mode:this.mode,loc:l,text:t}}o=s}else if(t.charCodeAt(0)>=128){if(this.settings.strict){if(!supportedCodepoint(t.charCodeAt(0))){this.settings.reportNonstrict("unknownSymbol",'Unrecognized Unicode character "'+t[0]+'"'+(" ("+t.charCodeAt(0)+")"),e)}else if(this.mode==="math"){this.settings.reportNonstrict("unicodeTextInMathMode",'Unicode text character "'+t[0]+'" used in math mode',e)}}o={type:"textord",mode:"text",loc:SourceLocation.range(e),text:t}}else{return null}this.consume();if(a){for(var u=0;u<a[0].length;u++){var c=a[0][u];if(!unicodeAccents[c]){throw new ParseError("Unknown accent ' "+c+"'",e)}var d=unicodeAccents[c][this.mode]||unicodeAccents[c].text;if(!d){throw new ParseError("Accent "+c+" unsupported in "+this.mode+" mode",e)}o={type:"accent",mode:this.mode,loc:SourceLocation.range(e),label:d,isStretchy:false,isShifty:true,base:o}}}return o}}Parser.endOfExpression=["}","\\endgroup","\\end","\\right","&"];var parseTree=function e(t,r){if(!(typeof t==="string"||t instanceof String)){throw new TypeError("KaTeX can only parse string typed expression")}var n=new Parser(t,r);delete n.gullet.macros.current["\\df@tag"];var a=n.parse();delete n.gullet.macros.current["\\current@color"];delete n.gullet.macros.current["\\color"];if(n.gullet.macros.get("\\df@tag")){if(!r.displayMode){throw new ParseError("\\tag works only in display equations")}a=[{type:"tag",mode:"text",body:a,tag:n.subparse([new Token("\\df@tag")])}]}return a};var render=function e(t,r,n){r.textContent="";var a=renderToDomTree(t,n).toNode();r.appendChild(a)};if(typeof document!=="undefined"){if(document.compatMode!=="CSS1Compat"){typeof console!=="undefined"&&console.warn("Warning: KaTeX doesn't work in quirks mode. Make sure your "+"website has a suitable doctype.");render=function e(){throw new ParseError("KaTeX doesn't work in quirks mode.")}}}var renderToString=function e(t,r){var n=renderToDomTree(t,r).toMarkup();return n};var generateParseTree=function e(t,r){var n=new Settings(r);return parseTree(t,n)};var renderError=function e(t,r,n){if(n.throwOnError||!(t instanceof ParseError)){throw t}var a=buildCommon.makeSpan(["katex-error"],[new SymbolNode(r)]);a.setAttribute("title",t.toString());a.setAttribute("style","color:"+n.errorColor);return a};var renderToDomTree=function e(t,r){var n=new Settings(r);try{var a=parseTree(t,n);return buildTree(a,t,n)}catch(e){return renderError(e,t,n)}};var renderToHTMLTree=function e(t,r){var n=new Settings(r);try{var a=parseTree(t,n);return buildHTMLTree(a,t,n)}catch(e){return renderError(e,t,n)}};var katex={version:"0.16.4",render:render,renderToString:renderToString,ParseError:ParseError,SETTINGS_SCHEMA:SETTINGS_SCHEMA,__parse:generateParseTree,__renderToDomTree:renderToDomTree,__renderToHTMLTree:renderToHTMLTree,__setFontMetrics:setFontMetrics,__defineSymbol:defineSymbol,__defineMacro:defineMacro,__domTree:{Span:Span,Anchor:Anchor,SymbolNode:SymbolNode,SvgNode:SvgNode,PathNode:PathNode,LineNode:LineNode}};class ParseError$1{constructor(e,t){let r=" "+e;let n;const a=t&&t.loc;if(a&&a.start<=a.end){const e=a.lexer.input;n=a.start;const t=a.end;if(n===e.length){r+=" at end of input: "}else{r+=" at position "+(n+1)+": "}const o=e.slice(n,t).replace(/[^]/g,"$&̲");let i;if(n>15){i="…"+e.slice(n-15,n)}else{i=e.slice(0,n)}let l;if(t+15<e.length){l=e.slice(t,t+15)+"…"}else{l=e.slice(t)}r+=i+o+l}const o=new Error(r);o.name="ParseError";o.__proto__=ParseError$1.prototype;o.position=n;return o}}ParseError$1.prototype.__proto__=Error.prototype;const deflt$1=function(e,t){return e===undefined?t:e};const uppercase$1=/([A-Z])/g;const hyphenate$1=function(e){return e.replace(uppercase$1,"-$1").toLowerCase()};const ESCAPE_LOOKUP$1={"&":"&amp;",">":"&gt;","<":"&lt;",'"':"&quot;","'":"&#x27;"};const ESCAPE_REGEX$1=/[&><"']/g;function escape$1(e){return String(e).replace(ESCAPE_REGEX$1,(e=>ESCAPE_LOOKUP$1[e]))}const getBaseElem$1=function(e){if(e.type==="ordgroup"){if(e.body.length===1){return getBaseElem$1(e.body[0])}else{return e}}else if(e.type==="color"){if(e.body.length===1){return getBaseElem$1(e.body[0])}else{return e}}else if(e.type==="font"){return getBaseElem$1(e.body)}else{return e}};const isCharacterBox$1=function(e){const t=getBaseElem$1(e);return t.type==="mathord"||t.type==="textord"||t.type==="atom"};const assert$1=function(e){if(!e){throw new Error("Expected non-null, but got "+String(e))}return e};const protocolFromUrl$1=function(e){const t=/^\s*([^\\/#]*?)(?::|&#0*58|&#x0*3a)/i.exec(e);return t!=null?t[1]:"_relative"};const round=function(e){return+e.toFixed(4)};var utils$1={deflt:deflt$1,escape:escape$1,hyphenate:hyphenate$1,getBaseElem:getBaseElem$1,isCharacterBox:isCharacterBox$1,protocolFromUrl:protocolFromUrl$1,round:round};class Settings$1{constructor(e){e=e||{};this.displayMode=utils$1.deflt(e.displayMode,false);this.annotate=utils$1.deflt(e.annotate,false);this.leqno=utils$1.deflt(e.leqno,false);this.errorColor=utils$1.deflt(e.errorColor,"#b22222");this.macros=e.macros||{};this.wrap=utils$1.deflt(e.wrap,"none");this.xml=utils$1.deflt(e.xml,false);this.colorIsTextColor=utils$1.deflt(e.colorIsTextColor,false);this.strict=utils$1.deflt(e.strict,false);this.trust=utils$1.deflt(e.trust,false);this.maxSize=e.maxSize===undefined?[Infinity,Infinity]:Array.isArray(e.maxSize)?e.maxSize:[Infinity,Infinity];this.maxExpand=Math.max(0,utils$1.deflt(e.maxExpand,1e3))}isTrusted(e){if(e.url&&!e.protocol){e.protocol=utils$1.protocolFromUrl(e.url)}const t=typeof this.trust==="function"?this.trust(e):this.trust;return Boolean(t)}}const _functions$1={};const _mathmlGroupBuilders$1={};function defineFunction$1({type:e,names:t,props:r,handler:n,mathmlBuilder:a}){const o={type:e,numArgs:r.numArgs,argTypes:r.argTypes,allowedInArgument:!!r.allowedInArgument,allowedInText:!!r.allowedInText,allowedInMath:r.allowedInMath===undefined?true:r.allowedInMath,numOptionalArgs:r.numOptionalArgs||0,infix:!!r.infix,primitive:!!r.primitive,handler:n};for(let e=0;e<t.length;++e){_functions$1[t[e]]=o}if(e){if(a){_mathmlGroupBuilders$1[e]=a}}}function defineFunctionBuilders$1({type:e,mathmlBuilder:t}){defineFunction$1({type:e,names:[],props:{numArgs:0},handler(){throw new Error("Should never be called.")},mathmlBuilder:t})}const normalizeArgument$1=function(e){return e.type==="ordgroup"&&e.body.length===1?e.body[0]:e};const ordargument$1=function(e){return e.type==="ordgroup"?e.body:[e]};class DocumentFragment$1{constructor(e){this.children=e;this.classes=[];this.style={}}hasClass(e){return this.classes.includes(e)}toNode(){const e=document.createDocumentFragment();for(let t=0;t<this.children.length;t++){e.appendChild(this.children[t].toNode())}return e}toMarkup(){let e="";for(let t=0;t<this.children.length;t++){e+=this.children[t].toMarkup()}return e}toText(){const e=e=>e.toText();return this.children.map(e).join("")}}const createClass$1=function(e){return e.filter((e=>e)).join(" ")};const initNode$1=function(e,t){this.classes=e||[];this.attributes={};this.style=t||{}};const toNode$1=function(e){const t=document.createElement(e);t.className=createClass$1(this.classes);for(const e in this.style){if(Object.prototype.hasOwnProperty.call(this.style,e)){t.style[e]=this.style[e]}}for(const e in this.attributes){if(Object.prototype.hasOwnProperty.call(this.attributes,e)){t.setAttribute(e,this.attributes[e])}}for(let e=0;e<this.children.length;e++){t.appendChild(this.children[e].toNode())}return t};const toMarkup$1=function(e){let t=`<${e}`;if(this.classes.length){t+=` class="${utils$1.escape(createClass$1(this.classes))}"`}let r="";for(const e in this.style){if(Object.prototype.hasOwnProperty.call(this.style,e)){r+=`${utils$1.hyphenate(e)}:${this.style[e]};`}}if(r){t+=` style="${r}"`}for(const e in this.attributes){if(Object.prototype.hasOwnProperty.call(this.attributes,e)){t+=` ${e}="${utils$1.escape(this.attributes[e])}"`}}t+=">";for(let e=0;e<this.children.length;e++){t+=this.children[e].toMarkup()}t+=`</${e}>`;return t};class Span$1{constructor(e,t,r){initNode$1.call(this,e,r);this.children=t||[]}setAttribute(e,t){this.attributes[e]=t}toNode(){return toNode$1.call(this,"span")}toMarkup(){return toMarkup$1.call(this,"span")}}class TextNode$1{constructor(e){this.text=e}toNode(){return document.createTextNode(this.text)}toMarkup(){return utils$1.escape(this.text)}}class Img$1{constructor(e,t,r){this.alt=t;this.src=e;this.classes=["mord"];this.style=r}hasClass(e){return this.classes.includes(e)}toNode(){const e=document.createElement("img");e.src=this.src;e.alt=this.alt;e.className="mord";for(const t in this.style){if(Object.prototype.hasOwnProperty.call(this.style,t)){e.style[t]=this.style[t]}}return e}toMarkup(){let e=`<img src='${this.src}' alt='${this.alt}'`;let t="";for(const e in this.style){if(Object.prototype.hasOwnProperty.call(this.style,e)){t+=`${utils$1.hyphenate(e)}:${this.style[e]};`}}if(t){e+=` style="${utils$1.escape(t)}"`}e+="/>";return e}}function newDocumentFragment$1(e){return new DocumentFragment$1(e)}class MathNode$1{constructor(e,t,r,n){this.type=e;this.attributes={};this.children=t||[];this.classes=r||[];this.style=n||{}}setAttribute(e,t){this.attributes[e]=t}getAttribute(e){return this.attributes[e]}toNode(){const e=document.createElementNS("http://www.w3.org/1998/Math/MathML",this.type);for(const t in this.attributes){if(Object.prototype.hasOwnProperty.call(this.attributes,t)){e.setAttribute(t,this.attributes[t])}}if(this.classes.length>0){e.className=createClass$1(this.classes)}for(const t in this.style){if(Object.prototype.hasOwnProperty.call(this.style,t)){e.style[t]=this.style[t]}}for(let t=0;t<this.children.length;t++){e.appendChild(this.children[t].toNode())}return e}toMarkup(){let e="<"+this.type;for(const t in this.attributes){if(Object.prototype.hasOwnProperty.call(this.attributes,t)){e+=" "+t+'="';e+=utils$1.escape(this.attributes[t]);e+='"'}}if(this.classes.length>0){e+=` class="${utils$1.escape(createClass$1(this.classes))}"`}let t="";for(const e in this.style){if(Object.prototype.hasOwnProperty.call(this.style,e)){t+=`${utils$1.hyphenate(e)}:${this.style[e]};`}}if(t){e+=` style="${t}"`}e+=">";for(let t=0;t<this.children.length;t++){e+=this.children[t].toMarkup()}e+="</"+this.type+">";return e}toText(){return this.children.map((e=>e.toText())).join("")}}class TextNode$2{constructor(e){this.text=e}toNode(){return document.createTextNode(this.text)}toMarkup(){return utils$1.escape(this.toText())}toText(){return this.text}}const wrapWithMstyle=e=>{let t;if(e.length===1&&e[0].type==="mrow"){t=e.pop();t.type="mstyle"}else{t=new MathNode$1("mstyle",e)}return t};var mathMLTree$1={MathNode:MathNode$1,TextNode:TextNode$2,newDocumentFragment:newDocumentFragment$1};const stretchyCodePoint$1={widehat:"^",widecheck:"ˇ",widetilde:"~",wideparen:"⏜",utilde:"~",overleftarrow:"←",underleftarrow:"←",xleftarrow:"←",overrightarrow:"→",underrightarrow:"→",xrightarrow:"→",underbrace:"⏟",overbrace:"⏞",overgroup:"⏠",overparen:"⏜",undergroup:"⏡",underparen:"⏝",overleftrightarrow:"↔",underleftrightarrow:"↔",xleftrightarrow:"↔",Overrightarrow:"⇒",xRightarrow:"⇒",overleftharpoon:"↼",xleftharpoonup:"↼",overrightharpoon:"⇀",xrightharpoonup:"⇀",xLeftarrow:"⇐",xLeftrightarrow:"⇔",xhookleftarrow:"↩",xhookrightarrow:"↪",xmapsto:"↦",xrightharpoondown:"⇁",xleftharpoondown:"↽",xtwoheadleftarrow:"↞",xtwoheadrightarrow:"↠",xlongequal:"=",xrightleftarrows:"⇄",yields:"→",yieldsLeft:"←",mesomerism:"↔",longrightharpoonup:"⇀",longleftharpoondown:"↽",eqrightharpoonup:"⇀",eqleftharpoondown:"↽","\\cdrightarrow":"→","\\cdleftarrow":"←","\\cdlongequal":"="};const mathMLnode$1=function(e){const t=new mathMLTree$1.TextNode(stretchyCodePoint$1[e.slice(1)]);const r=new mathMLTree$1.MathNode("mo",[t]);r.setAttribute("stretchy","true");return r};var stretchy$1={mathMLnode:mathMLnode$1};const ATOMS$1={bin:1,close:1,inner:1,open:1,punct:1,rel:1};const NON_ATOMS$1={"accent-token":1,mathord:1,"op-token":1,spacing:1,textord:1};const symbols$1={math:{},text:{}};function defineSymbol$1(e,t,r,n,a){symbols$1[e][n]={group:t,replace:r};if(a&&r){symbols$1[e][r]=symbols$1[e][n]}}const math$1="math";const text$2="text";const accent$1="accent-token";const bin$1="bin";const close$1="close";const inner$1="inner";const mathord$1="mathord";const op$1="op-token";const open$1="open";const punct$1="punct";const rel$1="rel";const spacing$1="spacing";const textord$1="textord";defineSymbol$1(math$1,rel$1,"≡","\\equiv",true);defineSymbol$1(math$1,rel$1,"≺","\\prec",true);defineSymbol$1(math$1,rel$1,"≻","\\succ",true);defineSymbol$1(math$1,rel$1,"∼","\\sim",true);defineSymbol$1(math$1,rel$1,"⟂","\\perp",true);defineSymbol$1(math$1,rel$1,"⪯","\\preceq",true);defineSymbol$1(math$1,rel$1,"⪰","\\succeq",true);defineSymbol$1(math$1,rel$1,"≃","\\simeq",true);defineSymbol$1(math$1,rel$1,"≌","\\backcong",true);defineSymbol$1(math$1,rel$1,"|","\\mid",true);defineSymbol$1(math$1,rel$1,"≪","\\ll",true);defineSymbol$1(math$1,rel$1,"≫","\\gg",true);defineSymbol$1(math$1,rel$1,"≍","\\asymp",true);defineSymbol$1(math$1,rel$1,"∥","\\parallel");defineSymbol$1(math$1,rel$1,"⋈","\\bowtie",true);defineSymbol$1(math$1,rel$1,"⌣","\\smile",true);defineSymbol$1(math$1,rel$1,"⊑","\\sqsubseteq",true);defineSymbol$1(math$1,rel$1,"⊒","\\sqsupseteq",true);defineSymbol$1(math$1,rel$1,"≐","\\doteq",true);defineSymbol$1(math$1,rel$1,"⌢","\\frown",true);defineSymbol$1(math$1,rel$1,"∋","\\ni",true);defineSymbol$1(math$1,rel$1,"∌","\\notni",true);defineSymbol$1(math$1,rel$1,"∝","\\propto",true);defineSymbol$1(math$1,rel$1,"⊢","\\vdash",true);defineSymbol$1(math$1,rel$1,"⊣","\\dashv",true);defineSymbol$1(math$1,rel$1,"∋","\\owns");defineSymbol$1(math$1,rel$1,"≘","\\arceq",true);defineSymbol$1(math$1,rel$1,"≙","\\wedgeq",true);defineSymbol$1(math$1,rel$1,"≚","\\veeeq",true);defineSymbol$1(math$1,rel$1,"≛","\\stareq",true);defineSymbol$1(math$1,rel$1,"≝","\\eqdef",true);defineSymbol$1(math$1,rel$1,"≞","\\measeq",true);defineSymbol$1(math$1,rel$1,"≟","\\questeq",true);defineSymbol$1(math$1,rel$1,"≠","\\ne",true);defineSymbol$1(math$1,rel$1,"≠","\\neq");defineSymbol$1(math$1,rel$1,"∷","\\dblcolon",true);defineSymbol$1(math$1,rel$1,"≔","\\coloneqq",true);defineSymbol$1(math$1,rel$1,"≕","\\eqqcolon",true);defineSymbol$1(math$1,rel$1,"∹","\\eqcolon",true);defineSymbol$1(math$1,rel$1,"⩴","\\Coloneqq",true);defineSymbol$1(math$1,punct$1,".","\\ldotp");defineSymbol$1(math$1,punct$1,"·","\\cdotp");defineSymbol$1(math$1,textord$1,"#","\\#");defineSymbol$1(text$2,textord$1,"#","\\#");defineSymbol$1(math$1,textord$1,"&","\\&");defineSymbol$1(text$2,textord$1,"&","\\&");defineSymbol$1(math$1,textord$1,"ℵ","\\aleph",true);defineSymbol$1(math$1,textord$1,"∀","\\forall",true);defineSymbol$1(math$1,textord$1,"ℏ","\\hbar",true);defineSymbol$1(math$1,textord$1,"∃","\\exists",true);defineSymbol$1(math$1,textord$1,"∇","\\nabla",true);defineSymbol$1(math$1,textord$1,"♭","\\flat",true);defineSymbol$1(math$1,textord$1,"ℓ","\\ell",true);defineSymbol$1(math$1,textord$1,"♮","\\natural",true);defineSymbol$1(math$1,textord$1,"Å","\\AA",true);defineSymbol$1(text$2,textord$1,"Å","\\AA",true);defineSymbol$1(math$1,textord$1,"♣","\\clubsuit",true);defineSymbol$1(math$1,textord$1,"♧","\\varclubsuit",true);defineSymbol$1(math$1,textord$1,"℘","\\wp",true);defineSymbol$1(math$1,textord$1,"♯","\\sharp",true);defineSymbol$1(math$1,textord$1,"♢","\\diamondsuit",true);defineSymbol$1(math$1,textord$1,"♦","\\vardiamondsuit",true);defineSymbol$1(math$1,textord$1,"ℜ","\\Re",true);defineSymbol$1(math$1,textord$1,"♡","\\heartsuit",true);defineSymbol$1(math$1,textord$1,"♥","\\varheartsuit",true);defineSymbol$1(math$1,textord$1,"ℑ","\\Im",true);defineSymbol$1(math$1,textord$1,"♠","\\spadesuit",true);defineSymbol$1(math$1,textord$1,"♤","\\varspadesuit",true);defineSymbol$1(math$1,textord$1,"♀","\\female",true);defineSymbol$1(math$1,textord$1,"♂","\\male",true);defineSymbol$1(math$1,textord$1,"§","\\S",true);defineSymbol$1(text$2,textord$1,"§","\\S");defineSymbol$1(math$1,textord$1,"¶","\\P",true);defineSymbol$1(text$2,textord$1,"¶","\\P");defineSymbol$1(text$2,textord$1,"☺","\\smiley",true);defineSymbol$1(math$1,textord$1,"☺","\\smiley",true);defineSymbol$1(math$1,textord$1,"†","\\dag");defineSymbol$1(text$2,textord$1,"†","\\dag");defineSymbol$1(text$2,textord$1,"†","\\textdagger");defineSymbol$1(math$1,textord$1,"‡","\\ddag");defineSymbol$1(text$2,textord$1,"‡","\\ddag");defineSymbol$1(text$2,textord$1,"‡","\\textdaggerdbl");defineSymbol$1(math$1,close$1,"⎱","\\rmoustache",true);defineSymbol$1(math$1,open$1,"⎰","\\lmoustache",true);defineSymbol$1(math$1,close$1,"⟯","\\rgroup",true);defineSymbol$1(math$1,open$1,"⟮","\\lgroup",true);defineSymbol$1(math$1,bin$1,"∓","\\mp",true);defineSymbol$1(math$1,bin$1,"⊖","\\ominus",true);defineSymbol$1(math$1,bin$1,"⊎","\\uplus",true);defineSymbol$1(math$1,bin$1,"⊓","\\sqcap",true);defineSymbol$1(math$1,bin$1,"∗","\\ast");defineSymbol$1(math$1,bin$1,"⊔","\\sqcup",true);defineSymbol$1(math$1,bin$1,"◯","\\bigcirc",true);defineSymbol$1(math$1,bin$1,"∙","\\bullet",true);defineSymbol$1(math$1,bin$1,"‡","\\ddagger");defineSymbol$1(math$1,bin$1,"≀","\\wr",true);defineSymbol$1(math$1,bin$1,"⨿","\\amalg");defineSymbol$1(math$1,bin$1,"&","\\And");defineSymbol$1(math$1,rel$1,"⟵","\\longleftarrow",true);defineSymbol$1(math$1,rel$1,"⇐","\\Leftarrow",true);defineSymbol$1(math$1,rel$1,"⟸","\\Longleftarrow",true);defineSymbol$1(math$1,rel$1,"⟶","\\longrightarrow",true);defineSymbol$1(math$1,rel$1,"⇒","\\Rightarrow",true);defineSymbol$1(math$1,rel$1,"⟹","\\Longrightarrow",true);defineSymbol$1(math$1,rel$1,"↔","\\leftrightarrow",true);defineSymbol$1(math$1,rel$1,"⟷","\\longleftrightarrow",true);defineSymbol$1(math$1,rel$1,"⇔","\\Leftrightarrow",true);defineSymbol$1(math$1,rel$1,"⟺","\\Longleftrightarrow",true);defineSymbol$1(math$1,rel$1,"↤","\\mapsfrom",true);defineSymbol$1(math$1,rel$1,"↦","\\mapsto",true);defineSymbol$1(math$1,rel$1,"⟼","\\longmapsto",true);defineSymbol$1(math$1,rel$1,"↗","\\nearrow",true);defineSymbol$1(math$1,rel$1,"↩","\\hookleftarrow",true);defineSymbol$1(math$1,rel$1,"↪","\\hookrightarrow",true);defineSymbol$1(math$1,rel$1,"↘","\\searrow",true);defineSymbol$1(math$1,rel$1,"↼","\\leftharpoonup",true);defineSymbol$1(math$1,rel$1,"⇀","\\rightharpoonup",true);defineSymbol$1(math$1,rel$1,"↙","\\swarrow",true);defineSymbol$1(math$1,rel$1,"↽","\\leftharpoondown",true);defineSymbol$1(math$1,rel$1,"⇁","\\rightharpoondown",true);defineSymbol$1(math$1,rel$1,"↖","\\nwarrow",true);defineSymbol$1(math$1,rel$1,"⇌","\\rightleftharpoons",true);defineSymbol$1(math$1,mathord$1,"↯","\\lightning",true);defineSymbol$1(math$1,mathord$1,"‰","\\permil",true);defineSymbol$1(text$2,textord$1,"‰","\\permil");defineSymbol$1(math$1,rel$1,"≮","\\nless",true);defineSymbol$1(math$1,rel$1,"⪇","\\lneq",true);defineSymbol$1(math$1,rel$1,"≨","\\lneqq",true);defineSymbol$1(math$1,rel$1,"≨︀","\\lvertneqq");defineSymbol$1(math$1,rel$1,"⋦","\\lnsim",true);defineSymbol$1(math$1,rel$1,"⪉","\\lnapprox",true);defineSymbol$1(math$1,rel$1,"⊀","\\nprec",true);defineSymbol$1(math$1,rel$1,"⋠","\\npreceq",true);defineSymbol$1(math$1,rel$1,"⋨","\\precnsim",true);defineSymbol$1(math$1,rel$1,"⪹","\\precnapprox",true);defineSymbol$1(math$1,rel$1,"≁","\\nsim",true);defineSymbol$1(math$1,rel$1,"∤","\\nmid",true);defineSymbol$1(math$1,rel$1,"∤","\\nshortmid");defineSymbol$1(math$1,rel$1,"⊬","\\nvdash",true);defineSymbol$1(math$1,rel$1,"⊭","\\nvDash",true);defineSymbol$1(math$1,rel$1,"⋪","\\ntriangleleft");defineSymbol$1(math$1,rel$1,"⋬","\\ntrianglelefteq",true);defineSymbol$1(math$1,rel$1,"⊄","\\nsubset",true);defineSymbol$1(math$1,rel$1,"⊅","\\nsupset",true);defineSymbol$1(math$1,rel$1,"⊊","\\subsetneq",true);defineSymbol$1(math$1,rel$1,"⊊︀","\\varsubsetneq");defineSymbol$1(math$1,rel$1,"⫋","\\subsetneqq",true);defineSymbol$1(math$1,rel$1,"⫋︀","\\varsubsetneqq");defineSymbol$1(math$1,rel$1,"≯","\\ngtr",true);defineSymbol$1(math$1,rel$1,"⪈","\\gneq",true);defineSymbol$1(math$1,rel$1,"≩","\\gneqq",true);defineSymbol$1(math$1,rel$1,"≩︀","\\gvertneqq");defineSymbol$1(math$1,rel$1,"⋧","\\gnsim",true);defineSymbol$1(math$1,rel$1,"⪊","\\gnapprox",true);defineSymbol$1(math$1,rel$1,"⊁","\\nsucc",true);defineSymbol$1(math$1,rel$1,"⋡","\\nsucceq",true);defineSymbol$1(math$1,rel$1,"⋩","\\succnsim",true);defineSymbol$1(math$1,rel$1,"⪺","\\succnapprox",true);defineSymbol$1(math$1,rel$1,"≆","\\ncong",true);defineSymbol$1(math$1,rel$1,"∦","\\nparallel",true);defineSymbol$1(math$1,rel$1,"∦","\\nshortparallel");defineSymbol$1(math$1,rel$1,"⊯","\\nVDash",true);defineSymbol$1(math$1,rel$1,"⋫","\\ntriangleright");defineSymbol$1(math$1,rel$1,"⋭","\\ntrianglerighteq",true);defineSymbol$1(math$1,rel$1,"⊋","\\supsetneq",true);defineSymbol$1(math$1,rel$1,"⊋","\\varsupsetneq");defineSymbol$1(math$1,rel$1,"⫌","\\supsetneqq",true);defineSymbol$1(math$1,rel$1,"⫌︀","\\varsupsetneqq");defineSymbol$1(math$1,rel$1,"⊮","\\nVdash",true);defineSymbol$1(math$1,rel$1,"⪵","\\precneqq",true);defineSymbol$1(math$1,rel$1,"⪶","\\succneqq",true);defineSymbol$1(math$1,bin$1,"⊴","\\unlhd");defineSymbol$1(math$1,bin$1,"⊵","\\unrhd");defineSymbol$1(math$1,rel$1,"↚","\\nleftarrow",true);defineSymbol$1(math$1,rel$1,"↛","\\nrightarrow",true);defineSymbol$1(math$1,rel$1,"⇍","\\nLeftarrow",true);defineSymbol$1(math$1,rel$1,"⇏","\\nRightarrow",true);defineSymbol$1(math$1,rel$1,"↮","\\nleftrightarrow",true);defineSymbol$1(math$1,rel$1,"⇎","\\nLeftrightarrow",true);defineSymbol$1(math$1,rel$1,"△","\\vartriangle");defineSymbol$1(math$1,textord$1,"ℏ","\\hslash");defineSymbol$1(math$1,textord$1,"▽","\\triangledown");defineSymbol$1(math$1,textord$1,"◊","\\lozenge");defineSymbol$1(math$1,textord$1,"Ⓢ","\\circledS");defineSymbol$1(math$1,textord$1,"®","\\circledR",true);defineSymbol$1(text$2,textord$1,"®","\\circledR");defineSymbol$1(text$2,textord$1,"®","\\textregistered");defineSymbol$1(math$1,textord$1,"∡","\\measuredangle",true);defineSymbol$1(math$1,textord$1,"∄","\\nexists");defineSymbol$1(math$1,textord$1,"℧","\\mho");defineSymbol$1(math$1,textord$1,"Ⅎ","\\Finv",true);defineSymbol$1(math$1,textord$1,"⅁","\\Game",true);defineSymbol$1(math$1,textord$1,"‵","\\backprime");defineSymbol$1(math$1,textord$1,"▲","\\blacktriangle");defineSymbol$1(math$1,textord$1,"▼","\\blacktriangledown");defineSymbol$1(math$1,textord$1,"■","\\blacksquare");defineSymbol$1(math$1,textord$1,"⧫","\\blacklozenge");defineSymbol$1(math$1,textord$1,"★","\\bigstar");defineSymbol$1(math$1,textord$1,"∢","\\sphericalangle",true);defineSymbol$1(math$1,textord$1,"∁","\\complement",true);defineSymbol$1(math$1,textord$1,"ð","\\eth",true);defineSymbol$1(text$2,textord$1,"ð","ð");defineSymbol$1(math$1,textord$1,"╱","\\diagup");defineSymbol$1(math$1,textord$1,"╲","\\diagdown");defineSymbol$1(math$1,textord$1,"□","\\square");defineSymbol$1(math$1,textord$1,"□","\\Box");defineSymbol$1(math$1,textord$1,"◊","\\Diamond");defineSymbol$1(math$1,textord$1,"¥","\\yen",true);defineSymbol$1(text$2,textord$1,"¥","\\yen",true);defineSymbol$1(math$1,textord$1,"✓","\\checkmark",true);defineSymbol$1(text$2,textord$1,"✓","\\checkmark");defineSymbol$1(math$1,textord$1,"✗","\\ballotx",true);defineSymbol$1(text$2,textord$1,"✗","\\ballotx");defineSymbol$1(text$2,textord$1,"•","\\textbullet");defineSymbol$1(math$1,textord$1,"ℶ","\\beth",true);defineSymbol$1(math$1,textord$1,"ℸ","\\daleth",true);defineSymbol$1(math$1,textord$1,"ℷ","\\gimel",true);defineSymbol$1(math$1,textord$1,"ϝ","\\digamma",true);defineSymbol$1(math$1,textord$1,"ϰ","\\varkappa");defineSymbol$1(math$1,open$1,"⌜","\\ulcorner",true);defineSymbol$1(math$1,close$1,"⌝","\\urcorner",true);defineSymbol$1(math$1,open$1,"⌞","\\llcorner",true);defineSymbol$1(math$1,close$1,"⌟","\\lrcorner",true);defineSymbol$1(math$1,rel$1,"≦","\\leqq",true);defineSymbol$1(math$1,rel$1,"⩽","\\leqslant",true);defineSymbol$1(math$1,rel$1,"⪕","\\eqslantless",true);defineSymbol$1(math$1,rel$1,"≲","\\lesssim",true);defineSymbol$1(math$1,rel$1,"⪅","\\lessapprox",true);defineSymbol$1(math$1,rel$1,"≊","\\approxeq",true);defineSymbol$1(math$1,bin$1,"⋖","\\lessdot");defineSymbol$1(math$1,rel$1,"⋘","\\lll",true);defineSymbol$1(math$1,rel$1,"≶","\\lessgtr",true);defineSymbol$1(math$1,rel$1,"⋚","\\lesseqgtr",true);defineSymbol$1(math$1,rel$1,"⪋","\\lesseqqgtr",true);defineSymbol$1(math$1,rel$1,"≑","\\doteqdot");defineSymbol$1(math$1,rel$1,"≓","\\risingdotseq",true);defineSymbol$1(math$1,rel$1,"≒","\\fallingdotseq",true);defineSymbol$1(math$1,rel$1,"∽","\\backsim",true);defineSymbol$1(math$1,rel$1,"⋍","\\backsimeq",true);defineSymbol$1(math$1,rel$1,"⫅","\\subseteqq",true);defineSymbol$1(math$1,rel$1,"⋐","\\Subset",true);defineSymbol$1(math$1,rel$1,"⊏","\\sqsubset",true);defineSymbol$1(math$1,rel$1,"≼","\\preccurlyeq",true);defineSymbol$1(math$1,rel$1,"⋞","\\curlyeqprec",true);defineSymbol$1(math$1,rel$1,"≾","\\precsim",true);defineSymbol$1(math$1,rel$1,"⪷","\\precapprox",true);defineSymbol$1(math$1,rel$1,"⊲","\\vartriangleleft");defineSymbol$1(math$1,rel$1,"⊴","\\trianglelefteq");defineSymbol$1(math$1,rel$1,"⊨","\\vDash",true);defineSymbol$1(math$1,rel$1,"⊪","\\Vvdash",true);defineSymbol$1(math$1,rel$1,"⌣","\\smallsmile");defineSymbol$1(math$1,rel$1,"⌢","\\smallfrown");defineSymbol$1(math$1,rel$1,"≏","\\bumpeq",true);defineSymbol$1(math$1,rel$1,"≎","\\Bumpeq",true);defineSymbol$1(math$1,rel$1,"≧","\\geqq",true);defineSymbol$1(math$1,rel$1,"⩾","\\geqslant",true);defineSymbol$1(math$1,rel$1,"⪖","\\eqslantgtr",true);defineSymbol$1(math$1,rel$1,"≳","\\gtrsim",true);defineSymbol$1(math$1,rel$1,"⪆","\\gtrapprox",true);defineSymbol$1(math$1,bin$1,"⋗","\\gtrdot");defineSymbol$1(math$1,rel$1,"⋙","\\ggg",true);defineSymbol$1(math$1,rel$1,"≷","\\gtrless",true);defineSymbol$1(math$1,rel$1,"⋛","\\gtreqless",true);defineSymbol$1(math$1,rel$1,"⪌","\\gtreqqless",true);defineSymbol$1(math$1,rel$1,"≖","\\eqcirc",true);defineSymbol$1(math$1,rel$1,"≗","\\circeq",true);defineSymbol$1(math$1,rel$1,"≜","\\triangleq",true);defineSymbol$1(math$1,rel$1,"∼","\\thicksim");defineSymbol$1(math$1,rel$1,"≈","\\thickapprox");defineSymbol$1(math$1,rel$1,"⫆","\\supseteqq",true);defineSymbol$1(math$1,rel$1,"⋑","\\Supset",true);defineSymbol$1(math$1,rel$1,"⊐","\\sqsupset",true);defineSymbol$1(math$1,rel$1,"≽","\\succcurlyeq",true);defineSymbol$1(math$1,rel$1,"⋟","\\curlyeqsucc",true);defineSymbol$1(math$1,rel$1,"≿","\\succsim",true);defineSymbol$1(math$1,rel$1,"⪸","\\succapprox",true);defineSymbol$1(math$1,rel$1,"⊳","\\vartriangleright");defineSymbol$1(math$1,rel$1,"⊵","\\trianglerighteq");defineSymbol$1(math$1,rel$1,"⊩","\\Vdash",true);defineSymbol$1(math$1,rel$1,"∣","\\shortmid");defineSymbol$1(math$1,rel$1,"∥","\\shortparallel");defineSymbol$1(math$1,rel$1,"≬","\\between",true);defineSymbol$1(math$1,rel$1,"⋔","\\pitchfork",true);defineSymbol$1(math$1,rel$1,"∝","\\varpropto");defineSymbol$1(math$1,rel$1,"◀","\\blacktriangleleft");defineSymbol$1(math$1,rel$1,"∴","\\therefore",true);defineSymbol$1(math$1,rel$1,"∍","\\backepsilon");defineSymbol$1(math$1,rel$1,"▶","\\blacktriangleright");defineSymbol$1(math$1,rel$1,"∵","\\because",true);defineSymbol$1(math$1,rel$1,"⋘","\\llless");defineSymbol$1(math$1,rel$1,"⋙","\\gggtr");defineSymbol$1(math$1,bin$1,"⊲","\\lhd");defineSymbol$1(math$1,bin$1,"⊳","\\rhd");defineSymbol$1(math$1,rel$1,"≂","\\eqsim",true);defineSymbol$1(math$1,rel$1,"⋈","\\Join");defineSymbol$1(math$1,rel$1,"≑","\\Doteq",true);defineSymbol$1(math$1,rel$1,"⥽","\\strictif",true);defineSymbol$1(math$1,rel$1,"⥼","\\strictfi",true);defineSymbol$1(math$1,bin$1,"∔","\\dotplus",true);defineSymbol$1(math$1,bin$1,"∖","\\smallsetminus");defineSymbol$1(math$1,bin$1,"⋒","\\Cap",true);defineSymbol$1(math$1,bin$1,"⋓","\\Cup",true);defineSymbol$1(math$1,bin$1,"⩞","\\doublebarwedge",true);defineSymbol$1(math$1,bin$1,"⊟","\\boxminus",true);defineSymbol$1(math$1,bin$1,"⊞","\\boxplus",true);defineSymbol$1(math$1,bin$1,"⋇","\\divideontimes",true);defineSymbol$1(math$1,bin$1,"⋉","\\ltimes",true);defineSymbol$1(math$1,bin$1,"⋊","\\rtimes",true);defineSymbol$1(math$1,bin$1,"⋋","\\leftthreetimes",true);defineSymbol$1(math$1,bin$1,"⋌","\\rightthreetimes",true);defineSymbol$1(math$1,bin$1,"⋏","\\curlywedge",true);defineSymbol$1(math$1,bin$1,"⋎","\\curlyvee",true);defineSymbol$1(math$1,bin$1,"⊝","\\circleddash",true);defineSymbol$1(math$1,bin$1,"⊛","\\circledast",true);defineSymbol$1(math$1,bin$1,"⊺","\\intercal",true);defineSymbol$1(math$1,bin$1,"⋒","\\doublecap");defineSymbol$1(math$1,bin$1,"⋓","\\doublecup");defineSymbol$1(math$1,bin$1,"⊠","\\boxtimes",true);defineSymbol$1(math$1,rel$1,"⇢","\\dashrightarrow",true);defineSymbol$1(math$1,rel$1,"⇠","\\dashleftarrow",true);defineSymbol$1(math$1,rel$1,"⇇","\\leftleftarrows",true);defineSymbol$1(math$1,rel$1,"⇆","\\leftrightarrows",true);defineSymbol$1(math$1,rel$1,"⇚","\\Lleftarrow",true);defineSymbol$1(math$1,rel$1,"↞","\\twoheadleftarrow",true);defineSymbol$1(math$1,rel$1,"↢","\\leftarrowtail",true);defineSymbol$1(math$1,rel$1,"↫","\\looparrowleft",true);defineSymbol$1(math$1,rel$1,"⇋","\\leftrightharpoons",true);defineSymbol$1(math$1,rel$1,"↶","\\curvearrowleft",true);defineSymbol$1(math$1,rel$1,"↺","\\circlearrowleft",true);defineSymbol$1(math$1,rel$1,"↰","\\Lsh",true);defineSymbol$1(math$1,rel$1,"⇈","\\upuparrows",true);defineSymbol$1(math$1,rel$1,"↿","\\upharpoonleft",true);defineSymbol$1(math$1,rel$1,"⇃","\\downharpoonleft",true);defineSymbol$1(math$1,rel$1,"⊶","\\origof",true);defineSymbol$1(math$1,rel$1,"⊷","\\imageof",true);defineSymbol$1(math$1,rel$1,"⊸","\\multimap",true);defineSymbol$1(math$1,rel$1,"↭","\\leftrightsquigarrow",true);defineSymbol$1(math$1,rel$1,"⇉","\\rightrightarrows",true);defineSymbol$1(math$1,rel$1,"⇄","\\rightleftarrows",true);defineSymbol$1(math$1,rel$1,"↠","\\twoheadrightarrow",true);defineSymbol$1(math$1,rel$1,"↣","\\rightarrowtail",true);defineSymbol$1(math$1,rel$1,"↬","\\looparrowright",true);defineSymbol$1(math$1,rel$1,"↷","\\curvearrowright",true);defineSymbol$1(math$1,rel$1,"↻","\\circlearrowright",true);defineSymbol$1(math$1,rel$1,"↱","\\Rsh",true);defineSymbol$1(math$1,rel$1,"⇊","\\downdownarrows",true);defineSymbol$1(math$1,rel$1,"↾","\\upharpoonright",true);defineSymbol$1(math$1,rel$1,"⇂","\\downharpoonright",true);defineSymbol$1(math$1,rel$1,"⇝","\\rightsquigarrow",true);defineSymbol$1(math$1,rel$1,"⇝","\\leadsto");defineSymbol$1(math$1,rel$1,"⇛","\\Rrightarrow",true);defineSymbol$1(math$1,rel$1,"↾","\\restriction");defineSymbol$1(math$1,textord$1,"‘","`");defineSymbol$1(math$1,textord$1,"$","\\$");defineSymbol$1(text$2,textord$1,"$","\\$");defineSymbol$1(text$2,textord$1,"$","\\textdollar");defineSymbol$1(math$1,textord$1,"¢","\\cent");defineSymbol$1(text$2,textord$1,"¢","\\cent");defineSymbol$1(math$1,textord$1,"%","\\%");defineSymbol$1(text$2,textord$1,"%","\\%");defineSymbol$1(math$1,textord$1,"_","\\_");defineSymbol$1(text$2,textord$1,"_","\\_");defineSymbol$1(text$2,textord$1,"_","\\textunderscore");defineSymbol$1(text$2,textord$1,"␣","\\textvisiblespace",true);defineSymbol$1(math$1,textord$1,"∠","\\angle",true);defineSymbol$1(math$1,textord$1,"∞","\\infty",true);defineSymbol$1(math$1,textord$1,"′","\\prime");defineSymbol$1(math$1,textord$1,"△","\\triangle");defineSymbol$1(text$2,textord$1,"Α","\\Alpha",true);defineSymbol$1(text$2,textord$1,"Β","\\Beta",true);defineSymbol$1(text$2,textord$1,"Γ","\\Gamma",true);defineSymbol$1(text$2,textord$1,"Δ","\\Delta",true);defineSymbol$1(text$2,textord$1,"Ε","\\Epsilon",true);defineSymbol$1(text$2,textord$1,"Ζ","\\Zeta",true);defineSymbol$1(text$2,textord$1,"Η","\\Eta",true);defineSymbol$1(text$2,textord$1,"Θ","\\Theta",true);defineSymbol$1(text$2,textord$1,"Ι","\\Iota",true);defineSymbol$1(text$2,textord$1,"Κ","\\Kappa",true);defineSymbol$1(text$2,textord$1,"Λ","\\Lambda",true);defineSymbol$1(text$2,textord$1,"Μ","\\Mu",true);defineSymbol$1(text$2,textord$1,"Ν","\\Nu",true);defineSymbol$1(text$2,textord$1,"Ξ","\\Xi",true);defineSymbol$1(text$2,textord$1,"Ο","\\Omicron",true);defineSymbol$1(text$2,textord$1,"Π","\\Pi",true);defineSymbol$1(text$2,textord$1,"Ρ","\\Rho",true);defineSymbol$1(text$2,textord$1,"Σ","\\Sigma",true);defineSymbol$1(text$2,textord$1,"Τ","\\Tau",true);defineSymbol$1(text$2,textord$1,"Υ","\\Upsilon",true);defineSymbol$1(text$2,textord$1,"Φ","\\Phi",true);defineSymbol$1(text$2,textord$1,"Χ","\\Chi",true);defineSymbol$1(text$2,textord$1,"Ψ","\\Psi",true);defineSymbol$1(text$2,textord$1,"Ω","\\Omega",true);defineSymbol$1(math$1,mathord$1,"Α","\\Alpha",true);defineSymbol$1(math$1,mathord$1,"Β","\\Beta",true);defineSymbol$1(math$1,mathord$1,"Γ","\\Gamma",true);defineSymbol$1(math$1,mathord$1,"Δ","\\Delta",true);defineSymbol$1(math$1,mathord$1,"Ε","\\Epsilon",true);defineSymbol$1(math$1,mathord$1,"Ζ","\\Zeta",true);defineSymbol$1(math$1,mathord$1,"Η","\\Eta",true);defineSymbol$1(math$1,mathord$1,"Θ","\\Theta",true);defineSymbol$1(math$1,mathord$1,"Ι","\\Iota",true);defineSymbol$1(math$1,mathord$1,"Κ","\\Kappa",true);defineSymbol$1(math$1,mathord$1,"Λ","\\Lambda",true);defineSymbol$1(math$1,mathord$1,"Μ","\\Mu",true);defineSymbol$1(math$1,mathord$1,"Ν","\\Nu",true);defineSymbol$1(math$1,mathord$1,"Ξ","\\Xi",true);defineSymbol$1(math$1,mathord$1,"Ο","\\Omicron",true);defineSymbol$1(math$1,mathord$1,"Π","\\Pi",true);defineSymbol$1(math$1,mathord$1,"Ρ","\\Rho",true);defineSymbol$1(math$1,mathord$1,"Σ","\\Sigma",true);defineSymbol$1(math$1,mathord$1,"Τ","\\Tau",true);defineSymbol$1(math$1,mathord$1,"Υ","\\Upsilon",true);defineSymbol$1(math$1,mathord$1,"Φ","\\Phi",true);defineSymbol$1(math$1,mathord$1,"Χ","\\Chi",true);defineSymbol$1(math$1,mathord$1,"Ψ","\\Psi",true);defineSymbol$1(math$1,mathord$1,"Ω","\\Omega",true);defineSymbol$1(math$1,open$1,"¬","\\neg",true);defineSymbol$1(math$1,open$1,"¬","\\lnot");defineSymbol$1(math$1,textord$1,"⊤","\\top");defineSymbol$1(math$1,textord$1,"⊥","\\bot");defineSymbol$1(math$1,textord$1,"∅","\\emptyset");defineSymbol$1(math$1,textord$1,"ø","\\varnothing");defineSymbol$1(math$1,mathord$1,"α","\\alpha",true);defineSymbol$1(math$1,mathord$1,"β","\\beta",true);defineSymbol$1(math$1,mathord$1,"γ","\\gamma",true);defineSymbol$1(math$1,mathord$1,"δ","\\delta",true);defineSymbol$1(math$1,mathord$1,"ϵ","\\epsilon",true);defineSymbol$1(math$1,mathord$1,"ζ","\\zeta",true);defineSymbol$1(math$1,mathord$1,"η","\\eta",true);defineSymbol$1(math$1,mathord$1,"θ","\\theta",true);defineSymbol$1(math$1,mathord$1,"ι","\\iota",true);defineSymbol$1(math$1,mathord$1,"κ","\\kappa",true);defineSymbol$1(math$1,mathord$1,"λ","\\lambda",true);defineSymbol$1(math$1,mathord$1,"μ","\\mu",true);defineSymbol$1(math$1,mathord$1,"ν","\\nu",true);defineSymbol$1(math$1,mathord$1,"ξ","\\xi",true);defineSymbol$1(math$1,mathord$1,"ο","\\omicron",true);defineSymbol$1(math$1,mathord$1,"π","\\pi",true);defineSymbol$1(math$1,mathord$1,"ρ","\\rho",true);defineSymbol$1(math$1,mathord$1,"σ","\\sigma",true);defineSymbol$1(math$1,mathord$1,"τ","\\tau",true);defineSymbol$1(math$1,mathord$1,"υ","\\upsilon",true);defineSymbol$1(math$1,mathord$1,"ϕ","\\phi",true);defineSymbol$1(math$1,mathord$1,"χ","\\chi",true);defineSymbol$1(math$1,mathord$1,"ψ","\\psi",true);defineSymbol$1(math$1,mathord$1,"ω","\\omega",true);defineSymbol$1(math$1,mathord$1,"ε","\\varepsilon",true);defineSymbol$1(math$1,mathord$1,"ϑ","\\vartheta",true);defineSymbol$1(math$1,mathord$1,"ϖ","\\varpi",true);defineSymbol$1(math$1,mathord$1,"ϱ","\\varrho",true);defineSymbol$1(math$1,mathord$1,"ς","\\varsigma",true);defineSymbol$1(math$1,mathord$1,"φ","\\varphi",true);defineSymbol$1(math$1,mathord$1,"Ϙ","\\Coppa",true);defineSymbol$1(math$1,mathord$1,"ϙ","\\coppa",true);defineSymbol$1(math$1,mathord$1,"ϙ","\\varcoppa",true);defineSymbol$1(math$1,mathord$1,"Ϟ","\\Koppa",true);defineSymbol$1(math$1,mathord$1,"ϟ","\\koppa",true);defineSymbol$1(math$1,mathord$1,"Ϡ","\\Sampi",true);defineSymbol$1(math$1,mathord$1,"ϡ","\\sampi",true);defineSymbol$1(math$1,mathord$1,"Ϛ","\\Stigma",true);defineSymbol$1(math$1,mathord$1,"ϛ","\\stigma",true);defineSymbol$1(math$1,mathord$1,"⫫","\\Bot");defineSymbol$1(math$1,bin$1,"∗","∗",true);defineSymbol$1(math$1,bin$1,"+","+");defineSymbol$1(math$1,bin$1,"*","*");defineSymbol$1(math$1,bin$1,"⁄","⁄");defineSymbol$1(math$1,bin$1,"−","-",true);defineSymbol$1(math$1,bin$1,"⋅","\\cdot",true);defineSymbol$1(math$1,bin$1,"∘","\\circ",true);defineSymbol$1(math$1,bin$1,"÷","\\div",true);defineSymbol$1(math$1,bin$1,"±","\\pm",true);defineSymbol$1(math$1,bin$1,"×","\\times",true);defineSymbol$1(math$1,bin$1,"∩","\\cap",true);defineSymbol$1(math$1,bin$1,"∪","\\cup",true);defineSymbol$1(math$1,bin$1,"∖","\\setminus",true);defineSymbol$1(math$1,bin$1,"∧","\\land");defineSymbol$1(math$1,bin$1,"∨","\\lor");defineSymbol$1(math$1,bin$1,"∧","\\wedge",true);defineSymbol$1(math$1,bin$1,"∨","\\vee",true);defineSymbol$1(math$1,open$1,"⟦","\\llbracket",true);defineSymbol$1(math$1,close$1,"⟧","\\rrbracket",true);defineSymbol$1(math$1,open$1,"⟨","\\langle",true);defineSymbol$1(math$1,open$1,"|","\\lvert");defineSymbol$1(math$1,open$1,"‖","\\lVert");defineSymbol$1(math$1,textord$1,"!","\\oc");defineSymbol$1(math$1,textord$1,"?","\\wn");defineSymbol$1(math$1,textord$1,"↓","\\shpos");defineSymbol$1(math$1,textord$1,"↕","\\shift");defineSymbol$1(math$1,textord$1,"↑","\\shneg");defineSymbol$1(math$1,close$1,"?","?");defineSymbol$1(math$1,close$1,"!","!");defineSymbol$1(math$1,close$1,"‼","‼");defineSymbol$1(math$1,close$1,"⟩","\\rangle",true);defineSymbol$1(math$1,close$1,"|","\\rvert");defineSymbol$1(math$1,close$1,"‖","\\rVert");defineSymbol$1(math$1,open$1,"⦃","\\lBrace",true);defineSymbol$1(math$1,close$1,"⦄","\\rBrace",true);defineSymbol$1(math$1,rel$1,"=","\\equal",true);defineSymbol$1(math$1,rel$1,":",":");defineSymbol$1(math$1,rel$1,"≈","\\approx",true);defineSymbol$1(math$1,rel$1,"≅","\\cong",true);defineSymbol$1(math$1,rel$1,"≥","\\ge");defineSymbol$1(math$1,rel$1,"≥","\\geq",true);defineSymbol$1(math$1,rel$1,"←","\\gets");defineSymbol$1(math$1,rel$1,">","\\gt",true);defineSymbol$1(math$1,rel$1,"∈","\\in",true);defineSymbol$1(math$1,rel$1,"∉","\\notin",true);defineSymbol$1(math$1,rel$1,"","\\@not");defineSymbol$1(math$1,rel$1,"⊂","\\subset",true);defineSymbol$1(math$1,rel$1,"⊃","\\supset",true);defineSymbol$1(math$1,rel$1,"⊆","\\subseteq",true);defineSymbol$1(math$1,rel$1,"⊇","\\supseteq",true);defineSymbol$1(math$1,rel$1,"⊈","\\nsubseteq",true);defineSymbol$1(math$1,rel$1,"⊈","\\nsubseteqq");defineSymbol$1(math$1,rel$1,"⊉","\\nsupseteq",true);defineSymbol$1(math$1,rel$1,"⊉","\\nsupseteqq");defineSymbol$1(math$1,rel$1,"⊨","\\models");defineSymbol$1(math$1,rel$1,"←","\\leftarrow",true);defineSymbol$1(math$1,rel$1,"≤","\\le");defineSymbol$1(math$1,rel$1,"≤","\\leq",true);defineSymbol$1(math$1,rel$1,"<","\\lt",true);defineSymbol$1(math$1,rel$1,"→","\\rightarrow",true);defineSymbol$1(math$1,rel$1,"→","\\to");defineSymbol$1(math$1,rel$1,"≱","\\ngeq",true);defineSymbol$1(math$1,rel$1,"≱","\\ngeqq");defineSymbol$1(math$1,rel$1,"≱","\\ngeqslant");defineSymbol$1(math$1,rel$1,"≰","\\nleq",true);defineSymbol$1(math$1,rel$1,"≰","\\nleqq");defineSymbol$1(math$1,rel$1,"≰","\\nleqslant");defineSymbol$1(math$1,rel$1,"⫫","\\Perp",true);defineSymbol$1(math$1,spacing$1," ","\\ ");defineSymbol$1(math$1,spacing$1," ","\\space");defineSymbol$1(math$1,spacing$1," ","\\nobreakspace");defineSymbol$1(text$2,spacing$1," ","\\ ");defineSymbol$1(text$2,spacing$1," "," ");defineSymbol$1(text$2,spacing$1," ","\\space");defineSymbol$1(text$2,spacing$1," ","\\nobreakspace");defineSymbol$1(math$1,spacing$1,null,"\\nobreak");defineSymbol$1(math$1,spacing$1,null,"\\allowbreak");defineSymbol$1(math$1,punct$1,",",",");defineSymbol$1(text$2,punct$1,":",":");defineSymbol$1(math$1,punct$1,";",";");defineSymbol$1(math$1,bin$1,"⊼","\\barwedge",true);defineSymbol$1(math$1,bin$1,"⊻","\\veebar",true);defineSymbol$1(math$1,bin$1,"⊙","\\odot",true);defineSymbol$1(math$1,bin$1,"⊕","\\oplus",true);defineSymbol$1(math$1,bin$1,"⊗","\\otimes",true);defineSymbol$1(math$1,textord$1,"∂","\\partial",true);defineSymbol$1(math$1,bin$1,"⊘","\\oslash",true);defineSymbol$1(math$1,bin$1,"⊚","\\circledcirc",true);defineSymbol$1(math$1,bin$1,"⊡","\\boxdot",true);defineSymbol$1(math$1,bin$1,"△","\\bigtriangleup");defineSymbol$1(math$1,bin$1,"▽","\\bigtriangledown");defineSymbol$1(math$1,bin$1,"†","\\dagger");defineSymbol$1(math$1,bin$1,"⋄","\\diamond");defineSymbol$1(math$1,bin$1,"⋆","\\star");defineSymbol$1(math$1,bin$1,"◃","\\triangleleft");defineSymbol$1(math$1,bin$1,"▹","\\triangleright");defineSymbol$1(math$1,open$1,"{","\\{");defineSymbol$1(text$2,textord$1,"{","\\{");defineSymbol$1(text$2,textord$1,"{","\\textbraceleft");defineSymbol$1(math$1,close$1,"}","\\}");defineSymbol$1(text$2,textord$1,"}","\\}");defineSymbol$1(text$2,textord$1,"}","\\textbraceright");defineSymbol$1(math$1,open$1,"{","\\lbrace");defineSymbol$1(math$1,close$1,"}","\\rbrace");defineSymbol$1(math$1,open$1,"[","\\lbrack",true);defineSymbol$1(text$2,textord$1,"[","\\lbrack",true);defineSymbol$1(math$1,close$1,"]","\\rbrack",true);defineSymbol$1(text$2,textord$1,"]","\\rbrack",true);defineSymbol$1(math$1,open$1,"(","\\lparen",true);defineSymbol$1(math$1,close$1,")","\\rparen",true);defineSymbol$1(text$2,textord$1,"<","\\textless",true);defineSymbol$1(text$2,textord$1,">","\\textgreater",true);defineSymbol$1(math$1,open$1,"⌊","\\lfloor",true);defineSymbol$1(math$1,close$1,"⌋","\\rfloor",true);defineSymbol$1(math$1,open$1,"⌈","\\lceil",true);defineSymbol$1(math$1,close$1,"⌉","\\rceil",true);defineSymbol$1(math$1,textord$1,"\\","\\backslash");defineSymbol$1(math$1,textord$1,"|","|");defineSymbol$1(math$1,textord$1,"|","\\vert");defineSymbol$1(text$2,textord$1,"|","\\textbar",true);defineSymbol$1(math$1,textord$1,"‖","\\|");defineSymbol$1(math$1,textord$1,"‖","\\Vert");defineSymbol$1(text$2,textord$1,"‖","\\textbardbl");defineSymbol$1(text$2,textord$1,"~","\\textasciitilde");defineSymbol$1(text$2,textord$1,"\\","\\textbackslash");defineSymbol$1(text$2,textord$1,"^","\\textasciicircum");defineSymbol$1(math$1,rel$1,"↑","\\uparrow",true);defineSymbol$1(math$1,rel$1,"⇑","\\Uparrow",true);defineSymbol$1(math$1,rel$1,"↓","\\downarrow",true);defineSymbol$1(math$1,rel$1,"⇓","\\Downarrow",true);defineSymbol$1(math$1,rel$1,"↕","\\updownarrow",true);defineSymbol$1(math$1,rel$1,"⇕","\\Updownarrow",true);defineSymbol$1(math$1,op$1,"∐","\\coprod");defineSymbol$1(math$1,op$1,"⋁","\\bigvee");defineSymbol$1(math$1,op$1,"⋀","\\bigwedge");defineSymbol$1(math$1,op$1,"⨄","\\biguplus");defineSymbol$1(math$1,op$1,"⋂","\\bigcap");defineSymbol$1(math$1,op$1,"⋃","\\bigcup");defineSymbol$1(math$1,op$1,"∫","\\int");defineSymbol$1(math$1,op$1,"∫","\\intop");defineSymbol$1(math$1,op$1,"∬","\\iint");defineSymbol$1(math$1,op$1,"∭","\\iiint");defineSymbol$1(math$1,op$1,"∏","\\prod");defineSymbol$1(math$1,op$1,"∑","\\sum");defineSymbol$1(math$1,op$1,"⨂","\\bigotimes");defineSymbol$1(math$1,op$1,"⨁","\\bigoplus");defineSymbol$1(math$1,op$1,"⨀","\\bigodot");defineSymbol$1(math$1,op$1,"∮","\\oint");defineSymbol$1(math$1,op$1,"∯","\\oiint");defineSymbol$1(math$1,op$1,"∰","\\oiiint");defineSymbol$1(math$1,op$1,"∱","\\intclockwise");defineSymbol$1(math$1,op$1,"∲","\\varointclockwise");defineSymbol$1(math$1,op$1,"⨌","\\iiiint");defineSymbol$1(math$1,op$1,"⨍","\\intbar");defineSymbol$1(math$1,op$1,"⨎","\\intBar");defineSymbol$1(math$1,op$1,"⨏","\\fint");defineSymbol$1(math$1,op$1,"⨒","\\rppolint");defineSymbol$1(math$1,op$1,"⨓","\\scpolint");defineSymbol$1(math$1,op$1,"⨕","\\pointint");defineSymbol$1(math$1,op$1,"⨖","\\sqint");defineSymbol$1(math$1,op$1,"⨗","\\intlarhk");defineSymbol$1(math$1,op$1,"⨘","\\intx");defineSymbol$1(math$1,op$1,"⨙","\\intcap");defineSymbol$1(math$1,op$1,"⨚","\\intcup");defineSymbol$1(math$1,op$1,"⨅","\\bigsqcap");defineSymbol$1(math$1,op$1,"⨆","\\bigsqcup");defineSymbol$1(math$1,op$1,"∫","\\smallint");defineSymbol$1(text$2,inner$1,"…","\\textellipsis");defineSymbol$1(math$1,inner$1,"…","\\mathellipsis");defineSymbol$1(text$2,inner$1,"…","\\ldots",true);defineSymbol$1(math$1,inner$1,"…","\\ldots",true);defineSymbol$1(math$1,inner$1,"⋰","\\iddots",true);defineSymbol$1(math$1,inner$1,"⋯","\\@cdots",true);defineSymbol$1(math$1,inner$1,"⋱","\\ddots",true);defineSymbol$1(math$1,textord$1,"⋮","\\varvdots");defineSymbol$1(math$1,accent$1,"ˊ","\\acute");defineSymbol$1(math$1,accent$1,"`","\\grave");defineSymbol$1(math$1,accent$1,"¨","\\ddot");defineSymbol$1(math$1,accent$1,"…","\\dddot");defineSymbol$1(math$1,accent$1,"….","\\ddddot");defineSymbol$1(math$1,accent$1,"~","\\tilde");defineSymbol$1(math$1,accent$1,"‾","\\bar");defineSymbol$1(math$1,accent$1,"˘","\\breve");defineSymbol$1(math$1,accent$1,"ˇ","\\check");defineSymbol$1(math$1,accent$1,"^","\\hat");defineSymbol$1(math$1,accent$1,"→","\\vec");defineSymbol$1(math$1,accent$1,"˙","\\dot");defineSymbol$1(math$1,accent$1,"˚","\\mathring");defineSymbol$1(math$1,mathord$1,"ı","\\imath",true);defineSymbol$1(math$1,mathord$1,"ȷ","\\jmath",true);defineSymbol$1(math$1,textord$1,"ı","ı");defineSymbol$1(math$1,textord$1,"ȷ","ȷ");defineSymbol$1(text$2,textord$1,"ı","\\i",true);defineSymbol$1(text$2,textord$1,"ȷ","\\j",true);defineSymbol$1(text$2,textord$1,"ß","\\ss",true);defineSymbol$1(text$2,textord$1,"æ","\\ae",true);defineSymbol$1(text$2,textord$1,"œ","\\oe",true);defineSymbol$1(text$2,textord$1,"ø","\\o",true);defineSymbol$1(math$1,mathord$1,"ø","\\o",true);defineSymbol$1(text$2,textord$1,"Æ","\\AE",true);defineSymbol$1(text$2,textord$1,"Œ","\\OE",true);defineSymbol$1(text$2,textord$1,"Ø","\\O",true);defineSymbol$1(math$1,mathord$1,"Ø","\\O",true);defineSymbol$1(text$2,accent$1,"ˊ","\\'");defineSymbol$1(text$2,accent$1,"ˋ","\\`");defineSymbol$1(text$2,accent$1,"ˆ","\\^");defineSymbol$1(text$2,accent$1,"˜","\\~");defineSymbol$1(text$2,accent$1,"ˉ","\\=");defineSymbol$1(text$2,accent$1,"˘","\\u");defineSymbol$1(text$2,accent$1,"˙","\\.");defineSymbol$1(text$2,accent$1,"¸","\\c");defineSymbol$1(text$2,accent$1,"˚","\\r");defineSymbol$1(text$2,accent$1,"ˇ","\\v");defineSymbol$1(text$2,accent$1,"¨",'\\"');defineSymbol$1(text$2,accent$1,"˝","\\H");defineSymbol$1(math$1,accent$1,"ˊ","\\'");defineSymbol$1(math$1,accent$1,"ˋ","\\`");defineSymbol$1(math$1,accent$1,"ˆ","\\^");defineSymbol$1(math$1,accent$1,"˜","\\~");defineSymbol$1(math$1,accent$1,"ˉ","\\=");defineSymbol$1(math$1,accent$1,"˘","\\u");defineSymbol$1(math$1,accent$1,"˙","\\.");defineSymbol$1(math$1,accent$1,"¸","\\c");defineSymbol$1(math$1,accent$1,"˚","\\r");defineSymbol$1(math$1,accent$1,"ˇ","\\v");defineSymbol$1(math$1,accent$1,"¨",'\\"');defineSymbol$1(math$1,accent$1,"˝","\\H");const ligatures$1={"--":true,"---":true,"``":true,"''":true};defineSymbol$1(text$2,textord$1,"–","--",true);defineSymbol$1(text$2,textord$1,"–","\\textendash");defineSymbol$1(text$2,textord$1,"—","---",true);defineSymbol$1(text$2,textord$1,"—","\\textemdash");defineSymbol$1(text$2,textord$1,"‘","`",true);defineSymbol$1(text$2,textord$1,"‘","\\textquoteleft");defineSymbol$1(text$2,textord$1,"’","'",true);defineSymbol$1(text$2,textord$1,"’","\\textquoteright");defineSymbol$1(text$2,textord$1,"“","``",true);defineSymbol$1(text$2,textord$1,"“","\\textquotedblleft");defineSymbol$1(text$2,textord$1,"”","''",true);defineSymbol$1(text$2,textord$1,"”","\\textquotedblright");defineSymbol$1(math$1,textord$1,"°","\\degree",true);defineSymbol$1(text$2,textord$1,"°","\\degree");defineSymbol$1(text$2,textord$1,"°","\\textdegree",true);defineSymbol$1(math$1,textord$1,"£","\\pounds");defineSymbol$1(math$1,textord$1,"£","\\mathsterling",true);defineSymbol$1(text$2,textord$1,"£","\\pounds");defineSymbol$1(text$2,textord$1,"£","\\textsterling",true);defineSymbol$1(math$1,textord$1,"✠","\\maltese");defineSymbol$1(text$2,textord$1,"✠","\\maltese");defineSymbol$1(math$1,textord$1,"€","\\euro",true);defineSymbol$1(text$2,textord$1,"€","\\euro",true);defineSymbol$1(text$2,textord$1,"€","\\texteuro");defineSymbol$1(math$1,textord$1,"©","\\copyright",true);defineSymbol$1(text$2,textord$1,"©","\\textcopyright");defineSymbol$1(math$1,textord$1,"𝛤","\\varGamma");defineSymbol$1(math$1,textord$1,"𝛥","\\varDelta");defineSymbol$1(math$1,textord$1,"𝛩","\\varTheta");defineSymbol$1(math$1,textord$1,"𝛬","\\varLambda");defineSymbol$1(math$1,textord$1,"𝛯","\\varXi");defineSymbol$1(math$1,textord$1,"𝛱","\\varPi");defineSymbol$1(math$1,textord$1,"𝛴","\\varSigma");defineSymbol$1(math$1,textord$1,"𝛶","\\varUpsilon");defineSymbol$1(math$1,textord$1,"𝛷","\\varPhi");defineSymbol$1(math$1,textord$1,"𝛹","\\varPsi");defineSymbol$1(math$1,textord$1,"𝛺","\\varOmega");defineSymbol$1(text$2,textord$1,"𝛤","\\varGamma");defineSymbol$1(text$2,textord$1,"𝛥","\\varDelta");defineSymbol$1(text$2,textord$1,"𝛩","\\varTheta");defineSymbol$1(text$2,textord$1,"𝛬","\\varLambda");defineSymbol$1(text$2,textord$1,"𝛯","\\varXi");defineSymbol$1(text$2,textord$1,"𝛱","\\varPi");defineSymbol$1(text$2,textord$1,"𝛴","\\varSigma");defineSymbol$1(text$2,textord$1,"𝛶","\\varUpsilon");defineSymbol$1(text$2,textord$1,"𝛷","\\varPhi");defineSymbol$1(text$2,textord$1,"𝛹","\\varPsi");defineSymbol$1(text$2,textord$1,"𝛺","\\varOmega");const mathTextSymbols$1='0123456789/@."';for(let e=0;e<mathTextSymbols$1.length;e++){const t=mathTextSymbols$1.charAt(e);defineSymbol$1(math$1,textord$1,t,t)}const textSymbols$1='0123456789!@*()-=+";:?/.,';for(let e=0;e<textSymbols$1.length;e++){const t=textSymbols$1.charAt(e);defineSymbol$1(text$2,textord$1,t,t)}const letters$1="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";for(let e=0;e<letters$1.length;e++){const t=letters$1.charAt(e);defineSymbol$1(math$1,mathord$1,t,t);defineSymbol$1(text$2,textord$1,t,t)}const narrow="ÇÐÞçþℂℍℕℙℚℝℤℎℏℊℋℌℐℑℒℓ℘ℛℜℬℰℱℳℭℨ";for(let e=0;e<narrow.length;e++){const t=narrow.charAt(e);defineSymbol$1(math$1,mathord$1,t,t);defineSymbol$1(text$2,textord$1,t,t)}let wideChar$1="";for(let e=0;e<letters$1.length;e++){wideChar$1=String.fromCharCode(55349,56320+e);defineSymbol$1(math$1,mathord$1,wideChar$1,wideChar$1);defineSymbol$1(text$2,textord$1,wideChar$1,wideChar$1);wideChar$1=String.fromCharCode(55349,56372+e);defineSymbol$1(math$1,mathord$1,wideChar$1,wideChar$1);defineSymbol$1(text$2,textord$1,wideChar$1,wideChar$1);wideChar$1=String.fromCharCode(55349,56424+e);defineSymbol$1(math$1,mathord$1,wideChar$1,wideChar$1);defineSymbol$1(text$2,textord$1,wideChar$1,wideChar$1);wideChar$1=String.fromCharCode(55349,56580+e);defineSymbol$1(math$1,mathord$1,wideChar$1,wideChar$1);defineSymbol$1(text$2,textord$1,wideChar$1,wideChar$1);wideChar$1=String.fromCharCode(55349,56736+e);defineSymbol$1(math$1,mathord$1,wideChar$1,wideChar$1);defineSymbol$1(text$2,textord$1,wideChar$1,wideChar$1);wideChar$1=String.fromCharCode(55349,56788+e);defineSymbol$1(math$1,mathord$1,wideChar$1,wideChar$1);defineSymbol$1(text$2,textord$1,wideChar$1,wideChar$1);wideChar$1=String.fromCharCode(55349,56840+e);defineSymbol$1(math$1,mathord$1,wideChar$1,wideChar$1);defineSymbol$1(text$2,textord$1,wideChar$1,wideChar$1);wideChar$1=String.fromCharCode(55349,56944+e);defineSymbol$1(math$1,mathord$1,wideChar$1,wideChar$1);defineSymbol$1(text$2,textord$1,wideChar$1,wideChar$1);wideChar$1=String.fromCharCode(55349,56632+e);defineSymbol$1(math$1,mathord$1,wideChar$1,wideChar$1);defineSymbol$1(text$2,textord$1,wideChar$1,wideChar$1);const t=letters$1.charAt(e);wideChar$1=String.fromCharCode(55349,56476+e);defineSymbol$1(math$1,mathord$1,t,wideChar$1);defineSymbol$1(text$2,textord$1,t,wideChar$1)}for(let e=0;e<10;e++){wideChar$1=String.fromCharCode(55349,57294+e);defineSymbol$1(math$1,mathord$1,wideChar$1,wideChar$1);defineSymbol$1(text$2,textord$1,wideChar$1,wideChar$1);wideChar$1=String.fromCharCode(55349,57314+e);defineSymbol$1(math$1,mathord$1,wideChar$1,wideChar$1);defineSymbol$1(text$2,textord$1,wideChar$1,wideChar$1);wideChar$1=String.fromCharCode(55349,57324+e);defineSymbol$1(math$1,mathord$1,wideChar$1,wideChar$1);defineSymbol$1(text$2,textord$1,wideChar$1,wideChar$1);wideChar$1=String.fromCharCode(55349,57334+e);defineSymbol$1(math$1,mathord$1,wideChar$1,wideChar$1);defineSymbol$1(text$2,textord$1,wideChar$1,wideChar$1)}function setLineBreaks(e,t,r,n){if(n===undefined&&t!=="none"){const n=e.length-1;for(let a=n;a>=0;a--){const n=e[a];if(n.type==="mstyle"&&n.attributes.mathcolor){const o=n.attributes.mathcolor;const i=setLineBreaks(n.children,t,r,o);if(!(i.type&&i.type!=="mtable")){e.splice(a,1,...i.children)}}}}const a=n?"mstyle":"mrow";const o=[];let i=[];let l=[];let s=0;let m=false;for(let r=0;r<e.length;r++){const u=e[r];if(u.type&&u.type==="mstyle"&&u.attributes.mathcolor){if(l.length>0){i.push(new mathMLTree$1.MathNode(a,l))}i.push(u);l=[];continue}if(u.attributes&&u.attributes.linebreak&&u.attributes.linebreak==="newline"){if(l.length>0){const e=new mathMLTree$1.MathNode(a,l);if(n){e.setAttribute("mathcolor",n)}i.push(new mathMLTree$1.MathNode(a,l))}i.push(u);l=[];const e=new mathMLTree$1.MathNode("mtd",i);o.push(new mathMLTree$1.MathNode("mtr",[e]));i=[];continue}l.push(u);if(u.type&&u.type==="mo"&&t==="="){if(u.children.length===1&&u.children[0].text==="="){s+=1;if(s>1){l.pop();const e=new mathMLTree$1.MathNode(a,l);if(n){e.setAttribute("mathcolor",n)}i.push(e);l=[u]}}}else if(u.type&&u.type==="mo"&&t==="tex"){if(m&&!u.attributes.form){const t=r<e.length-1?e[r+1]:null;let o=true;if(!(t&&t.type==="mtext"&&t.attributes.linebreak&&t.attributes.linebreak==="nobreak")){for(let t=r+1;t<e.length;t++){const n=e[t];if(n.type&&n.type==="mspace"&&!(n.attributes.linebreak&&n.attributes.linebreak==="newline")){l.push(n);r+=1;if(n.attributes&&n.attributes.linebreak&&n.attributes.linebreak==="nobreak"){o=false}}else{break}}}if(o){const e=new mathMLTree$1.MathNode(a,l);if(n){e.setAttribute("mathcolor",n)}i.push(e);l=[]}m=false}const t=u.attributes.form&&u.attributes.form==="prefix";m=!(u.attributes.separator||t)}else{m=true}}if(l.length>0){const e=new mathMLTree$1.MathNode(a,l);if(n){e.setAttribute("mathcolor",n)}i.push(e)}if(o.length>0){const e=new mathMLTree$1.MathNode("mtd",i);const t=new mathMLTree$1.MathNode("mtr",[e]);o.push(t);const n=new mathMLTree$1.MathNode("mtable",o);if(!r){n.setAttribute("columnalign","left");n.setAttribute("rowspacing","0em")}return n}return mathMLTree$1.newDocumentFragment(i)}const makeText$1=function(e,t,r){if(symbols$1[t][e]&&symbols$1[t][e].replace&&e.charCodeAt(0)!==55349&&!(Object.prototype.hasOwnProperty.call(ligatures$1,e)&&r&&(r.fontFamily&&r.fontFamily.slice(4,6)==="tt"||r.font&&r.font.slice(4,6)==="tt"))){e=symbols$1[t][e].replace}return new mathMLTree$1.TextNode(e)};const consolidateText=e=>{if(e.type!=="mrow"){return e}if(e.children.length===0){return e}if(!e.children[0].attributes||e.children[0].type!=="mtext"){return e}const t=e.children[0].attributes.mathvariant||"";const r=new mathMLTree$1.MathNode("mtext",[new mathMLTree$1.TextNode(e.children[0].children[0].text)]);for(let n=1;n<e.children.length;n++){const a=e.children[n].attributes.mathvariant||"";if(e.children[n].type==="mrow"){const a=e.children[n];for(let n=0;n<a.children.length;n++){const o=a.children[n].attributes.mathvariant||"";if(o!==t||a.children[n].type!=="mtext"){return e}else{r.children[0].text+=a.children[n].children[0].text}}}else if(a!==t||e.children[n].type!=="mtext"){return e}else{r.children[0].text+=e.children[n].children[0].text}}if(r.children[0].text.charAt(0)===" "){r.children[0].text=" "+r.children[0].text.slice(1)}const n=r.children[0].text.length;if(n>0&&r.children[0].text.charAt(n-1)===" "){r.children[0].text=r.children[0].text.slice(0,-1)+" "}return r};const makeRow$1=function(e){if(e.length===1){return e[0]}else{return new mathMLTree$1.MathNode("mrow",e)}};const isRel=e=>e.type==="atom"&&e.family==="rel"||e.type==="mclass"&&e.mclass==="mrel";const buildExpression$2=function(e,t,r){if(e.length===1){const n=buildGroup$1$1(e[0],t);if(r&&n instanceof MathNode$1&&n.type==="mo"){n.setAttribute("lspace","0em");n.setAttribute("rspace","0em")}return[n]}const n=[];for(let r=0;r<e.length;r++){const a=buildGroup$1$1(e[r],t);if(r<e.length-1&&isRel(e[r])&&isRel(e[r+1])){a.setAttribute("rspace","0em")}if(r>0&&isRel(e[r])&&isRel(e[r-1])){a.setAttribute("lspace","0em")}n.push(a)}return n};const buildExpressionRow$1=function(e,t,r){return makeRow$1(buildExpression$2(e,t,r))};const buildGroup$1$1=function(e,t){if(!e){return new mathMLTree$1.MathNode("mrow")}if(_mathmlGroupBuilders$1[e.type]){const r=_mathmlGroupBuilders$1[e.type](e,t);return r}else{throw new ParseError$1("Got group of unknown type: '"+e.type+"'")}};const glue$1=e=>new mathMLTree$1.MathNode("mtd",[],[],{padding:"0",width:"50%"});const taggedExpression=(e,t,r,n)=>{t=buildExpressionRow$1(t[0].body,r);t=consolidateText(t);t.classes.push("tml-tag");e=new mathMLTree$1.MathNode("mtd",[e]);const a=[glue$1(),e,glue$1()];if(n){a[0].children.push(t);a[0].style.textAlign="-webkit-left"}else{a[2].children.push(t);a[2].style.textAlign="-webkit-right"}const o=new mathMLTree$1.MathNode("mtr",a,["tml-tageqn"]);const i=new mathMLTree$1.MathNode("mtable",[o]);i.style.width="100%";i.setAttribute("displaystyle","true");return i};function buildMathML$1(e,t,r,n){let a=null;if(e.length===1&&e[0].type==="tag"){a=e[0].tag;e=e[0].body}const o=buildExpression$2(e,r);const i=n.displayMode||n.annotate?"none":n.wrap;const l=o.length===0?null:o[0];let s=o.length===1&&a===null&&l instanceof MathNode$1&&!(l.type==="mstyle"&&l.attributes.mathcolor)?o[0]:setLineBreaks(o,i,n.displayMode);if(a){s=taggedExpression(s,a,r,n.leqno)}if(n.annotate){const e=new mathMLTree$1.MathNode("annotation",[new mathMLTree$1.TextNode(t)]);e.setAttribute("encoding","application/x-tex");s=new mathMLTree$1.MathNode("semantics",[s,e])}if(i!=="none"&&s.children.length>1){const e=[];for(let t=0;t<s.children.length;t++){const r=new mathMLTree$1.MathNode("math",[s.children[t]]);if(n.xml){r.setAttribute("xmlns","http://www.w3.org/1998/Math/MathML")}e.push(r)}return mathMLTree$1.newDocumentFragment(e)}const m=new mathMLTree$1.MathNode("math",[s]);if(n.xml){m.setAttribute("xmlns","http://www.w3.org/1998/Math/MathML")}if(n.displayMode){m.setAttribute("display","block")}return m}const mathmlBuilder$a=(e,t)=>{const r=e.isStretchy?stretchy$1.mathMLnode(e.label):new mathMLTree$1.MathNode("mo",[makeText$1(e.label,e.mode)]);if(e.label==="\\vec"){r.style.transform="scale(0.75) translate(10%, 30%)"}else{r.style.mathStyle="normal";r.style.mathDepth="0"}if(!e.isStretchy){r.setAttribute("stretchy","false")}const n=new mathMLTree$1.MathNode(e.label==="\\c"?"munder":"mover",[buildGroup$1$1(e.base,t),r]);return n};const NON_STRETCHY_ACCENT_REGEX$1=new RegExp(["\\acute","\\grave","\\ddot","\\dddot","\\ddddot","\\tilde","\\bar","\\breve","\\check","\\hat","\\vec","\\dot","\\mathring"].map((e=>`\\${e}`)).join("|"));defineFunction$1({type:"accent",names:["\\acute","\\grave","\\ddot","\\dddot","\\ddddot","\\tilde","\\bar","\\breve","\\check","\\hat","\\vec","\\dot","\\mathring","\\overparen","\\widecheck","\\widehat","\\wideparen","\\widetilde","\\overrightarrow","\\overleftarrow","\\Overrightarrow","\\overleftrightarrow","\\overgroup","\\overleftharpoon","\\overrightharpoon"],props:{numArgs:1},handler:(e,t)=>{const r=normalizeArgument$1(t[0]);const n=!NON_STRETCHY_ACCENT_REGEX$1.test(e.funcName);return{type:"accent",mode:e.parser.mode,label:e.funcName,isStretchy:n,base:r}},mathmlBuilder:mathmlBuilder$a});defineFunction$1({type:"accent",names:["\\'","\\`","\\^","\\~","\\=","\\c","\\u","\\.",'\\"',"\\r","\\H","\\v"],props:{numArgs:1,allowedInText:true,allowedInMath:true,argTypes:["primitive"]},handler:(e,t)=>{const r=normalizeArgument$1(t[0]);const n=e.parser.mode;if(n==="math"&&e.parser.settings.strict){console.log(`Temml parse error: Command ${e.funcName} is invalid in math mode.`)}return{type:"accent",mode:n,label:e.funcName,isStretchy:false,isShifty:true,base:r}},mathmlBuilder:mathmlBuilder$a});defineFunction$1({type:"accentUnder",names:["\\underleftarrow","\\underrightarrow","\\underleftrightarrow","\\undergroup","\\underparen","\\utilde"],props:{numArgs:1},handler:({parser:e,funcName:t},r)=>{const n=r[0];return{type:"accentUnder",mode:e.mode,label:t,base:n}},mathmlBuilder:(e,t)=>{const r=stretchy$1.mathMLnode(e.label);r.style["math-depth"]=0;const n=new mathMLTree$1.MathNode("munder",[buildGroup$1$1(e.base,t),r]);return n}});const ptPerUnit$1={pt:800/803,pc:12*800/803,dd:1238/1157*800/803,cc:14856/1157*800/803,nd:685/642*800/803,nc:1370/107*800/803,sp:1/65536*800/803,mm:25.4/72,cm:2.54/72,in:1/72,px:96/72};const validUnits=["em","ex","mu","pt","mm","cm","in","px","bp","pc","dd","cc","nd","nc","sp"];const validUnit$1=function(e){if(typeof e!=="string"){e=e.unit}return validUnits.indexOf(e)>-1};const emScale=e=>{const t=Math.max(e-1,0);return[1,.7,.5][t]};const calculateSize$1=function(e,t){let r=e.number;if(t.maxSize[0]<0&&r>0){return{number:0,unit:"em"}}const n=e.unit;switch(n){case"mm":case"cm":case"in":case"px":{const e=r*ptPerUnit$1[n];if(e>t.maxSize[1]){return{number:t.maxSize[1],unit:"pt"}}return{number:r,unit:n}}case"em":case"ex":{if(n==="ex"){r*=.431}r=Math.min(r/emScale(t.level),t.maxSize[0]);return{number:utils$1.round(r),unit:"em"}}case"bp":{if(r>t.maxSize[1]){r=t.maxSize[1]}return{number:r,unit:"pt"}}case"pt":case"pc":case"dd":case"cc":case"nd":case"nc":case"sp":{r=Math.min(r*ptPerUnit$1[n],t.maxSize[1]);return{number:utils$1.round(r),unit:"pt"}}case"mu":{r=Math.min(r/18,t.maxSize[0]);return{number:utils$1.round(r),unit:"em"}}default:throw new ParseError$1("Invalid unit: '"+n+"'")}};const padding$2=e=>{const t=new mathMLTree$1.MathNode("mspace");t.setAttribute("width",e+"em");return t};const paddedNode$1=(e,t=.3,r=0)=>{if(e==null&&r===0){return padding$2(t)}const n=e?[e]:[];if(t!==0){n.unshift(padding$2(t))}if(r>0){n.push(padding$2(r))}return new mathMLTree$1.MathNode("mrow",n)};const labelSize=(e,t)=>(e/emScale(t)).toFixed(4);const munderoverNode=(e,t,r,n)=>{const a=stretchy$1.mathMLnode(e);const o=e.slice(1,3)==="eq";const i=e.charAt(1)==="x"?"1.75":e.slice(2,4)==="cd"?"3.0":o?"1.0":"2.0";a.setAttribute("minsize",String(i)+"em");a.setAttribute("lspace","0");a.setAttribute("rspace",o?"0.5em":"0");const l=n.withLevel(n.level<2?2:3);const s=labelSize(i,l.level);const m=labelSize(o?0:.3,l.level);const u=labelSize(o?0:.3,l.level);const c=t&&t.body&&(t.body.body||t.body.length>0)?paddedNode$1(buildGroup$1$1(t,l),m,u):paddedNode$1(null,s,0);const d=r&&r.body&&(r.body.body||r.body.length>0)?paddedNode$1(buildGroup$1$1(r,l),m,u):paddedNode$1(null,s,0);const p=new mathMLTree$1.MathNode("munderover",[a,d,c]);if(i==="3.0"){p.style.height="1em"}return p};defineFunction$1({type:"xArrow",names:["\\xleftarrow","\\xrightarrow","\\xLeftarrow","\\xRightarrow","\\xleftrightarrow","\\xLeftrightarrow","\\xhookleftarrow","\\xhookrightarrow","\\xmapsto","\\xrightharpoondown","\\xrightharpoonup","\\xleftharpoondown","\\xleftharpoonup","\\xlongequal","\\xtwoheadrightarrow","\\xtwoheadleftarrow","\\yields","\\yieldsLeft","\\mesomerism","\\longrightharpoonup","\\longleftharpoondown","\\\\cdrightarrow","\\\\cdleftarrow","\\\\cdlongequal"],props:{numArgs:1,numOptionalArgs:1},handler({parser:e,funcName:t},r,n){return{type:"xArrow",mode:e.mode,name:t,body:r[0],below:n[0]}},mathmlBuilder(e,t){const r=munderoverNode(e.name,e.body,e.below,t);const n=[r];n.unshift(padding$2(.2778));n.push(padding$2(.2778));return new mathMLTree$1.MathNode("mrow",n)}});const arrowComponent={"\\xtofrom":["\\xrightarrow","\\xleftarrow"],"\\xleftrightharpoons":["\\xleftharpoonup","\\xrightharpoondown"],"\\xrightleftharpoons":["\\xrightharpoonup","\\xleftharpoondown"],"\\yieldsLeftRight":["\\yields","\\yieldsLeft"],"\\equilibrium":["\\longrightharpoonup","\\longleftharpoondown"],"\\equilibriumRight":["\\longrightharpoonup","\\eqleftharpoondown"],"\\equilibriumLeft":["\\eqrightharpoonup","\\longleftharpoondown"]};defineFunction$1({type:"stackedArrow",names:["\\xtofrom","\\xleftrightharpoons","\\xrightleftharpoons","\\yieldsLeftRight","\\equilibrium","\\equilibriumRight","\\equilibriumLeft"],props:{numArgs:1,numOptionalArgs:1},handler({parser:e,funcName:t},r,n){const a=r[0]?{type:"hphantom",mode:e.mode,body:r[0]}:null;const o=n[0]?{type:"hphantom",mode:e.mode,body:n[0]}:null;return{type:"stackedArrow",mode:e.mode,name:t,body:r[0],upperArrowBelow:o,lowerArrowBody:a,below:n[0]}},mathmlBuilder(e,t){const r=arrowComponent[e.name][0];const n=arrowComponent[e.name][1];const a=munderoverNode(r,e.body,e.upperArrowBelow,t);const o=munderoverNode(n,e.lowerArrowBody,e.below,t);let i;const l=new mathMLTree$1.MathNode("mpadded",[a]);l.setAttribute("voffset","0.3em");l.setAttribute("height","+0.3em");l.setAttribute("depth","-0.3em");if(e.name==="\\equilibriumLeft"){const e=new mathMLTree$1.MathNode("mpadded",[o]);e.setAttribute("width","0.5em");i=new mathMLTree$1.MathNode("mpadded",[padding$2(.2778),e,l,padding$2(.2778)])}else{l.setAttribute("width",e.name==="\\equilibriumRight"?"0.5em":"0");i=new mathMLTree$1.MathNode("mpadded",[padding$2(.2778),l,o,padding$2(.2778)])}i.setAttribute("voffset","-0.18em");i.setAttribute("height","-0.18em");i.setAttribute("depth","+0.18em");return i}});function assertNodeType$1(e,t){if(!e||e.type!==t){throw new Error(`Expected node of type ${t}, but got `+(e?`node of type ${e.type}`:String(e)))}return e}function assertSymbolNodeType$1(e){const t=checkSymbolNodeType$1(e);if(!t){throw new Error(`Expected node of symbol group type, but got `+(e?`node of type ${e.type}`:String(e)))}return t}function checkSymbolNodeType$1(e){if(e&&(e.type==="atom"||Object.prototype.hasOwnProperty.call(NON_ATOMS$1,e.type))){return e}return null}const cdArrowFunctionName$1={">":"\\\\cdrightarrow","<":"\\\\cdleftarrow","=":"\\\\cdlongequal",A:"\\uparrow",V:"\\downarrow","|":"\\Vert",".":"no arrow"};const newCell$1=()=>({type:"styling",body:[],mode:"math",scriptLevel:"display"});const isStartOfArrow$1=e=>e.type==="textord"&&e.text==="@";const isLabelEnd$1=(e,t)=>(e.type==="mathord"||e.type==="atom")&&e.text===t;function cdArrow$1(e,t,r){const n=cdArrowFunctionName$1[e];switch(n){case"\\\\cdrightarrow":case"\\\\cdleftarrow":return r.callFunction(n,[t[0]],[t[1]]);case"\\uparrow":case"\\downarrow":{const e=r.callFunction("\\\\cdleft",[t[0]],[]);const a={type:"atom",text:n,mode:"math",family:"rel"};const o=r.callFunction("\\Big",[a],[]);const i=r.callFunction("\\\\cdright",[t[1]],[]);const l={type:"ordgroup",mode:"math",body:[e,o,i]};return r.callFunction("\\\\cdparent",[l],[])}case"\\\\cdlongequal":return r.callFunction("\\\\cdlongequal",[],[]);case"\\Vert":{const e={type:"textord",text:"\\Vert",mode:"math"};return r.callFunction("\\Big",[e],[])}default:return{type:"textord",text:" ",mode:"math"}}}function parseCD$1(e){const t=[];e.gullet.beginGroup();e.gullet.macros.set("\\cr","\\\\\\relax");e.gullet.beginGroup();while(true){t.push(e.parseExpression(false,"\\\\"));e.gullet.endGroup();e.gullet.beginGroup();const r=e.fetch().text;if(r==="&"||r==="\\\\"){e.consume()}else if(r==="\\end"){if(t[t.length-1].length===0){t.pop()}break}else{throw new ParseError$1("Expected \\\\ or \\cr or \\end",e.nextToken)}}let r=[];const n=[r];for(let a=0;a<t.length;a++){const o=t[a];let i=newCell$1();for(let t=0;t<o.length;t++){if(!isStartOfArrow$1(o[t])){i.body.push(o[t])}else{r.push(i);t+=1;const n=assertSymbolNodeType$1(o[t]).text;const a=new Array(2);a[0]={type:"ordgroup",mode:"math",body:[]};a[1]={type:"ordgroup",mode:"math",body:[]};if("=|.".indexOf(n)>-1);else if("<>AV".indexOf(n)>-1){for(let e=0;e<2;e++){let r=true;for(let i=t+1;i<o.length;i++){if(isLabelEnd$1(o[i],n)){r=false;t=i;break}if(isStartOfArrow$1(o[i])){throw new ParseError$1("Missing a "+n+" character to complete a CD arrow.",o[i])}a[e].body.push(o[i])}if(r){throw new ParseError$1("Missing a "+n+" character to complete a CD arrow.",o[t])}}}else{throw new ParseError$1(`Expected one of "<>AV=|." after @.`)}const l=cdArrow$1(n,a,e);r.push(l);i=newCell$1()}}if(a%2===0){r.push(i)}else{r.shift()}r=[];n.push(r)}n.pop();e.gullet.endGroup();e.gullet.endGroup();return{type:"array",mode:"math",body:n,envClasses:["jot","cd"],cols:[],hLinesBeforeRow:new Array(n.length+1).fill([])}}defineFunction$1({type:"cdlabel",names:["\\\\cdleft","\\\\cdright"],props:{numArgs:1},handler({parser:e,funcName:t},r){return{type:"cdlabel",mode:e.mode,side:t.slice(4),label:r[0]}},mathmlBuilder(e,t){let r=new mathMLTree$1.MathNode("mrow",[buildGroup$1$1(e.label,t)]);r=new mathMLTree$1.MathNode("mpadded",[r]);r.setAttribute("width","0");if(e.side==="left"){r.setAttribute("lspace","-1width")}r.setAttribute("voffset","0.7em");r=new mathMLTree$1.MathNode("mstyle",[r]);r.setAttribute("displaystyle","false");r.setAttribute("scriptlevel","1");return r}});defineFunction$1({type:"cdlabelparent",names:["\\\\cdparent"],props:{numArgs:1},handler({parser:e},t){return{type:"cdlabelparent",mode:e.mode,fragment:t[0]}},mathmlBuilder(e,t){return new mathMLTree$1.MathNode("mrow",[buildGroup$1$1(e.fragment,t)])}});defineFunction$1({type:"textord",names:["\\@char"],props:{numArgs:1,allowedInText:true},handler({parser:e,token:t},r){const n=assertNodeType$1(r[0],"ordgroup");const a=n.body;let o="";for(let e=0;e<a.length;e++){const t=assertNodeType$1(a[e],"textord");o+=t.text}const i=parseInt(o);if(isNaN(i)){throw new ParseError$1(`\\@char has non-numeric argument ${o}`,t)}return{type:"textord",mode:e.mode,text:String.fromCodePoint(i)}}});const htmlRegEx=/^(#[a-f0-9]{3}|#?[a-f0-9]{6})$/i;const htmlOrNameRegEx=/^(#[a-f0-9]{3}|#?[a-f0-9]{6}|[a-z]+)$/i;const RGBregEx=/^ *\d{1,3} *(?:, *\d{1,3} *){2}$/;const rgbRegEx=/^ *[10](?:\.\d*)? *(?:, *[10](?:\.\d*)? *){2}$/;const xcolorHtmlRegEx=/^[a-f0-9]{6}$/i;const toHex=e=>{let t=e.toString(16);if(t.length===1){t="0"+t}return t};const xcolors=JSON.parse(`{\n  "Apricot": "#ffb484",\n  "Aquamarine": "#08b4bc",\n  "Bittersweet": "#c84c14",\n  "blue": "#0000FF",\n  "Blue": "#303494",\n  "BlueGreen": "#08b4bc",\n  "BlueViolet": "#503c94",\n  "BrickRed": "#b8341c",\n  "brown": "#BF8040",\n  "Brown": "#802404",\n  "BurntOrange": "#f8941c",\n  "CadetBlue": "#78749c",\n  "CarnationPink": "#f884b4",\n  "Cerulean": "#08a4e4",\n  "CornflowerBlue": "#40ace4",\n  "cyan": "#00FFFF",\n  "Cyan": "#08acec",\n  "Dandelion": "#ffbc44",\n  "darkgray": "#404040",\n  "DarkOrchid": "#a8548c",\n  "Emerald": "#08ac9c",\n  "ForestGreen": "#089c54",\n  "Fuchsia": "#90348c",\n  "Goldenrod": "#ffdc44",\n  "gray": "#808080",\n  "Gray": "#98949c",\n  "green": "#00FF00",\n  "Green": "#08a44c",\n  "GreenYellow": "#e0e474",\n  "JungleGreen": "#08ac9c",\n  "Lavender": "#f89cc4",\n  "lightgray": "#c0c0c0",\n  "lime": "#BFFF00",\n  "LimeGreen": "#90c43c",\n  "magenta": "#FF00FF",\n  "Magenta": "#f0048c",\n  "Mahogany": "#b0341c",\n  "Maroon": "#b03434",\n  "Melon": "#f89c7c",\n  "MidnightBlue": "#086494",\n  "Mulberry": "#b03c94",\n  "NavyBlue": "#086cbc",\n  "olive": "#7F7F00",\n  "OliveGreen": "#407c34",\n  "orange": "#FF8000",\n  "Orange": "#f8843c",\n  "OrangeRed": "#f0145c",\n  "Orchid": "#b074ac",\n  "Peach": "#f8945c",\n  "Periwinkle": "#8074bc",\n  "PineGreen": "#088c74",\n  "pink": "#ff7f7f",\n  "Plum": "#98248c",\n  "ProcessBlue": "#08b4ec",\n  "purple": "#BF0040",\n  "Purple": "#a0449c",\n  "RawSienna": "#983c04",\n  "red": "#ff0000",\n  "Red": "#f01c24",\n  "RedOrange": "#f86434",\n  "RedViolet": "#a0246c",\n  "Rhodamine": "#f0549c",\n  "Royallue": "#0874bc",\n  "RoyalPurple": "#683c9c",\n  "RubineRed": "#f0047c",\n  "Salmon": "#f8948c",\n  "SeaGreen": "#30bc9c",\n  "Sepia": "#701404",\n  "SkyBlue": "#48c4dc",\n  "SpringGreen": "#c8dc64",\n  "Tan": "#e09c74",\n  "teal": "#007F7F",\n  "TealBlue": "#08acb4",\n  "Thistle": "#d884b4",\n  "Turquoise": "#08b4cc",\n  "violet": "#800080",\n  "Violet": "#60449c",\n  "VioletRed": "#f054a4",\n  "WildStrawberry": "#f0246c",\n  "yellow": "#FFFF00",\n  "Yellow": "#fff404",\n  "YellowGreen": "#98cc6c",\n  "YellowOrange": "#ffa41c"\n}`);const colorFromSpec=(e,t)=>{let r="";if(e==="HTML"){if(!htmlRegEx.test(t)){throw new ParseError$1("Invalid HTML input.")}r=t}else if(e==="RGB"){if(!RGBregEx.test(t)){throw new ParseError$1("Invalid RGB input.")}t.split(",").map((e=>{r+=toHex(Number(e.trim()))}))}else{if(!rgbRegEx.test(t)){throw new ParseError$1("Invalid rbg input.")}t.split(",").map((e=>{const t=Number(e.trim());if(t>1){throw new ParseError$1("Color rgb input must be < 1.")}r+=toHex(t*255)}))}if(r.charAt(0)!=="#"){r="#"+r}return r};const validateColor=(e,t,r)=>{const n=`\\\\color@${e}`;const a=htmlOrNameRegEx.exec(e);if(!a){throw new ParseError$1("Invalid color: '"+e+"'",r)}if(xcolorHtmlRegEx.test(e)){return"#"+e}else if(e.charAt(0)==="#"){return e}else if(t.has(n)){e=t.get(n).tokens[0].text}else if(xcolors[e]){e=xcolors[e]}return e};const mathmlBuilder$9$1=(e,t)=>{const r=buildExpression$2(e.body,t.withColor(e.color));const n=wrapWithMstyle(r);n.setAttribute("mathcolor",e.color);return n};defineFunction$1({type:"color",names:["\\textcolor"],props:{numArgs:2,numOptionalArgs:1,allowedInText:true,argTypes:["raw","raw","original"]},handler({parser:e,token:t},r,n){const a=n[0]&&assertNodeType$1(n[0],"raw").string;let o="";if(a){const e=assertNodeType$1(r[0],"raw").string;o=colorFromSpec(a,e)}else{o=validateColor(assertNodeType$1(r[0],"raw").string,e.gullet.macros,t)}const i=r[1];return{type:"color",mode:e.mode,color:o,body:ordargument$1(i)}},mathmlBuilder:mathmlBuilder$9$1});defineFunction$1({type:"color",names:["\\color"],props:{numArgs:1,numOptionalArgs:1,allowedInText:true,argTypes:["raw","raw"]},handler({parser:e,token:t},r,n){const a=n[0]&&assertNodeType$1(n[0],"raw").string;let o="";if(a){const e=assertNodeType$1(r[0],"raw").string;o=colorFromSpec(a,e)}else{o=validateColor(assertNodeType$1(r[0],"raw").string,e.gullet.macros,t)}e.gullet.macros.set("\\current@color",o);const i=e.parseExpression(true,"\\color");return{type:"color",mode:e.mode,color:o,body:i}},mathmlBuilder:mathmlBuilder$9$1});defineFunction$1({type:"color",names:["\\definecolor"],props:{numArgs:3,allowedInText:true,argTypes:["raw","raw","raw"]},handler({parser:e,funcName:t,token:r},n){const a=assertNodeType$1(n[0],"raw").string;if(!/^[A-Za-z]+$/.test(a)){throw new ParseError$1("Color name must be latin letters.",r)}const o=assertNodeType$1(n[1],"raw").string;if(!["HTML","RGB","rgb"].includes(o)){throw new ParseError$1("Color model must be HTML, RGB, or rgb.",r)}const i=assertNodeType$1(n[2],"raw").string;const l=colorFromSpec(o,i);e.gullet.macros.set(`\\\\color@${a}`,{tokens:[{text:l}],numArgs:0});return{type:"internal",mode:e.mode}}});defineFunction$1({type:"cr",names:["\\\\"],props:{numArgs:0,numOptionalArgs:0,allowedInText:true},handler({parser:e},t,r){const n=e.gullet.future().text==="["?e.parseSizeGroup(true):null;const a=!e.settings.displayMode;return{type:"cr",mode:e.mode,newLine:a,size:n&&assertNodeType$1(n,"size").value}},mathmlBuilder(e,t){const r=new mathMLTree$1.MathNode("mo");if(e.newLine){r.setAttribute("linebreak","newline");if(e.size){const n=calculateSize$1(e.size,t);r.setAttribute("height",n.number+n.unit)}}return r}});const globalMap$1={"\\global":"\\global","\\long":"\\\\globallong","\\\\globallong":"\\\\globallong","\\def":"\\gdef","\\gdef":"\\gdef","\\edef":"\\xdef","\\xdef":"\\xdef","\\let":"\\\\globallet","\\futurelet":"\\\\globalfuture"};const checkControlSequence$1=e=>{const t=e.text;if(/^(?:[\\{}$&#^_]|EOF)$/.test(t)){throw new ParseError$1("Expected a control sequence",e)}return t};const getRHS$1=e=>{let t=e.gullet.popToken();if(t.text==="="){t=e.gullet.popToken();if(t.text===" "){t=e.gullet.popToken()}}return t};const letCommand$1=(e,t,r,n)=>{let a=e.gullet.macros.get(r.text);if(a==null){r.noexpand=true;a={tokens:[r],numArgs:0,unexpandable:!e.gullet.isExpandable(r.text)}}e.gullet.macros.set(t,a,n)};defineFunction$1({type:"internal",names:["\\global","\\long","\\\\globallong"],props:{numArgs:0,allowedInText:true},handler({parser:e,funcName:t}){e.consumeSpaces();const r=e.fetch();if(globalMap$1[r.text]){if(t==="\\global"||t==="\\\\globallong"){r.text=globalMap$1[r.text]}return assertNodeType$1(e.parseFunction(),"internal")}throw new ParseError$1(`Invalid token after macro prefix`,r)}});defineFunction$1({type:"internal",names:["\\def","\\gdef","\\edef","\\xdef"],props:{numArgs:0,allowedInText:true,primitive:true},handler({parser:e,funcName:t}){let r=e.gullet.popToken();const n=r.text;if(/^(?:[\\{}$&#^_]|EOF)$/.test(n)){throw new ParseError$1("Expected a control sequence",r)}let a=0;let o;const i=[[]];while(e.gullet.future().text!=="{"){r=e.gullet.popToken();if(r.text==="#"){if(e.gullet.future().text==="{"){o=e.gullet.future();i[a].push("{");break}r=e.gullet.popToken();if(!/^[1-9]$/.test(r.text)){throw new ParseError$1(`Invalid argument number "${r.text}"`)}if(parseInt(r.text)!==a+1){throw new ParseError$1(`Argument number "${r.text}" out of order`)}a++;i.push([])}else if(r.text==="EOF"){throw new ParseError$1("Expected a macro definition")}else{i[a].push(r.text)}}let{tokens:l}=e.gullet.consumeArg();if(o){l.unshift(o)}if(t==="\\edef"||t==="\\xdef"){l=e.gullet.expandTokens(l);l.reverse()}e.gullet.macros.set(n,{tokens:l,numArgs:a,delimiters:i},t===globalMap$1[t]);return{type:"internal",mode:e.mode}}});defineFunction$1({type:"internal",names:["\\let","\\\\globallet"],props:{numArgs:0,allowedInText:true,primitive:true},handler({parser:e,funcName:t}){const r=checkControlSequence$1(e.gullet.popToken());e.gullet.consumeSpaces();const n=getRHS$1(e);letCommand$1(e,r,n,t==="\\\\globallet");return{type:"internal",mode:e.mode}}});defineFunction$1({type:"internal",names:["\\futurelet","\\\\globalfuture"],props:{numArgs:0,allowedInText:true,primitive:true},handler({parser:e,funcName:t}){const r=checkControlSequence$1(e.gullet.popToken());const n=e.gullet.popToken();const a=e.gullet.popToken();letCommand$1(e,r,a,t==="\\\\globalfuture");e.gullet.pushToken(a);e.gullet.pushToken(n);return{type:"internal",mode:e.mode}}});defineFunction$1({type:"internal",names:["\\newcommand","\\renewcommand","\\providecommand"],props:{numArgs:0,allowedInText:true,primitive:true},handler({parser:e,funcName:t}){let r="";const n=e.gullet.popToken();if(n.text==="{"){r=checkControlSequence$1(e.gullet.popToken());e.gullet.popToken()}else{r=checkControlSequence$1(n)}const a=e.gullet.isDefined(r);if(a&&t==="\\newcommand"){throw new ParseError$1(`\\newcommand{${r}} attempting to redefine ${r}; use \\renewcommand`)}if(!a&&t==="\\renewcommand"){throw new ParseError$1(`\\renewcommand{${r}} when command ${r} does not yet exist; use \\newcommand`)}let o=0;if(e.gullet.future().text==="["){let t=e.gullet.popToken();t=e.gullet.popToken();if(!/^[0-9]$/.test(t.text)){throw new ParseError$1(`Invalid number of arguments: "${t.text}"`)}o=parseInt(t.text);t=e.gullet.popToken();if(t.text!=="]"){throw new ParseError$1(`Invalid argument "${t.text}"`)}}const{tokens:i}=e.gullet.consumeArg();e.gullet.macros.set(r,{tokens:i,numArgs:o},!e.settings.strict);return{type:"internal",mode:e.mode}}});const delimiterSizes$1={"\\bigl":{mclass:"mopen",size:1},"\\Bigl":{mclass:"mopen",size:2},"\\biggl":{mclass:"mopen",size:3},"\\Biggl":{mclass:"mopen",size:4},"\\bigr":{mclass:"mclose",size:1},"\\Bigr":{mclass:"mclose",size:2},"\\biggr":{mclass:"mclose",size:3},"\\Biggr":{mclass:"mclose",size:4},"\\bigm":{mclass:"mrel",size:1},"\\Bigm":{mclass:"mrel",size:2},"\\biggm":{mclass:"mrel",size:3},"\\Biggm":{mclass:"mrel",size:4},"\\big":{mclass:"mord",size:1},"\\Big":{mclass:"mord",size:2},"\\bigg":{mclass:"mord",size:3},"\\Bigg":{mclass:"mord",size:4}};const delimiters$1=["(","\\lparen",")","\\rparen","[","\\lbrack","]","\\rbrack","\\{","\\lbrace","\\}","\\rbrace","\\lfloor","\\rfloor","⌊","⌋","\\lceil","\\rceil","⌈","⌉","<",">","\\langle","⟨","\\rangle","⟩","\\lt","\\gt","\\lvert","\\rvert","\\lVert","\\rVert","\\lgroup","\\rgroup","⟮","⟯","\\lmoustache","\\rmoustache","⎰","⎱","\\llbracket","\\rrbracket","⟦","⟦","\\lBrace","\\rBrace","⦃","⦄","/","\\backslash","|","\\vert","\\|","\\Vert","\\uparrow","\\Uparrow","\\downarrow","\\Downarrow","\\updownarrow","\\Updownarrow","."];const sizeToMaxHeight$1=[0,1.2,1.8,2.4,3];function checkDelimiter$1(e,t){if(e.type==="ordgroup"&&e.body.length===1&&e.body[0].text==="⁄"){e={type:"textord",text:"/",mode:"math"}}const r=checkSymbolNodeType$1(e);if(r&&delimiters$1.includes(r.text)){if(["<","\\lt"].includes(r.text)){r.text="⟨"}if([">","\\gt"].includes(r.text)){r.text="⟩"}if(r.text==="/"){r.text="∕"}if(r.text==="\\backslash"){r.text="∖"}return r}else if(r){throw new ParseError$1(`Invalid delimiter '${r.text}' after '${t.funcName}'`,e)}else{throw new ParseError$1(`Invalid delimiter type '${e.type}'`,e)}}defineFunction$1({type:"delimsizing",names:["\\bigl","\\Bigl","\\biggl","\\Biggl","\\bigr","\\Bigr","\\biggr","\\Biggr","\\bigm","\\Bigm","\\biggm","\\Biggm","\\big","\\Big","\\bigg","\\Bigg"],props:{numArgs:1,argTypes:["primitive"]},handler:(e,t)=>{const r=checkDelimiter$1(t[0],e);return{type:"delimsizing",mode:e.parser.mode,size:delimiterSizes$1[e.funcName].size,mclass:delimiterSizes$1[e.funcName].mclass,delim:r.text}},mathmlBuilder:e=>{const t=[];if(e.delim==="."){e.delim=""}t.push(makeText$1(e.delim,e.mode));const r=new mathMLTree$1.MathNode("mo",t);if(e.mclass==="mopen"||e.mclass==="mclose"){r.setAttribute("fence","true")}else{r.setAttribute("fence","false")}if(e.delim==="∖"||e.delim.indexOf("arrow")>-1){r.setAttribute("stretchy","true")}r.setAttribute("symmetric","true");r.setAttribute("minsize",sizeToMaxHeight$1[e.size]+"em");return r}});function assertParsed$1(e){if(!e.body){throw new Error("Bug: The leftright ParseNode wasn't fully parsed.")}}defineFunction$1({type:"leftright-right",names:["\\right"],props:{numArgs:1,argTypes:["primitive"]},handler:(e,t)=>{const r=e.parser.gullet.macros.get("\\current@color");if(r&&typeof r!=="string"){throw new ParseError$1("\\current@color set to non-string in \\right")}return{type:"leftright-right",mode:e.parser.mode,delim:checkDelimiter$1(t[0],e).text,color:r}}});defineFunction$1({type:"leftright",names:["\\left"],props:{numArgs:1,argTypes:["primitive"]},handler:(e,t)=>{const r=checkDelimiter$1(t[0],e);const n=e.parser;++n.leftrightDepth;const a=n.parseExpression(false);--n.leftrightDepth;n.expect("\\right",false);const o=assertNodeType$1(n.parseFunction(),"leftright-right");return{type:"leftright",mode:n.mode,body:a,left:r.text,right:o.delim,rightColor:o.color}},mathmlBuilder:(e,t)=>{assertParsed$1(e);const r=buildExpression$2(e.body,t);if(e.left==="."){e.left=""}const n=new mathMLTree$1.MathNode("mo",[makeText$1(e.left,e.mode)]);n.setAttribute("fence","true");n.setAttribute("form","prefix");if(e.left==="∖"||e.left.indexOf("arrow")>-1){n.setAttribute("stretchy","true")}r.unshift(n);if(e.right==="."){e.right=""}const a=new mathMLTree$1.MathNode("mo",[makeText$1(e.right,e.mode)]);a.setAttribute("fence","true");a.setAttribute("form","postfix");if(e.right==="∖"||e.right.indexOf("arrow")>-1){a.setAttribute("stretchy","true")}if(e.rightColor){a.setAttribute("mathcolor",e.rightColor)}r.push(a);return makeRow$1(r)}});defineFunction$1({type:"middle",names:["\\middle"],props:{numArgs:1,argTypes:["primitive"]},handler:(e,t)=>{const r=checkDelimiter$1(t[0],e);if(!e.parser.leftrightDepth){throw new ParseError$1("\\middle without preceding \\left",r)}return{type:"middle",mode:e.parser.mode,delim:r.text}},mathmlBuilder:(e,t)=>{const r=makeText$1(e.delim,e.mode);const n=new mathMLTree$1.MathNode("mo",[r]);n.setAttribute("fence","true");if(e.delim.indexOf("arrow")>-1){n.setAttribute("stretchy","true")}n.setAttribute("form","prefix");n.setAttribute("lspace","0.05em");n.setAttribute("rspace","0.05em");return n}});const padding$1=e=>{const t=new mathMLTree$1.MathNode("mspace");t.setAttribute("width","3pt");return t};const mathmlBuilder$8$1=(e,t)=>{let r;if(e.label.indexOf("colorbox")>-1){r=new mathMLTree$1.MathNode("mpadded",[padding$1(),buildGroup$1$1(e.body,t),padding$1()])}else{r=new mathMLTree$1.MathNode("menclose",[buildGroup$1$1(e.body,t)])}switch(e.label){case"\\overline":r.setAttribute("notation","top");r.style.padding="0.1em 0 0 0";r.style.borderTop="0.065em solid";break;case"\\underline":r.setAttribute("notation","bottom");r.style.padding="0 0 0.1em 0";r.style.borderBottom="0.065em solid";break;case"\\cancel":r.setAttribute("notation","updiagonalstrike");r.classes.push("cancel");break;case"\\bcancel":r.setAttribute("notation","downdiagonalstrike");r.classes.push("bcancel");break;case"\\angl":r.setAttribute("notation","actuarial");r.style.padding="0.03889em 0.03889em 0 0.03889em";r.style.borderTop="0.049em solid";r.style.borderRight="0.049em solid";r.style.marginRight="0.03889em";break;case"\\sout":r.setAttribute("notation","horizontalstrike");r.style["text-decoration"]="line-through 0.08em solid";break;case"\\fbox":r.setAttribute("notation","box");r.style={padding:"3pt",border:"1px solid"};break;case"\\fcolorbox":case"\\colorbox":{const t={padding:"3pt 0 3pt 0"};if(e.label==="\\fcolorbox"){t.border="0.06em solid "+String(e.borderColor)}r.style=t;break}case"\\xcancel":r.setAttribute("notation","updiagonalstrike downdiagonalstrike");r.classes.push("xcancel");break}if(e.backgroundColor){r.setAttribute("mathbackground",e.backgroundColor)}return r};defineFunction$1({type:"enclose",names:["\\colorbox"],props:{numArgs:2,numOptionalArgs:1,allowedInText:true,argTypes:["raw","raw","text"]},handler({parser:e,funcName:t},r,n){const a=n[0]&&assertNodeType$1(n[0],"raw").string;let o="";if(a){const e=assertNodeType$1(r[0],"raw").string;o=colorFromSpec(a,e)}else{o=validateColor(assertNodeType$1(r[0],"raw").string,e.gullet.macros)}const i=r[1];return{type:"enclose",mode:e.mode,label:t,backgroundColor:o,body:i}},mathmlBuilder:mathmlBuilder$8$1});defineFunction$1({type:"enclose",names:["\\fcolorbox"],props:{numArgs:3,numOptionalArgs:1,allowedInText:true,argTypes:["raw","raw","raw","text"]},handler({parser:e,funcName:t},r,n){const a=n[0]&&assertNodeType$1(n[0],"raw").string;let o="";let i;if(a){const e=assertNodeType$1(r[0],"raw").string;const t=assertNodeType$1(r[0],"raw").string;o=colorFromSpec(a,e);i=colorFromSpec(a,t)}else{o=validateColor(assertNodeType$1(r[0],"raw").string,e.gullet.macros);i=validateColor(assertNodeType$1(r[1],"raw").string,e.gullet.macros)}const l=r[2];return{type:"enclose",mode:e.mode,label:t,backgroundColor:i,borderColor:o,body:l}},mathmlBuilder:mathmlBuilder$8$1});defineFunction$1({type:"enclose",names:["\\fbox"],props:{numArgs:1,argTypes:["hbox"],allowedInText:true},handler({parser:e},t){return{type:"enclose",mode:e.mode,label:"\\fbox",body:t[0]}}});defineFunction$1({type:"enclose",names:["\\angl","\\cancel","\\bcancel","\\xcancel","\\sout","\\overline"],props:{numArgs:1},handler({parser:e,funcName:t},r){const n=r[0];return{type:"enclose",mode:e.mode,label:t,body:n}},mathmlBuilder:mathmlBuilder$8$1});defineFunction$1({type:"enclose",names:["\\underline"],props:{numArgs:1,allowedInText:true},handler({parser:e,funcName:t},r){const n=r[0];return{type:"enclose",mode:e.mode,label:t,body:n}},mathmlBuilder:mathmlBuilder$8$1});const _environments$1={};function defineEnvironment$1({type:e,names:t,props:r,handler:n,mathmlBuilder:a}){const o={type:e,numArgs:r.numArgs||0,allowedInText:false,numOptionalArgs:0,handler:n};for(let e=0;e<t.length;++e){_environments$1[t[e]]=o}if(a){_mathmlGroupBuilders$1[e]=a}}const StyleLevel={DISPLAY:0,TEXT:1,SCRIPT:2,SCRIPTSCRIPT:3};function getHLines$1(e){const t=[];e.consumeSpaces();let r=e.fetch().text;if(r==="\\relax"){e.consume();e.consumeSpaces();r=e.fetch().text}while(r==="\\hline"||r==="\\hdashline"){e.consume();t.push(r==="\\hdashline");e.consumeSpaces();r=e.fetch().text}return t}const validateAmsEnvironmentContext$1=e=>{const t=e.parser.settings;if(!t.displayMode){throw new ParseError$1(`{${e.envName}} can be used only in display mode.`)}};const getTag=(e,t,r)=>{let n;const a=e.tags.shift();if(a){if(a.body){n=buildExpressionRow$1(a.body,t);n.classes=["tml-tag"]}else{n=new mathMLTree$1.MathNode("mtext",[],[]);return n}}else if(e.envClasses.includes("multline")&&(e.leqno&&r!==0||!e.leqno&&r!==e.body.length-1)){n=new mathMLTree$1.MathNode("mtext",[],[]);return n}else{n=new mathMLTree$1.MathNode("mtext",[],["tml-eqn"])}return n};function parseArray$1(e,{cols:t,envClasses:r,addEqnNum:n,singleRow:a,emptySingleRow:o,maxNumCols:i,leqno:l},s){e.gullet.beginGroup();if(!a){e.gullet.macros.set("\\cr","\\\\\\relax")}if(n){e.gullet.macros.set("\\tag","\\env@tag{\\text{#1}}");e.gullet.macros.set("\\notag","\\env@notag");e.gullet.macros.set("\\nonumber","\\env@notag")}e.gullet.beginGroup();let m=[];const u=[m];const c=[];const d=[];let p;const h=[];h.push(getHLines$1(e));while(true){let t=e.parseExpression(false,a?"\\end":"\\\\");if(n&&!p){for(let e=0;e<t.length;e++){if(t[e].type==="envTag"||t[e].type==="noTag"){p=t[e].type==="envTag"?t.splice(e,1)[0].body.body[0]:{body:null};break}}}e.gullet.endGroup();e.gullet.beginGroup();t={type:"ordgroup",mode:e.mode,body:t};m.push(t);const l=e.fetch().text;if(l==="&"){if(i&&m.length===i){if(r.includes("array")){if(e.settings.strict){throw new ParseError$1("Too few columns "+"specified in the {array} column argument.",e.nextToken)}}else if(i===2){throw new ParseError$1("The split environment accepts no more than two columns",e.nextToken)}else{throw new ParseError$1("The equation environment accepts only one column",e.nextToken)}}e.consume()}else if(l==="\\end"){if(m.length===1&&t.body.length===0&&(u.length>1||!o)){u.pop()}if(h.length<u.length+1){h.push([])}break}else if(l==="\\\\"){e.consume();let t;if(e.gullet.future().text!==" "){t=e.parseSizeGroup(true)}c.push(t?t.value:null);d.push(p);h.push(getHLines$1(e));m=[];p=null;u.push(m)}else{throw new ParseError$1("Expected & or \\\\ or \\cr or \\end",e.nextToken)}}e.gullet.endGroup();e.gullet.endGroup();d.push(p);return{type:"array",mode:e.mode,body:u,cols:t,rowGaps:c,hLinesBeforeRow:h,envClasses:r,addEqnNum:n,scriptLevel:s,tags:d,leqno:l}}function dCellStyle$1(e){return e.slice(0,1)==="d"?"display":"text"}const alignMap$1={c:"center ",l:"left ",r:"right "};const glue=e=>{const t=new mathMLTree$1.MathNode("mtd",[]);t.style={padding:"0",width:"50%"};if(e.envClasses.includes("multline")){t.style.width="7.5%"}return t};const mathmlBuilder$7$1=function(e,t){const r=[];const n=e.body.length;const a=e.hLinesBeforeRow;for(let o=0;o<n;o++){const i=e.body[o];const l=[];const s=e.scriptLevel==="text"?StyleLevel.TEXT:e.scriptLevel==="script"?StyleLevel.SCRIPT:StyleLevel.DISPLAY;for(let r=0;r<i.length;r++){const a=new mathMLTree$1.MathNode("mtd",[buildGroup$1$1(i[r],t.withLevel(s))]);if(e.envClasses.includes("multline")){const e=o===0?"left":o===n-1?"right":"center";a.setAttribute("columnalign",e);if(e!=="center"){a.style.textAlign="-webkit-"+e}}l.push(a)}if(e.addEqnNum){l.unshift(glue(e));l.push(glue(e));const r=getTag(e,t.withLevel(s),o);if(e.leqno){l[0].children.push(r);l[0].style.textAlign="-webkit-left"}else{l[l.length-1].children.push(r);l[l.length-1].style.textAlign="-webkit-right"}}const m=new mathMLTree$1.MathNode("mtr",l,[]);if(o===0&&a[0].length>0){if(a[0].length===2){m.classes.push("tml-top-double")}else{m.classes.push(a[0][0]?"tml-top-dashed":"tml-top-solid")}}if(a[o+1].length>0){if(a[o+1].length===2){m.classes.push("tml-hline-double")}else{m.classes.push(a[o+1][0]?"tml-hline-dashed":"tml-hline-solid")}}r.push(m)}let o=new mathMLTree$1.MathNode("mtable",r);if(e.envClasses.length>0){o.classes=e.envClasses.map((e=>"tml-"+e))}if(e.scriptLevel==="display"){o.setAttribute("displaystyle","true")}if(e.addEqnNum||e.envClasses.includes("multline")){o.style.width="100%"}let i="";if(e.cols&&e.cols.length>0){const t=e.cols;let r=false;let n=0;let a=t.length;while(t[n].type==="separator"){n+=1}while(t[a-1].type==="separator"){a-=1}if(t[0].type==="separator"){const e=t[1].type==="separator"?"0.15em double":t[0].separator==="|"?"0.06em solid ":"0.06em dashed ";for(const t of o.children){t.children[0].style.borderLeft=e}}let l=e.addEqnNum?0:-1;for(let e=n;e<a;e++){if(t[e].type==="align"){const n=alignMap$1[t[e].align];i+=n;l+=1;for(const e of o.children){if(n.trim()!=="center"&&l<e.children.length){e.children[l].style.textAlign="-webkit-"+n.trim()}}r=true}else if(t[e].type==="separator"){if(r){const r=t[e+1].type==="separator"?"0.15em double":t[e].separator==="|"?"0.06em solid":"0.06em dashed";for(const e of o.children){if(l<e.children.length){e.children[l].style.borderRight=r}}}r=false}}if(t[t.length-1].type==="separator"){const e=t[t.length-2].type==="separator"?"0.15em double":t[t.length-1].separator==="|"?"0.06em solid":"0.06em dashed";for(const t of o.children){t.children[t.children.length-1].style.borderRight=e;t.children[t.children.length-1].style.paddingRight="0.4em"}}}if(e.addEqnNum){i="left "+(i.length>0?i:"center ")+"right "}if(i){o.setAttribute("columnalign",i.trim())}if(e.envClasses.includes("small")){o=new mathMLTree$1.MathNode("mstyle",[o]);o.setAttribute("scriptlevel","1")}return o};const alignedHandler$1=function(e,t){if(e.envName.indexOf("ed")===-1){validateAmsEnvironmentContext$1(e)}const r=[];const n=parseArray$1(e.parser,{cols:r,addEqnNum:e.envName==="align"||e.envName==="alignat",emptySingleRow:true,envClasses:["jot","abut"],maxNumCols:e.envName==="split"?2:undefined,leqno:e.parser.settings.leqno},"display");let a;let o=0;if(t[0]&&t[0].type==="ordgroup"){let e="";for(let r=0;r<t[0].body.length;r++){const n=assertNodeType$1(t[0].body[r],"textord");e+=n.text}a=Number(e);o=a*2}const i=!o;n.body.forEach((function(e){if(!i){const t=e.length/2;if(a<t){throw new ParseError$1("Too many math in a row: "+`expected ${a}, but got ${t}`,e[0])}}else if(o<e.length){o=e.length}}));for(let e=0;e<o;++e){let t="r";if(e%2===1){t="l"}r[e]={type:"align",align:t}}if(e.envName==="split");else if(e.envName.indexOf("ed")>-1){n.envClasses.push("aligned")}else if(i){n.envClasses[1]=e.envName==="align*"?"align-star":"align"}else{n.envClasses.push("aligned")}return n};defineEnvironment$1({type:"array",names:["array","darray"],props:{numArgs:1},handler(e,t){const r=checkSymbolNodeType$1(t[0]);const n=r?[t[0]]:assertNodeType$1(t[0],"ordgroup").body;const a=n.map((function(e){const t=assertSymbolNodeType$1(e);const r=t.text;if("lcr".indexOf(r)!==-1){return{type:"align",align:r}}else if(r==="|"){return{type:"separator",separator:"|"}}else if(r===":"){return{type:"separator",separator:":"}}throw new ParseError$1("Unknown column alignment: "+r,e)}));const o={cols:a,envClasses:["array"],maxNumCols:a.length};return parseArray$1(e.parser,o,dCellStyle$1(e.envName))},mathmlBuilder:mathmlBuilder$7$1});defineEnvironment$1({type:"array",names:["matrix","pmatrix","bmatrix","Bmatrix","vmatrix","Vmatrix","matrix*","pmatrix*","bmatrix*","Bmatrix*","vmatrix*","Vmatrix*"],props:{numArgs:0},handler(e){const t={matrix:null,pmatrix:["(",")"],bmatrix:["[","]"],Bmatrix:["\\{","\\}"],vmatrix:["|","|"],Vmatrix:["\\Vert","\\Vert"]}[e.envName.replace("*","")];let r="c";const n={envClasses:[],cols:[]};if(e.envName.charAt(e.envName.length-1)==="*"){const t=e.parser;t.consumeSpaces();if(t.fetch().text==="["){t.consume();t.consumeSpaces();r=t.fetch().text;if("lcr".indexOf(r)===-1){throw new ParseError$1("Expected l or c or r",t.nextToken)}t.consume();t.consumeSpaces();t.expect("]");t.consume();n.cols=[]}}const a=parseArray$1(e.parser,n,"text");a.cols=new Array(a.body[0].length).fill({type:"align",align:r});return t?{type:"leftright",mode:e.mode,body:[a],left:t[0],right:t[1],rightColor:undefined}:a},mathmlBuilder:mathmlBuilder$7$1});defineEnvironment$1({type:"array",names:["smallmatrix"],props:{numArgs:0},handler(e){const t={type:"small"};const r=parseArray$1(e.parser,t,"script");r.envClasses=["small"];return r},mathmlBuilder:mathmlBuilder$7$1});defineEnvironment$1({type:"array",names:["subarray"],props:{numArgs:1},handler(e,t){const r=checkSymbolNodeType$1(t[0]);const n=r?[t[0]]:assertNodeType$1(t[0],"ordgroup").body;const a=n.map((function(e){const t=assertSymbolNodeType$1(e);const r=t.text;if("lc".indexOf(r)!==-1){return{type:"align",align:r}}throw new ParseError$1("Unknown column alignment: "+r,e)}));if(a.length>1){throw new ParseError$1("{subarray} can contain only one column")}let o={cols:a,envClasses:["small"]};o=parseArray$1(e.parser,o,"script");if(o.body.length>0&&o.body[0].length>1){throw new ParseError$1("{subarray} can contain only one column")}return o},mathmlBuilder:mathmlBuilder$7$1});defineEnvironment$1({type:"array",names:["cases","dcases","rcases","drcases"],props:{numArgs:0},handler(e){const t={cols:[],envClasses:["cases"]};const r=parseArray$1(e.parser,t,dCellStyle$1(e.envName));return{type:"leftright",mode:e.mode,body:[r],left:e.envName.indexOf("r")>-1?".":"\\{",right:e.envName.indexOf("r")>-1?"\\}":".",rightColor:undefined}},mathmlBuilder:mathmlBuilder$7$1});defineEnvironment$1({type:"array",names:["align","align*","aligned","split"],props:{numArgs:0},handler:alignedHandler$1,mathmlBuilder:mathmlBuilder$7$1});defineEnvironment$1({type:"array",names:["alignat","alignat*","alignedat"],props:{numArgs:1},handler:alignedHandler$1,mathmlBuilder:mathmlBuilder$7$1});defineEnvironment$1({type:"array",names:["gathered","gather","gather*"],props:{numArgs:0},handler(e){if(e.envName!=="gathered"){validateAmsEnvironmentContext$1(e)}const t={cols:[],envClasses:["jot","abut"],addEqnNum:e.envName==="gather",emptySingleRow:true,leqno:e.parser.settings.leqno};return parseArray$1(e.parser,t,"display")},mathmlBuilder:mathmlBuilder$7$1});defineEnvironment$1({type:"array",names:["equation","equation*"],props:{numArgs:0},handler(e){validateAmsEnvironmentContext$1(e);const t={addEqnNum:e.envName==="equation",emptySingleRow:true,singleRow:true,maxNumCols:1,envClasses:["align"],leqno:e.parser.settings.leqno};return parseArray$1(e.parser,t,"display")},mathmlBuilder:mathmlBuilder$7$1});defineEnvironment$1({type:"array",names:["multline","multline*"],props:{numArgs:0},handler(e){validateAmsEnvironmentContext$1(e);const t={addEqnNum:e.envName==="multline",maxNumCols:1,envClasses:["jot","multline"],leqno:e.parser.settings.leqno};return parseArray$1(e.parser,t,"display")},mathmlBuilder:mathmlBuilder$7$1});defineEnvironment$1({type:"array",names:["CD"],props:{numArgs:0},handler(e){validateAmsEnvironmentContext$1(e);return parseCD$1(e.parser)},mathmlBuilder:mathmlBuilder$7$1});defineFunction$1({type:"text",names:["\\hline","\\hdashline"],props:{numArgs:0,allowedInText:true,allowedInMath:true},handler(e,t){throw new ParseError$1(`${e.funcName} valid only within array environment`)}});const environments$1=_environments$1;defineFunction$1({type:"environment",names:["\\begin","\\end"],props:{numArgs:1,argTypes:["text"]},handler({parser:e,funcName:t},r){const n=r[0];if(n.type!=="ordgroup"){throw new ParseError$1("Invalid environment name",n)}let a="";for(let e=0;e<n.body.length;++e){a+=assertNodeType$1(n.body[e],"textord").text}if(t==="\\begin"){if(!Object.prototype.hasOwnProperty.call(environments$1,a)){throw new ParseError$1("No such environment: "+a,n)}const t=environments$1[a];const{args:r,optArgs:o}=e.parseArguments("\\begin{"+a+"}",t);const i={mode:e.mode,envName:a,parser:e};const l=t.handler(i,r,o);e.expect("\\end",false);const s=e.nextToken;const m=assertNodeType$1(e.parseFunction(),"environment");if(m.name!==a){throw new ParseError$1(`Mismatch: \\begin{${a}} matched by \\end{${m.name}}`,s)}return l}return{type:"environment",mode:e.mode,name:a,nameGroup:n}}});defineFunction$1({type:"envTag",names:["\\env@tag"],props:{numArgs:1,argTypes:["math"]},handler({parser:e},t){return{type:"envTag",mode:e.mode,body:t[0]}},mathmlBuilder(e,t){return new mathMLTree$1.MathNode("mrow")}});defineFunction$1({type:"noTag",names:["\\env@notag"],props:{numArgs:0},handler({parser:e}){return{type:"noTag",mode:e.mode}},mathmlBuilder(e,t){return new mathMLTree$1.MathNode("mrow")}});const mathmlBuilder$6$1=(e,t)=>{const r=e.font;const n=t.withFont(r);const a=buildGroup$1$1(e.body,n);if(a.children.length===0){return a}if(r==="boldsymbol"&&["mo","mpadded"].includes(a.type)){a.style.fontWeight="bold";return a}let o=a.children[0].type==="mo";for(let e=1;e<a.children.length;e++){if(a.children[e].type==="mo"&&r==="boldsymbol"){a.children[e].style.fontWeight="bold"}if(a.children[e].type!=="mi"){o=false}const t=a.children[e].attributes&&a.children[e].attributes.mathvariant||"";if(t!=="normal"){o=false}}if(!o){return a}const i=a.children[0];for(let e=1;e<a.children.length;e++){i.children.push(a.children[e].children[0])}if(a.attributes.mathcolor){i.attributes.mathcolor=a.attributes.mathcolor}if(i.attributes.mathvariant&&i.attributes.mathvariant==="normal"){const e=new mathMLTree$1.MathNode("mtext",new mathMLTree$1.TextNode("​"));return new mathMLTree$1.MathNode("mrow",[e,i])}return i};const fontAliases$1={"\\Bbb":"\\mathbb","\\bold":"\\mathbf","\\frak":"\\mathfrak","\\bm":"\\boldsymbol"};defineFunction$1({type:"font",names:["\\mathrm","\\mathit","\\mathbf","\\mathnormal","\\up@greek","\\boldsymbol","\\mathbb","\\mathcal","\\mathfrak","\\mathscr","\\mathsf","\\mathtt","\\Bbb","\\bm","\\bold","\\frak"],props:{numArgs:1,allowedInArgument:true},handler:({parser:e,funcName:t},r)=>{const n=normalizeArgument$1(r[0]);let a=t;if(a in fontAliases$1){a=fontAliases$1[a]}return{type:"font",mode:e.mode,font:a.slice(1),body:n}},mathmlBuilder:mathmlBuilder$6$1});defineFunction$1({type:"font",names:["\\rm","\\sf","\\tt","\\bf","\\it","\\cal"],props:{numArgs:0,allowedInText:true},handler:({parser:e,funcName:t,breakOnTokenText:r},n)=>{const{mode:a}=e;const o=e.parseExpression(true,r);const i=`math${t.slice(1)}`;return{type:"font",mode:a,font:i,body:{type:"ordgroup",mode:e.mode,body:o}}},mathmlBuilder:mathmlBuilder$6$1});const stylArray$1=["display","text","script","scriptscript"];const scriptLevel={auto:-1,display:0,text:0,script:1,scriptscript:2};const mathmlBuilder$5$1=(e,t)=>{const r=e.scriptLevel==="auto"?t.incrementLevel():e.scriptLevel==="display"?t.withLevel(StyleLevel.TEXT):e.scriptLevel==="text"?t.withLevel(StyleLevel.SCRIPT):t.withLevel(StyleLevel.SCRIPTSCRIPT);let n=new mathMLTree$1.MathNode("mfrac",[buildGroup$1$1(e.numer,r),buildGroup$1$1(e.denom,r)]);if(!e.hasBarLine){n.setAttribute("linethickness","0px")}else if(e.barSize){const r=calculateSize$1(e.barSize,t);n.setAttribute("linethickness",r.number+r.unit)}if(e.leftDelim!=null||e.rightDelim!=null){const t=[];if(e.leftDelim!=null){const r=new mathMLTree$1.MathNode("mo",[new mathMLTree$1.TextNode(e.leftDelim.replace("\\",""))]);r.setAttribute("fence","true");t.push(r)}t.push(n);if(e.rightDelim!=null){const r=new mathMLTree$1.MathNode("mo",[new mathMLTree$1.TextNode(e.rightDelim.replace("\\",""))]);r.setAttribute("fence","true");t.push(r)}n=makeRow$1(t)}if(e.scriptLevel!=="auto"){n=new mathMLTree$1.MathNode("mstyle",[n]);n.setAttribute("displaystyle",String(e.scriptLevel==="display"));n.setAttribute("scriptlevel",scriptLevel[e.scriptLevel])}return n};defineFunction$1({type:"genfrac",names:["\\dfrac","\\frac","\\tfrac","\\dbinom","\\binom","\\tbinom","\\\\atopfrac","\\\\bracefrac","\\\\brackfrac"],props:{numArgs:2,allowedInArgument:true},handler:({parser:e,funcName:t},r)=>{const n=r[0];const a=r[1];let o=false;let i=null;let l=null;let s="auto";switch(t){case"\\dfrac":case"\\frac":case"\\tfrac":o=true;break;case"\\\\atopfrac":o=false;break;case"\\dbinom":case"\\binom":case"\\tbinom":i="(";l=")";break;case"\\\\bracefrac":i="\\{";l="\\}";break;case"\\\\brackfrac":i="[";l="]";break;default:throw new Error("Unrecognized genfrac command")}switch(t){case"\\dfrac":case"\\dbinom":s="display";break;case"\\tfrac":case"\\tbinom":s="text";break}return{type:"genfrac",mode:e.mode,continued:false,numer:n,denom:a,hasBarLine:o,leftDelim:i,rightDelim:l,scriptLevel:s,barSize:null}},mathmlBuilder:mathmlBuilder$5$1});defineFunction$1({type:"genfrac",names:["\\cfrac"],props:{numArgs:2},handler:({parser:e,funcName:t},r)=>{const n=r[0];const a=r[1];return{type:"genfrac",mode:e.mode,continued:true,numer:n,denom:a,hasBarLine:true,leftDelim:null,rightDelim:null,scriptLevel:"display",barSize:null}}});defineFunction$1({type:"infix",names:["\\over","\\choose","\\atop","\\brace","\\brack"],props:{numArgs:0,infix:true},handler({parser:e,funcName:t,token:r}){let n;switch(t){case"\\over":n="\\frac";break;case"\\choose":n="\\binom";break;case"\\atop":n="\\\\atopfrac";break;case"\\brace":n="\\\\bracefrac";break;case"\\brack":n="\\\\brackfrac";break;default:throw new Error("Unrecognized infix genfrac command")}return{type:"infix",mode:e.mode,replaceWith:n,token:r}}});const delimFromValue$1=function(e){let t=null;if(e.length>0){t=e;t=t==="."?null:t}return t};defineFunction$1({type:"genfrac",names:["\\genfrac"],props:{numArgs:6,allowedInArgument:true,argTypes:["math","math","size","text","math","math"]},handler({parser:e},t){const r=t[4];const n=t[5];const a=normalizeArgument$1(t[0]);const o=a.type==="atom"&&a.family==="open"?delimFromValue$1(a.text):null;const i=normalizeArgument$1(t[1]);const l=i.type==="atom"&&i.family==="close"?delimFromValue$1(i.text):null;const s=assertNodeType$1(t[2],"size");let m;let u=null;if(s.isBlank){m=true}else{u=s.value;m=u.number>0}let c="auto";let d=t[3];if(d.type==="ordgroup"){if(d.body.length>0){const e=assertNodeType$1(d.body[0],"textord");c=stylArray$1[Number(e.text)]}}else{d=assertNodeType$1(d,"textord");c=stylArray$1[Number(d.text)]}return{type:"genfrac",mode:e.mode,numer:r,denom:n,continued:false,hasBarLine:m,barSize:u,leftDelim:o,rightDelim:l,scriptLevel:c}},mathmlBuilder:mathmlBuilder$5$1});defineFunction$1({type:"infix",names:["\\above"],props:{numArgs:1,argTypes:["size"],infix:true},handler({parser:e,funcName:t,token:r},n){return{type:"infix",mode:e.mode,replaceWith:"\\\\abovefrac",barSize:assertNodeType$1(n[0],"size").value,token:r}}});defineFunction$1({type:"genfrac",names:["\\\\abovefrac"],props:{numArgs:3,argTypes:["math","size","math"]},handler:({parser:e,funcName:t},r)=>{const n=r[0];const a=assert$1(assertNodeType$1(r[1],"infix").barSize);const o=r[2];const i=a.number>0;return{type:"genfrac",mode:e.mode,numer:n,denom:o,continued:false,hasBarLine:i,barSize:a,leftDelim:null,rightDelim:null,scriptLevel:"auto"}},mathmlBuilder:mathmlBuilder$5$1});const mathmlBuilder$4$1=(e,t)=>{const r=stretchy$1.mathMLnode(e.label);r.style["math-depth"]=0;return new mathMLTree$1.MathNode(e.isOver?"mover":"munder",[buildGroup$1$1(e.base,t),r])};defineFunction$1({type:"horizBrace",names:["\\overbrace","\\underbrace"],props:{numArgs:1},handler({parser:e,funcName:t},r){return{type:"horizBrace",mode:e.mode,label:t,isOver:/^\\over/.test(t),base:r[0]}},mathmlBuilder:mathmlBuilder$4$1});defineFunction$1({type:"href",names:["\\href"],props:{numArgs:2,argTypes:["url","original"],allowedInText:true},handler:({parser:e,token:t},r)=>{const n=r[1];const a=assertNodeType$1(r[0],"url").url;if(!e.settings.isTrusted({command:"\\href",url:a})){throw new ParseError$1(`Function "\\href" is not trusted`,t)}return{type:"href",mode:e.mode,href:a,body:ordargument$1(n)}},mathmlBuilder:(e,t)=>{let r=buildExpressionRow$1(e.body,t);if(!(r instanceof MathNode$1)){r=new MathNode$1("mrow",[r])}r.setAttribute("href",e.href);return r}});defineFunction$1({type:"href",names:["\\url"],props:{numArgs:1,argTypes:["url"],allowedInText:true},handler:({parser:e,token:t},r)=>{const n=assertNodeType$1(r[0],"url").url;if(!e.settings.isTrusted({command:"\\url",url:n})){throw new ParseError$1(`Function "\\url" is not trusted`,t)}const a=[];for(let e=0;e<n.length;e++){let t=n[e];if(t==="~"){t="\\textasciitilde"}a.push({type:"textord",mode:"text",text:t})}const o={type:"text",mode:e.mode,font:"\\texttt",body:a};return{type:"href",mode:e.mode,href:n,body:ordargument$1(o)}}});defineFunction$1({type:"html",names:["\\class","\\id","\\style","\\data"],props:{numArgs:2,argTypes:["raw","original"],allowedInText:true},handler:({parser:e,funcName:t,token:r},n)=>{const a=assertNodeType$1(n[0],"raw").string;const o=n[1];if(e.settings.strict){throw new ParseError$1(`Function "${t}" is disabled in strict mode`,r)}let i;const l={};switch(t){case"\\class":l.class=a;i={command:"\\class",class:a};break;case"\\id":l.id=a;i={command:"\\id",id:a};break;case"\\style":l.style=a;i={command:"\\style",style:a};break;case"\\data":{const e=a.split(",");for(let t=0;t<e.length;t++){const r=e[t].split("=");if(r.length!==2){throw new ParseError$1("Error parsing key-value for \\data")}l["data-"+r[0].trim()]=r[1].trim()}i={command:"\\data",attributes:l};break}default:throw new Error("Unrecognized html command")}if(!e.settings.isTrusted(i)){throw new ParseError$1(`Function "${t}" is not trusted`,r)}return{type:"html",mode:e.mode,attributes:l,body:ordargument$1(o)}},mathmlBuilder:(e,t)=>{const r=buildExpressionRow$1(e.body,t);const n=[];if(e.attributes.class){n.push(...e.attributes.class.trim().split(/\s+/))}r.classes=n;for(const t in e.attributes){if(t!=="class"&&Object.prototype.hasOwnProperty.call(e.attributes,t)){r.setAttribute(t,e.attributes[t])}}return r}});const sizeData$1=function(e){if(/^[-+]? *(\d+(\.\d*)?|\.\d+)$/.test(e)){return{number:+e,unit:"bp"}}else{const t=/([-+]?) *(\d+(?:\.\d*)?|\.\d+) *([a-z]{2})/.exec(e);if(!t){throw new ParseError$1("Invalid size: '"+e+"' in \\includegraphics")}const r={number:+(t[1]+t[2]),unit:t[3]};if(!validUnit$1(r)){throw new ParseError$1("Invalid unit: '"+r.unit+"' in \\includegraphics.")}return r}};defineFunction$1({type:"includegraphics",names:["\\includegraphics"],props:{numArgs:1,numOptionalArgs:1,argTypes:["raw","url"],allowedInText:false},handler:({parser:e,token:t},r,n)=>{let a={number:0,unit:"em"};let o={number:.9,unit:"em"};let i={number:0,unit:"em"};let l="";if(n[0]){const e=assertNodeType$1(n[0],"raw").string;const t=e.split(",");for(let e=0;e<t.length;e++){const r=t[e].split("=");if(r.length===2){const e=r[1].trim();switch(r[0].trim()){case"alt":l=e;break;case"width":a=sizeData$1(e);break;case"height":o=sizeData$1(e);break;case"totalheight":i=sizeData$1(e);break;default:throw new ParseError$1("Invalid key: '"+r[0]+"' in \\includegraphics.")}}}}const s=assertNodeType$1(r[0],"url").url;if(l===""){l=s;l=l.replace(/^.*[\\/]/,"");l=l.substring(0,l.lastIndexOf("."))}if(!e.settings.isTrusted({command:"\\includegraphics",url:s})){throw new ParseError$1(`Function "\\includegraphics" is not trusted`,t)}return{type:"includegraphics",mode:e.mode,alt:l,width:a,height:o,totalheight:i,src:s}},mathmlBuilder:(e,t)=>{const r=calculateSize$1(e.height,t);const n={number:0,unit:"em"};if(e.totalheight.number>0){if(e.totalheight.unit===r.unit&&e.totalheight.number>r.number){n.number=e.totalheight.number-r.number;n.unit=r.unit}}let a=0;if(e.width.number>0){a=calculateSize$1(e.width,t)}const o={height:r.number+n.number+"em"};if(a.number>0){o.width=a.number+a.unit}if(n.number>0){o.verticalAlign=-n.number+n.unit}const i=new Img$1(e.src,e.alt,o);i.height=r;i.depth=n;return new mathMLTree$1.MathNode("mtext",[i])}});defineFunction$1({type:"kern",names:["\\kern","\\mkern","\\hskip","\\mskip"],props:{numArgs:1,argTypes:["size"],primitive:true,allowedInText:true},handler({parser:e,funcName:t,token:r},n){const a=assertNodeType$1(n[0],"size");if(e.settings.strict){const n=t[1]==="m";const o=a.value.unit==="mu";if(n){if(!o){throw new ParseError$1(`LaTeX's ${t} supports only mu units, `+`not ${a.value.unit} units`,r)}if(e.mode!=="math"){throw new ParseError$1(`LaTeX's ${t} works only in math mode`,r)}}else{if(o){throw new ParseError$1(`LaTeX's ${t} doesn't support mu units`,r)}}}return{type:"kern",mode:e.mode,dimension:a.value}},mathmlBuilder(e,t){const r=calculateSize$1(e.dimension,t);const n=r.unit==="em"?spaceCharacter(r.number):"";if(e.mode==="text"&&n.length>0){const e=new mathMLTree$1.TextNode(n);return new mathMLTree$1.MathNode("mtext",[e])}else{const e=new mathMLTree$1.MathNode("mspace");e.setAttribute("width",r.number+r.unit);if(r.number<0){e.style.marginLeft=r.number+r.unit}return e}}});const spaceCharacter=function(e){if(e>=.05555&&e<=.05556){return" "}else if(e>=.1666&&e<=.1667){return" "}else if(e>=.2222&&e<=.2223){return" "}else if(e>=.2777&&e<=.2778){return"  "}else{return""}};const invalidIdRegEx=/[^A-Za-z_0-9-]/g;defineFunction$1({type:"label",names:["\\label"],props:{numArgs:1,argTypes:["raw"]},handler({parser:e},t){return{type:"label",mode:e.mode,string:t[0].string.replace(invalidIdRegEx,"")}},mathmlBuilder(e,t){const r=new mathMLTree$1.MathNode("mrow",[],["tml-label"]);if(e.string.length>0){r.setAttribute("id",e.string)}return r}});const textModeLap=["\\clap","\\llap","\\rlap"];defineFunction$1({type:"lap",names:["\\mathllap","\\mathrlap","\\mathclap","\\clap","\\llap","\\rlap"],props:{numArgs:1,allowedInText:true},handler:({parser:e,funcName:t,token:r},n)=>{if(textModeLap.includes(t)){if(e.settings.strict&&e.mode!=="text"){throw new ParseError$1(`{${t}} can be used only in text mode.\n Try \\math${t.slice(1)}`,r)}t=t.slice(1)}else{t=t.slice(5)}const a=n[0];return{type:"lap",mode:e.mode,alignment:t,body:a}},mathmlBuilder:(e,t)=>{let r;if(e.alignment==="llap"){const n=buildExpression$2(ordargument$1(e.body),t);const a=new mathMLTree$1.MathNode("mphantom",n);r=new mathMLTree$1.MathNode("mpadded",[a]);r.setAttribute("width","0px")}const n=buildGroup$1$1(e.body,t);let a;if(e.alignment==="llap"){n.style.position="absolute";n.style.right="0";n.style.bottom=`0`;a=new mathMLTree$1.MathNode("mpadded",[r,n])}else{a=new mathMLTree$1.MathNode("mpadded",[n])}if(e.alignment==="rlap"){if(e.body.body.length>0&&e.body.body[0].type==="genfrac"){a.setAttribute("lspace","0.16667em")}}else{const t=e.alignment==="llap"?"-1":"-0.5";a.setAttribute("lspace",t+"width");if(e.alignment==="llap"){a.style.position="relative"}else{a.style.display="flex";a.style.justifyContent="center"}}a.setAttribute("width","0px");return a}});defineFunction$1({type:"ordgroup",names:["\\(","$"],props:{numArgs:0,allowedInText:true,allowedInMath:false},handler({funcName:e,parser:t},r){const n=t.mode;t.switchMode("math");const a=e==="\\("?"\\)":"$";const o=t.parseExpression(false,a);t.expect(a);t.switchMode(n);return{type:"ordgroup",mode:t.mode,body:o}}});defineFunction$1({type:"text",names:["\\)","\\]"],props:{numArgs:0,allowedInText:true,allowedInMath:false},handler(e,t){throw new ParseError$1(`Mismatched ${e.funcName}`,t)}});const chooseStyle=(e,t)=>{switch(t.level){case StyleLevel.DISPLAY:return e.display;case StyleLevel.TEXT:return e.text;case StyleLevel.SCRIPT:return e.script;case StyleLevel.SCRIPTSCRIPT:return e.scriptscript;default:return e.text}};defineFunction$1({type:"mathchoice",names:["\\mathchoice"],props:{numArgs:4,primitive:true},handler:({parser:e},t)=>({type:"mathchoice",mode:e.mode,display:ordargument$1(t[0]),text:ordargument$1(t[1]),script:ordargument$1(t[2]),scriptscript:ordargument$1(t[3])}),mathmlBuilder:(e,t)=>{const r=chooseStyle(e,t);return buildExpressionRow$1(r,t)}});const textAtomTypes=["text","textord","mathord","atom"];const padding=e=>{const t=new mathMLTree$1.MathNode("mspace");t.setAttribute("width",e+"em");return t};function mathmlBuilder$3$1(e,t){let r;const n=buildExpression$2(e.body,t);if(e.mclass==="minner"){r=new mathMLTree$1.MathNode("mpadded",n)}else if(e.mclass==="mord"){if(e.isCharacterBox||n[0].type==="mathord"){r=n[0];r.type="mi"}else{r=new mathMLTree$1.MathNode("mi",n)}}else{r=new mathMLTree$1.MathNode("mrow",n);if(e.mustPromote){r=n[0];r.type="mo";if(e.isCharacterBox&&e.body[0].text&&/[A-Za-z]/.test(e.body[0].text)){r.setAttribute("mathvariant","italic")}}else{r=new mathMLTree$1.MathNode("mrow",n)}const a=t.level<2;if(r.type==="mrow"){if(a){if(e.mclass==="mbin"){r.children.unshift(padding(.2222));r.children.push(padding(.2222))}else if(e.mclass==="mrel"){r.children.unshift(padding(.2778));r.children.push(padding(.2778))}else if(e.mclass==="mpunct"){r.children.push(padding(.1667))}else if(e.mclass==="minner"){r.children.unshift(padding(.0556));r.children.push(padding(.0556))}}}else{if(e.mclass==="mbin"){r.attributes.lspace=a?"0.2222em":"0";r.attributes.rspace=a?"0.2222em":"0"}else if(e.mclass==="mrel"){r.attributes.lspace=a?"0.2778em":"0";r.attributes.rspace=a?"0.2778em":"0"}else if(e.mclass==="mpunct"){r.attributes.lspace="0em";r.attributes.rspace=a?"0.1667em":"0"}else if(e.mclass==="mopen"||e.mclass==="mclose"){r.attributes.lspace="0em";r.attributes.rspace="0em"}else if(e.mclass==="minner"&&a){r.attributes.lspace="0.0556em";r.attributes.width="+0.1111em"}}if(!(e.mclass==="mopen"||e.mclass==="mclose")){delete r.attributes.stretchy;delete r.attributes.form}}return r}defineFunction$1({type:"mclass",names:["\\mathord","\\mathbin","\\mathrel","\\mathopen","\\mathclose","\\mathpunct","\\mathinner"],props:{numArgs:1,primitive:true},handler({parser:e,funcName:t},r){const n=r[0];const a=utils$1.isCharacterBox(n);let o=true;const i={type:"mathord",text:"",mode:e.mode};const l=n.body?n.body:[n];for(const e of l){if(textAtomTypes.includes(e.type)){if(e.text){i.text+=e.text}else if(e.body){e.body.map((e=>{i.text+=e.text}))}}else{o=false;break}}return{type:"mclass",mode:e.mode,mclass:"m"+t.slice(5),body:ordargument$1(o?i:n),isCharacterBox:a,mustPromote:o}},mathmlBuilder:mathmlBuilder$3$1});const binrelClass$1=e=>{const t=e.type==="ordgroup"&&e.body.length?e.body[0]:e;if(t.type==="atom"&&(t.family==="bin"||t.family==="rel")){return"m"+t.family}else{return"mord"}};defineFunction$1({type:"mclass",names:["\\@binrel"],props:{numArgs:2},handler({parser:e},t){return{type:"mclass",mode:e.mode,mclass:binrelClass$1(t[0]),body:ordargument$1(t[1]),isCharacterBox:utils$1.isCharacterBox(t[1])}}});defineFunction$1({type:"mclass",names:["\\stackrel","\\overset","\\underset"],props:{numArgs:2},handler({parser:e,funcName:t},r){const n=r[1];const a=r[0];const o={type:"op",mode:n.mode,limits:true,alwaysHandleSupSub:true,parentIsSupSub:false,symbol:false,stack:true,suppressBaseShift:t!=="\\stackrel",body:ordargument$1(n)};return{type:"supsub",mode:a.mode,base:o,sup:t==="\\underset"?null:a,sub:t==="\\underset"?a:null}},mathmlBuilder:mathmlBuilder$3$1});const buildGroup$2=(e,t,r)=>{if(!e){return r}const n=buildGroup$1$1(e,t);if(n.type==="mrow"&&n.children.length===0){return r}return n};defineFunction$1({type:"multiscript",names:["\\sideset","\\pres@cript"],props:{numArgs:3},handler({parser:e,funcName:t,token:r},n){if(n[2].body.length===0){throw new ParseError$1(t+`cannot parse an empty base.`)}const a=n[2].body[0];if(e.settings.strict&&t==="\\sideset"&&!a.symbol){throw new ParseError$1(`The base of \\sideset must be a big operator. Try \\prescript.`)}if(n[0].body.length>0&&n[0].body[0].type!=="supsub"||n[1].body.length>0&&n[1].body[0].type!=="supsub"){throw new ParseError$1("\\sideset can parse only subscripts and "+"superscripts in its first two arguments",r)}const o=n[0].body.length>0?n[0].body[0]:null;const i=n[1].body.length>0?n[1].body[0]:null;if(!o&&!i){return a}else if(!o){return{type:"styling",mode:e.mode,scriptLevel:"text",body:[{type:"supsub",mode:e.mode,base:a,sup:i.sup,sub:i.sub}]}}else{return{type:"multiscript",mode:e.mode,isSideset:t==="\\sideset",prescripts:o,postscripts:i,base:a}}},mathmlBuilder(e,t){const r=buildGroup$1$1(e.base,t);const n=new mathMLTree$1.MathNode("mprescripts");const a=new mathMLTree$1.MathNode("none");let o=[];const i=buildGroup$2(e.prescripts.sub,t,a);const l=buildGroup$2(e.prescripts.sup,t,a);if(e.isSideset){i.setAttribute("style","text-align: left;");l.setAttribute("style","text-align: left;")}if(e.postscripts){const s=buildGroup$2(e.postscripts.sub,t,a);const m=buildGroup$2(e.postscripts.sup,t,a);o=[r,s,m,n,i,l]}else{o=[r,n,i,l]}return new mathMLTree$1.MathNode("mmultiscripts",o)}});defineFunction$1({type:"not",names:["\\not"],props:{numArgs:1,primitive:true,allowedInText:false},handler({parser:e},t){const r=utils$1.isCharacterBox(t[0]);let n;if(r){n=ordargument$1(t[0]);if(n[0].text.charAt(0)==="\\"){n[0].text=symbols$1.math[n[0].text].replace}n[0].text=n[0].text.slice(0,1)+"̸"+n[0].text.slice(1)}else{const e={type:"textord",mode:"math",text:"̸"};const r={type:"kern",mode:"math",dimension:{number:-.6,unit:"em"}};n=[e,r,t[0]]}return{type:"not",mode:e.mode,body:n,isCharacterBox:r}},mathmlBuilder(e,t){if(e.isCharacterBox){const r=buildExpression$2(e.body,t);return r[0]}else{return buildExpressionRow$1(e.body,t,true)}}});const ordAtomTypes=["textord","mathord","atom"];const noSuccessor$1=["\\smallint"];const ordTypes=["textord","mathord","ordgroup","close","leftright"];const dels$1=["}","\\left","\\middle","\\right"];const isDelimiter$1=e=>e.length>0&&(delimiters$1.includes(e)||delimiterSizes$1[e]||dels$1.includes(e));const mathmlBuilder$2$1=(e,t)=>{let r;if(e.symbol){r=new MathNode$1("mo",[makeText$1(e.name,e.mode)]);if(noSuccessor$1.includes(e.name)){r.setAttribute("largeop","false")}else{r.setAttribute("movablelimits","false")}}else if(e.body){r=new MathNode$1("mo",buildExpression$2(e.body,t))}else{r=new MathNode$1("mi",[new TextNode$2(e.name.slice(1))]);if(!e.parentIsSupSub){const t=new MathNode$1("mo",[makeText$1("⁡","text")]);const n=[r,t];if(e.needsLeadingSpace){const e=new MathNode$1("mspace");e.setAttribute("width","0.1667em");n.unshift(e)}if(!e.isFollowedByDelimiter){const e=new MathNode$1("mspace");e.setAttribute("width","0.1667em");n.push(e)}r=new MathNode$1("mrow",n)}}return r};const singleCharBigOps$1={"∏":"\\prod","∐":"\\coprod","∑":"\\sum","⋀":"\\bigwedge","⋁":"\\bigvee","⋂":"\\bigcap","⋃":"\\bigcup","⨀":"\\bigodot","⨁":"\\bigoplus","⨂":"\\bigotimes","⨄":"\\biguplus","⨅":"\\bigsqcap","⨆":"\\bigsqcup"};defineFunction$1({type:"op",names:["\\coprod","\\bigvee","\\bigwedge","\\biguplus","\\bigcap","\\bigcup","\\intop","\\prod","\\sum","\\bigotimes","\\bigoplus","\\bigodot","\\bigsqcap","\\bigsqcup","\\smallint","∏","∐","∑","⋀","⋁","⋂","⋃","⨀","⨁","⨂","⨄","⨆"],props:{numArgs:0},handler:({parser:e,funcName:t},r)=>{let n=t;if(n.length===1){n=singleCharBigOps$1[n]}return{type:"op",mode:e.mode,limits:true,parentIsSupSub:false,symbol:true,stack:false,name:n}},mathmlBuilder:mathmlBuilder$2$1});defineFunction$1({type:"op",names:["\\mathop"],props:{numArgs:1,primitive:true},handler:({parser:e},t)=>{const r=t[0];const n=r.body?r.body:[r];const a=n.length===1&&ordAtomTypes.includes(n[0].type);return{type:"op",mode:e.mode,limits:true,parentIsSupSub:false,symbol:a,stack:false,name:a?n[0].text:null,body:a?null:ordargument$1(r)}},mathmlBuilder:mathmlBuilder$2$1});const singleCharIntegrals$1={"∫":"\\int","∬":"\\iint","∭":"\\iiint","∮":"\\oint","∯":"\\oiint","∰":"\\oiiint","∱":"\\intclockwise","∲":"\\varointclockwise","⨌":"\\iiiint","⨍":"\\intbar","⨎":"\\intBar","⨏":"\\fint","⨒":"\\rppolint","⨓":"\\scpolint","⨕":"\\pointint","⨖":"\\sqint","⨗":"\\intlarhk","⨘":"\\intx","⨙":"\\intcap","⨚":"\\intcup"};defineFunction$1({type:"op",names:["\\arcsin","\\arccos","\\arctan","\\arctg","\\arcctg","\\arg","\\ch","\\cos","\\cosec","\\cosh","\\cot","\\cotg","\\coth","\\csc","\\ctg","\\cth","\\deg","\\dim","\\exp","\\hom","\\ker","\\lg","\\ln","\\log","\\sec","\\sin","\\sinh","\\sh","\\sgn","\\tan","\\tanh","\\tg","\\th"],props:{numArgs:0},handler({parser:e,funcName:t}){const r=e.prevAtomType;const n=e.gullet.future().text;return{type:"op",mode:e.mode,limits:false,parentIsSupSub:false,symbol:false,stack:false,isFollowedByDelimiter:isDelimiter$1(n),needsLeadingSpace:r.length>0&&ordTypes.includes(r),name:t}},mathmlBuilder:mathmlBuilder$2$1});defineFunction$1({type:"op",names:["\\det","\\gcd","\\inf","\\lim","\\max","\\min","\\Pr","\\sup"],props:{numArgs:0},handler({parser:e,funcName:t}){const r=e.prevAtomType;const n=e.gullet.future().text;return{type:"op",mode:e.mode,limits:true,parentIsSupSub:false,symbol:false,stack:false,isFollowedByDelimiter:isDelimiter$1(n),needsLeadingSpace:r.length>0&&ordTypes.includes(r),name:t}},mathmlBuilder:mathmlBuilder$2$1});defineFunction$1({type:"op",names:["\\int","\\iint","\\iiint","\\iiiint","\\oint","\\oiint","\\oiiint","\\intclockwise","\\varointclockwise","\\intbar","\\intBar","\\fint","\\rppolint","\\scpolint","\\pointint","\\sqint","\\intlarhk","\\intx","\\intcap","\\intcup","∫","∬","∭","∮","∯","∰","∱","∲","⨌","⨍","⨎","⨏","⨒","⨓","⨕","⨖","⨗","⨘","⨙","⨚"],props:{numArgs:0},handler({parser:e,funcName:t}){let r=t;if(r.length===1){r=singleCharIntegrals$1[r]}return{type:"op",mode:e.mode,limits:false,parentIsSupSub:false,symbol:true,stack:false,name:r}},mathmlBuilder:mathmlBuilder$2$1});const _macros$1={};function defineMacro$1(e,t){_macros$1[e]=t}const dels=["}","\\left","\\middle","\\right"];const isDelimiter=e=>e.length>0&&(delimiters$1.includes(e)||delimiterSizes$1[e]||dels.includes(e));const mathmlBuilder$1$1=(e,t)=>{let r=buildExpression$2(e.body,t.withFont("mathrm"));let n=true;for(let e=0;e<r.length;e++){const t=r[e];if(t instanceof mathMLTree$1.MathNode){switch(t.type){case"mi":case"mn":case"ms":case"mtext":break;case"mspace":{if(t.attributes.width){const a=t.attributes.width.replace("em","");const o=spaceCharacter(Number(a));if(o===""){n=false}else{r[e]=new mathMLTree$1.MathNode("mtext",[new mathMLTree$1.TextNode(o)])}}}break;case"mo":{const e=t.children[0];if(t.children.length===1&&e instanceof mathMLTree$1.TextNode){e.text=e.text.replace(/\u2212/,"-").replace(/\u2217/,"*")}else{n=false}break}default:n=false}}else{n=false}}if(n){const e=r.map((e=>e.toText())).join("");r=[new mathMLTree$1.TextNode(e)]}else if(r.length===1&&["mover","munder"].includes(r[0].type)&&(r[0].children[0].type==="mi"||r[0].children[0].type==="mtext")){r[0].children[0].type="mi";if(e.parentIsSupSub){return new mathMLTree$1.MathNode("mrow",r)}else{const e=new mathMLTree$1.MathNode("mo",[makeText$1("⁡","text")]);return mathMLTree$1.newDocumentFragment([r[0],e])}}let a;if(n){a=new mathMLTree$1.MathNode("mi",r);a.setAttribute("mathvariant","normal")}else{a=new mathMLTree$1.MathNode("mrow",r)}if(!e.parentIsSupSub){const t=new mathMLTree$1.MathNode("mo",[makeText$1("⁡","text")]);const r=[a,t];if(e.needsLeadingSpace){const e=new mathMLTree$1.MathNode("mspace");e.setAttribute("width","0.1667em");r.unshift(e)}if(!e.isFollowedByDelimiter){const e=new mathMLTree$1.MathNode("mspace");e.setAttribute("width","0.1667em");r.push(e)}return mathMLTree$1.newDocumentFragment(r)}return a};defineFunction$1({type:"operatorname",names:["\\operatorname@","\\operatornamewithlimits"],props:{numArgs:1,allowedInArgument:true},handler:({parser:e,funcName:t},r)=>{const n=r[0];const a=e.prevAtomType;const o=e.gullet.future().text;return{type:"operatorname",mode:e.mode,body:ordargument$1(n),alwaysHandleSupSub:t==="\\operatornamewithlimits",limits:false,parentIsSupSub:false,isFollowedByDelimiter:isDelimiter(o),needsLeadingSpace:a.length>0&&ordTypes.includes(a)}},mathmlBuilder:mathmlBuilder$1$1});defineMacro$1("\\operatorname","\\@ifstar\\operatornamewithlimits\\operatorname@");defineFunctionBuilders$1({type:"ordgroup",mathmlBuilder(e,t){return buildExpressionRow$1(e.body,t,true)}});defineFunction$1({type:"phantom",names:["\\phantom"],props:{numArgs:1,allowedInText:true},handler:({parser:e},t)=>{const r=t[0];return{type:"phantom",mode:e.mode,body:ordargument$1(r)}},mathmlBuilder:(e,t)=>{const r=buildExpression$2(e.body,t);return new mathMLTree$1.MathNode("mphantom",r)}});defineFunction$1({type:"hphantom",names:["\\hphantom"],props:{numArgs:1,allowedInText:true},handler:({parser:e},t)=>{const r=t[0];return{type:"hphantom",mode:e.mode,body:r}},mathmlBuilder:(e,t)=>{const r=buildExpression$2(ordargument$1(e.body),t);const n=new mathMLTree$1.MathNode("mphantom",r);const a=new mathMLTree$1.MathNode("mpadded",[n]);a.setAttribute("height","0px");a.setAttribute("depth","0px");return a}});defineFunction$1({type:"vphantom",names:["\\vphantom"],props:{numArgs:1,allowedInText:true},handler:({parser:e},t)=>{const r=t[0];return{type:"vphantom",mode:e.mode,body:r}},mathmlBuilder:(e,t)=>{const r=buildExpression$2(ordargument$1(e.body),t);const n=new mathMLTree$1.MathNode("mphantom",r);const a=new mathMLTree$1.MathNode("mpadded",[n]);a.setAttribute("width","0px");return a}});defineFunction$1({type:"pmb",names:["\\pmb"],props:{numArgs:1,allowedInText:true},handler({parser:e},t){return{type:"pmb",mode:e.mode,body:ordargument$1(t[0])}},mathmlBuilder(e,t){const r=buildExpression$2(e.body,t);const n=wrapWithMstyle(r);n.setAttribute("style","font-weight:bold");return n}});const sign=e=>e>=0?"+":"-";const mathmlBuilder$b=(e,t)=>{const r=t.withLevel(StyleLevel.TEXT);const n=new mathMLTree$1.MathNode("mpadded",[buildGroup$1$1(e.body,r)]);const a=calculateSize$1(e.dy,t);n.setAttribute("voffset",a.number+a.unit);const o=Math.abs(a.number);n.setAttribute("height",sign(a.number)+o+a.unit);n.setAttribute("depth",sign(-a.number)+o+a.unit);return n};defineFunction$1({type:"raise",names:["\\raise","\\lower"],props:{numArgs:2,argTypes:["size","primitive"],primitive:true},handler({parser:e,funcName:t},r){const n=assertNodeType$1(r[0],"size").value;if(t==="\\lower"){n.number*=-1}const a=r[1];return{type:"raise",mode:e.mode,dy:n,body:a}},mathmlBuilder:mathmlBuilder$b});defineFunction$1({type:"raise",names:["\\raisebox"],props:{numArgs:2,argTypes:["size","hbox"],allowedInText:true},handler({parser:e,funcName:t},r){const n=assertNodeType$1(r[0],"size").value;const a=r[1];return{type:"raise",mode:e.mode,dy:n,body:a}},mathmlBuilder:mathmlBuilder$b});defineFunction$1({type:"ref",names:["\\ref","\\eqref"],props:{numArgs:1,argTypes:["raw"]},handler({parser:e,funcName:t},r){return{type:"ref",mode:e.mode,funcName:t,string:r[0].string.replace(invalidIdRegEx,"")}},mathmlBuilder(e,t){const r=e.funcName==="\\ref"?["tml-ref"]:["tml-ref","tml-eqref"];const n=new mathMLTree$1.MathNode("mtext",[new mathMLTree$1.TextNode("")],r);n.setAttribute("href","#"+e.string);return n}});defineFunction$1({type:"internal",names:["\\relax"],props:{numArgs:0,allowedInText:true},handler({parser:e}){return{type:"internal",mode:e.mode}}});defineFunction$1({type:"rule",names:["\\rule"],props:{numArgs:2,numOptionalArgs:1,argTypes:["size","size","size"]},handler({parser:e},t,r){const n=r[0];const a=assertNodeType$1(t[0],"size");const o=assertNodeType$1(t[1],"size");return{type:"rule",mode:e.mode,shift:n&&assertNodeType$1(n,"size").value,width:a.value,height:o.value}},mathmlBuilder(e,t){const r=calculateSize$1(e.width,t);const n=calculateSize$1(e.height,t);const a=e.shift?calculateSize$1(e.shift,t):{number:0,unit:"em"};const o=t.color&&t.getColor()||"black";const i=new mathMLTree$1.MathNode("mspace");if(r.number>0&&n.number>0){i.setAttribute("mathbackground",o)}i.setAttribute("width",r.number+r.unit);i.setAttribute("height",n.number+n.unit);if(a.number===0){return i}const l=new mathMLTree$1.MathNode("mpadded",[i]);if(a.number>=0){l.setAttribute("height","+"+a.number+a.unit)}else{l.setAttribute("height",a.number+a.unit);l.setAttribute("depth","+"+-a.number+a.unit)}l.setAttribute("voffset",a.number+a.unit);return l}});const sizeMap={"\\tiny":.5,"\\sixptsize":.6,"\\Tiny":.6,"\\scriptsize":.7,"\\footnotesize":.8,"\\small":.9,"\\normalsize":1,"\\large":1.2,"\\Large":1.44,"\\LARGE":1.728,"\\huge":2.074,"\\Huge":2.488};defineFunction$1({type:"sizing",names:["\\tiny","\\sixptsize","\\Tiny","\\scriptsize","\\footnotesize","\\small","\\normalsize","\\large","\\Large","\\LARGE","\\huge","\\Huge"],props:{numArgs:0,allowedInText:true},handler:({breakOnTokenText:e,funcName:t,parser:r},n)=>{if(r.settings.strict&&r.mode==="math"){console.log(`Temml strict-mode warning: Command ${t} is invalid in math mode.`)}const a=r.parseExpression(false,e);return{type:"sizing",mode:r.mode,funcName:t,body:a}},mathmlBuilder:(e,t)=>{const r=t.withFontSize(sizeMap[e.funcName]);const n=buildExpression$2(e.body,r);const a=wrapWithMstyle(n);const o=(sizeMap[e.funcName]/t.fontSize).toFixed(4);a.setAttribute("mathsize",o+"em");return a}});defineFunction$1({type:"smash",names:["\\smash"],props:{numArgs:1,numOptionalArgs:1,allowedInText:true},handler:({parser:e},t,r)=>{let n=false;let a=false;const o=r[0]&&assertNodeType$1(r[0],"ordgroup");if(o){let e="";for(let t=0;t<o.body.length;++t){const r=o.body[t];e=r.text;if(e==="t"){n=true}else if(e==="b"){a=true}else{n=false;a=false;break}}}else{n=true;a=true}const i=t[0];return{type:"smash",mode:e.mode,body:i,smashHeight:n,smashDepth:a}},mathmlBuilder:(e,t)=>{const r=new mathMLTree$1.MathNode("mpadded",[buildGroup$1$1(e.body,t)]);if(e.smashHeight){r.setAttribute("height","0px")}if(e.smashDepth){r.setAttribute("depth","0px")}return r}});defineFunction$1({type:"sqrt",names:["\\sqrt"],props:{numArgs:1,numOptionalArgs:1},handler({parser:e},t,r){const n=r[0];const a=t[0];return{type:"sqrt",mode:e.mode,body:a,index:n}},mathmlBuilder(e,t){const{body:r,index:n}=e;return n?new mathMLTree$1.MathNode("mroot",[buildGroup$1$1(r,t),buildGroup$1$1(n,t.incrementLevel())]):new mathMLTree$1.MathNode("msqrt",[buildGroup$1$1(r,t)])}});const styleMap$2={display:0,text:1,script:2,scriptscript:3};const styleAttributes={display:["0","true"],text:["0","false"],script:["1","false"],scriptscript:["2","false"]};defineFunction$1({type:"styling",names:["\\displaystyle","\\textstyle","\\scriptstyle","\\scriptscriptstyle"],props:{numArgs:0,allowedInText:true,primitive:true},handler({breakOnTokenText:e,funcName:t,parser:r},n){const a=r.parseExpression(true,e);const o=t.slice(1,t.length-5);return{type:"styling",mode:r.mode,scriptLevel:o,body:a}},mathmlBuilder(e,t){const r=t.withLevel(styleMap$2[e.scriptLevel]);const n=buildExpression$2(e.body,r);const a=wrapWithMstyle(n);const o=styleAttributes[e.scriptLevel];a.setAttribute("scriptlevel",o[0]);a.setAttribute("displaystyle",o[1]);return a}});const symbolRegEx=/^m(over|under|underover)$/;defineFunctionBuilders$1({type:"supsub",mathmlBuilder(e,t){let r=false;let n;let a;let o=false;let i=false;if(e.base&&e.base.type==="horizBrace"){a=!!e.sup;if(a===e.base.isOver){r=true;n=e.base.isOver}}if(e.base&&!e.base.stack&&(e.base.type==="op"||e.base.type==="operatorname")){e.base.parentIsSupSub=true;o=!e.base.symbol;i=e.base.needsLeadingSpace}const l=e.base&&e.base.stack?[buildGroup$1$1(e.base.body[0],t)]:[buildGroup$1$1(e.base,t)];const s=t.inSubOrSup();if(e.sub){l.push(buildGroup$1$1(e.sub,s))}if(e.sup){l.push(buildGroup$1$1(e.sup,s))}let m;if(r){m=n?"mover":"munder"}else if(!e.sub){const r=e.base;if(r&&r.type==="op"&&r.limits&&(t.level===StyleLevel.DISPLAY||r.alwaysHandleSupSub)){m="mover"}else if(r&&r.type==="operatorname"&&r.alwaysHandleSupSub&&(r.limits||t.level===StyleLevel.DISPLAY)){m="mover"}else{m="msup"}}else if(!e.sup){const r=e.base;if(r&&r.type==="op"&&r.limits&&(t.level===StyleLevel.DISPLAY||r.alwaysHandleSupSub)){m="munder"}else if(r&&r.type==="operatorname"&&r.alwaysHandleSupSub&&(r.limits||t.level===StyleLevel.DISPLAY)){m="munder"}else{m="msub"}}else{const r=e.base;if(r&&(r.type==="op"&&r.limits||r.type==="multiscript")&&(t.level===StyleLevel.DISPLAY||r.alwaysHandleSupSub)){m="munderover"}else if(r&&r.type==="operatorname"&&r.alwaysHandleSupSub&&(t.level===StyleLevel.DISPLAY||r.limits)){m="munderover"}else{m="msubsup"}}let u=new mathMLTree$1.MathNode(m,l);if(o){const e=new mathMLTree$1.MathNode("mo",[makeText$1("⁡","text")]);if(i){const t=new mathMLTree$1.MathNode("mspace");t.setAttribute("width","0.1667em");u=mathMLTree$1.newDocumentFragment([t,u,e])}else{u=mathMLTree$1.newDocumentFragment([u,e])}}else if(symbolRegEx.test(m)){u=new mathMLTree$1.MathNode("mrow",[u])}return u}});const short=["\\shortmid","\\nshortmid","\\shortparallel","\\nshortparallel","\\smallsetminus"];const arrows=["\\Rsh","\\Lsh","\\restriction"];const isArrow=e=>{if(e.length===1){const t=e.codePointAt(0);return 8591<t&&t<8704}return e.indexOf("arrow")>-1||e.indexOf("harpoon")>-1||arrows.includes(e)};defineFunctionBuilders$1({type:"atom",mathmlBuilder(e,t){const r=new mathMLTree$1.MathNode("mo",[makeText$1(e.text,e.mode)]);if(e.family==="punct"){r.setAttribute("separator","true")}else if(e.family==="open"||e.family==="close"){if(e.family==="open"){r.setAttribute("form","prefix");r.setAttribute("stretchy","false")}else if(e.family==="close"){r.setAttribute("form","postfix");r.setAttribute("stretchy","false")}}else if(e.text==="\\mid"){r.setAttribute("lspace","0.22em");r.setAttribute("rspace","0.22em");r.setAttribute("stretchy","false")}else if(e.family==="rel"&&isArrow(e.text)){r.setAttribute("stretchy","false")}else if(short.includes(e.text)){r.setAttribute("mathsize","70%")}else if(e.text===":"){r.attributes.lspace="0.2222em";r.attributes.rspace="0.2222em"}return r}});const fontMap$1={mathbf:"bold",mathrm:"normal",textit:"italic",mathit:"italic",mathnormal:"italic",mathbb:"double-struck",mathcal:"script",mathfrak:"fraktur",mathscr:"script",mathsf:"sans-serif",mathtt:"monospace"};const getVariant$1=function(e,t){if(t.fontFamily==="texttt"){return"monospace"}else if(t.fontFamily==="textsc"){return"normal"}else if(t.fontFamily==="textsf"){if(t.fontShape==="textit"&&t.fontWeight==="textbf"){return"sans-serif-bold-italic"}else if(t.fontShape==="textit"){return"sans-serif-italic"}else if(t.fontWeight==="textbf"){return"sans-serif-bold"}else{return"sans-serif"}}else if(t.fontShape==="textit"&&t.fontWeight==="textbf"){return"bold-italic"}else if(t.fontShape==="textit"){return"italic"}else if(t.fontWeight==="textbf"){return"bold"}const r=t.font;if(!r||r==="mathnormal"){return null}const n=e.mode;switch(r){case"mathit":return"italic";case"mathrm":{const t=e.text.codePointAt(0);return 939<t&&t<975?"italic":"normal"}case"greekItalic":return"italic";case"up@greek":return"normal";case"boldsymbol":case"mathboldsymbol":return"bold-italic";case"mathbf":return"bold";case"mathbb":return"double-struck";case"mathfrak":return"fraktur";case"mathscr":case"mathcal":return"script";case"mathsf":return"sans-serif";case"mathtt":return"monospace"}let a=e.text;if(symbols$1[n][a]&&symbols$1[n][a].replace){a=symbols$1[n][a].replace}return Object.prototype.hasOwnProperty.call(fontMap$1,r)?fontMap$1[r]:null};const script=Object.freeze({B:8426,E:8427,F:8427,H:8387,I:8391,L:8390,M:8422,R:8393,e:8394,g:8355,o:8389});const frak=Object.freeze({C:8426,H:8388,I:8392,R:8394,Z:8398});const bbb$1=Object.freeze({C:8383,H:8389,N:8391,P:8393,Q:8393,R:8395,Z:8394});const bold=Object.freeze({"ϵ":119527,"ϑ":119564,"ϰ":119534,"φ":119577,"ϱ":119535,"ϖ":119563});const boldItalic=Object.freeze({"ϵ":119643,"ϑ":119680,"ϰ":119650,"φ":119693,"ϱ":119651,"ϖ":119679});const boldsf=Object.freeze({"ϵ":119701,"ϑ":119738,"ϰ":119708,"φ":119751,"ϱ":119709,"ϖ":119737});const bisf=Object.freeze({"ϵ":119759,"ϑ":119796,"ϰ":119766,"φ":119809,"ϱ":119767,"ϖ":119795});const offset=Object.freeze({upperCaseLatin:{normal:e=>0,bold:e=>119743,italic:e=>119795,"bold-italic":e=>119847,script:e=>script[e]||119899,"script-bold":e=>119951,fraktur:e=>frak[e]||120003,"fraktur-bold":e=>120107,"double-struck":e=>bbb$1[e]||120055,"sans-serif":e=>120159,"sans-serif-bold":e=>120211,"sans-serif-italic":e=>120263,"sans-serif-bold-italic":e=>120380,monospace:e=>120367},lowerCaseLatin:{normal:e=>0,bold:e=>119737,italic:e=>e==="h"?8358:119789,"bold-italic":e=>119841,script:e=>script[e]||119893,"script-bold":e=>119945,fraktur:e=>119997,"fraktur-bold":e=>120101,"double-struck":e=>120049,"sans-serif":e=>120153,"sans-serif-bold":e=>120205,"sans-serif-italic":e=>120257,"sans-serif-bold-italic":e=>120309,monospace:e=>120361},upperCaseGreek:{normal:e=>0,bold:e=>e==="∇"?111802:119575,italic:e=>e==="∇"?111860:119633,"bold-italic":e=>e==="∇"?111802:119575,script:e=>0,"script-bold":e=>0,fraktur:e=>0,"fraktur-bold":e=>0,"double-struck":e=>0,"sans-serif":e=>e==="∇"?111976:119749,"sans-serif-bold":e=>e==="∇"?111976:119749,"sans-serif-italic":e=>0,"sans-serif-bold-italic":e=>e==="∇"?112034:119807,monospace:e=>0},lowerCaseGreek:{normal:e=>0,bold:e=>119569,italic:e=>119627,"bold-italic":e=>e==="ϕ"?119678:119685,script:e=>0,"script-bold":e=>0,fraktur:e=>0,"fraktur-bold":e=>0,"double-struck":e=>0,"sans-serif":e=>119743,"sans-serif-bold":e=>119743,"sans-serif-italic":e=>0,"sans-serif-bold-italic":e=>119801,monospace:e=>0},varGreek:{normal:e=>0,bold:e=>bold[e]||-51,italic:e=>0,"bold-italic":e=>boldItalic[e]||58,script:e=>0,"script-bold":e=>0,fraktur:e=>0,"fraktur-bold":e=>0,"double-struck":e=>0,"sans-serif":e=>boldsf[e]||116,"sans-serif-bold":e=>boldsf[e]||116,"sans-serif-italic":e=>0,"sans-serif-bold-italic":e=>bisf[e]||174,monospace:e=>0},numeral:{normal:e=>0,bold:e=>120734,italic:e=>0,"bold-italic":e=>0,script:e=>0,"script-bold":e=>0,fraktur:e=>0,"fraktur-bold":e=>0,"double-struck":e=>120744,"sans-serif":e=>120754,"sans-serif-bold":e=>120764,"sans-serif-italic":e=>0,"sans-serif-bold-italic":e=>0,monospace:e=>120774}});const variantChar=(e,t)=>{const r=e.codePointAt(0);const n=64<r&&r<91?"upperCaseLatin":96<r&&r<123?"lowerCaseLatin":912<r&&r<938||e==="∇"?"upperCaseGreek":944<r&&r<970||e==="ϕ"?"lowerCaseGreek":120545<r&&r<120572||bold[e]?"varGreek":47<r&&r<58?"numeral":"other";return n==="other"?e:String.fromCodePoint(r+offset[n][t](e))};const smallCaps=Object.freeze({a:"ᴀ",b:"ʙ",c:"ᴄ",d:"ᴅ",e:"ᴇ",f:"ꜰ",g:"ɢ",h:"ʜ",i:"ɪ",j:"ᴊ",k:"ᴋ",l:"ʟ",m:"ᴍ",n:"ɴ",o:"ᴏ",p:"ᴘ",q:"ǫ",r:"ʀ",s:"s",t:"ᴛ",u:"ᴜ",v:"ᴠ",w:"ᴡ",x:"x",y:"ʏ",z:"ᴢ"});const numberRegEx$1$1=/^\d(?:[\d,.]*\d)?$/;const latinRegEx=/[A-Ba-z]/;const italicNumber=(e,t,r)=>{const n=new mathMLTree$1.MathNode(r,[e]);const a=new mathMLTree$1.MathNode("mstyle",[n]);a.style["font-style"]="italic";a.style["font-family"]="Cambria, 'Times New Roman', serif";if(t==="bold-italic"){a.style["font-weight"]="bold"}return a};defineFunctionBuilders$1({type:"mathord",mathmlBuilder(e,t){const r=makeText$1(e.text,e.mode,t);const n=r.text.codePointAt(0);const a=912<n&&n<938?"normal":"italic";const o=getVariant$1(e,t)||a;if(o==="script"){r.text=variantChar(r.text,o);return new mathMLTree$1.MathNode("mi",[r],[t.font])}else if(o!=="italic"){r.text=variantChar(r.text,o)}let i=new mathMLTree$1.MathNode("mi",[r]);if(o==="normal"){i.setAttribute("mathvariant","normal");if(r.text.length===1){i=new mathMLTree$1.MathNode("mrow",[i])}}return i}});defineFunctionBuilders$1({type:"textord",mathmlBuilder(e,t){let r=e.text;const n=r.codePointAt(0);if(t.fontFamily==="textsc"){if(96<n&&n<123){r=smallCaps[r]}}const a=makeText$1(r,e.mode,t);const o=getVariant$1(e,t)||"normal";let i;if(numberRegEx$1$1.test(e.text)){const t=e.mode==="text"?"mtext":"mn";if(o==="italic"||o==="bold-italic"){return italicNumber(a,o,t)}else{if(o!=="normal"){a.text=a.text.split("").map((e=>variantChar(e,o))).join("")}i=new mathMLTree$1.MathNode(t,[a])}}else if(e.mode==="text"){if(o!=="normal"){a.text=variantChar(a.text,o)}i=new mathMLTree$1.MathNode("mtext",[a])}else if(e.text==="\\prime"){i=new mathMLTree$1.MathNode("mo",[a]);i.classes.push("tml-prime")}else{const e=a.text;if(o!=="italic"){a.text=variantChar(a.text,o)}i=new mathMLTree$1.MathNode("mi",[a]);if(a.text===e&&latinRegEx.test(e)){i.setAttribute("mathvariant","italic")}}return i}});const cssSpace$1={"\\nobreak":"nobreak","\\allowbreak":"allowbreak"};const regularSpace$1={" ":{},"\\ ":{},"~":{className:"nobreak"},"\\space":{},"\\nobreakspace":{className:"nobreak"}};defineFunctionBuilders$1({type:"spacing",mathmlBuilder(e,t){let r;if(Object.prototype.hasOwnProperty.call(regularSpace$1,e.text)){r=new mathMLTree$1.MathNode("mtext",[new mathMLTree$1.TextNode(" ")])}else if(Object.prototype.hasOwnProperty.call(cssSpace$1,e.text)){r=new mathMLTree$1.MathNode("mo");if(e.text==="\\nobreak"){r.setAttribute("linebreak","nobreak")}}else{throw new ParseError$1(`Unknown type of space "${e.text}"`)}return r}});defineFunctionBuilders$1({type:"tag"});const textFontFamilies$1={"\\text":undefined,"\\textrm":"textrm","\\textsf":"textsf","\\texttt":"texttt","\\textnormal":"textrm","\\textsc":"textsc"};const textFontWeights$1={"\\textbf":"textbf","\\textmd":"textmd"};const textFontShapes$1={"\\textit":"textit","\\textup":"textup"};const styleWithFont=(e,t)=>{const r=e.font;if(!r){return t}else if(textFontFamilies$1[r]){return t.withTextFontFamily(textFontFamilies$1[r])}else if(textFontWeights$1[r]){return t.withTextFontWeight(textFontWeights$1[r])}else{return t.withTextFontShape(textFontShapes$1[r])}};defineFunction$1({type:"text",names:["\\text","\\textrm","\\textsf","\\texttt","\\textnormal","\\textsc","\\textbf","\\textmd","\\textit","\\textup"],props:{numArgs:1,argTypes:["text"],allowedInArgument:true,allowedInText:true},handler({parser:e,funcName:t},r){const n=r[0];return{type:"text",mode:e.mode,body:ordargument$1(n),font:t}},mathmlBuilder(e,t){const r=styleWithFont(e,t);const n=buildExpressionRow$1(e.body,r);return consolidateText(n)}});defineFunction$1({type:"verb",names:["\\verb"],props:{numArgs:0,allowedInText:true},handler(e,t,r){throw new ParseError$1("\\verb ended by end of line instead of matching delimiter")},mathmlBuilder(e,t){const r=new mathMLTree$1.TextNode(makeVerb$1(e));const n=new mathMLTree$1.MathNode("mtext",[r]);n.setAttribute("mathvariant","monospace");return n}});const makeVerb$1=e=>e.body.replace(/ /g,e.star?"␣":" ");const functions$2=_functions$1;class SourceLocation$1{constructor(e,t,r){this.lexer=e;this.start=t;this.end=r}static range(e,t){if(!t){return e&&e.loc}else if(!e||!e.loc||!t.loc||e.loc.lexer!==t.loc.lexer){return null}else{return new SourceLocation$1(e.loc.lexer,e.loc.start,t.loc.end)}}}class Token$1{constructor(e,t){this.text=e;this.loc=t}range(e,t){return new Token$1(t,SourceLocation$1.range(this,e))}}const spaceRegexString$1="[ \r\n\t]";const controlWordRegexString$1="\\\\[a-zA-Z@]+";const controlSymbolRegexString$1="\\\\[^\ud800-\udfff]";const controlWordWhitespaceRegexString$1=`(${controlWordRegexString$1})${spaceRegexString$1}*`;const controlSpaceRegexString$1="\\\\(\n|[ \r\t]+\n?)[ \r\t]*";const combiningDiacriticalMarkString$1="[̀-ͯ]";const combiningDiacriticalMarksEndRegex$1=new RegExp(`${combiningDiacriticalMarkString$1}+$`);const tokenRegexString$1=`(${spaceRegexString$1}+)|`+`${controlSpaceRegexString$1}|`+"(number"+"|[!-\\[\\]-‧‪-퟿豈-￿]"+`${combiningDiacriticalMarkString$1}*`+"|[\ud800-\udbff][\udc00-\udfff]"+`${combiningDiacriticalMarkString$1}*`+"|\\\\verb\\*([^]).*?\\4"+"|\\\\verb([^*a-zA-Z]).*?\\5"+`|${controlWordWhitespaceRegexString$1}`+`|${controlSymbolRegexString$1})`;class Lexer$1{constructor(e,t){this.input=e;this.settings=t;this.tokenRegex=new RegExp(tokenRegexString$1.replace("number|",t.strict?"":"\\d(?:[\\d,.]*\\d)?|"),"g");this.catcodes={"%":14,"~":13}}setCatcode(e,t){this.catcodes[e]=t}lex(){const e=this.input;const t=this.tokenRegex.lastIndex;if(t===e.length){return new Token$1("EOF",new SourceLocation$1(this,t,t))}const r=this.tokenRegex.exec(e);if(r===null||r.index!==t){throw new ParseError$1(`Unexpected character: '${e[t]}'`,new Token$1(e[t],new SourceLocation$1(this,t,t+1)))}const n=r[6]||r[3]||(r[2]?"\\ ":" ");if(this.catcodes[n]===14){const t=e.indexOf("\n",this.tokenRegex.lastIndex);if(t===-1){this.tokenRegex.lastIndex=e.length;if(this.settings.strict){throw new ParseError$1("% comment has no terminating newline; LaTeX would "+"fail because of commenting the end of math mode")}}else{this.tokenRegex.lastIndex=t+1}return this.lex()}return new Token$1(n,new SourceLocation$1(this,t,this.tokenRegex.lastIndex))}}class Namespace$1{constructor(e={},t={}){this.current=t;this.builtins=e;this.undefStack=[]}beginGroup(){this.undefStack.push({})}endGroup(){if(this.undefStack.length===0){throw new ParseError$1("Unbalanced namespace destruction: attempt "+"to pop global namespace; please report this as a bug")}const e=this.undefStack.pop();for(const t in e){if(Object.prototype.hasOwnProperty.call(e,t)){if(e[t]===undefined){delete this.current[t]}else{this.current[t]=e[t]}}}}has(e){return Object.prototype.hasOwnProperty.call(this.current,e)||Object.prototype.hasOwnProperty.call(this.builtins,e)}get(e){if(Object.prototype.hasOwnProperty.call(this.current,e)){return this.current[e]}else{return this.builtins[e]}}set(e,t,r=false){if(r){for(let t=0;t<this.undefStack.length;t++){delete this.undefStack[t][e]}if(this.undefStack.length>0){this.undefStack[this.undefStack.length-1][e]=t}}else{const t=this.undefStack[this.undefStack.length-1];if(t&&!Object.prototype.hasOwnProperty.call(t,e)){t[e]=this.current[e]}}this.current[e]=t}}const macros$1=_macros$1;defineMacro$1("\\noexpand",(function(e){const t=e.popToken();if(e.isExpandable(t.text)){t.noexpand=true;t.treatAsRelax=true}return{tokens:[t],numArgs:0}}));defineMacro$1("\\expandafter",(function(e){const t=e.popToken();e.expandOnce(true);return{tokens:[t],numArgs:0}}));defineMacro$1("\\@firstoftwo",(function(e){const t=e.consumeArgs(2);return{tokens:t[0],numArgs:0}}));defineMacro$1("\\@secondoftwo",(function(e){const t=e.consumeArgs(2);return{tokens:t[1],numArgs:0}}));defineMacro$1("\\@ifnextchar",(function(e){const t=e.consumeArgs(3);e.consumeSpaces();const r=e.future();if(t[0].length===1&&t[0][0].text===r.text){return{tokens:t[1],numArgs:0}}else{return{tokens:t[2],numArgs:0}}}));defineMacro$1("\\@ifstar","\\@ifnextchar *{\\@firstoftwo{#1}}");defineMacro$1("\\TextOrMath",(function(e){const t=e.consumeArgs(2);if(e.mode==="text"){return{tokens:t[0],numArgs:0}}else{return{tokens:t[1],numArgs:0}}}));const stringFromArg=e=>{let t="";for(let r=e.length-1;r>-1;r--){t+=e[r].text}return t};const digitToNumber$1={0:0,1:1,2:2,3:3,4:4,5:5,6:6,7:7,8:8,9:9,a:10,A:10,b:11,B:11,c:12,C:12,d:13,D:13,e:14,E:14,f:15,F:15};const nextCharNumber=e=>{const t=e.future().text;if(t==="EOF"){return[null,""]}return[digitToNumber$1[t.charAt(0)],t]};const appendCharNumbers=(e,t,r)=>{for(let n=1;n<t.length;n++){const a=digitToNumber$1[t.charAt(n)];e*=r;e+=a}return e};defineMacro$1("\\char",(function(e){let t=e.popToken();let r;let n="";if(t.text==="'"){r=8;t=e.popToken()}else if(t.text==='"'){r=16;t=e.popToken()}else if(t.text==="`"){t=e.popToken();if(t.text[0]==="\\"){n=t.text.charCodeAt(1)}else if(t.text==="EOF"){throw new ParseError$1("\\char` missing argument")}else{n=t.text.charCodeAt(0)}}else{r=10}if(r){let a=t.text;n=digitToNumber$1[a.charAt(0)];if(n==null||n>=r){throw new ParseError$1(`Invalid base-${r} digit ${t.text}`)}n=appendCharNumbers(n,a,r);let o;[o,a]=nextCharNumber(e);while(o!=null&&o<r){n*=r;n+=o;n=appendCharNumbers(n,a,r);e.popToken();[o,a]=nextCharNumber(e)}}return`\\@char{${n}}`}));defineMacro$1("\\surd","\\sqrt{\\vphantom{|}}");defineMacro$1("\\hbox","\\text{#1}");defineMacro$1("/","{⁄}");defineMacro$1("\\long","");defineMacro$1("\\bgroup","{");defineMacro$1("\\egroup","}");defineMacro$1("~","\\nobreakspace");defineMacro$1("\\lq","`");defineMacro$1("\\rq","'");defineMacro$1("\\aa","\\r a");defineMacro$1("\\Bbbk","\\Bbb{k}");defineMacro$1("\\mathstrut","\\vphantom{(}");defineMacro$1("\\underbar","\\underline{\\text{#1}}");defineMacro$1("\\vdots","{\\varvdots\\rule{0pt}{15pt}}");defineMacro$1("⋮","\\vdots");defineMacro$1("\\substack","\\begin{subarray}{c}#1\\end{subarray}");defineMacro$1("\\boxed","\\fbox{$\\displaystyle{#1}$}");defineMacro$1("\\iff","\\DOTSB\\;\\Longleftrightarrow\\;");defineMacro$1("\\implies","\\DOTSB\\;\\Longrightarrow\\;");defineMacro$1("\\impliedby","\\DOTSB\\;\\Longleftarrow\\;");const dotsByToken$1={",":"\\dotsc","\\not":"\\dotsb","+":"\\dotsb","=":"\\dotsb","<":"\\dotsb",">":"\\dotsb","-":"\\dotsb","*":"\\dotsb",":":"\\dotsb","\\DOTSB":"\\dotsb","\\coprod":"\\dotsb","\\bigvee":"\\dotsb","\\bigwedge":"\\dotsb","\\biguplus":"\\dotsb","\\bigcap":"\\dotsb","\\bigcup":"\\dotsb","\\prod":"\\dotsb","\\sum":"\\dotsb","\\bigotimes":"\\dotsb","\\bigoplus":"\\dotsb","\\bigodot":"\\dotsb","\\bigsqcap":"\\dotsb","\\bigsqcup":"\\dotsb","\\And":"\\dotsb","\\longrightarrow":"\\dotsb","\\Longrightarrow":"\\dotsb","\\longleftarrow":"\\dotsb","\\Longleftarrow":"\\dotsb","\\longleftrightarrow":"\\dotsb","\\Longleftrightarrow":"\\dotsb","\\mapsto":"\\dotsb","\\longmapsto":"\\dotsb","\\hookrightarrow":"\\dotsb","\\doteq":"\\dotsb","\\mathbin":"\\dotsb","\\mathrel":"\\dotsb","\\relbar":"\\dotsb","\\Relbar":"\\dotsb","\\xrightarrow":"\\dotsb","\\xleftarrow":"\\dotsb","\\DOTSI":"\\dotsi","\\int":"\\dotsi","\\oint":"\\dotsi","\\iint":"\\dotsi","\\iiint":"\\dotsi","\\iiiint":"\\dotsi","\\idotsint":"\\dotsi","\\DOTSX":"\\dotsx"};defineMacro$1("\\dots",(function(e){let t="\\dotso";const r=e.expandAfterFuture().text;if(r in dotsByToken$1){t=dotsByToken$1[r]}else if(r.slice(0,4)==="\\not"){t="\\dotsb"}else if(r in symbols$1.math){if(["bin","rel"].includes(symbols$1.math[r].group)){t="\\dotsb"}}return t}));const spaceAfterDots$1={")":true,"]":true,"\\rbrack":true,"\\}":true,"\\rbrace":true,"\\rangle":true,"\\rceil":true,"\\rfloor":true,"\\rgroup":true,"\\rmoustache":true,"\\right":true,"\\bigr":true,"\\biggr":true,"\\Bigr":true,"\\Biggr":true,$:true,";":true,".":true,",":true};defineMacro$1("\\dotso",(function(e){const t=e.future().text;if(t in spaceAfterDots$1){return"\\ldots\\,"}else{return"\\ldots"}}));defineMacro$1("\\dotsc",(function(e){const t=e.future().text;if(t in spaceAfterDots$1&&t!==","){return"\\ldots\\,"}else{return"\\ldots"}}));defineMacro$1("\\cdots",(function(e){const t=e.future().text;if(t in spaceAfterDots$1){return"\\@cdots\\,"}else{return"\\@cdots"}}));defineMacro$1("\\dotsb","\\cdots");defineMacro$1("\\dotsm","\\cdots");defineMacro$1("\\dotsi","\\!\\cdots");defineMacro$1("\\idotsint","\\dotsi");defineMacro$1("\\dotsx","\\ldots\\,");defineMacro$1("\\DOTSI","\\relax");defineMacro$1("\\DOTSB","\\relax");defineMacro$1("\\DOTSX","\\relax");defineMacro$1("\\tmspace","\\TextOrMath{\\kern#1#3}{\\mskip#1#2}\\relax");defineMacro$1("\\,","{\\tmspace+{3mu}{.1667em}}");defineMacro$1("\\thinspace","\\,");defineMacro$1("\\>","\\mskip{4mu}");defineMacro$1("\\:","{\\tmspace+{4mu}{.2222em}}");defineMacro$1("\\medspace","\\:");defineMacro$1("\\;","{\\tmspace+{5mu}{.2777em}}");defineMacro$1("\\thickspace","\\;");defineMacro$1("\\!","{\\tmspace-{3mu}{.1667em}}");defineMacro$1("\\negthinspace","\\!");defineMacro$1("\\negmedspace","{\\tmspace-{4mu}{.2222em}}");defineMacro$1("\\negthickspace","{\\tmspace-{5mu}{.277em}}");defineMacro$1("\\enspace","\\kern.5em ");defineMacro$1("\\enskip","\\hskip.5em\\relax");defineMacro$1("\\quad","\\hskip1em\\relax");defineMacro$1("\\qquad","\\hskip2em\\relax");defineMacro$1("\\tag","\\@ifstar\\tag@literal\\tag@paren");defineMacro$1("\\tag@paren","\\tag@literal{({#1})}");defineMacro$1("\\tag@literal",(e=>{if(e.macros.get("\\df@tag")){throw new ParseError$1("Multiple \\tag")}return"\\def\\df@tag{\\text{#1}}"}));defineMacro$1("\\bmod","\\mathbin{\\text{mod}}");defineMacro$1("\\pod","\\allowbreak"+"\\mathchoice{\\mkern18mu}{\\mkern8mu}{\\mkern8mu}{\\mkern8mu}(#1)");defineMacro$1("\\pmod","\\pod{{\\rm mod}\\mkern6mu#1}");defineMacro$1("\\mod","\\allowbreak"+"\\mathchoice{\\mkern18mu}{\\mkern12mu}{\\mkern12mu}{\\mkern12mu}"+"{\\rm mod}\\,\\,#1");defineMacro$1("\\newline","\\\\\\relax");defineMacro$1("\\TeX","\\textrm{T}\\kern-.1667em\\raisebox{-.5ex}{E}\\kern-.125em\\textrm{X}");defineMacro$1("\\LaTeX","\\textrm{L}\\kern-.35em\\raisebox{0.2em}{\\scriptstyle A}\\kern-.15em\\TeX");defineMacro$1("\\Temml","\\textrm{T}\\kern-0.2em\\lower{0.2em}\\textrm{E}\\kern-0.08em{\\textrm{M}\\kern-0.08em\\raise{0.2em}\\textrm{M}\\kern-0.08em\\textrm{L}}");defineMacro$1("\\hspace","\\@ifstar\\@hspacer\\@hspace");defineMacro$1("\\@hspace","\\hskip #1\\relax");defineMacro$1("\\@hspacer","\\rule{0pt}{0pt}\\hskip #1\\relax");defineMacro$1("\\colon",`\\mathpunct{\\char"3a}`);defineMacro$1("\\prescript","\\pres@cript{_{#1}^{#2}}{}{#3}");defineMacro$1("\\ordinarycolon",`\\char"3a`);defineMacro$1("\\vcentcolon","\\mathrel{\\raisebox{0.035em}{\\ordinarycolon}}");defineMacro$1("\\coloneq",'\\mathrel{\\raisebox{0.035em}{\\ordinarycolon}\\char"2212}');defineMacro$1("\\Coloneq",'\\mathrel{\\char"2237\\char"2212}');defineMacro$1("\\Eqqcolon",'\\mathrel{\\char"3d\\char"2237}');defineMacro$1("\\Eqcolon",'\\mathrel{\\char"2212\\char"2237}');defineMacro$1("\\colonapprox",'\\mathrel{\\raisebox{0.035em}{\\ordinarycolon}\\char"2248}');defineMacro$1("\\Colonapprox",'\\mathrel{\\char"2237\\char"2248}');defineMacro$1("\\colonsim",'\\mathrel{\\raisebox{0.035em}{\\ordinarycolon}\\char"223c}');defineMacro$1("\\Colonsim",'\\mathrel{\\raisebox{0.035em}{\\ordinarycolon}\\char"223c}');defineMacro$1("\\ratio","\\vcentcolon");defineMacro$1("\\coloncolon","\\dblcolon");defineMacro$1("\\colonequals","\\coloneqq");defineMacro$1("\\coloncolonequals","\\Coloneqq");defineMacro$1("\\equalscolon","\\eqqcolon");defineMacro$1("\\equalscoloncolon","\\Eqqcolon");defineMacro$1("\\colonminus","\\coloneq");defineMacro$1("\\coloncolonminus","\\Coloneq");defineMacro$1("\\minuscolon","\\eqcolon");defineMacro$1("\\minuscoloncolon","\\Eqcolon");defineMacro$1("\\coloncolonapprox","\\Colonapprox");defineMacro$1("\\coloncolonsim","\\Colonsim");defineMacro$1("\\notni","\\mathrel{\\char`∌}");defineMacro$1("\\limsup","\\DOTSB\\operatorname*{lim\\,sup}");defineMacro$1("\\liminf","\\DOTSB\\operatorname*{lim\\,inf}");defineMacro$1("\\injlim","\\DOTSB\\operatorname*{inj\\,lim}");defineMacro$1("\\projlim","\\DOTSB\\operatorname*{proj\\,lim}");defineMacro$1("\\varlimsup","\\DOTSB\\operatorname*{\\overline{\\text{lim}}}");defineMacro$1("\\varliminf","\\DOTSB\\operatorname*{\\underline{\\text{lim}}}");defineMacro$1("\\varinjlim","\\DOTSB\\operatorname*{\\underrightarrow{\\text{lim}}}");defineMacro$1("\\varprojlim","\\DOTSB\\operatorname*{\\underleftarrow{\\text{lim}}}");defineMacro$1("\\centerdot","{\\medspace\\rule{0.167em}{0.189em}\\medspace}");defineMacro$1("\\argmin","\\DOTSB\\operatorname*{arg\\,min}");defineMacro$1("\\argmax","\\DOTSB\\operatorname*{arg\\,max}");defineMacro$1("\\plim","\\DOTSB\\operatorname*{plim}");defineMacro$1("\\bra","\\mathinner{\\langle{#1}|}");defineMacro$1("\\ket","\\mathinner{|{#1}\\rangle}");defineMacro$1("\\braket","\\mathinner{\\langle{#1}\\rangle}");defineMacro$1("\\Bra","\\left\\langle#1\\right|");defineMacro$1("\\Ket","\\left|#1\\right\\rangle");const braketHelper$1=e=>t=>{const r=t.consumeArg().tokens;const n=t.consumeArg().tokens;const a=t.consumeArg().tokens;const o=t.consumeArg().tokens;const i=t.macros.get("|");const l=t.macros.get("\\|");t.macros.beginGroup();const s=t=>r=>{if(e){r.macros.set("|",i);if(a.length){r.macros.set("\\|",l)}}let o=t;if(!t&&a.length){const e=r.future();if(e.text==="|"){r.popToken();o=true}}return{tokens:o?a:n,numArgs:0}};t.macros.set("|",s(false));if(a.length){t.macros.set("\\|",s(true))}const m=t.consumeArg().tokens;const u=t.expandTokens([...o,...m,...r]);t.macros.endGroup();return{tokens:u.reverse(),numArgs:0}};defineMacro$1("\\bra@ket",braketHelper$1(false));defineMacro$1("\\bra@set",braketHelper$1(true));defineMacro$1("\\Braket","\\bra@ket{\\left\\langle}"+"{\\,\\middle\\vert\\,}{\\,\\middle\\vert\\,}{\\right\\rangle}");defineMacro$1("\\Set","\\bra@set{\\left\\{\\:}"+"{\\;\\middle\\vert\\;}{\\;\\middle\\Vert\\;}{\\:\\right\\}}");defineMacro$1("\\set","\\bra@set{\\{\\,}{\\mid}{}{\\,\\}}");defineMacro$1("\\angln","{\\angl n}");defineMacro$1("\\odv","\\@ifstar\\odv@next\\odv@numerator");defineMacro$1("\\odv@numerator","\\frac{\\mathrm{d}#1}{\\mathrm{d}#2}");defineMacro$1("\\odv@next","\\frac{\\mathrm{d}}{\\mathrm{d}#2}#1");defineMacro$1("\\pdv","\\@ifstar\\pdv@next\\pdv@numerator");const pdvHelper=e=>{const t=e[0][0].text;const r=stringFromArg(e[1]).split(",");const n=String(r.length);const a=n==="1"?"\\partial":`\\partial^${n}`;let o="";r.map((e=>{o+="\\partial "+e.trim()+"\\,"}));return[t,a,o.replace(/\\,$/,"")]};defineMacro$1("\\pdv@numerator",(function(e){const[t,r,n]=pdvHelper(e.consumeArgs(2));return`\\frac{${r} ${t}}{${n}}`}));defineMacro$1("\\pdv@next",(function(e){const[t,r,n]=pdvHelper(e.consumeArgs(2));return`\\frac{${r}}{${n}} ${t}`}));defineMacro$1("\\upalpha","\\up@greek{\\alpha}");defineMacro$1("\\upbeta","\\up@greek{\\beta}");defineMacro$1("\\upgamma","\\up@greek{\\gamma}");defineMacro$1("\\updelta","\\up@greek{\\delta}");defineMacro$1("\\upepsilon","\\up@greek{\\epsilon}");defineMacro$1("\\upzeta","\\up@greek{\\zeta}");defineMacro$1("\\upeta","\\up@greek{\\eta}");defineMacro$1("\\uptheta","\\up@greek{\\theta}");defineMacro$1("\\upiota","\\up@greek{\\iota}");defineMacro$1("\\upkappa","\\up@greek{\\kappa}");defineMacro$1("\\uplambda","\\up@greek{\\lambda}");defineMacro$1("\\upmu","\\up@greek{\\mu}");defineMacro$1("\\upnu","\\up@greek{\\nu}");defineMacro$1("\\upxi","\\up@greek{\\xi}");defineMacro$1("\\upomicron","\\up@greek{\\omicron}");defineMacro$1("\\uppi","\\up@greek{\\pi}");defineMacro$1("\\upalpha","\\up@greek{\\alpha}");defineMacro$1("\\uprho","\\up@greek{\\rho}");defineMacro$1("\\upsigma","\\up@greek{\\sigma}");defineMacro$1("\\uptau","\\up@greek{\\tau}");defineMacro$1("\\upupsilon","\\up@greek{\\upsilon}");defineMacro$1("\\upphi","\\up@greek{\\phi}");defineMacro$1("\\upchi","\\up@greek{\\chi}");defineMacro$1("\\uppsi","\\up@greek{\\psi}");defineMacro$1("\\upomega","\\up@greek{\\omega}");defineMacro$1("\\invamp",'\\mathbin{\\char"214b}');defineMacro$1("\\parr",'\\mathbin{\\char"214b}');defineMacro$1("\\with",'\\mathbin{\\char"26}');defineMacro$1("\\multimapinv",'\\mathrel{\\char"27dc}');defineMacro$1("\\multimapboth",'\\mathrel{\\char"29df}');defineMacro$1("\\scoh",'{\\mkern5mu\\char"2322\\mkern5mu}');defineMacro$1("\\sincoh",'{\\mkern5mu\\char"2323\\mkern5mu}');defineMacro$1("\\coh",`{\\mkern5mu\\rule{}{0.7em}\\mathrlap{\\smash{\\raise2mu{\\char"2322}}}\n{\\smash{\\lower4mu{\\char"2323}}}\\mkern5mu}`);defineMacro$1("\\incoh",`{\\mkern5mu\\rule{}{0.7em}\\mathrlap{\\smash{\\raise2mu{\\char"2323}}}\n{\\smash{\\lower4mu{\\char"2322}}}\\mkern5mu}`);defineMacro$1("\\standardstate","\\text{\\tiny\\char`⦵}");defineMacro$1("\\ce",(function(e){return chemParse(e.consumeArgs(1)[0],"ce")}));defineMacro$1("\\pu",(function(e){return chemParse(e.consumeArgs(1)[0],"pu")}));defineMacro$1("\\uniDash",`{\\rule{0.672em}{0.06em}}`);defineMacro$1("\\triDash",`{\\rule{0.15em}{0.06em}\\kern2mu\\rule{0.15em}{0.06em}\\kern2mu\\rule{0.15em}{0.06em}}`);defineMacro$1("\\tripleDash",`\\kern0.075em\\raise0.25em{\\triDash}\\kern0.075em`);defineMacro$1("\\tripleDashOverLine",`\\kern0.075em\\mathrlap{\\raise0.125em{\\uniDash}}\\raise0.34em{\\triDash}\\kern0.075em`);defineMacro$1("\\tripleDashOverDoubleLine",`\\kern0.075em\\mathrlap{\\mathrlap{\\raise0.48em{\\triDash}}\\raise0.27em{\\uniDash}}{\\raise0.05em{\\uniDash}}\\kern0.075em`);defineMacro$1("\\tripleDashBetweenDoubleLine",`\\kern0.075em\\mathrlap{\\mathrlap{\\raise0.48em{\\uniDash}}\\raise0.27em{\\triDash}}{\\raise0.05em{\\uniDash}}\\kern0.075em`);var chemParse=function(e,t){var r="";var n=e.length&&e[e.length-1].loc.start;for(var a=e.length-1;a>=0;a--){if(e[a].loc.start>n){r+=" ";n=e[a].loc.start}r+=e[a].text;n+=e[a].text.length}var o=texify.go(mhchemParser.go(r,t));return o};var mhchemParser={go:function(e,t){if(!e){return[]}if(t===undefined){t="ce"}var r="0";var n={};n["parenthesisLevel"]=0;e=e.replace(/\n/g," ");e=e.replace(/[\u2212\u2013\u2014\u2010]/g,"-");e=e.replace(/[\u2026]/g,"...");var a;var o=10;var i=[];while(true){if(a!==e){o=10;a=e}else{o--}var l=mhchemParser.stateMachines[t];var s=l.transitions[r]||l.transitions["*"];e:for(var m=0;m<s.length;m++){var u=mhchemParser.patterns.match_(s[m].pattern,e);if(u){var c=s[m].task;for(var d=0;d<c.action_.length;d++){var p;if(l.actions[c.action_[d].type_]){p=l.actions[c.action_[d].type_](n,u.match_,c.action_[d].option)}else if(mhchemParser.actions[c.action_[d].type_]){p=mhchemParser.actions[c.action_[d].type_](n,u.match_,c.action_[d].option)}else{throw["MhchemBugA","mhchem bug A. Please report. ("+c.action_[d].type_+")"]}mhchemParser.concatArray(i,p)}r=c.nextState||r;if(e.length>0){if(!c.revisit){e=u.remainder}if(!c.toContinue){break e}}else{return i}}}if(o<=0){throw["MhchemBugU","mhchem bug U. Please report."]}}},concatArray:function(e,t){if(t){if(Array.isArray(t)){for(var r=0;r<t.length;r++){e.push(t[r])}}else{e.push(t)}}},patterns:{patterns:{empty:/^$/,else:/^./,else2:/^./,space:/^\s/,"space A":/^\s(?=[A-Z\\$])/,space$:/^\s$/,"a-z":/^[a-z]/,x:/^x/,x$:/^x$/,i$:/^i$/,letters:/^(?:[a-zA-Z\u03B1-\u03C9\u0391-\u03A9?@]|(?:\\(?:alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega|Gamma|Delta|Theta|Lambda|Xi|Pi|Sigma|Upsilon|Phi|Psi|Omega)(?:\s+|\{\}|(?![a-zA-Z]))))+/,"\\greek":/^\\(?:alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega|Gamma|Delta|Theta|Lambda|Xi|Pi|Sigma|Upsilon|Phi|Psi|Omega)(?:\s+|\{\}|(?![a-zA-Z]))/,"one lowercase latin letter $":/^(?:([a-z])(?:$|[^a-zA-Z]))$/,"$one lowercase latin letter$ $":/^\$(?:([a-z])(?:$|[^a-zA-Z]))\$$/,"one lowercase greek letter $":/^(?:\$?[\u03B1-\u03C9]\$?|\$?\\(?:alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega)\s*\$?)(?:\s+|\{\}|(?![a-zA-Z]))$/,digits:/^[0-9]+/,"-9.,9":/^[+\-]?(?:[0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\.[0-9]+))/,"-9.,9 no missing 0":/^[+\-]?[0-9]+(?:[.,][0-9]+)?/,"(-)(9.,9)(e)(99)":function(e){var t=e.match(/^(\+\-|\+\/\-|\+|\-|\\pm\s?)?([0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\.[0-9]+))?(\((?:[0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\.[0-9]+))\))?(?:([eE]|\s*(\*|x|\\times|\u00D7)\s*10\^)([+\-]?[0-9]+|\{[+\-]?[0-9]+\}))?/);if(t&&t[0]){return{match_:t.splice(1),remainder:e.substr(t[0].length)}}return null},"(-)(9)^(-9)":function(e){var t=e.match(/^(\+\-|\+\/\-|\+|\-|\\pm\s?)?([0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\.[0-9]+)?)\^([+\-]?[0-9]+|\{[+\-]?[0-9]+\})/);if(t&&t[0]){return{match_:t.splice(1),remainder:e.substr(t[0].length)}}return null},"state of aggregation $":function(e){var t=mhchemParser.patterns.findObserveGroups(e,"",/^\([a-z]{1,3}(?=[\),])/,")","");if(t&&t.remainder.match(/^($|[\s,;\)\]\}])/)){return t}var r=e.match(/^(?:\((?:\\ca\s?)?\$[amothc]\$\))/);if(r){return{match_:r[0],remainder:e.substr(r[0].length)}}return null},"_{(state of aggregation)}$":/^_\{(\([a-z]{1,3}\))\}/,"{[(":/^(?:\\\{|\[|\()/,")]}":/^(?:\)|\]|\\\})/,", ":/^[,;]\s*/,",":/^[,;]/,".":/^[.]/,". ":/^([.\u22C5\u00B7\u2022])\s*/,"...":/^\.\.\.(?=$|[^.])/,"* ":/^([*])\s*/,"^{(...)}":function(e){return mhchemParser.patterns.findObserveGroups(e,"^{","","","}")},"^($...$)":function(e){return mhchemParser.patterns.findObserveGroups(e,"^","$","$","")},"^a":/^\^([0-9]+|[^\\_])/,"^\\x{}{}":function(e){return mhchemParser.patterns.findObserveGroups(e,"^",/^\\[a-zA-Z]+\{/,"}","","","{","}","",true)},"^\\x{}":function(e){return mhchemParser.patterns.findObserveGroups(e,"^",/^\\[a-zA-Z]+\{/,"}","")},"^\\x":/^\^(\\[a-zA-Z]+)\s*/,"^(-1)":/^\^(-?\d+)/,"'":/^'/,"_{(...)}":function(e){return mhchemParser.patterns.findObserveGroups(e,"_{","","","}")},"_($...$)":function(e){return mhchemParser.patterns.findObserveGroups(e,"_","$","$","")},_9:/^_([+\-]?[0-9]+|[^\\])/,"_\\x{}{}":function(e){return mhchemParser.patterns.findObserveGroups(e,"_",/^\\[a-zA-Z]+\{/,"}","","","{","}","",true)},"_\\x{}":function(e){return mhchemParser.patterns.findObserveGroups(e,"_",/^\\[a-zA-Z]+\{/,"}","")},"_\\x":/^_(\\[a-zA-Z]+)\s*/,"^_":/^(?:\^(?=_)|\_(?=\^)|[\^_]$)/,"{}":/^\{\}/,"{...}":function(e){return mhchemParser.patterns.findObserveGroups(e,"","{","}","")},"{(...)}":function(e){return mhchemParser.patterns.findObserveGroups(e,"{","","","}")},"$...$":function(e){return mhchemParser.patterns.findObserveGroups(e,"","$","$","")},"${(...)}$":function(e){return mhchemParser.patterns.findObserveGroups(e,"${","","","}$")},"$(...)$":function(e){return mhchemParser.patterns.findObserveGroups(e,"$","","","$")},"=<>":/^[=<>]/,"#":/^[#\u2261]/,"+":/^\+/,"-$":/^-(?=[\s_},;\]/]|$|\([a-z]+\))/,"-9":/^-(?=[0-9])/,"- orbital overlap":/^-(?=(?:[spd]|sp)(?:$|[\s,;\)\]\}]))/,"-":/^-/,"pm-operator":/^(?:\\pm|\$\\pm\$|\+-|\+\/-)/,operator:/^(?:\+|(?:[\-=<>]|<<|>>|\\approx|\$\\approx\$)(?=\s|$|-?[0-9]))/,arrowUpDown:/^(?:v|\(v\)|\^|\(\^\))(?=$|[\s,;\)\]\}])/,"\\bond{(...)}":function(e){return mhchemParser.patterns.findObserveGroups(e,"\\bond{","","","}")},"->":/^(?:<->|<-->|->|<-|<=>>|<<=>|<=>|[\u2192\u27F6\u21CC])/,CMT:/^[CMT](?=\[)/,"[(...)]":function(e){return mhchemParser.patterns.findObserveGroups(e,"[","","","]")},"1st-level escape":/^(&|\\\\|\\hline)\s*/,"\\,":/^(?:\\[,\ ;:])/,"\\x{}{}":function(e){return mhchemParser.patterns.findObserveGroups(e,"",/^\\[a-zA-Z]+\{/,"}","","","{","}","",true)},"\\x{}":function(e){return mhchemParser.patterns.findObserveGroups(e,"",/^\\[a-zA-Z]+\{/,"}","")},"\\ca":/^\\ca(?:\s+|(?![a-zA-Z]))/,"\\x":/^(?:\\[a-zA-Z]+\s*|\\[_&{}%])/,orbital:/^(?:[0-9]{1,2}[spdfgh]|[0-9]{0,2}sp)(?=$|[^a-zA-Z])/,others:/^[\/~|]/,"\\frac{(...)}":function(e){return mhchemParser.patterns.findObserveGroups(e,"\\frac{","","","}","{","","","}")},"\\overset{(...)}":function(e){return mhchemParser.patterns.findObserveGroups(e,"\\overset{","","","}","{","","","}")},"\\underset{(...)}":function(e){return mhchemParser.patterns.findObserveGroups(e,"\\underset{","","","}","{","","","}")},"\\underbrace{(...)}":function(e){return mhchemParser.patterns.findObserveGroups(e,"\\underbrace{","","","}_","{","","","}")},"\\color{(...)}0":function(e){return mhchemParser.patterns.findObserveGroups(e,"\\color{","","","}")},"\\color{(...)}{(...)}1":function(e){return mhchemParser.patterns.findObserveGroups(e,"\\color{","","","}","{","","","}")},"\\color(...){(...)}2":function(e){return mhchemParser.patterns.findObserveGroups(e,"\\color","\\","",/^(?=\{)/,"{","","","}")},"\\ce{(...)}":function(e){return mhchemParser.patterns.findObserveGroups(e,"\\ce{","","","}")},oxidation$:/^(?:[+-][IVX]+|\\pm\s*0|\$\\pm\$\s*0)$/,"d-oxidation$":/^(?:[+-]?\s?[IVX]+|\\pm\s*0|\$\\pm\$\s*0)$/,"roman numeral":/^[IVX]+/,"1/2$":/^[+\-]?(?:[0-9]+|\$[a-z]\$|[a-z])\/[0-9]+(?:\$[a-z]\$|[a-z])?$/,amount:function(e){var t;t=e.match(/^(?:(?:(?:\([+\-]?[0-9]+\/[0-9]+\)|[+\-]?(?:[0-9]+|\$[a-z]\$|[a-z])\/[0-9]+|[+\-]?[0-9]+[.,][0-9]+|[+\-]?\.[0-9]+|[+\-]?[0-9]+)(?:[a-z](?=\s*[A-Z]))?)|[+\-]?[a-z](?=\s*[A-Z])|\+(?!\s))/);if(t){return{match_:t[0],remainder:e.substr(t[0].length)}}var r=mhchemParser.patterns.findObserveGroups(e,"","$","$","");if(r){t=r.match_.match(/^\$(?:\(?[+\-]?(?:[0-9]*[a-z]?[+\-])?[0-9]*[a-z](?:[+\-][0-9]*[a-z]?)?\)?|\+|-)\$$/);if(t){return{match_:t[0],remainder:e.substr(t[0].length)}}}return null},amount2:function(e){return this["amount"](e)},"(KV letters),":/^(?:[A-Z][a-z]{0,2}|i)(?=,)/,formula$:function(e){if(e.match(/^\([a-z]+\)$/)){return null}var t=e.match(/^(?:[a-z]|(?:[0-9\ \+\-\,\.\(\)]+[a-z])+[0-9\ \+\-\,\.\(\)]*|(?:[a-z][0-9\ \+\-\,\.\(\)]+)+[a-z]?)$/);if(t){return{match_:t[0],remainder:e.substr(t[0].length)}}return null},uprightEntities:/^(?:pH|pOH|pC|pK|iPr|iBu)(?=$|[^a-zA-Z])/,"/":/^\s*(\/)\s*/,"//":/^\s*(\/\/)\s*/,"*":/^\s*[*.]\s*/},findObserveGroups:function(e,t,r,n,a,o,i,l,s,m){var u=function(e,t){if(typeof t==="string"){if(e.indexOf(t)!==0){return null}return t}else{var r=e.match(t);if(!r){return null}return r[0]}};var c=function(e,t,r){var n=0;while(t<e.length){var a=e.charAt(t);var o=u(e.substr(t),r);if(o!==null&&n===0){return{endMatchBegin:t,endMatchEnd:t+o.length}}else if(a==="{"){n++}else if(a==="}"){if(n===0){throw["ExtraCloseMissingOpen","Extra close brace or missing open brace"]}else{n--}}t++}if(n>0){return null}return null};var d=u(e,t);if(d===null){return null}e=e.substr(d.length);d=u(e,r);if(d===null){return null}var p=c(e,d.length,n||a);if(p===null){return null}var h=e.substring(0,n?p.endMatchEnd:p.endMatchBegin);if(!(o||i)){return{match_:h,remainder:e.substr(p.endMatchEnd)}}else{var f=this.findObserveGroups(e.substr(p.endMatchEnd),o,i,l,s);if(f===null){return null}var b=[h,f.match_];return{match_:m?b.join(""):b,remainder:f.remainder}}},match_:function(e,t){var r=mhchemParser.patterns.patterns[e];if(r===undefined){throw["MhchemBugP","mhchem bug P. Please report. ("+e+")"]}else if(typeof r==="function"){return mhchemParser.patterns.patterns[e](t)}else{var n=t.match(r);if(n){var a;if(n[2]){a=[n[1],n[2]]}else if(n[1]){a=n[1]}else{a=n[0]}return{match_:a,remainder:t.substr(n[0].length)}}return null}}},actions:{"a=":function(e,t){e.a=(e.a||"")+t},"b=":function(e,t){e.b=(e.b||"")+t},"p=":function(e,t){e.p=(e.p||"")+t},"o=":function(e,t){e.o=(e.o||"")+t},"q=":function(e,t){e.q=(e.q||"")+t},"d=":function(e,t){e.d=(e.d||"")+t},"rm=":function(e,t){e.rm=(e.rm||"")+t},"text=":function(e,t){e.text_=(e.text_||"")+t},insert:function(e,t,r){return{type_:r}},"insert+p1":function(e,t,r){return{type_:r,p1:t}},"insert+p1+p2":function(e,t,r){return{type_:r,p1:t[0],p2:t[1]}},copy:function(e,t){return t},rm:function(e,t){return{type_:"rm",p1:t||""}},text:function(e,t){return mhchemParser.go(t,"text")},"{text}":function(e,t){var r=["{"];mhchemParser.concatArray(r,mhchemParser.go(t,"text"));r.push("}");return r},"tex-math":function(e,t){return mhchemParser.go(t,"tex-math")},"tex-math tight":function(e,t){return mhchemParser.go(t,"tex-math tight")},bond:function(e,t,r){return{type_:"bond",kind_:r||t}},"color0-output":function(e,t){return{type_:"color0",color:t[0]}},ce:function(e,t){return mhchemParser.go(t)},"1/2":function(e,t){var r=[];if(t.match(/^[+\-]/)){r.push(t.substr(0,1));t=t.substr(1)}var n=t.match(/^([0-9]+|\$[a-z]\$|[a-z])\/([0-9]+)(\$[a-z]\$|[a-z])?$/);n[1]=n[1].replace(/\$/g,"");r.push({type_:"frac",p1:n[1],p2:n[2]});if(n[3]){n[3]=n[3].replace(/\$/g,"");r.push({type_:"tex-math",p1:n[3]})}return r},"9,9":function(e,t){return mhchemParser.go(t,"9,9")}},createTransitions:function(e){var t,r;var n;var a;var o={};for(t in e){for(r in e[t]){n=r.split("|");e[t][r].stateArray=n;for(a=0;a<n.length;a++){o[n[a]]=[]}}}for(t in e){for(r in e[t]){n=e[t][r].stateArray||[];for(a=0;a<n.length;a++){var i=e[t][r];if(i.action_){i.action_=[].concat(i.action_);for(var l=0;l<i.action_.length;l++){if(typeof i.action_[l]==="string"){i.action_[l]={type_:i.action_[l]}}}}else{i.action_=[]}var s=t.split("|");for(var m=0;m<s.length;m++){if(n[a]==="*"){for(var u in o){o[u].push({pattern:s[m],task:i})}}else{o[n[a]].push({pattern:s[m],task:i})}}}}}return o},stateMachines:{}};mhchemParser.stateMachines={ce:{transitions:mhchemParser.createTransitions({empty:{"*":{action_:"output"}},else:{"0|1|2":{action_:"beginsWithBond=false",revisit:true,toContinue:true}},oxidation$:{0:{action_:"oxidation-output"}},CMT:{r:{action_:"rdt=",nextState:"rt"},rd:{action_:"rqt=",nextState:"rdt"}},arrowUpDown:{"0|1|2|as":{action_:["sb=false","output","operator"],nextState:"1"}},uprightEntities:{"0|1|2":{action_:["o=","output"],nextState:"1"}},orbital:{"0|1|2|3":{action_:"o=",nextState:"o"}},"->":{"0|1|2|3":{action_:"r=",nextState:"r"},"a|as":{action_:["output","r="],nextState:"r"},"*":{action_:["output","r="],nextState:"r"}},"+":{o:{action_:"d= kv",nextState:"d"},"d|D":{action_:"d=",nextState:"d"},q:{action_:"d=",nextState:"qd"},"qd|qD":{action_:"d=",nextState:"qd"},dq:{action_:["output","d="],nextState:"d"},3:{action_:["sb=false","output","operator"],nextState:"0"}},amount:{"0|2":{action_:"a=",nextState:"a"}},"pm-operator":{"0|1|2|a|as":{action_:["sb=false","output",{type_:"operator",option:"\\pm"}],nextState:"0"}},operator:{"0|1|2|a|as":{action_:["sb=false","output","operator"],nextState:"0"}},"-$":{"o|q":{action_:["charge or bond","output"],nextState:"qd"},d:{action_:"d=",nextState:"d"},D:{action_:["output",{type_:"bond",option:"-"}],nextState:"3"},q:{action_:"d=",nextState:"qd"},qd:{action_:"d=",nextState:"qd"},"qD|dq":{action_:["output",{type_:"bond",option:"-"}],nextState:"3"}},"-9":{"3|o":{action_:["output",{type_:"insert",option:"hyphen"}],nextState:"3"}},"- orbital overlap":{o:{action_:["output",{type_:"insert",option:"hyphen"}],nextState:"2"},d:{action_:["output",{type_:"insert",option:"hyphen"}],nextState:"2"}},"-":{"0|1|2":{action_:[{type_:"output",option:1},"beginsWithBond=true",{type_:"bond",option:"-"}],nextState:"3"},3:{action_:{type_:"bond",option:"-"}},a:{action_:["output",{type_:"insert",option:"hyphen"}],nextState:"2"},as:{action_:[{type_:"output",option:2},{type_:"bond",option:"-"}],nextState:"3"},b:{action_:"b="},o:{action_:{type_:"- after o/d",option:false},nextState:"2"},q:{action_:{type_:"- after o/d",option:false},nextState:"2"},"d|qd|dq":{action_:{type_:"- after o/d",option:true},nextState:"2"},"D|qD|p":{action_:["output",{type_:"bond",option:"-"}],nextState:"3"}},amount2:{"1|3":{action_:"a=",nextState:"a"}},letters:{"0|1|2|3|a|as|b|p|bp|o":{action_:"o=",nextState:"o"},"q|dq":{action_:["output","o="],nextState:"o"},"d|D|qd|qD":{action_:"o after d",nextState:"o"}},digits:{o:{action_:"q=",nextState:"q"},"d|D":{action_:"q=",nextState:"dq"},q:{action_:["output","o="],nextState:"o"},a:{action_:"o=",nextState:"o"}},"space A":{"b|p|bp":{}},space:{a:{nextState:"as"},0:{action_:"sb=false"},"1|2":{action_:"sb=true"},"r|rt|rd|rdt|rdq":{action_:"output",nextState:"0"},"*":{action_:["output","sb=true"],nextState:"1"}},"1st-level escape":{"1|2":{action_:["output",{type_:"insert+p1",option:"1st-level escape"}]},"*":{action_:["output",{type_:"insert+p1",option:"1st-level escape"}],nextState:"0"}},"[(...)]":{"r|rt":{action_:"rd=",nextState:"rd"},"rd|rdt":{action_:"rq=",nextState:"rdq"}},"...":{"o|d|D|dq|qd|qD":{action_:["output",{type_:"bond",option:"..."}],nextState:"3"},"*":{action_:[{type_:"output",option:1},{type_:"insert",option:"ellipsis"}],nextState:"1"}},". |* ":{"*":{action_:["output",{type_:"insert",option:"addition compound"}],nextState:"1"}},"state of aggregation $":{"*":{action_:["output","state of aggregation"],nextState:"1"}},"{[(":{"a|as|o":{action_:["o=","output","parenthesisLevel++"],nextState:"2"},"0|1|2|3":{action_:["o=","output","parenthesisLevel++"],nextState:"2"},"*":{action_:["output","o=","output","parenthesisLevel++"],nextState:"2"}},")]}":{"0|1|2|3|b|p|bp|o":{action_:["o=","parenthesisLevel--"],nextState:"o"},"a|as|d|D|q|qd|qD|dq":{action_:["output","o=","parenthesisLevel--"],nextState:"o"}},", ":{"*":{action_:["output","comma"],nextState:"0"}},"^_":{"*":{}},"^{(...)}|^($...$)":{"0|1|2|as":{action_:"b=",nextState:"b"},p:{action_:"b=",nextState:"bp"},"3|o":{action_:"d= kv",nextState:"D"},q:{action_:"d=",nextState:"qD"},"d|D|qd|qD|dq":{action_:["output","d="],nextState:"D"}},"^a|^\\x{}{}|^\\x{}|^\\x|'":{"0|1|2|as":{action_:"b=",nextState:"b"},p:{action_:"b=",nextState:"bp"},"3|o":{action_:"d= kv",nextState:"d"},q:{action_:"d=",nextState:"qd"},"d|qd|D|qD":{action_:"d="},dq:{action_:["output","d="],nextState:"d"}},"_{(state of aggregation)}$":{"d|D|q|qd|qD|dq":{action_:["output","q="],nextState:"q"}},"_{(...)}|_($...$)|_9|_\\x{}{}|_\\x{}|_\\x":{"0|1|2|as":{action_:"p=",nextState:"p"},b:{action_:"p=",nextState:"bp"},"3|o":{action_:"q=",nextState:"q"},"d|D":{action_:"q=",nextState:"dq"},"q|qd|qD|dq":{action_:["output","q="],nextState:"q"}},"=<>":{"0|1|2|3|a|as|o|q|d|D|qd|qD|dq":{action_:[{type_:"output",option:2},"bond"],nextState:"3"}},"#":{"0|1|2|3|a|as|o":{action_:[{type_:"output",option:2},{type_:"bond",option:"#"}],nextState:"3"}},"{}":{"*":{action_:{type_:"output",option:1},nextState:"1"}},"{...}":{"0|1|2|3|a|as|b|p|bp":{action_:"o=",nextState:"o"},"o|d|D|q|qd|qD|dq":{action_:["output","o="],nextState:"o"}},"$...$":{a:{action_:"a="},"0|1|2|3|as|b|p|bp|o":{action_:"o=",nextState:"o"},"as|o":{action_:"o="},"q|d|D|qd|qD|dq":{action_:["output","o="],nextState:"o"}},"\\bond{(...)}":{"*":{action_:[{type_:"output",option:2},"bond"],nextState:"3"}},"\\frac{(...)}":{"*":{action_:[{type_:"output",option:1},"frac-output"],nextState:"3"}},"\\overset{(...)}":{"*":{action_:[{type_:"output",option:2},"overset-output"],nextState:"3"}},"\\underset{(...)}":{"*":{action_:[{type_:"output",option:2},"underset-output"],nextState:"3"}},"\\underbrace{(...)}":{"*":{action_:[{type_:"output",option:2},"underbrace-output"],nextState:"3"}},"\\color{(...)}{(...)}1|\\color(...){(...)}2":{"*":{action_:[{type_:"output",option:2},"color-output"],nextState:"3"}},"\\color{(...)}0":{"*":{action_:[{type_:"output",option:2},"color0-output"]}},"\\ce{(...)}":{"*":{action_:[{type_:"output",option:2},"ce"],nextState:"3"}},"\\,":{"*":{action_:[{type_:"output",option:1},"copy"],nextState:"1"}},"\\x{}{}|\\x{}|\\x":{"0|1|2|3|a|as|b|p|bp|o|c0":{action_:["o=","output"],nextState:"3"},"*":{action_:["output","o=","output"],nextState:"3"}},others:{"*":{action_:[{type_:"output",option:1},"copy"],nextState:"3"}},else2:{a:{action_:"a to o",nextState:"o",revisit:true},as:{action_:["output","sb=true"],nextState:"1",revisit:true},"r|rt|rd|rdt|rdq":{action_:["output"],nextState:"0",revisit:true},"*":{action_:["output","copy"],nextState:"3"}}}),actions:{"o after d":function(e,t){var r;if((e.d||"").match(/^[0-9]+$/)){var n=e.d;e.d=undefined;r=this["output"](e);e.b=n}else{r=this["output"](e)}mhchemParser.actions["o="](e,t);return r},"d= kv":function(e,t){e.d=t;e.dType="kv"},"charge or bond":function(e,t){if(e["beginsWithBond"]){var r=[];mhchemParser.concatArray(r,this["output"](e));mhchemParser.concatArray(r,mhchemParser.actions["bond"](e,t,"-"));return r}else{e.d=t}},"- after o/d":function(e,t,r){var n=mhchemParser.patterns.match_("orbital",e.o||"");var a=mhchemParser.patterns.match_("one lowercase greek letter $",e.o||"");var o=mhchemParser.patterns.match_("one lowercase latin letter $",e.o||"");var i=mhchemParser.patterns.match_("$one lowercase latin letter$ $",e.o||"");var l=t==="-"&&(n&&n.remainder===""||a||o||i);if(l&&!e.a&&!e.b&&!e.p&&!e.d&&!e.q&&!n&&o){e.o="$"+e.o+"$"}var s=[];if(l){mhchemParser.concatArray(s,this["output"](e));s.push({type_:"hyphen"})}else{n=mhchemParser.patterns.match_("digits",e.d||"");if(r&&n&&n.remainder===""){mhchemParser.concatArray(s,mhchemParser.actions["d="](e,t));mhchemParser.concatArray(s,this["output"](e))}else{mhchemParser.concatArray(s,this["output"](e));mhchemParser.concatArray(s,mhchemParser.actions["bond"](e,t,"-"))}}return s},"a to o":function(e){e.o=e.a;e.a=undefined},"sb=true":function(e){e.sb=true},"sb=false":function(e){e.sb=false},"beginsWithBond=true":function(e){e["beginsWithBond"]=true},"beginsWithBond=false":function(e){e["beginsWithBond"]=false},"parenthesisLevel++":function(e){e["parenthesisLevel"]++},"parenthesisLevel--":function(e){e["parenthesisLevel"]--},"state of aggregation":function(e,t){return{type_:"state of aggregation",p1:mhchemParser.go(t,"o")}},comma:function(e,t){var r=t.replace(/\s*$/,"");var n=r!==t;if(n&&e["parenthesisLevel"]===0){return{type_:"comma enumeration L",p1:r}}else{return{type_:"comma enumeration M",p1:r}}},output:function(e,t,r){var n;if(!e.r){n=[];if(!e.a&&!e.b&&!e.p&&!e.o&&!e.q&&!e.d&&!r);else{if(e.sb){n.push({type_:"entitySkip"})}if(!e.o&&!e.q&&!e.d&&!e.b&&!e.p&&r!==2){e.o=e.a;e.a=undefined}else if(!e.o&&!e.q&&!e.d&&(e.b||e.p)){e.o=e.a;e.d=e.b;e.q=e.p;e.a=e.b=e.p=undefined}else{if(e.o&&e.dType==="kv"&&mhchemParser.patterns.match_("d-oxidation$",e.d||"")){e.dType="oxidation"}else if(e.o&&e.dType==="kv"&&!e.q){e.dType=undefined}}n.push({type_:"chemfive",a:mhchemParser.go(e.a,"a"),b:mhchemParser.go(e.b,"bd"),p:mhchemParser.go(e.p,"pq"),o:mhchemParser.go(e.o,"o"),q:mhchemParser.go(e.q,"pq"),d:mhchemParser.go(e.d,e.dType==="oxidation"?"oxidation":"bd"),dType:e.dType})}}else{var a;if(e.rdt==="M"){a=mhchemParser.go(e.rd,"tex-math")}else if(e.rdt==="T"){a=[{type_:"text",p1:e.rd||""}]}else{a=mhchemParser.go(e.rd)}var o;if(e.rqt==="M"){o=mhchemParser.go(e.rq,"tex-math")}else if(e.rqt==="T"){o=[{type_:"text",p1:e.rq||""}]}else{o=mhchemParser.go(e.rq)}n={type_:"arrow",r:e.r,rd:a,rq:o}}for(var i in e){if(i!=="parenthesisLevel"&&i!=="beginsWithBond"){delete e[i]}}return n},"oxidation-output":function(e,t){var r=["{"];mhchemParser.concatArray(r,mhchemParser.go(t,"oxidation"));r.push("}");return r},"frac-output":function(e,t){return{type_:"frac-ce",p1:mhchemParser.go(t[0]),p2:mhchemParser.go(t[1])}},"overset-output":function(e,t){return{type_:"overset",p1:mhchemParser.go(t[0]),p2:mhchemParser.go(t[1])}},"underset-output":function(e,t){return{type_:"underset",p1:mhchemParser.go(t[0]),p2:mhchemParser.go(t[1])}},"underbrace-output":function(e,t){return{type_:"underbrace",p1:mhchemParser.go(t[0]),p2:mhchemParser.go(t[1])}},"color-output":function(e,t){return{type_:"color",color1:t[0],color2:mhchemParser.go(t[1])}},"r=":function(e,t){e.r=t},"rdt=":function(e,t){e.rdt=t},"rd=":function(e,t){e.rd=t},"rqt=":function(e,t){e.rqt=t},"rq=":function(e,t){e.rq=t},operator:function(e,t,r){return{type_:"operator",kind_:r||t}}}},a:{transitions:mhchemParser.createTransitions({empty:{"*":{}},"1/2$":{0:{action_:"1/2"}},else:{0:{nextState:"1",revisit:true}},"$(...)$":{"*":{action_:"tex-math tight",nextState:"1"}},",":{"*":{action_:{type_:"insert",option:"commaDecimal"}}},else2:{"*":{action_:"copy"}}}),actions:{}},o:{transitions:mhchemParser.createTransitions({empty:{"*":{}},"1/2$":{0:{action_:"1/2"}},else:{0:{nextState:"1",revisit:true}},letters:{"*":{action_:"rm"}},"\\ca":{"*":{action_:{type_:"insert",option:"circa"}}},"\\x{}{}|\\x{}|\\x":{"*":{action_:"copy"}},"${(...)}$|$(...)$":{"*":{action_:"tex-math"}},"{(...)}":{"*":{action_:"{text}"}},else2:{"*":{action_:"copy"}}}),actions:{}},text:{transitions:mhchemParser.createTransitions({empty:{"*":{action_:"output"}},"{...}":{"*":{action_:"text="}},"${(...)}$|$(...)$":{"*":{action_:"tex-math"}},"\\greek":{"*":{action_:["output","rm"]}},"\\,|\\x{}{}|\\x{}|\\x":{"*":{action_:["output","copy"]}},else:{"*":{action_:"text="}}}),actions:{output:function(e){if(e.text_){var t={type_:"text",p1:e.text_};for(var r in e){delete e[r]}return t}}}},pq:{transitions:mhchemParser.createTransitions({empty:{"*":{}},"state of aggregation $":{"*":{action_:"state of aggregation"}},i$:{0:{nextState:"!f",revisit:true}},"(KV letters),":{0:{action_:"rm",nextState:"0"}},formula$:{0:{nextState:"f",revisit:true}},"1/2$":{0:{action_:"1/2"}},else:{0:{nextState:"!f",revisit:true}},"${(...)}$|$(...)$":{"*":{action_:"tex-math"}},"{(...)}":{"*":{action_:"text"}},"a-z":{f:{action_:"tex-math"}},letters:{"*":{action_:"rm"}},"-9.,9":{"*":{action_:"9,9"}},",":{"*":{action_:{type_:"insert+p1",option:"comma enumeration S"}}},"\\color{(...)}{(...)}1|\\color(...){(...)}2":{"*":{action_:"color-output"}},"\\color{(...)}0":{"*":{action_:"color0-output"}},"\\ce{(...)}":{"*":{action_:"ce"}},"\\,|\\x{}{}|\\x{}|\\x":{"*":{action_:"copy"}},else2:{"*":{action_:"copy"}}}),actions:{"state of aggregation":function(e,t){return{type_:"state of aggregation subscript",p1:mhchemParser.go(t,"o")}},"color-output":function(e,t){return{type_:"color",color1:t[0],color2:mhchemParser.go(t[1],"pq")}}}},bd:{transitions:mhchemParser.createTransitions({empty:{"*":{}},x$:{0:{nextState:"!f",revisit:true}},formula$:{0:{nextState:"f",revisit:true}},else:{0:{nextState:"!f",revisit:true}},"-9.,9 no missing 0":{"*":{action_:"9,9"}},".":{"*":{action_:{type_:"insert",option:"electron dot"}}},"a-z":{f:{action_:"tex-math"}},x:{"*":{action_:{type_:"insert",option:"KV x"}}},letters:{"*":{action_:"rm"}},"'":{"*":{action_:{type_:"insert",option:"prime"}}},"${(...)}$|$(...)$":{"*":{action_:"tex-math"}},"{(...)}":{"*":{action_:"text"}},"\\color{(...)}{(...)}1|\\color(...){(...)}2":{"*":{action_:"color-output"}},"\\color{(...)}0":{"*":{action_:"color0-output"}},"\\ce{(...)}":{"*":{action_:"ce"}},"\\,|\\x{}{}|\\x{}|\\x":{"*":{action_:"copy"}},else2:{"*":{action_:"copy"}}}),actions:{"color-output":function(e,t){return{type_:"color",color1:t[0],color2:mhchemParser.go(t[1],"bd")}}}},oxidation:{transitions:mhchemParser.createTransitions({empty:{"*":{}},"roman numeral":{"*":{action_:"roman-numeral"}},"${(...)}$|$(...)$":{"*":{action_:"tex-math"}},else:{"*":{action_:"copy"}}}),actions:{"roman-numeral":function(e,t){return{type_:"roman numeral",p1:t||""}}}},"tex-math":{transitions:mhchemParser.createTransitions({empty:{"*":{action_:"output"}},"\\ce{(...)}":{"*":{action_:["output","ce"]}},"{...}|\\,|\\x{}{}|\\x{}|\\x":{"*":{action_:"o="}},else:{"*":{action_:"o="}}}),actions:{output:function(e){if(e.o){var t={type_:"tex-math",p1:e.o};for(var r in e){delete e[r]}return t}}}},"tex-math tight":{transitions:mhchemParser.createTransitions({empty:{"*":{action_:"output"}},"\\ce{(...)}":{"*":{action_:["output","ce"]}},"{...}|\\,|\\x{}{}|\\x{}|\\x":{"*":{action_:"o="}},"-|+":{"*":{action_:"tight operator"}},else:{"*":{action_:"o="}}}),actions:{"tight operator":function(e,t){e.o=(e.o||"")+"{"+t+"}"},output:function(e){if(e.o){var t={type_:"tex-math",p1:e.o};for(var r in e){delete e[r]}return t}}}},"9,9":{transitions:mhchemParser.createTransitions({empty:{"*":{}},",":{"*":{action_:"comma"}},else:{"*":{action_:"copy"}}}),actions:{comma:function(){return{type_:"commaDecimal"}}}},pu:{transitions:mhchemParser.createTransitions({empty:{"*":{action_:"output"}},space$:{"*":{action_:["output","space"]}},"{[(|)]}":{"0|a":{action_:"copy"}},"(-)(9)^(-9)":{0:{action_:"number^",nextState:"a"}},"(-)(9.,9)(e)(99)":{0:{action_:"enumber",nextState:"a"}},space:{"0|a":{}},"pm-operator":{"0|a":{action_:{type_:"operator",option:"\\pm"},nextState:"0"}},operator:{"0|a":{action_:"copy",nextState:"0"}},"//":{d:{action_:"o=",nextState:"/"}},"/":{d:{action_:"o=",nextState:"/"}},"{...}|else":{"0|d":{action_:"d=",nextState:"d"},a:{action_:["space","d="],nextState:"d"},"/|q":{action_:"q=",nextState:"q"}}}),actions:{enumber:function(e,t){var r=[];if(t[0]==="+-"||t[0]==="+/-"){r.push("\\pm ")}else if(t[0]){r.push(t[0])}if(t[1]){mhchemParser.concatArray(r,mhchemParser.go(t[1],"pu-9,9"));if(t[2]){if(t[2].match(/[,.]/)){mhchemParser.concatArray(r,mhchemParser.go(t[2],"pu-9,9"))}else{r.push(t[2])}}t[3]=t[4]||t[3];if(t[3]){t[3]=t[3].trim();if(t[3]==="e"||t[3].substr(0,1)==="*"){r.push({type_:"cdot"})}else{r.push({type_:"times"})}}}if(t[3]){r.push("10^{"+t[5]+"}")}return r},"number^":function(e,t){var r=[];if(t[0]==="+-"||t[0]==="+/-"){r.push("\\pm ")}else if(t[0]){r.push(t[0])}mhchemParser.concatArray(r,mhchemParser.go(t[1],"pu-9,9"));r.push("^{"+t[2]+"}");return r},operator:function(e,t,r){return{type_:"operator",kind_:r||t}},space:function(){return{type_:"pu-space-1"}},output:function(e){var t;var r=mhchemParser.patterns.match_("{(...)}",e.d||"");if(r&&r.remainder===""){e.d=r.match_}var n=mhchemParser.patterns.match_("{(...)}",e.q||"");if(n&&n.remainder===""){e.q=n.match_}if(e.d){e.d=e.d.replace(/\u00B0C|\^oC|\^{o}C/g,"{}^{\\circ}C");e.d=e.d.replace(/\u00B0F|\^oF|\^{o}F/g,"{}^{\\circ}F")}if(e.q){e.q=e.q.replace(/\u00B0C|\^oC|\^{o}C/g,"{}^{\\circ}C");e.q=e.q.replace(/\u00B0F|\^oF|\^{o}F/g,"{}^{\\circ}F");var a={d:mhchemParser.go(e.d,"pu"),q:mhchemParser.go(e.q,"pu")};if(e.o==="//"){t={type_:"pu-frac",p1:a.d,p2:a.q}}else{t=a.d;if(a.d.length>1||a.q.length>1){t.push({type_:" / "})}else{t.push({type_:"/"})}mhchemParser.concatArray(t,a.q)}}else{t=mhchemParser.go(e.d,"pu-2")}for(var o in e){delete e[o]}return t}}},"pu-2":{transitions:mhchemParser.createTransitions({empty:{"*":{action_:"output"}},"*":{"*":{action_:["output","cdot"],nextState:"0"}},"\\x":{"*":{action_:"rm="}},space:{"*":{action_:["output","space"],nextState:"0"}},"^{(...)}|^(-1)":{1:{action_:"^(-1)"}},"-9.,9":{0:{action_:"rm=",nextState:"0"},1:{action_:"^(-1)",nextState:"0"}},"{...}|else":{"*":{action_:"rm=",nextState:"1"}}}),actions:{cdot:function(){return{type_:"tight cdot"}},"^(-1)":function(e,t){e.rm+="^{"+t+"}"},space:function(){return{type_:"pu-space-2"}},output:function(e){var t=[];if(e.rm){var r=mhchemParser.patterns.match_("{(...)}",e.rm||"");if(r&&r.remainder===""){t=mhchemParser.go(r.match_,"pu")}else{t={type_:"rm",p1:e.rm}}}for(var n in e){delete e[n]}return t}}},"pu-9,9":{transitions:mhchemParser.createTransitions({empty:{0:{action_:"output-0"},o:{action_:"output-o"}},",":{0:{action_:["output-0","comma"],nextState:"o"}},".":{0:{action_:["output-0","copy"],nextState:"o"}},else:{"*":{action_:"text="}}}),actions:{comma:function(){return{type_:"commaDecimal"}},"output-0":function(e){var t=[];e.text_=e.text_||"";if(e.text_.length>4){var r=e.text_.length%3;if(r===0){r=3}for(var n=e.text_.length-3;n>0;n-=3){t.push(e.text_.substr(n,3));t.push({type_:"1000 separator"})}t.push(e.text_.substr(0,r));t.reverse()}else{t.push(e.text_)}for(var a in e){delete e[a]}return t},"output-o":function(e){var t=[];e.text_=e.text_||"";if(e.text_.length>4){var r=e.text_.length-3;for(var n=0;n<r;n+=3){t.push(e.text_.substr(n,3));t.push({type_:"1000 separator"})}t.push(e.text_.substr(n))}else{t.push(e.text_)}for(var a in e){delete e[a]}return t}}}};var texify={go:function(e,t){if(!e){return""}var r="";var n=false;for(var a=0;a<e.length;a++){var o=e[a];if(typeof o==="string"){r+=o}else{r+=texify._go2(o);if(o.type_==="1st-level escape"){n=true}}}if(!t&&!n&&r){r="{"+r+"}"}return r},_goInner:function(e){if(!e){return e}return texify.go(e,true)},_go2:function(e){var t;switch(e.type_){case"chemfive":t="";var r={a:texify._goInner(e.a),b:texify._goInner(e.b),p:texify._goInner(e.p),o:texify._goInner(e.o),q:texify._goInner(e.q),d:texify._goInner(e.d)};if(r.a){if(r.a.match(/^[+\-]/)){r.a="{"+r.a+"}"}t+=r.a+"\\,"}if(r.b||r.p){t+="{\\vphantom{X}}";t+="^{\\hphantom{"+(r.b||"")+"}}_{\\hphantom{"+(r.p||"")+"}}";t+="{\\vphantom{X}}";t+="^{\\smash[t]{\\vphantom{2}}\\mathllap{"+(r.b||"")+"}}";t+="_{\\vphantom{2}\\mathllap{\\smash[t]{"+(r.p||"")+"}}}"}if(r.o){if(r.o.match(/^[+\-]/)){r.o="{"+r.o+"}"}t+=r.o}if(e.dType==="kv"){if(r.d||r.q){t+="{\\vphantom{X}}"}if(r.d){t+="^{"+r.d+"}"}if(r.q){t+="_{\\smash[t]{"+r.q+"}}"}}else if(e.dType==="oxidation"){if(r.d){t+="{\\vphantom{X}}";t+="^{"+r.d+"}"}if(r.q){t+="{{}}";t+="_{\\smash[t]{"+r.q+"}}"}}else{if(r.q){t+="{{}}";t+="_{\\smash[t]{"+r.q+"}}"}if(r.d){t+="{{}}";t+="^{"+r.d+"}"}}break;case"rm":t="\\mathrm{"+e.p1+"}";break;case"text":if(e.p1.match(/[\^_]/)){e.p1=e.p1.replace(" ","~").replace("-","\\text{-}");t="\\mathrm{"+e.p1+"}"}else{t="\\text{"+e.p1+"}"}break;case"roman numeral":t="\\mathrm{"+e.p1+"}";break;case"state of aggregation":t="\\mskip2mu "+texify._goInner(e.p1);break;case"state of aggregation subscript":t="\\mskip1mu "+texify._goInner(e.p1);break;case"bond":t=texify._getBond(e.kind_);if(!t){throw["MhchemErrorBond","mhchem Error. Unknown bond type ("+e.kind_+")"]}break;case"frac":var n="\\frac{"+e.p1+"}{"+e.p2+"}";t="\\mathchoice{\\textstyle"+n+"}{"+n+"}{"+n+"}{"+n+"}";break;case"pu-frac":var a="\\frac{"+texify._goInner(e.p1)+"}{"+texify._goInner(e.p2)+"}";t="\\mathchoice{\\textstyle"+a+"}{"+a+"}{"+a+"}{"+a+"}";break;case"tex-math":t=e.p1+" ";break;case"frac-ce":t="\\frac{"+texify._goInner(e.p1)+"}{"+texify._goInner(e.p2)+"}";break;case"overset":t="\\overset{"+texify._goInner(e.p1)+"}{"+texify._goInner(e.p2)+"}";break;case"underset":t="\\underset{"+texify._goInner(e.p1)+"}{"+texify._goInner(e.p2)+"}";break;case"underbrace":t="\\underbrace{"+texify._goInner(e.p1)+"}_{"+texify._goInner(e.p2)+"}";break;case"color":t="{\\color{"+e.color1+"}{"+texify._goInner(e.color2)+"}}";break;case"color0":t="\\color{"+e.color+"}";break;case"arrow":var o={rd:texify._goInner(e.rd),rq:texify._goInner(e.rq)};var i=texify._getArrow(e.r);if(o.rq){i+="[{\\rm "+o.rq+"}]"}if(o.rd){i+="{\\rm "+o.rd+"}"}else{i+="{}"}t=i;break;case"operator":t=texify._getOperator(e.kind_);break;case"1st-level escape":t=e.p1+" ";break;case"space":t=" ";break;case"entitySkip":t="~";break;case"pu-space-1":t="~";break;case"pu-space-2":t="\\mkern3mu ";break;case"1000 separator":t="\\mkern2mu ";break;case"commaDecimal":t="{,}";break;case"comma enumeration L":t="{"+e.p1+"}\\mkern6mu ";break;case"comma enumeration M":t="{"+e.p1+"}\\mkern3mu ";break;case"comma enumeration S":t="{"+e.p1+"}\\mkern1mu ";break;case"hyphen":t="\\text{-}";break;case"addition compound":t="\\,{\\cdot}\\,";break;case"electron dot":t="\\mkern1mu \\text{\\textbullet}\\mkern1mu ";break;case"KV x":t="{\\times}";break;case"prime":t="\\prime ";break;case"cdot":t="\\cdot ";break;case"tight cdot":t="\\mkern1mu{\\cdot}\\mkern1mu ";break;case"times":t="\\times ";break;case"circa":t="{\\sim}";break;case"^":t="uparrow";break;case"v":t="downarrow";break;case"ellipsis":t="\\ldots ";break;case"/":t="/";break;case" / ":t="\\,/\\,";break;default:throw["MhchemBugT","mhchem bug T. Please report."]}return t},_getArrow:function(e){switch(e){case"->":return"\\yields";case"→":return"\\yields";case"⟶":return"\\yields";case"<-":return"\\yieldsLeft";case"<->":return"\\mesomerism";case"<--\x3e":return"\\yieldsLeftRight";case"<=>":return"\\equilibrium";case"⇌":return"\\equilibrium";case"<=>>":return"\\equilibriumRight";case"<<=>":return"\\equilibriumLeft";default:throw["MhchemBugT","mhchem bug T. Please report."]}},_getBond:function(e){switch(e){case"-":return"{-}";case"1":return"{-}";case"=":return"{=}";case"2":return"{=}";case"#":return"{\\equiv}";case"3":return"{\\equiv}";case"~":return"{\\tripleDash}";case"~-":return"{\\tripleDashOverLine}";case"~=":return"{\\tripleDashOverDoubleLine}";case"~--":return"{\\tripleDashOverDoubleLine}";case"-~-":return"{\\tripleDashBetweenDoubleLine}";case"...":return"{{\\cdot}{\\cdot}{\\cdot}}";case"....":return"{{\\cdot}{\\cdot}{\\cdot}{\\cdot}}";case"->":return"{\\rightarrow}";case"<-":return"{\\leftarrow}";case"<":return"{<}";case">":return"{>}";default:throw["MhchemBugT","mhchem bug T. Please report."]}},_getOperator:function(e){switch(e){case"+":return" {}+{} ";case"-":return" {}-{} ";case"=":return" {}={} ";case"<":return" {}<{} ";case">":return" {}>{} ";case"<<":return" {}\\ll{} ";case">>":return" {}\\gg{} ";case"\\pm":return" {}\\pm{} ";case"\\approx":return" {}\\approx{} ";case"$\\approx$":return" {}\\approx{} ";case"v":return" \\downarrow{} ";case"(v)":return" \\downarrow{} ";case"^":return" \\uparrow{} ";case"(^)":return" \\uparrow{} ";default:throw["MhchemBugT","mhchem bug T. Please report."]}}};defineMacro$1("\\darr","\\downarrow");defineMacro$1("\\dArr","\\Downarrow");defineMacro$1("\\Darr","\\Downarrow");defineMacro$1("\\lang","\\langle");defineMacro$1("\\rang","\\rangle");defineMacro$1("\\uarr","\\uparrow");defineMacro$1("\\uArr","\\Uparrow");defineMacro$1("\\Uarr","\\Uparrow");defineMacro$1("\\N","\\mathbb{N}");defineMacro$1("\\R","\\mathbb{R}");defineMacro$1("\\Z","\\mathbb{Z}");defineMacro$1("\\alef","\\aleph");defineMacro$1("\\alefsym","\\aleph");defineMacro$1("\\bull","\\bullet");defineMacro$1("\\clubs","\\clubsuit");defineMacro$1("\\cnums","\\mathbb{C}");defineMacro$1("\\Complex","\\mathbb{C}");defineMacro$1("\\Dagger","\\ddagger");defineMacro$1("\\diamonds","\\diamondsuit");defineMacro$1("\\empty","\\emptyset");defineMacro$1("\\exist","\\exists");defineMacro$1("\\harr","\\leftrightarrow");defineMacro$1("\\hArr","\\Leftrightarrow");defineMacro$1("\\Harr","\\Leftrightarrow");defineMacro$1("\\hearts","\\heartsuit");defineMacro$1("\\image","\\Im");defineMacro$1("\\infin","\\infty");defineMacro$1("\\isin","\\in");defineMacro$1("\\larr","\\leftarrow");defineMacro$1("\\lArr","\\Leftarrow");defineMacro$1("\\Larr","\\Leftarrow");defineMacro$1("\\lrarr","\\leftrightarrow");defineMacro$1("\\lrArr","\\Leftrightarrow");defineMacro$1("\\Lrarr","\\Leftrightarrow");defineMacro$1("\\natnums","\\mathbb{N}");defineMacro$1("\\plusmn","\\pm");defineMacro$1("\\rarr","\\rightarrow");defineMacro$1("\\rArr","\\Rightarrow");defineMacro$1("\\Rarr","\\Rightarrow");defineMacro$1("\\real","\\Re");defineMacro$1("\\reals","\\mathbb{R}");defineMacro$1("\\Reals","\\mathbb{R}");defineMacro$1("\\sdot","\\cdot");defineMacro$1("\\sect","\\S");defineMacro$1("\\spades","\\spadesuit");defineMacro$1("\\sub","\\subset");defineMacro$1("\\sube","\\subseteq");defineMacro$1("\\supe","\\supseteq");defineMacro$1("\\thetasym","\\vartheta");defineMacro$1("\\weierp","\\wp");defineMacro$1("\\quantity","{\\left\\{ #1 \\right\\}}");defineMacro$1("\\qty","{\\left\\{ #1 \\right\\}}");defineMacro$1("\\pqty","{\\left( #1 \\right)}");defineMacro$1("\\bqty","{\\left[ #1 \\right]}");defineMacro$1("\\vqty","{\\left\\vert #1 \\right\\vert}");defineMacro$1("\\Bqty","{\\left\\{ #1 \\right\\}}");defineMacro$1("\\absolutevalue","{\\left\\vert #1 \\right\\vert}");defineMacro$1("\\abs","{\\left\\vert #1 \\right\\vert}");defineMacro$1("\\norm","{\\left\\Vert #1 \\right\\Vert}");defineMacro$1("\\evaluated","{\\left.#1 \\right\\vert}");defineMacro$1("\\eval","{\\left.#1 \\right\\vert}");defineMacro$1("\\order","{\\mathcal{O} \\left( #1 \\right)}");defineMacro$1("\\commutator","{\\left[ #1 , #2 \\right]}");defineMacro$1("\\comm","{\\left[ #1 , #2 \\right]}");defineMacro$1("\\anticommutator","{\\left\\{ #1 , #2 \\right\\}}");defineMacro$1("\\acomm","{\\left\\{ #1 , #2 \\right\\}}");defineMacro$1("\\poissonbracket","{\\left\\{ #1 , #2 \\right\\}}");defineMacro$1("\\pb","{\\left\\{ #1 , #2 \\right\\}}");defineMacro$1("\\vectorbold","{\\boldsymbol{ #1 }}");defineMacro$1("\\vb","{\\boldsymbol{ #1 }}");defineMacro$1("\\vectorarrow","{\\vec{\\boldsymbol{ #1 }}}");defineMacro$1("\\va","{\\vec{\\boldsymbol{ #1 }}}");defineMacro$1("\\vectorunit","{{\\boldsymbol{\\hat{ #1 }}}}");defineMacro$1("\\vu","{{\\boldsymbol{\\hat{ #1 }}}}");defineMacro$1("\\dotproduct","\\mathbin{\\boldsymbol\\cdot}");defineMacro$1("\\vdot","{\\boldsymbol\\cdot}");defineMacro$1("\\crossproduct","\\mathbin{\\boldsymbol\\times}");defineMacro$1("\\cross","\\mathbin{\\boldsymbol\\times}");defineMacro$1("\\cp","\\mathbin{\\boldsymbol\\times}");defineMacro$1("\\gradient","{\\boldsymbol\\nabla}");defineMacro$1("\\grad","{\\boldsymbol\\nabla}");defineMacro$1("\\divergence","{\\grad\\vdot}");defineMacro$1("\\curl","{\\grad\\cross}");defineMacro$1("\\laplacian","\\nabla^2");defineMacro$1("\\tr","{\\operatorname{tr}}");defineMacro$1("\\Tr","{\\operatorname{Tr}}");defineMacro$1("\\rank","{\\operatorname{rank}}");defineMacro$1("\\erf","{\\operatorname{erf}}");defineMacro$1("\\Res","{\\operatorname{Res}}");defineMacro$1("\\principalvalue","{\\mathcal{P}}");defineMacro$1("\\pv","{\\mathcal{P}}");defineMacro$1("\\PV","{\\operatorname{P.V.}}");defineMacro$1("\\qqtext","{\\quad\\text{ #1 }\\quad}");defineMacro$1("\\qq","{\\quad\\text{ #1 }\\quad}");defineMacro$1("\\qcomma","{\\text{,}\\quad}");defineMacro$1("\\qc","{\\text{,}\\quad}");defineMacro$1("\\qcc","{\\quad\\text{c.c.}\\quad}");defineMacro$1("\\qif","{\\quad\\text{if}\\quad}");defineMacro$1("\\qthen","{\\quad\\text{then}\\quad}");defineMacro$1("\\qelse","{\\quad\\text{else}\\quad}");defineMacro$1("\\qotherwise","{\\quad\\text{otherwise}\\quad}");defineMacro$1("\\qunless","{\\quad\\text{unless}\\quad}");defineMacro$1("\\qgiven","{\\quad\\text{given}\\quad}");defineMacro$1("\\qusing","{\\quad\\text{using}\\quad}");defineMacro$1("\\qassume","{\\quad\\text{assume}\\quad}");defineMacro$1("\\qsince","{\\quad\\text{since}\\quad}");defineMacro$1("\\qlet","{\\quad\\text{let}\\quad}");defineMacro$1("\\qfor","{\\quad\\text{for}\\quad}");defineMacro$1("\\qall","{\\quad\\text{all}\\quad}");defineMacro$1("\\qeven","{\\quad\\text{even}\\quad}");defineMacro$1("\\qodd","{\\quad\\text{odd}\\quad}");defineMacro$1("\\qinteger","{\\quad\\text{integer}\\quad}");defineMacro$1("\\qand","{\\quad\\text{and}\\quad}");defineMacro$1("\\qor","{\\quad\\text{or}\\quad}");defineMacro$1("\\qas","{\\quad\\text{as}\\quad}");defineMacro$1("\\qin","{\\quad\\text{in}\\quad}");defineMacro$1("\\differential","{\\text{d}}");defineMacro$1("\\dd","{\\text{d}}");defineMacro$1("\\derivative","{\\frac{\\text{d}{ #1 }}{\\text{d}{ #2 }}}");defineMacro$1("\\dv","{\\frac{\\text{d}{ #1 }}{\\text{d}{ #2 }}}");defineMacro$1("\\partialderivative","{\\frac{\\partial{ #1 }}{\\partial{ #2 }}}");defineMacro$1("\\variation","{\\delta}");defineMacro$1("\\var","{\\delta}");defineMacro$1("\\functionalderivative","{\\frac{\\delta{ #1 }}{\\delta{ #2 }}}");defineMacro$1("\\fdv","{\\frac{\\delta{ #1 }}{\\delta{ #2 }}}");defineMacro$1("\\innerproduct","{\\left\\langle {#1} \\mid { #2} \\right\\rangle}");defineMacro$1("\\outerproduct","{\\left\\vert { #1 } \\right\\rangle\\left\\langle { #2} \\right\\vert}");defineMacro$1("\\dyad","{\\left\\vert { #1 } \\right\\rangle\\left\\langle { #2} \\right\\vert}");defineMacro$1("\\ketbra","{\\left\\vert { #1 } \\right\\rangle\\left\\langle { #2} \\right\\vert}");defineMacro$1("\\op","{\\left\\vert { #1 } \\right\\rangle\\left\\langle { #2} \\right\\vert}");defineMacro$1("\\expectationvalue","{\\left\\langle {#1 } \\right\\rangle}");defineMacro$1("\\expval","{\\left\\langle {#1 } \\right\\rangle}");defineMacro$1("\\ev","{\\left\\langle {#1 } \\right\\rangle}");defineMacro$1("\\matrixelement","{\\left\\langle{ #1 }\\right\\vert{ #2 }\\left\\vert{#3}\\right\\rangle}");defineMacro$1("\\matrixel","{\\left\\langle{ #1 }\\right\\vert{ #2 }\\left\\vert{#3}\\right\\rangle}");defineMacro$1("\\mel","{\\left\\langle{ #1 }\\right\\vert{ #2 }\\left\\vert{#3}\\right\\rangle}");const implicitCommands$1={"^":true,_:true,"\\limits":true,"\\nolimits":true};class MacroExpander$1{constructor(e,t,r){this.settings=t;this.expansionCount=0;this.feed(e);this.macros=new Namespace$1(macros$1,t.macros);this.mode=r;this.stack=[]}feed(e){this.lexer=new Lexer$1(e,this.settings)}switchMode(e){this.mode=e}beginGroup(){this.macros.beginGroup()}endGroup(){this.macros.endGroup()}future(){if(this.stack.length===0){this.pushToken(this.lexer.lex())}return this.stack[this.stack.length-1]}popToken(){this.future();return this.stack.pop()}pushToken(e){this.stack.push(e)}pushTokens(e){this.stack.push(...e)}scanArgument(e){let t;let r;let n;if(e){this.consumeSpaces();if(this.future().text!=="["){return null}t=this.popToken();({tokens:n,end:r}=this.consumeArg(["]"]))}else{({tokens:n,start:t,end:r}=this.consumeArg())}this.pushToken(new Token$1("EOF",r.loc));this.pushTokens(n);return t.range(r,"")}consumeSpaces(){for(;;){const e=this.future();if(e.text===" "){this.stack.pop()}else{break}}}consumeArg(e){const t=[];const r=e&&e.length>0;if(!r){this.consumeSpaces()}const n=this.future();let a;let o=0;let i=0;do{a=this.popToken();t.push(a);if(a.text==="{"){++o}else if(a.text==="}"){--o;if(o===-1){throw new ParseError$1("Extra }",a)}}else if(a.text==="EOF"){throw new ParseError$1("Unexpected end of input in a macro argument"+", expected '"+(e&&r?e[i]:"}")+"'",a)}if(e&&r){if((o===0||o===1&&e[i]==="{")&&a.text===e[i]){++i;if(i===e.length){t.splice(-i,i);break}}else{i=0}}}while(o!==0||r);if(n.text==="{"&&t[t.length-1].text==="}"){t.pop();t.shift()}t.reverse();return{tokens:t,start:n,end:a}}consumeArgs(e,t){if(t){if(t.length!==e+1){throw new ParseError$1("The length of delimiters doesn't match the number of args!")}const r=t[0];for(let e=0;e<r.length;e++){const t=this.popToken();if(r[e]!==t.text){throw new ParseError$1("Use of the macro doesn't match its definition",t)}}}const r=[];for(let n=0;n<e;n++){r.push(this.consumeArg(t&&t[n+1]).tokens)}return r}expandOnce(e){const t=this.popToken();const r=t.text;const n=!t.noexpand?this._getExpansion(r):null;if(n==null||e&&n.unexpandable){if(e&&n==null&&r[0]==="\\"&&!this.isDefined(r)){throw new ParseError$1("Undefined control sequence: "+r)}this.pushToken(t);return t}this.expansionCount++;if(this.expansionCount>this.settings.maxExpand){throw new ParseError$1("Too many expansions: infinite loop or "+"need to increase maxExpand setting")}let a=n.tokens;const o=this.consumeArgs(n.numArgs,n.delimiters);if(n.numArgs){a=a.slice();for(let e=a.length-1;e>=0;--e){let t=a[e];if(t.text==="#"){if(e===0){throw new ParseError$1("Incomplete placeholder at end of macro body",t)}t=a[--e];if(t.text==="#"){a.splice(e+1,1)}else if(/^[1-9]$/.test(t.text)){a.splice(e,2,...o[+t.text-1])}else{throw new ParseError$1("Not a valid argument number",t)}}}}this.pushTokens(a);return a}expandAfterFuture(){this.expandOnce();return this.future()}expandNextToken(){for(;;){const e=this.expandOnce();if(e instanceof Token$1){if(e.treatAsRelax){e.text="\\relax"}return this.stack.pop()}}throw new Error}expandMacro(e){return this.macros.has(e)?this.expandTokens([new Token$1(e)]):undefined}expandTokens(e){const t=[];const r=this.stack.length;this.pushTokens(e);while(this.stack.length>r){const e=this.expandOnce(true);if(e instanceof Token$1){if(e.treatAsRelax){e.noexpand=false;e.treatAsRelax=false}t.push(this.stack.pop())}}return t}expandMacroAsText(e){const t=this.expandMacro(e);if(t){return t.map((e=>e.text)).join("")}else{return t}}_getExpansion(e){const t=this.macros.get(e);if(t==null){return t}if(e.length===1){const t=this.lexer.catcodes[e];if(t!=null&&t!==13){return}}const r=typeof t==="function"?t(this):t;if(typeof r==="string"){let e=0;if(r.indexOf("#")!==-1){const t=r.replace(/##/g,"");while(t.indexOf("#"+(e+1))!==-1){++e}}const t=new Lexer$1(r,this.settings);const n=[];let a=t.lex();while(a.text!=="EOF"){n.push(a);a=t.lex()}n.reverse();const o={tokens:n,numArgs:e};return o}return r}isDefined(e){return this.macros.has(e)||Object.prototype.hasOwnProperty.call(functions$2,e)||Object.prototype.hasOwnProperty.call(symbols$1.math,e)||Object.prototype.hasOwnProperty.call(symbols$1.text,e)||Object.prototype.hasOwnProperty.call(implicitCommands$1,e)}isExpandable(e){const t=this.macros.get(e);return t!=null?typeof t==="string"||typeof t==="function"||!t.unexpandable:Object.prototype.hasOwnProperty.call(functions$2,e)&&!functions$2[e].primitive}}const scriptData$1=[{name:"latin",blocks:[[256,591],[768,879]]},{name:"cyrillic",blocks:[[1024,1279]]},{name:"armenian",blocks:[[1328,1423]]},{name:"brahmic",blocks:[[2304,4255]]},{name:"georgian",blocks:[[4256,4351]]},{name:"cjk",blocks:[[12288,12543],[19968,40879],[65280,65376]]},{name:"hangul",blocks:[[44032,55215]]}];const allBlocks$1=[];scriptData$1.forEach((e=>e.blocks.forEach((e=>allBlocks$1.push(...e)))));function supportedCodepoint$1(e){for(let t=0;t<allBlocks$1.length;t+=2){if(e>=allBlocks$1[t]&&e<=allBlocks$1[t+1]){return true}}return false}const unicodeSubRegEx$1=/^[₊₋₌₍₎₀₁₂₃₄₅₆₇₈₉ₐₑₕᵢⱼₖₗₘₙₒₚᵣₛₜᵤᵥₓᵦᵧᵨᵩᵪ]/;const uSubsAndSups$1=Object.freeze({"₊":"+","₋":"-","₌":"=","₍":"(","₎":")","₀":"0","₁":"1","₂":"2","₃":"3","₄":"4","₅":"5","₆":"6","₇":"7","₈":"8","₉":"9","ₐ":"a","ₑ":"e","ₕ":"h","ᵢ":"i","ⱼ":"j","ₖ":"k","ₗ":"l","ₘ":"m","ₙ":"n","ₒ":"o","ₚ":"p","ᵣ":"r","ₛ":"s","ₜ":"t","ᵤ":"u","ᵥ":"v","ₓ":"x","ᵦ":"β","ᵧ":"γ","ᵨ":"ρ","ᵩ":"ϕ","ᵪ":"χ","⁺":"+","⁻":"-","⁼":"=","⁽":"(","⁾":")","⁰":"0","¹":"1","²":"2","³":"3","⁴":"4","⁵":"5","⁶":"6","⁷":"7","⁸":"8","⁹":"9","ᴬ":"A","ᴮ":"B","ᴰ":"D","ᴱ":"E","ᴳ":"G","ᴴ":"H","ᴵ":"I","ᴶ":"J","ᴷ":"K","ᴸ":"L","ᴹ":"M","ᴺ":"N","ᴼ":"O","ᴾ":"P","ᴿ":"R","ᵀ":"T","ᵁ":"U","ⱽ":"V","ᵂ":"W","ᵃ":"a","ᵇ":"b","ᶜ":"c","ᵈ":"d","ᵉ":"e","ᶠ":"f","ᵍ":"g","ʰ":"h","ⁱ":"i","ʲ":"j","ᵏ":"k","ˡ":"l","ᵐ":"m","ⁿ":"n","ᵒ":"o","ᵖ":"p","ʳ":"r","ˢ":"s","ᵗ":"t","ᵘ":"u","ᵛ":"v","ʷ":"w","ˣ":"x","ʸ":"y","ᶻ":"z","ᵝ":"β","ᵞ":"γ","ᵟ":"δ","ᵠ":"ϕ","ᵡ":"χ","ᶿ":"θ"});const asciiFromScript=Object.freeze({"𝒜":"A","ℬ":"B","𝒞":"C","𝒟":"D","ℰ":"E","ℱ":"F","𝒢":"G","ℋ":"H","ℐ":"I","𝒥":"J","𝒦":"K","ℒ":"L","ℓ":"M","𝒩":"N","𝒪":"O","𝒫":"P","𝒬":"Q","ℛ":"R","𝒮":"S","𝒯":"T","𝒰":"U","𝒱":"V","𝒲":"W","𝒳":"X","𝒴":"Y","𝒵":"Z"});var unicodeAccents$1={"́":{text:"\\'",math:"\\acute"},"̀":{text:"\\`",math:"\\grave"},"̈":{text:'\\"',math:"\\ddot"},"̃":{text:"\\~",math:"\\tilde"},"̄":{text:"\\=",math:"\\bar"},"̆":{text:"\\u",math:"\\breve"},"̌":{text:"\\v",math:"\\check"},"̂":{text:"\\^",math:"\\hat"},"̇":{text:"\\.",math:"\\dot"},"̊":{text:"\\r",math:"\\mathring"},"̋":{text:"\\H"},"̧":{text:"\\c"}};var unicodeSymbols$1={"á":"á","à":"à","ä":"ä","ǟ":"ǟ","ã":"ã","ā":"ā","ă":"ă","ắ":"ắ","ằ":"ằ","ẵ":"ẵ","ǎ":"ǎ","â":"â","ấ":"ấ","ầ":"ầ","ẫ":"ẫ","ȧ":"ȧ","ǡ":"ǡ","å":"å","ǻ":"ǻ","ḃ":"ḃ","ć":"ć","č":"č","ĉ":"ĉ","ċ":"ċ","ď":"ď","ḋ":"ḋ","é":"é","è":"è","ë":"ë","ẽ":"ẽ","ē":"ē","ḗ":"ḗ","ḕ":"ḕ","ĕ":"ĕ","ě":"ě","ê":"ê","ế":"ế","ề":"ề","ễ":"ễ","ė":"ė","ḟ":"ḟ","ǵ":"ǵ","ḡ":"ḡ","ğ":"ğ","ǧ":"ǧ","ĝ":"ĝ","ġ":"ġ","ḧ":"ḧ","ȟ":"ȟ","ĥ":"ĥ","ḣ":"ḣ","í":"í","ì":"ì","ï":"ï","ḯ":"ḯ","ĩ":"ĩ","ī":"ī","ĭ":"ĭ","ǐ":"ǐ","î":"î","ǰ":"ǰ","ĵ":"ĵ","ḱ":"ḱ","ǩ":"ǩ","ĺ":"ĺ","ľ":"ľ","ḿ":"ḿ","ṁ":"ṁ","ń":"ń","ǹ":"ǹ","ñ":"ñ","ň":"ň","ṅ":"ṅ","ó":"ó","ò":"ò","ö":"ö","ȫ":"ȫ","õ":"õ","ṍ":"ṍ","ṏ":"ṏ","ȭ":"ȭ","ō":"ō","ṓ":"ṓ","ṑ":"ṑ","ŏ":"ŏ","ǒ":"ǒ","ô":"ô","ố":"ố","ồ":"ồ","ỗ":"ỗ","ȯ":"ȯ","ȱ":"ȱ","ő":"ő","ṕ":"ṕ","ṗ":"ṗ","ŕ":"ŕ","ř":"ř","ṙ":"ṙ","ś":"ś","ṥ":"ṥ","š":"š","ṧ":"ṧ","ŝ":"ŝ","ṡ":"ṡ","ẗ":"ẗ","ť":"ť","ṫ":"ṫ","ú":"ú","ù":"ù","ü":"ü","ǘ":"ǘ","ǜ":"ǜ","ǖ":"ǖ","ǚ":"ǚ","ũ":"ũ","ṹ":"ṹ","ū":"ū","ṻ":"ṻ","ŭ":"ŭ","ǔ":"ǔ","û":"û","ů":"ů","ű":"ű","ṽ":"ṽ","ẃ":"ẃ","ẁ":"ẁ","ẅ":"ẅ","ŵ":"ŵ","ẇ":"ẇ","ẘ":"ẘ","ẍ":"ẍ","ẋ":"ẋ","ý":"ý","ỳ":"ỳ","ÿ":"ÿ","ỹ":"ỹ","ȳ":"ȳ","ŷ":"ŷ","ẏ":"ẏ","ẙ":"ẙ","ź":"ź","ž":"ž","ẑ":"ẑ","ż":"ż","Á":"Á","À":"À","Ä":"Ä","Ǟ":"Ǟ","Ã":"Ã","Ā":"Ā","Ă":"Ă","Ắ":"Ắ","Ằ":"Ằ","Ẵ":"Ẵ","Ǎ":"Ǎ","Â":"Â","Ấ":"Ấ","Ầ":"Ầ","Ẫ":"Ẫ","Ȧ":"Ȧ","Ǡ":"Ǡ","Å":"Å","Ǻ":"Ǻ","Ḃ":"Ḃ","Ć":"Ć","Č":"Č","Ĉ":"Ĉ","Ċ":"Ċ","Ď":"Ď","Ḋ":"Ḋ","É":"É","È":"È","Ë":"Ë","Ẽ":"Ẽ","Ē":"Ē","Ḗ":"Ḗ","Ḕ":"Ḕ","Ĕ":"Ĕ","Ě":"Ě","Ê":"Ê","Ế":"Ế","Ề":"Ề","Ễ":"Ễ","Ė":"Ė","Ḟ":"Ḟ","Ǵ":"Ǵ","Ḡ":"Ḡ","Ğ":"Ğ","Ǧ":"Ǧ","Ĝ":"Ĝ","Ġ":"Ġ","Ḧ":"Ḧ","Ȟ":"Ȟ","Ĥ":"Ĥ","Ḣ":"Ḣ","Í":"Í","Ì":"Ì","Ï":"Ï","Ḯ":"Ḯ","Ĩ":"Ĩ","Ī":"Ī","Ĭ":"Ĭ","Ǐ":"Ǐ","Î":"Î","İ":"İ","Ĵ":"Ĵ","Ḱ":"Ḱ","Ǩ":"Ǩ","Ĺ":"Ĺ","Ľ":"Ľ","Ḿ":"Ḿ","Ṁ":"Ṁ","Ń":"Ń","Ǹ":"Ǹ","Ñ":"Ñ","Ň":"Ň","Ṅ":"Ṅ","Ó":"Ó","Ò":"Ò","Ö":"Ö","Ȫ":"Ȫ","Õ":"Õ","Ṍ":"Ṍ","Ṏ":"Ṏ","Ȭ":"Ȭ","Ō":"Ō","Ṓ":"Ṓ","Ṑ":"Ṑ","Ŏ":"Ŏ","Ǒ":"Ǒ","Ô":"Ô","Ố":"Ố","Ồ":"Ồ","Ỗ":"Ỗ","Ȯ":"Ȯ","Ȱ":"Ȱ","Ő":"Ő","Ṕ":"Ṕ","Ṗ":"Ṗ","Ŕ":"Ŕ","Ř":"Ř","Ṙ":"Ṙ","Ś":"Ś","Ṥ":"Ṥ","Š":"Š","Ṧ":"Ṧ","Ŝ":"Ŝ","Ṡ":"Ṡ","Ť":"Ť","Ṫ":"Ṫ","Ú":"Ú","Ù":"Ù","Ü":"Ü","Ǘ":"Ǘ","Ǜ":"Ǜ","Ǖ":"Ǖ","Ǚ":"Ǚ","Ũ":"Ũ","Ṹ":"Ṹ","Ū":"Ū","Ṻ":"Ṻ","Ŭ":"Ŭ","Ǔ":"Ǔ","Û":"Û","Ů":"Ů","Ű":"Ű","Ṽ":"Ṽ","Ẃ":"Ẃ","Ẁ":"Ẁ","Ẅ":"Ẅ","Ŵ":"Ŵ","Ẇ":"Ẇ","Ẍ":"Ẍ","Ẋ":"Ẋ","Ý":"Ý","Ỳ":"Ỳ","Ÿ":"Ÿ","Ỹ":"Ỹ","Ȳ":"Ȳ","Ŷ":"Ŷ","Ẏ":"Ẏ","Ź":"Ź","Ž":"Ž","Ẑ":"Ẑ","Ż":"Ż","ά":"ά","ὰ":"ὰ","ᾱ":"ᾱ","ᾰ":"ᾰ","έ":"έ","ὲ":"ὲ","ή":"ή","ὴ":"ὴ","ί":"ί","ὶ":"ὶ","ϊ":"ϊ","ΐ":"ΐ","ῒ":"ῒ","ῑ":"ῑ","ῐ":"ῐ","ό":"ό","ὸ":"ὸ","ύ":"ύ","ὺ":"ὺ","ϋ":"ϋ","ΰ":"ΰ","ῢ":"ῢ","ῡ":"ῡ","ῠ":"ῠ","ώ":"ώ","ὼ":"ὼ","Ύ":"Ύ","Ὺ":"Ὺ","Ϋ":"Ϋ","Ῡ":"Ῡ","Ῠ":"Ῠ","Ώ":"Ώ","Ὼ":"Ὼ"};const numberRegEx$4=/^\d(?:[\d,.]*\d)?$/;class Parser$1{constructor(e,t,r=false){this.mode="math";this.gullet=new MacroExpander$1(e,t,this.mode);this.settings=t;this.isPreamble=r;this.leftrightDepth=0;this.prevAtomType=""}expect(e,t=true){if(this.fetch().text!==e){throw new ParseError$1(`Expected '${e}', got '${this.fetch().text}'`,this.fetch())}if(t){this.consume()}}consume(){this.nextToken=null}fetch(){if(this.nextToken==null){this.nextToken=this.gullet.expandNextToken()}return this.nextToken}switchMode(e){this.mode=e;this.gullet.switchMode(e)}parse(){this.gullet.beginGroup();if(this.settings.colorIsTextColor){this.gullet.macros.set("\\color","\\textcolor")}const e=this.parseExpression(false);this.expect("EOF");if(this.isPreamble){const e=Object.create(null);Object.entries(this.gullet.macros.current).forEach((([t,r])=>{e[t]=r}));this.gullet.endGroup();return e}const t=this.gullet.macros.get("\\df@tag");this.gullet.endGroup();if(t){this.gullet.macros.current["\\df@tag"]=t}return e}static get endOfExpression(){return["}","\\endgroup","\\end","\\right","\\endtoggle","&"]}subparse(e){const t=this.nextToken;this.consume();this.gullet.pushToken(new Token$1("}"));this.gullet.pushTokens(e);const r=this.parseExpression(false);this.expect("}");this.nextToken=t;return r}parseExpression(e,t){const r=[];while(true){if(this.mode==="math"){this.consumeSpaces()}const n=this.fetch();if(Parser$1.endOfExpression.indexOf(n.text)!==-1){break}if(t&&n.text===t){break}if(e&&functions$2[n.text]&&functions$2[n.text].infix){break}const a=this.parseAtom(t);if(!a){break}else if(a.type==="internal"){continue}r.push(a);this.prevAtomType=a.type==="atom"?a.family:a.type}if(this.mode==="text"){this.formLigatures(r)}return this.handleInfixNodes(r)}handleInfixNodes(e){let t=-1;let r;for(let n=0;n<e.length;n++){if(e[n].type==="infix"){if(t!==-1){throw new ParseError$1("only one infix operator per group",e[n].token)}t=n;r=e[n].replaceWith}}if(t!==-1&&r){let n;let a;const o=e.slice(0,t);const i=e.slice(t+1);if(o.length===1&&o[0].type==="ordgroup"){n=o[0]}else{n={type:"ordgroup",mode:this.mode,body:o}}if(i.length===1&&i[0].type==="ordgroup"){a=i[0]}else{a={type:"ordgroup",mode:this.mode,body:i}}let l;if(r==="\\\\abovefrac"){l=this.callFunction(r,[n,e[t],a],[])}else{l=this.callFunction(r,[n,a],[])}return[l]}else{return e}}handleSupSubscript(e){const t=this.fetch();const r=t.text;this.consume();this.consumeSpaces();const n=this.parseGroup(e);if(!n){throw new ParseError$1("Expected group after '"+r+"'",t)}return n}formatUnsupportedCmd(e){const t=[];for(let r=0;r<e.length;r++){t.push({type:"textord",mode:"text",text:e[r]})}const r={type:"text",mode:this.mode,body:t};const n={type:"color",mode:this.mode,color:this.settings.errorColor,body:[r]};return n}parseAtom(e){const t=this.parseGroup("atom",e);if(this.mode==="text"){return t}let r;let n;while(true){this.consumeSpaces();const e=this.fetch();if(e.text==="\\limits"||e.text==="\\nolimits"){if(t&&t.type==="op"){const r=e.text==="\\limits";t.limits=r;t.alwaysHandleSupSub=true}else if(t&&t.type==="operatorname"){if(t.alwaysHandleSupSub){t.limits=e.text==="\\limits"}}else{throw new ParseError$1("Limit controls must follow a math operator",e)}this.consume()}else if(e.text==="^"){if(r){throw new ParseError$1("Double superscript",e)}r=this.handleSupSubscript("superscript")}else if(e.text==="_"){if(n){throw new ParseError$1("Double subscript",e)}n=this.handleSupSubscript("subscript")}else if(e.text==="'"){if(r){throw new ParseError$1("Double superscript",e)}const t={type:"textord",mode:this.mode,text:"\\prime"};const n=[t];this.consume();while(this.fetch().text==="'"){n.push(t);this.consume()}if(this.fetch().text==="^"){n.push(this.handleSupSubscript("superscript"))}r={type:"ordgroup",mode:this.mode,body:n}}else if(uSubsAndSups$1[e.text]){const t=unicodeSubRegEx$1.test(e.text);const a=[];a.push(new Token$1(uSubsAndSups$1[e.text]));this.consume();while(true){const e=this.fetch().text;if(!uSubsAndSups$1[e]){break}if(unicodeSubRegEx$1.test(e)!==t){break}a.unshift(new Token$1(uSubsAndSups$1[e]));this.consume()}const o=this.subparse(a);if(t){n={type:"ordgroup",mode:"math",body:o}}else{r={type:"ordgroup",mode:"math",body:o}}}else{break}}if(r||n){if(t&&t.type==="multiscript"&&!t.postscripts){t.postscripts={sup:r,sub:n};return t}else{return{type:"supsub",mode:this.mode,base:t,sup:r,sub:n}}}else{return t}}parseFunction(e,t){const r=this.fetch();const n=r.text;const a=functions$2[n];if(!a){return null}this.consume();if(t&&t!=="atom"&&!a.allowedInArgument){throw new ParseError$1("Got function '"+n+"' with no arguments"+(t?" as "+t:""),r)}else if(this.mode==="text"&&!a.allowedInText){throw new ParseError$1("Can't use function '"+n+"' in text mode",r)}else if(this.mode==="math"&&a.allowedInMath===false){throw new ParseError$1("Can't use function '"+n+"' in math mode",r)}const o=this.prevAtomType;const{args:i,optArgs:l}=this.parseArguments(n,a);this.prevAtomType=o;return this.callFunction(n,i,l,r,e)}callFunction(e,t,r,n,a){const o={funcName:e,parser:this,token:n,breakOnTokenText:a};const i=functions$2[e];if(i&&i.handler){return i.handler(o,t,r)}else{throw new ParseError$1(`No function handler for ${e}`)}}parseArguments(e,t){const r=t.numArgs+t.numOptionalArgs;if(r===0){return{args:[],optArgs:[]}}const n=[];const a=[];for(let o=0;o<r;o++){let r=t.argTypes&&t.argTypes[o];const i=o<t.numOptionalArgs;if(t.primitive&&r==null||t.type==="sqrt"&&o===1&&a[0]==null){r="primitive"}const l=this.parseGroupOfType(`argument to '${e}'`,r,i);if(i){a.push(l)}else if(l!=null){n.push(l)}else{throw new ParseError$1("Null argument, please report this as a bug")}}return{args:n,optArgs:a}}parseGroupOfType(e,t,r){switch(t){case"size":return this.parseSizeGroup(r);case"url":return this.parseUrlGroup(r);case"math":case"text":return this.parseArgumentGroup(r,t);case"hbox":{const e=this.parseArgumentGroup(r,"text");return e!=null?{type:"styling",mode:e.mode,body:[e],scriptLevel:"text"}:null}case"raw":{const e=this.parseStringGroup("raw",r);return e!=null?{type:"raw",mode:"text",string:e.text}:null}case"primitive":{if(r){throw new ParseError$1("A primitive argument cannot be optional")}const t=this.parseGroup(e);if(t==null){throw new ParseError$1("Expected group as "+e,this.fetch())}return t}case"original":case null:case undefined:return this.parseArgumentGroup(r);default:throw new ParseError$1("Unknown group type as "+e,this.fetch())}}consumeSpaces(){while(true){const e=this.fetch().text;if(e===" "||e==="︎"){this.consume()}else{break}}}parseStringGroup(e,t){const r=this.gullet.scanArgument(t);if(r==null){return null}let n="";let a;while((a=this.fetch()).text!=="EOF"){n+=a.text;this.consume()}this.consume();r.text=n;return r}parseRegexGroup(e,t){const r=this.fetch();let n=r;let a="";let o;while((o=this.fetch()).text!=="EOF"&&e.test(a+o.text)){n=o;a+=n.text;this.consume()}if(a===""){throw new ParseError$1("Invalid "+t+": '"+r.text+"'",r)}return r.range(n,a)}parseSizeGroup(e){let t;let r=false;this.gullet.consumeSpaces();if(!e&&this.gullet.future().text!=="{"){t=this.parseRegexGroup(/^[-+]? *(?:$|\d+|\d+\.\d*|\.\d*) *[a-z]{0,2} *$/,"size")}else{t=this.parseStringGroup("size",e)}if(!t){return null}if(!e&&t.text.length===0){t.text="0pt";r=true}const n=/([-+]?) *(\d+(?:\.\d*)?|\.\d+) *([a-z]{2})/.exec(t.text);if(!n){throw new ParseError$1("Invalid size: '"+t.text+"'",t)}const a={number:+(n[1]+n[2]),unit:n[3]};if(!validUnit$1(a)){throw new ParseError$1("Invalid unit: '"+a.unit+"'",t)}return{type:"size",mode:this.mode,value:a,isBlank:r}}parseUrlGroup(e){this.gullet.lexer.setCatcode("%",13);this.gullet.lexer.setCatcode("~",12);const t=this.parseStringGroup("url",e);this.gullet.lexer.setCatcode("%",14);this.gullet.lexer.setCatcode("~",13);if(t==null){return null}let r=t.text.replace(/\\([#$%&~_^{}])/g,"$1");r=t.text.replace(/{\u2044}/g,"/");return{type:"url",mode:this.mode,url:r}}parseArgumentGroup(e,t){const r=this.gullet.scanArgument(e);if(r==null){return null}const n=this.mode;if(t){this.switchMode(t)}this.gullet.beginGroup();const a=this.parseExpression(false,"EOF");this.expect("EOF");this.gullet.endGroup();const o={type:"ordgroup",mode:this.mode,loc:r.loc,body:a};if(t){this.switchMode(n)}return o}parseGroup(e,t){const r=this.fetch();const n=r.text;let a;if(n==="{"||n==="\\begingroup"||n==="\\toggle"){this.consume();const e=n==="{"?"}":n==="\\begingroup"?"\\endgroup":"\\endtoggle";this.gullet.beginGroup();const t=this.parseExpression(false,e);const o=this.fetch();this.expect(e);this.gullet.endGroup();a={type:o.text==="\\endtoggle"?"toggle":"ordgroup",mode:this.mode,loc:SourceLocation$1.range(r,o),body:t,semisimple:n==="\\begingroup"||undefined}}else{a=this.parseFunction(t,e)||this.parseSymbol();if(a==null&&n[0]==="\\"&&!Object.prototype.hasOwnProperty.call(implicitCommands$1,n)){a=this.formatUnsupportedCmd(n);this.consume()}}return a}formLigatures(e){let t=e.length-1;for(let r=0;r<t;++r){const n=e[r];const a=n.text;if(a==="-"&&e[r+1].text==="-"){if(r+1<t&&e[r+2].text==="-"){e.splice(r,3,{type:"textord",mode:"text",loc:SourceLocation$1.range(n,e[r+2]),text:"---"});t-=2}else{e.splice(r,2,{type:"textord",mode:"text",loc:SourceLocation$1.range(n,e[r+1]),text:"--"});t-=1}}if((a==="'"||a==="`")&&e[r+1].text===a){e.splice(r,2,{type:"textord",mode:"text",loc:SourceLocation$1.range(n,e[r+1]),text:a+a});t-=1}}}parseSymbol(){const e=this.fetch();let t=e.text;if(/^\\verb[^a-zA-Z]/.test(t)){this.consume();let e=t.slice(5);const r=e.charAt(0)==="*";if(r){e=e.slice(1)}if(e.length<2||e.charAt(0)!==e.slice(-1)){throw new ParseError$1(`\\verb assertion failed --\n                    please report what input caused this bug`)}e=e.slice(1,-1);return{type:"verb",mode:"text",body:e,star:r}}if(Object.prototype.hasOwnProperty.call(unicodeSymbols$1,t[0])&&!symbols$1[this.mode][t[0]]){if(this.settings.strict&&this.mode==="math"){throw new ParseError$1(`Accented Unicode text character "${t[0]}" used in `+`math mode`,e)}t=unicodeSymbols$1[t[0]]+t.slice(1)}const r=combiningDiacriticalMarksEndRegex$1.exec(t);if(r){t=t.substring(0,r.index);if(t==="i"){t="ı"}else if(t==="j"){t="ȷ"}}let n;if(symbols$1[this.mode][t]){const r=symbols$1[this.mode][t].group;const a=SourceLocation$1.range(e);let o;if(Object.prototype.hasOwnProperty.call(ATOMS$1,r)){const e=r;o={type:"atom",mode:this.mode,family:e,loc:a,text:t}}else{if(asciiFromScript[t]){this.consume();const e=this.fetch().text.charCodeAt(0);const r=e===65025?"mathscr":"mathcal";if(e===65024||e===65025){this.consume()}return{type:"font",mode:"math",font:r,body:{type:"mathord",mode:"math",loc:a,text:asciiFromScript[t]}}}o={type:r,mode:this.mode,loc:a,text:t}}n=o}else if(!this.strict&&numberRegEx$4.test(t)){this.consume();return{type:"textord",mode:this.mode,loc:SourceLocation$1.range(e),text:t}}else if(t.charCodeAt(0)>=128){if(this.settings.strict){if(!supportedCodepoint$1(t.charCodeAt(0))){throw new ParseError$1(`Unrecognized Unicode character "${t[0]}"`+` (${t.charCodeAt(0)})`,e)}else if(this.mode==="math"){throw new ParseError$1(`Unicode text character "${t[0]}" used in math mode`,e)}}n={type:"textord",mode:"text",loc:SourceLocation$1.range(e),text:t}}else{return null}this.consume();if(r){for(let t=0;t<r[0].length;t++){const a=r[0][t];if(!unicodeAccents$1[a]){throw new ParseError$1(`Unknown accent ' ${a}'`,e)}const o=unicodeAccents$1[a][this.mode]||unicodeAccents$1[a].text;if(!o){throw new ParseError$1(`Accent ${a} unsupported in ${this.mode} mode`,e)}n={type:"accent",mode:this.mode,loc:SourceLocation$1.range(e),label:o,isStretchy:false,isShifty:true,base:n}}}return n}}const parseTree$1=function(e,t){if(!(typeof e==="string"||e instanceof String)){throw new TypeError("Temml can only parse string typed expression")}const r=new Parser$1(e,t);delete r.gullet.macros.current["\\df@tag"];let n=r.parse();if(!(n.length>0&&n[0].type&&n[0].type==="array"&&n[0].addEqnNum)){if(r.gullet.macros.get("\\df@tag")){if(!t.displayMode){throw new ParseError$1("\\tag works only in display mode")}r.gullet.feed("\\df@tag");n=[{type:"tag",mode:"text",body:n,tag:r.parse()}]}}return n};const subOrSupLevel=[2,2,3,3];class Style$2{constructor(e){this.level=e.level;this.color=e.color;this.font=e.font||"";this.fontFamily=e.fontFamily||"";this.fontSize=e.fontSize||1;this.fontWeight=e.fontWeight||"";this.fontShape=e.fontShape||"";this.maxSize=e.maxSize}extend(e){const t={level:this.level,color:this.color,font:this.font,fontFamily:this.fontFamily,fontSize:this.fontSize,fontWeight:this.fontWeight,fontShape:this.fontShape,maxSize:this.maxSize};for(const r in e){if(Object.prototype.hasOwnProperty.call(e,r)){t[r]=e[r]}}return new Style$2(t)}withLevel(e){return this.extend({level:e})}incrementLevel(){return this.extend({level:Math.min(this.level+1,3)})}inSubOrSup(){return this.extend({level:subOrSupLevel[this.level]})}withColor(e){return this.extend({color:e})}withFont(e){return this.extend({font:e})}withTextFontFamily(e){return this.extend({fontFamily:e,font:""})}withFontSize(e){return this.extend({fontSize:e})}withTextFontWeight(e){return this.extend({fontWeight:e,font:""})}withTextFontShape(e){return this.extend({fontShape:e,font:""})}getColor(){return this.color}}const version="0.10.0";function postProcess(e){const t={};let r=0;const n=e.getElementsByClassName("tml-tageqn");for(const e of n){const n=e.getElementsByClassName("tml-eqn");if(n.length>0){r+=1;n[0].id="tml-eqn-"+r}const a=e.getElementsByClassName("tml-label");if(a.length===0){continue}if(n.length>0){t[a[0].id]=String(r)}else{const r=e.getElementsByClassName("tml-tag");if(r.length>0){t[a[0].id]=r[0].textContent}}}const a=e.getElementsByClassName("tml-ref");[...a].forEach((e=>{let r=t[e.getAttribute("href").slice(1)];if(e.className.indexOf("tml-eqref")===-1){r=r.replace(/^\(/,"");r=r.replace(/\($/,"")}{if(r.charAt(0)!=="("){r="("+r}if(r.slice(-1)!==")"){r=r+")"}}e.textContent=r}))}let render$1=function(e,t,r){t.textContent="";const n=t.tagName==="MATH";if(n){r.wrap="none"}const a=renderToMathMLTree(e,r);if(n){t.textContent="";a.children.forEach((e=>{t.appendChild(e.toNode())}))}else if(a.children.length>1){t.textContent="";a.children.forEach((e=>{t.appendChild(e.toNode())}))}else{t.appendChild(a.toNode())}};if(typeof document!=="undefined"){if(document.compatMode!=="CSS1Compat"){typeof console!=="undefined"&&console.warn("Warning: Temml doesn't work in quirks mode. Make sure your "+"website has a suitable doctype.");render$1=function(){throw new ParseError$1("Temml doesn't work in quirks mode.")}}}const renderToString$1=function(e,t){const r=renderToMathMLTree(e,t).toMarkup();return r};const generateParseTree$1=function(e,t){const r=new Settings$1(t);return parseTree$1(e,r)};const definePreamble=function(e,t){const r=new Settings$1(t);r.macros={};if(!(typeof e==="string"||e instanceof String)){throw new TypeError("Temml can only parse string typed expression")}const n=new Parser$1(e,r,true);delete n.gullet.macros.current["\\df@tag"];const a=n.parse();return a};const renderError$1=function(e,t,r){if(r.throwOnError||!(e instanceof ParseError$1)){throw e}const n=new Span$1(["temml-error"],[new TextNode$1(t+"\n"+e.toString())]);n.style.color=r.errorColor;n.style.whiteSpace="pre-line";return n};const renderToMathMLTree=function(e,t){const r=new Settings$1(t);try{const t=parseTree$1(e,r);const n=new Style$2({level:r.displayMode?StyleLevel.DISPLAY:StyleLevel.TEXT,maxSize:r.maxSize});return buildMathML$1(t,e,n,r)}catch(t){return renderError$1(t,e,r)}};var temml={version:version,render:render$1,renderToString:renderToString$1,postProcess:postProcess,ParseError:ParseError$1,definePreamble:definePreamble,__parse:generateParseTree$1,__renderToMathMLTree:renderToMathMLTree,__defineSymbol:defineSymbol$1,__defineMacro:defineMacro$1};const tagName={em:"em",strong:"strong",code:"code",strikethru:"del",subscript:"sub",superscript:"sup",underline:"u",highlight:"mark"};const nodes={calculation(e){const t=parse(e.attrs.entry);const r=document.createElement("span");const n="MozAppearance"in document.documentElement.style;if(n){temml.render(t,r)}else{katex.render(t,r,{output:"html",strict:false,throwOnError:false,minRuleThickness:.06})}return r},tex(e){const t=document.createElement("span");t.classList="hurmet-tex";katex.render(e.attrs.tex,t,{strict:false,throwOnError:false,minRuleThickness:.06});return t},text(e){let t=document.createTextNode(e.text);if(!e.marks){return document.createElement("span").appendChild(t)}else{for(const r of e.marks){const e=t.cloneNode(true);t=document.createElement(tagName[r.type]);t.appendChild(e)}return t}}};const output=e=>{const t=document.createElement("span");if(Array.isArray(e)){for(let r=0;r<e.length;r++){t.appendChild(output(e[r]))}}else if(e.type!=="null"){t.appendChild(nodes[e.type](e))}return t};const renderMD=e=>{const t=md2ast(e)[0].content;return output(t)};const hurmet={dt:dt,parse:parse,calculate:calculate,autoCorrect:autoCorrect,prepareStatement:prepareStatement,improveQuantities:improveQuantities,draw:draw,evaluate:evaluate,md2ast:md2ast,renderMD:renderMD,scanModule:scanModule,updateCalculations:updateCalculations};const hurmetVars=Object.create(null);hurmet.calculate(`x = 5`,hurmetVars);hurmet.calculate(`w = 100 'lbf/ft'`,hurmetVars);hurmet.calculate(`L = 3.1 'm'`,hurmetVars);hurmet.calculate(`name = "James"`,hurmetVars);hurmet.calculate(`s = "abcde"`,hurmetVars);hurmet.calculate(`𝐕 = [1, 2, 3, 4, 5]`,hurmetVars);hurmet.calculate(`𝐌 = (1, 2, 3; 4, 5, 6; 7, 8, 9)`,hurmetVars);const df="``"+`name,w,area\n,in,in²\nA,4,10\nB,6,22`+"``";hurmet.calculate(`DF =`+df,hurmetVars);hurmet.calculate(`A = 8`,hurmetVars);const wideFlanges="``"+`name|weight|A|d|bf|tw|Ix|Sx|rx\n|lbf/ft|in^2|in|in|in|in^4|in^3|in\nW14X90|90|26.5|14|14.5|0.44|999|143|6.14\nW12X65|65|19.1|12.1|12|0.39|533|87.9|5.28\nW10X49|49|14.4|10|10|0.34|272|54.6|4.35\nW8X31|31|9.13|8|8|0.285|110|27.5|3.47\nW8X18|18|5.26|8.14|5.25|0.23|61.9|15.2|3.43\nW6X15|15|4.43|5.99|5.99|0.23|29.1|9.72|2.56\nW4X13|13|3.83|4.16|4.06|0.28|11.3|5.46|1.72`+"``";hurmet.calculate(`wideFlanges =`+wideFlanges,hurmetVars);const dict=`{"#4": 0.22, "#5": 0.31} 'in2'`;hurmet.calculate(`barArea =`+dict,hurmetVars);const module="E = 29000 'ksi'\n\nv = [4, 6, 8]\n\nfunction multiply(a, b)\n  return a × b\nend";hurmetVars["mod"]=hurmet.scanModule(module);const renderMath=(e,t)=>{let r=e.toString();const n=selectedText();if(n.length===0){hurmet.autoCorrect(e,textBeforeCursor(editor),textAfterCursor(editor))}r=e.toString();const a=document.getElementById("formatBox").value.trim();hurmetVars.format={value:a};const o=hurmet.calculate(r,hurmetVars);try{if(typeof o==="object"&&o.dtype&&o.dtype===hurmet.dt.DRAWING){t.appendChild(hurmet.Draw.renderSVG(o.resultdisplay))}else{katex.render(o,t,{strict:false,macros:{"\\class":"\\htmlClass"},trust:e=>e.command==="\\htmlClass"&&e.class==="special-fraction",throwOnError:false})}}catch(e){while(t.lastChild){t.removeChild(t.lastChild)}const r=document.createTextNode(e.message);const n=document.createElement("span");n.appendChild(r);t.appendChild(n);n.setAttribute("class","errorMessage")}};const prompts={"statement-container":"2 + 2 = ?","arithmetic-container":"2 × 4 + 3^2/7 = ?","variable-container":"b = 2 L = ?","greek-container":"theta + x dot + f''","q-container":"2 × 3.1 'm' = ?? ft",markup:"(a, b; c, d)","auto-correct":"theta hat <= bb M xx sqrt 3 . f''","display-selectors":"b = 2 L = ?? ft","accessor-container":"𝐕[2] = ?","calculation-forms":"x = 2 A = ?",identifiers:"f_c′ = 4500","identi-correct":"bb M != h_sub +  theta bar + f''","data-types":`"a string" ≠ 2.3`,"number-rr":"33 / 2.45 × 3.2% + 3 7/8 + 3.1e1 = ?","complex-number":"4∠30° = ??",unit:"9.807 'm/s²' = ?? ft/s²",matrix:"[2.1; -15.3]","matrix-mult":"[1, 2, 3] [3; 2; 1] = ?","data-frame":"wideFlanges.W10X49.A = ?? in2",dictionary:'A = barArea["#4"] = ?',functions:"sin(π/6) = ?","if-expressions":`x = {1 if 12 < 30; 0 otherwise} = ?`,"unit-aware-calculations":"4 'ft' + 3 'yards' = ?? m","remote-modules":"mod.E = ?? psi"};const texSpans=document.getElementsByClassName("tex");[...texSpans].forEach((e=>{const t=e.dataset.tex.trim().replace(/&amp;/g,"&").replace(/&lt;/g,"<").replace(/&gt;/g,">");katex.render(t,e,{strict:false,throwOnError:false})}));const editor=document.getElementById("demo-input");const jar=codeJar(editor,false);const demoOutput=document.getElementById("demo-output");editor.addEventListener("input",(e=>{renderMath(jar,demoOutput)}));jar.updateCode("Hi!");renderMath(jar,demoOutput);var observer=new IntersectionObserver((function(e){for(const t of e){if(t.intersectionRatio===1){jar.updateCode(prompts[t.target.id]);renderMath(jar,demoOutput);break}}}),{root:null,rootMargin:"0px",threshold:1});observer.observe(document.getElementById("statement-container"));observer.observe(document.getElementById("arithmetic-container"));observer.observe(document.getElementById("variable-container"));observer.observe(document.getElementById("greek-container"));observer.observe(document.getElementById("q-container"));observer.observe(document.getElementById("markup"));observer.observe(document.getElementById("auto-correct"));observer.observe(document.getElementById("display-selectors"));observer.observe(document.getElementById("accessor-container"));observer.observe(document.getElementById("calculation-forms"));observer.observe(document.getElementById("identifiers"));observer.observe(document.getElementById("identi-correct"));observer.observe(document.getElementById("data-types"));observer.observe(document.getElementById("number-rr"));observer.observe(document.getElementById("complex-number"));observer.observe(document.getElementById("unit"));observer.observe(document.getElementById("matrix"));observer.observe(document.getElementById("matrix-mult"));observer.observe(document.getElementById("data-frame"));observer.observe(document.getElementById("functions"));observer.observe(document.getElementById("if-expressions"));observer.observe(document.getElementById("unit-aware-calculations"));observer.observe(document.getElementById("remote-modules"));